{
  "pages": [
    {
      "Key": "ThingDynamicGPR",
      "Title": "<N:EN:DynamicGPR>",
      "Description": "<N:EN:DynamicGPR>",
      "PrefabName": "DynamicGPR",
      "PrefabHash": -2085885850,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemAuthoringToolRocketNetwork",
      "Title": "<N:EN:ItemAuthoringToolRocketNetwork>",
      "Description": "<N:EN:ItemAuthoringToolRocketNetwork>",
      "PrefabName": "ItemAuthoringToolRocketNetwork",
      "PrefabHash": -1731627004,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingMonsterEgg",
      "Title": "<N:EN:MonsterEgg>",
      "Description": "<N:EN:MonsterEgg>",
      "PrefabName": "MonsterEgg",
      "PrefabHash": -1667675295,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingMotherboardMissionControl",
      "Title": "<N:EN:MotherboardMissionControl>",
      "Description": "<N:EN:MotherboardMissionControl>",
      "PrefabName": "MotherboardMissionControl",
      "PrefabHash": -127121474,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Motherboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureCableCorner3HBurnt",
      "Title": "<N:EN:StructureCableCorner3HBurnt>",
      "Description": "<N:EN:StructureCableCorner3HBurnt>",
      "PrefabName": "StructureCableCorner3HBurnt",
      "PrefabHash": 2393826,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureDrinkingFountain",
      "Title": "<N:EN:StructureDrinkingFountain>",
      "Description": "<N:EN:StructureDrinkingFountain>",
      "PrefabName": "StructureDrinkingFountain",
      "PrefabHash": 1968371847,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingRobot",
      "Title": "AIMeE Bot",
      "Description": "Designed by - presumably drunk - <link=Norsec><color=#0080FFFF>Norsec</color></link> roboticists, AIMeE (or Automated Independent Mechanical Entity) can be a <link=Stationeers><color=#0080FFFF>Stationeer's</color></link> best friend, or tiresome nemesis, or both several times in the same day. \n      \nIntended to unearth and retrieve ores automatically, the unit requires basic programming knowledge to operate, and <link=ThingMotherboardProgrammableChip><color=green>IC Editor Motherboard</color></link>.\n\nAIMEe has 7 modes:\n\nRobotMode.None = 0 = Do nothing\nRobotMode.None = 1 = Follow nearest player\nRobotMode.None = 2 = Move to target in straight line\nRobotMode.None = 3 = Wander around looking for ores in 15 co-ords radius\nRobotMode.None = 4 = Unload in chute input or chute bin within 3 meters / 1.5 large grids\nRobotMode.None = 5 = Path(find) to target\nRobotMode.None = 6 = Automatic assigned state, shows when storage slots are fullConnects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
      "PrefabName": "Robot",
      "PrefabHash": 434786784,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Programmable Chip",
          "SlotType": "ProgrammableChip",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "9"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureExternal><color=orange>PressureExternal</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureExternal><color=orange>TemperatureExternal</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionX><color=orange>PositionX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionY><color=orange>PositionY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionZ><color=orange>PositionZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityMagnitude><color=orange>VelocityMagnitude</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityRelativeX><color=orange>VelocityRelativeX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityRelativeY><color=orange>VelocityRelativeY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityRelativeZ><color=orange>VelocityRelativeZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTargetX><color=orange>TargetX</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeTargetY><color=orange>TargetY</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeTargetZ><color=orange>TargetZ</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeMineablesInVicinity><color=orange>MineablesInVicinity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMineablesInQueue><color=orange>MineablesInQueue</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeForwardX><color=orange>ForwardX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeForwardY><color=orange>ForwardY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeForwardZ><color=orange>ForwardZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOrientation><color=orange>Orientation</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityX><color=orange>VelocityX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityY><color=orange>VelocityY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityZ><color=orange>VelocityZ</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "None",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Follow",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "MoveToTarget",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Roam",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Unload",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "PathToTarget",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "StorageFull",
          "LogicAccessTypes": "6"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "PressureExternal": "Read",
          "On": "ReadWrite",
          "TemperatureExternal": "Read",
          "PositionX": "Read",
          "PositionY": "Read",
          "PositionZ": "Read",
          "VelocityMagnitude": "Read",
          "VelocityRelativeX": "Read",
          "VelocityRelativeY": "Read",
          "VelocityRelativeZ": "Read",
          "TargetX": "Write",
          "TargetY": "Write",
          "TargetZ": "Write",
          "MineablesInVicinity": "Read",
          "MineablesInQueue": "Read",
          "ReferenceId": "Read",
          "ForwardX": "Read",
          "ForwardY": "Read",
          "ForwardZ": "Read",
          "Orientation": "Read",
          "VelocityX": "Read",
          "VelocityY": "Read",
          "VelocityZ": "Read"
        }
      },
      "WirelessLogic": true,
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureAccessBridge",
      "Title": "Access Bridge",
      "Description": "Extendable bridge that spans three grids",
      "PrefabName": "StructureAccessBridge",
      "PrefabHash": 1298920475,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingAccessCardBlack",
      "Title": "Access Card (Black)",
      "Description": "",
      "PrefabName": "AccessCardBlack",
      "PrefabHash": -1330388999,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "AccessCard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingAccessCardBlue",
      "Title": "Access Card (Blue)",
      "Description": "",
      "PrefabName": "AccessCardBlue",
      "PrefabHash": -1411327657,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "AccessCard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingAccessCardBrown",
      "Title": "Access Card (Brown)",
      "Description": "",
      "PrefabName": "AccessCardBrown",
      "PrefabHash": 1412428165,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "AccessCard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingAccessCardGray",
      "Title": "Access Card (Gray)",
      "Description": "",
      "PrefabName": "AccessCardGray",
      "PrefabHash": -1339479035,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "AccessCard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingAccessCardGreen",
      "Title": "Access Card (Green)",
      "Description": "",
      "PrefabName": "AccessCardGreen",
      "PrefabHash": -374567952,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "AccessCard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingAccessCardKhaki",
      "Title": "Access Card (Khaki)",
      "Description": "",
      "PrefabName": "AccessCardKhaki",
      "PrefabHash": 337035771,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "AccessCard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingAccessCardOrange",
      "Title": "Access Card (Orange)",
      "Description": "",
      "PrefabName": "AccessCardOrange",
      "PrefabHash": -332896929,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "AccessCard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingAccessCardPink",
      "Title": "Access Card (Pink)",
      "Description": "",
      "PrefabName": "AccessCardPink",
      "PrefabHash": 431317557,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "AccessCard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingAccessCardPurple",
      "Title": "Access Card (Purple)",
      "Description": "",
      "PrefabName": "AccessCardPurple",
      "PrefabHash": 459843265,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "AccessCard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingAccessCardRed",
      "Title": "Access Card (Red)",
      "Description": "",
      "PrefabName": "AccessCardRed",
      "PrefabHash": -1713748313,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "AccessCard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingAccessCardWhite",
      "Title": "Access Card (White)",
      "Description": "",
      "PrefabName": "AccessCardWhite",
      "PrefabHash": 2079959157,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "AccessCard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingAccessCardYellow",
      "Title": "Access Card (Yellow)",
      "Description": "",
      "PrefabName": "AccessCardYellow",
      "PrefabHash": 568932536,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "AccessCard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureLiquidDrain",
      "Title": "Active Liquid Outlet",
      "Description": "When connected to power and activated, it pumps liquid from a liquid network into the world.",
      "PrefabName": "StructureLiquidDrain",
      "PrefabHash": 1687692899,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "None"
          ],
          [
            "Data",
            "Input"
          ],
          [
            "Power",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureActiveVent",
      "Title": "Active Vent",
      "Description": "The active vent is a powered device for maintaining <link=GasPage><color=#0080FFFF>gas</color></link> pressure by pumping gas into (or out of) a pipe network. The vent has two modes: 'Outward' sets it to pump gas into a space until pressure is reached; 'Inward' sets it to pump gas out until pressure is reached. The pressure parameter can be set on a connected <link=ThingStructureConsole><color=green>Console</color></link>. Default pressure is 101kPa for Outward; 0kPa for Inward ...",
      "PrefabName": "StructureActiveVent",
      "PrefabHash": -1129453144,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "DataDisk",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureExternal><color=orange>PressureExternal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressureInternal><color=orange>PressureInternal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Outward",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Inward",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "PressureExternal": "ReadWrite",
          "PressureInternal": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ],
          [
            "Pipe",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemAdhesiveInsulation",
      "Title": "Adhesive Insulation",
      "Description": "",
      "PrefabName": "ItemAdhesiveInsulation",
      "PrefabHash": 1871048978,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools",
        "MaxQuantity": 20.0
      }
    },
    {
      "Key": "ThingCircuitboardAdvAirlockControl",
      "Title": "Advanced Airlock",
      "Description": "",
      "PrefabName": "CircuitboardAdvAirlockControl",
      "PrefabHash": 1633663176,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureAdvancedComposter",
      "Title": "Advanced Composter",
      "Description": "The advanced composter creates <link=ThingFertilizer><color=green>Fertilizer</color></link> out of organic matter. It accepts <link=OrganicPage><color=#0080FFFF>food</color></link>, <link=ThingDecayedFood><color=green>Decayed Food</color></link> or <link=ThingItemBiomass><color=green>Biomass</color></link>. It requires <link=GasWater><color=#44AD83>Water</color></link> and power to operate, accelerating the natural composting process.\nWhen processing, it releases nitrogen and volatiles, as well a small amount of heat. \n\n<size=120%><b>Compost composition</b></size>\nFertilizer is produced at a 1:3 ratio of fertilizer to ingredients. The fertilizer's effects on plants will vary depending on the respective proportions of its ingredients.\n\n- <link=OrganicPage><color=#0080FFFF>Food</color></link> increases PLANT YIELD up to two times\n- <link=ThingDecayedFood><color=green>Decayed Food</color></link> increases plant GROWTH SPEED up to two times\n- <link=ThingItemBiomass><color=green>Biomass</color></link> increases the NUMBER OF GROWTH CYCLES the fertilizer lasts for up to five times\n",
      "PrefabName": "StructureAdvancedComposter",
      "PrefabHash": 446212963,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "5"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "Power",
            "None"
          ],
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureAdvancedFurnace",
      "Title": "Advanced Furnace",
      "Description": "The advanced furnace comes with integrated inlet and outlet pumps for controlling the unit's internal pressure.",
      "PrefabName": "StructureAdvancedFurnace",
      "PrefabHash": 545937711,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRecipeHash><color=orange>RecipeHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSettingInput><color=orange>SettingInput</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSettingOutput><color=orange>SettingOutput</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Pipe Liquid Output2",
          "LogicAccessTypes": "6"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Reagents": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "SettingInput": "ReadWrite",
          "SettingOutput": "ReadWrite",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "PipeLiquid",
            "Output2"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": true,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureAdvancedPackagingMachine",
      "Title": "Advanced Packaging Machine",
      "Description": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> Advanced Cannifier Multi-Plus Pro is an automateable packaging machine that uses <link=ThingItemEmptyCan><color=green>Empty Can</color></link>s and cooked <link=OrganicPage><color=#0080FFFF>food</color></link> to create canned sustenance that does not decay. Note that the ACMPP only accepts cooked food and tin cans.",
      "PrefabName": "StructureAdvancedPackagingMachine",
      "PrefabHash": -463037670,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRecipeHash><color=orange>RecipeHash</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCompletionRatio><color=orange>CompletionRatio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemAdvancedTablet",
      "Title": "Advanced Tablet",
      "Description": "The advanced <link=Xigo><color=#0080FFFF>Xigo</color></link> Padi 2 tablet is an improved version of the basic <link=ThingItemTablet><color=green>Handheld Tablet</color></link>, boasting two <link=CartridgePage><color=#0080FFFF>cartridge</color></link> slots. The Padi 2 accepts <link=ThingCartridgeAtmosAnalyser><color=green>Atmos Analyzer</color></link>, <link=ThingCartridgeTracker><color=green>Tracker</color></link>, <link=ThingCartridgeMedicalAnalyser><color=green>Medical Analyzer</color></link>, <link=ThingCartridgeOreScanner><color=green>Ore Scanner</color></link>, <link=ThingCartridgeElectronicReader><color=green>eReader</color></link>, and various other cartridges.\n\t  \n\t  With a <link=ThingItemIntegratedCircuit10><color=green>Integrated Circuit (IC10)</color></link> in the <link=SlotProgrammableChip><color=orange>Programmable Chip</color></link>, you can access variable slots on the carrying human using the device numbers (d0, d1, etc...), so long as the item can be access via logic, such as the <link=ThingItemHardSuit><color=green>Hardsuit</color></link>.Connects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
      "PrefabName": "ItemAdvancedTablet",
      "PrefabHash": 1722785341,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Cartridge",
          "SlotType": "Cartridge",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Cartridge1",
          "SlotType": "Cartridge",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Programmable Chip",
          "SlotType": "ProgrammableChip",
          "SlotIndex": "3"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSoundAlert><color=orange>SoundAlert</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "On": "ReadWrite",
          "Volume": "ReadWrite",
          "SoundAlert": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "WirelessLogic": true,
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructureAirConditioner",
      "Title": "Air Conditioner",
      "Description": "Built using the <link=ThingItemKitAtmospherics><color=green>Kit (Atmospherics)</color></link>, the <link=ExMin><color=#0080FFFF>ExMin-designed</color></link> air conditioner is used to raise or lower input gas temperature.\n\t  \nThe unit has three pipe connections: input, output, and waste. Gas fed into the input will be heated or cooled to reach the target temperature, while the opposite will happen to gas on the waste network.\n\nMultiple Efficiency Multipliers can effect the amount of energy the Air Conditioner uses, and these can be view on the unit's green Information Panel. As the temperature difference between input and waste increases, the Temperature Differential Efficiency Multiplier will decrease. If input or waste temperature is extremely hot or cold, the Operational Temperature Efficiency will decrease. If the input or waste pipe has approach low pressures, the Pressure Efficiency will decrease.\n\n<link=ThingStructurePipeRadiator><color=green>Pipe Convection Radiator</color></link>s may be useful in bringing extreme pipe temperatures back towards normal world temperatures. \n  \nFor more information on using the air conditioner, consult the <link=TemperatureControlPage><color=#0080FFFF>temperature control</color></link> Guides page.",
      "PrefabName": "StructureAirConditioner",
      "PrefabHash": -2087593337,
      "SlotInserts": [
        {
          "SlotName": "Programmable Chip",
          "SlotType": "ProgrammableChip",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureInput><color=orange>PressureInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureInput><color=orange>TemperatureInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenInput><color=orange>RatioOxygenInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideInput><color=orange>RatioCarbonDioxideInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenInput><color=orange>RatioNitrogenInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantInput><color=orange>RatioPollutantInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesInput><color=orange>RatioVolatilesInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterInput><color=orange>RatioWaterInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideInput><color=orange>RatioNitrousOxideInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesInput><color=orange>TotalMolesInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureOutput><color=orange>PressureOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureOutput><color=orange>TemperatureOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenOutput><color=orange>RatioOxygenOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideOutput><color=orange>RatioCarbonDioxideOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenOutput><color=orange>RatioNitrogenOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantOutput><color=orange>RatioPollutantOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesOutput><color=orange>RatioVolatilesOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterOutput><color=orange>RatioWaterOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideOutput><color=orange>RatioNitrousOxideOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesOutput><color=orange>TotalMolesOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureOutput2><color=orange>PressureOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureOutput2><color=orange>TemperatureOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenOutput2><color=orange>RatioOxygenOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideOutput2><color=orange>RatioCarbonDioxideOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenOutput2><color=orange>RatioNitrogenOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantOutput2><color=orange>RatioPollutantOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesOutput2><color=orange>RatioVolatilesOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterOutput2><color=orange>RatioWaterOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideOutput2><color=orange>RatioNitrousOxideOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesOutput2><color=orange>TotalMolesOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionInput><color=orange>CombustionInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionOutput><color=orange>CombustionOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionOutput2><color=orange>CombustionOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOperationalTemperatureEfficiency><color=orange>OperationalTemperatureEfficiency</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureDifferentialEfficiency><color=orange>TemperatureDifferentialEfficiency</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureEfficiency><color=orange>PressureEfficiency</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Idle",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Active",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Waste",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "PressureInput": "Read",
          "TemperatureInput": "Read",
          "RatioOxygenInput": "Read",
          "RatioCarbonDioxideInput": "Read",
          "RatioNitrogenInput": "Read",
          "RatioPollutantInput": "Read",
          "RatioVolatilesInput": "Read",
          "RatioWaterInput": "Read",
          "RatioNitrousOxideInput": "Read",
          "TotalMolesInput": "Read",
          "PressureOutput": "Read",
          "TemperatureOutput": "Read",
          "RatioOxygenOutput": "Read",
          "RatioCarbonDioxideOutput": "Read",
          "RatioNitrogenOutput": "Read",
          "RatioPollutantOutput": "Read",
          "RatioVolatilesOutput": "Read",
          "RatioWaterOutput": "Read",
          "RatioNitrousOxideOutput": "Read",
          "TotalMolesOutput": "Read",
          "PressureOutput2": "Read",
          "TemperatureOutput2": "Read",
          "RatioOxygenOutput2": "Read",
          "RatioCarbonDioxideOutput2": "Read",
          "RatioNitrogenOutput2": "Read",
          "RatioPollutantOutput2": "Read",
          "RatioVolatilesOutput2": "Read",
          "RatioWaterOutput2": "Read",
          "RatioNitrousOxideOutput2": "Read",
          "TotalMolesOutput2": "Read",
          "CombustionInput": "Read",
          "CombustionOutput": "Read",
          "CombustionOutput2": "Read",
          "OperationalTemperatureEfficiency": "Read",
          "TemperatureDifferentialEfficiency": "Read",
          "PressureEfficiency": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "Pipe",
            "Waste"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "DevicesLength": 2,
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingCircuitboardAirControl",
      "Title": "Air Control",
      "Description": "When added to a <link=ThingStructureConsole><color=green>Console</color></link>, air control circuit boards allow you to program an <link=ThingStructureActiveVent><color=green>Active Vent</color></link>. As with small dogs and 83% of people, air control circuits have only three modes: Pressure, Draft and Offline. Pressure mode maintains a 100kPa atmosphere, switching the active vent between inward and outward flow until target pressure is achieved. Draft mode allows you to pair active vents to circulate air. Offline mode deactivates the vent. ",
      "PrefabName": "CircuitboardAirControl",
      "PrefabHash": 1618019559,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingCircuitboardAirlockControl",
      "Title": "Airlock",
      "Description": "Rumored to have been first sketched on a <link=Norsec><color=#0080FFFF>Norsec</color></link> toilet wall by a disgruntled engineer, the Exgress airlock control circuit board’s versatility and ease of fabrication has made it the <link=Stationeers><color=#0080FFFF>Stationeers</color></link> control system of choice for <link=ThingStructureAirlock><color=green>Airlock</color></link> cycling protocols. \n\nTo enter setup mode, insert the board into a <link=ThingStructureConsole><color=green>Console</color></link> along with a data disk. In this mode, you can see all data-accessible objects currently connected to the <link=ThingStructureConsole><color=green>Console</color></link>. Doors, lights, gas sensors and slave consoles can be selected (highlighted green), and will be controlled once the data disk is removed.",
      "PrefabName": "CircuitboardAirlockControl",
      "PrefabHash": 912176135,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureAirlock",
      "Title": "Airlock",
      "Description": "The standard airlock is a powered portal that forms the main component of an airlock chamber. As long as the airlock is not locked, it can be manually opened using a crowbar.",
      "PrefabName": "StructureAirlock",
      "PrefabHash": -2105052344,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingImGuiCircuitboardAirlockControl",
      "Title": "Airlock (Experimental)",
      "Description": "",
      "PrefabName": "ImGuiCircuitboardAirlockControl",
      "PrefabHash": -73796547,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemAlienMushroom",
      "Title": "Alien Mushroom",
      "Description": "",
      "PrefabName": "ItemAlienMushroom",
      "PrefabHash": 176446172,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemAmmoBox",
      "Title": "Ammo Box",
      "Description": "",
      "PrefabName": "ItemAmmoBox",
      "PrefabHash": -9559091,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemAngleGrinder",
      "Title": "Angle Grinder",
      "Description": "Angles-be-gone with the trusty angle grinder.",
      "PrefabName": "ItemAngleGrinder",
      "PrefabHash": 201215010,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingApplianceDeskLampLeft",
      "Title": "Appliance Desk Lamp Left",
      "Description": "",
      "PrefabName": "ApplianceDeskLampLeft",
      "PrefabHash": -1683849799,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Appliance",
        "SortingClass": "Appliances"
      }
    },
    {
      "Key": "ThingApplianceDeskLampRight",
      "Title": "Appliance Desk Lamp Right",
      "Description": "",
      "PrefabName": "ApplianceDeskLampRight",
      "PrefabHash": 1174360780,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Appliance",
        "SortingClass": "Appliances"
      }
    },
    {
      "Key": "ThingApplianceSeedTray",
      "Title": "Appliance Seed Tray",
      "Description": "The seed tray can hold up to twelve plants or seeds and can be used to facilitate fast experimentation and testing of plant genetics.",
      "PrefabName": "ApplianceSeedTray",
      "PrefabHash": 142831994,
      "SlotInserts": [
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "9"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "10"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "11"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Appliance",
        "SortingClass": "Appliances"
      }
    },
    {
      "Key": "ThingStructureArcFurnace",
      "Title": "Arc Furnace",
      "Description": "The simplest smelting system available to the average <link=Stationeers><color=#0080FFFF>Stationeer</color></link>, <link=Recurso><color=#0080FFFF>Recurso's</color></link> arc furnace was forged itself in the depths of the Solar System to help explorational geologists determine the purity of potential asteroidal mining targets.\nCo-opted by the <link=ODA><color=#0080FFFF>ODA</color></link>, it now provides Stationeers with a way to produce pure ingots of various resources.\nThe smelting process also releases a range of by product <link=GasPage><color=#0080FFFF>gases</color></link>, principally <link=GasNitrogen><color=#44AD83>Nitrogen</color></link>, <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link>, <link=GasVolatiles><color=#44AD83>Volatiles</color></link> and <link=GasOxygen><color=#44AD83>Oxygen</color></link> in differing ratios. These can be recaptured from the atmosphere by filtering, but also make the arc furnace a risk in closed environments. \nUnlike the more advanced <link=ThingStructureFurnace><color=green>Furnace</color></link>, the arc furnace cannot create <link=IngotPage><color=#0080FFFF>alloys</color></link>.",
      "PrefabName": "StructureArcFurnace",
      "PrefabHash": -247344692,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "Ore",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "Ingot",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRecipeHash><color=orange>RecipeHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "RecipeHash": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemArcWelder",
      "Title": "Arc Welder",
      "Description": "",
      "PrefabName": "ItemArcWelder",
      "PrefabHash": 1385062886,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructureAreaPowerControlReversed",
      "Title": "Area Power Control",
      "Description": "An Area Power Control (APC) has three main functions. \nIts primary purpose is to regulate power flow, ensuring uninterrupted performance from devices and machinery, especially those with a fluctuating draw. \nAPCs also create sub-networks, as no devices on the far side of an APC are visible on the main network. \nLastly, an APC charges batteries, which can provide backup power to the sub-network in the case of an outage. Note that an APC requires a battery to stabilize power draw. It also has two variants, each allowing power to flow in one direction only.",
      "PrefabName": "StructureAreaPowerControlReversed",
      "PrefabHash": -1032513487,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Data Disk",
          "SlotType": "DataDisk",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerPotential><color=orange>PowerPotential</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerActual><color=orange>PowerActual</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Idle",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Discharged",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Discharging",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Charging",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Charged",
          "LogicAccessTypes": "4"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Power And Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Charge": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "Input"
          ],
          [
            "Power",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureAreaPowerControl",
      "Title": "Area Power Control",
      "Description": "An Area Power Control (APC) has three main functions: \nIts primary purpose is to regulate power flow, ensuring uninterrupted performance from devices and machinery, especially those with a fluctuating draw. \nAPCs also create sub-networks, as no devices on the far side of an APC are visible on the main network.\nLastly, an APC charges batteries, which can provide backup power to the sub-network in the case of an outage. Note that an APC requires a battery to stabilize power draw. It also has two variants, each allowing power to flow in one direction only.",
      "PrefabName": "StructureAreaPowerControl",
      "PrefabHash": 1999523701,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Data Disk",
          "SlotType": "DataDisk",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerPotential><color=orange>PowerPotential</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerActual><color=orange>PowerActual</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Idle",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Discharged",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Discharging",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Charging",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Charged",
          "LogicAccessTypes": "4"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Power And Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Charge": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "Input"
          ],
          [
            "Power",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemAstroloySheets",
      "Title": "Astroloy Sheets",
      "Description": "",
      "PrefabName": "ItemAstroloySheets",
      "PrefabHash": -1662476145,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingCartridgeAtmosAnalyser",
      "Title": "Atmos Analyzer",
      "Description": "The Lorenz atmos analyzer is a multi-functional mass-spectrometer designed by <link=ExMin><color=#0080FFFF>ExMin</color></link> for use with the OreCore <link=ThingItemTablet><color=green>Handheld Tablet</color></link>. It displays the pressure, concentration and molar quantity of <link=GasPage><color=#0080FFFF>gas</color></link> in rooms, tanks, or pipe networks.",
      "PrefabName": "CartridgeAtmosAnalyser",
      "PrefabHash": -1550278665,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Cartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemAuthoringTool",
      "Title": "Authoring Tool",
      "Description": "",
      "PrefabName": "ItemAuthoringTool",
      "PrefabHash": 789015045,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructureAutolathe",
      "Title": "Autolathe",
      "Description": "The foundation of most <link=Stationeers><color=#0080FFFF>Stationeer</color></link> fabrication systems, the <link=ExMin><color=#0080FFFF>ExMin</color></link> autolathe is a multi-axis molecular compositional system. Its complexity demands considerable time to assemble, but it remains an indispensable creation tool. Upgrade the device using a <link=ThingAutolathePrinterMod><color=green>Autolathe Printer Mod</color></link> for additional recipes and faster processing speeds.\n\t  ",
      "PrefabName": "StructureAutolathe",
      "PrefabHash": 336213101,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "Ingot",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRecipeHash><color=orange>RecipeHash</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCompletionRatio><color=orange>CompletionRatio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingAutolathePrinterMod",
      "Title": "Autolathe Printer Mod",
      "Description": "Apply to an <link=ThingStructureAutolathe><color=green>Autolathe</color></link> with a <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link> or <link=ThingItemArcWelder><color=green>Arc Welder</color></link> to upgrade for increased processing speed and more recipe options.",
      "PrefabName": "AutolathePrinterMod",
      "PrefabHash": 221058307,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureAutomatedOven",
      "Title": "Automated Oven",
      "Description": "",
      "PrefabName": "StructureAutomatedOven",
      "PrefabHash": -1672404896,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRecipeHash><color=orange>RecipeHash</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCompletionRatio><color=orange>CompletionRatio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureAutoMinerSmall",
      "Title": "Autominer (Small)",
      "Description": "The <link=Recurso><color=#0080FFFF>Recurso</color></link> SquareDig autominer is a structure that when built will mine a vertical 2x2 shaft until it hits bedrock. The autominer can be connected to a chute system, and is controllable by a logic network. Note that the autominer outputs more <link=OrePage><color=#0080FFFF>ore</color></link> than a conventional <link=ThingItemMiningDrill><color=green>Mining Drill</color></link> over the same area.",
      "PrefabName": "StructureAutoMinerSmall",
      "PrefabHash": 7274344,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureBatterySmall",
      "Title": "Auxiliary Rocket Battery ",
      "Description": "0.Empty\n1.Critical\n2.VeryLow\n3.Low\n4.Medium\n5.High\n6.Full",
      "PrefabName": "StructureBatterySmall",
      "PrefabHash": -2123455080,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerPotential><color=orange>PowerPotential</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerActual><color=orange>PowerActual</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Empty",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Critical",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "VeryLow",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Low",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Medium",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "High",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Full",
          "LogicAccessTypes": "6"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "Read",
          "Charge": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "Input"
          ],
          [
            "Power",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureBackPressureRegulator",
      "Title": "Back Pressure Regulator",
      "Description": "Unlike the <link=ThingStructurePressureRegulator><color=green>Pressure Regulator</color></link>, which closes when the input exceeds a given pressure, the back pressure regulator opens when input pressure reaches a given value.",
      "PrefabName": "StructureBackPressureRegulator",
      "PrefabHash": -1149857558,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemPotatoBaked",
      "Title": "Baked Potato",
      "Description": "",
      "PrefabName": "ItemPotatoBaked",
      "PrefabHash": -2111886401,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Potato": 1.0
        }
      }
    },
    {
      "Key": "ThingAppliancePackagingMachine",
      "Title": "Basic Packaging Machine",
      "Description": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> Cannifier requires <link=ThingItemEmptyCan><color=green>Empty Can</color></link> and cooked <link=OrganicPage><color=#0080FFFF>food</color></link> to create <link=DecayPage><color=#0080FFFF>long-lasting</color></link>, easily stored sustenance. Note that the Cannifier must be bolted to a <link=ThingStructureBench><color=green>Powered Bench</color></link> for power, and only accepts cooked food and tin cans.\n\n<size=120%><b>OPERATION</b></size>\n\n1. Add the correct ingredients to the device via the hopper in the TOP.\n\n2. Close the device using the dropdown handle.\n\n3. Activate the device.\n\n4. Remove canned goods from the outlet in the FRONT.\n\nNote: the Cannifier will flash an error on its activation switch if you attempt to activate it before closing it.\n\n\n      ",
      "PrefabName": "AppliancePackagingMachine",
      "PrefabHash": -749191906,
      "SlotInserts": [
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Appliance",
        "SortingClass": "Appliances"
      }
    },
    {
      "Key": "ThingItemBasketBall",
      "Title": "Basket Ball",
      "Description": "",
      "PrefabName": "ItemBasketBall",
      "PrefabHash": -1262580790,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureBasketHoop",
      "Title": "Basket Hoop",
      "Description": "",
      "PrefabName": "StructureBasketHoop",
      "PrefabHash": -1613497288,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicBatchReader",
      "Title": "Batch Reader",
      "Description": "",
      "PrefabName": "StructureLogicBatchReader",
      "PrefabHash": 264413729,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicBatchSlotReader",
      "Title": "Batch Slot Reader",
      "Description": "",
      "PrefabName": "StructureLogicBatchSlotReader",
      "PrefabHash": 436888930,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicBatchWriter",
      "Title": "Batch Writer",
      "Description": "",
      "PrefabName": "StructureLogicBatchWriter",
      "PrefabHash": 1415443359,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeForceWrite><color=orange>ForceWrite</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ForceWrite": "Write",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureBatteryMedium",
      "Title": "Battery (Medium)",
      "Description": "0.Empty\n1.Critical\n2.VeryLow\n3.Low\n4.Medium\n5.High\n6.Full",
      "PrefabName": "StructureBatteryMedium",
      "PrefabHash": -1125305264,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerPotential><color=orange>PowerPotential</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerActual><color=orange>PowerActual</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Empty",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Critical",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "VeryLow",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Low",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Medium",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "High",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Full",
          "LogicAccessTypes": "6"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "Read",
          "Charge": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "Input"
          ],
          [
            "Power",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemBatteryCellLarge",
      "Title": "Battery Cell (Large)",
      "Description": "First mass-produced by <link=Xigo><color=#0080FFFF>Xigo</color></link> in 2155 on the basis of a unattributed prototype, the classic silicon anode solid-state design extends its optimum temperature range.\n\n<size=120%><b>POWER OUTPUT</b></size>\nThe large power cell can discharge 288kW of power. \n",
      "PrefabName": "ItemBatteryCellLarge",
      "PrefabHash": -459827268,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Empty",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Critical",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "VeryLow",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Low",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Medium",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "High",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Full",
          "LogicAccessTypes": "6"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Mode": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Battery",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemBatteryCellNuclear",
      "Title": "Battery Cell (Nuclear)",
      "Description": "Illegal on Earth since the Chengdu Event, Norsec nuclear power cells found a new and drastically less safety-conscious market offworld.\n\n<size=120%><b>POWER OUTPUT</b></size>\nPushing the power-weight balance to its limits, the 'nuke' has a 2.3 megawatt charge (2304000W), reflecting its reliance on exotic <link=IngotPage><color=#0080FFFF>superalloys</color></link>.",
      "PrefabName": "ItemBatteryCellNuclear",
      "PrefabHash": 544617306,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Empty",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Critical",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "VeryLow",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Low",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Medium",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "High",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Full",
          "LogicAccessTypes": "6"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Mode": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Battery",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemBatteryCell",
      "Title": "Battery Cell (Small)",
      "Description": "Harnessing a design pioneered in the early 21st century, the small battery cell is the <link=Stationeers><color=#0080FFFF>Stationeer's</color></link> basic unit of portable electrical power. While it lacks the charge of a <link=ThingItemBatteryCellLarge><color=green>Battery Cell (Large)</color></link> or <link=ThingItemBatteryCellNuclear><color=green>Battery Cell (Nuclear)</color></link>, it has the humble advantage of being fabricated from basic resources.\n\n<size=120%><b>POWER OUTPUT</b></size>\nThe small cell stores up to 36000 watts of power.",
      "PrefabName": "ItemBatteryCell",
      "PrefabHash": 700133157,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Empty",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Critical",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "VeryLow",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Low",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Medium",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "High",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Full",
          "LogicAccessTypes": "6"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Mode": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Battery",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureBatteryCharger",
      "Title": "Battery Cell Charger",
      "Description": "The 5-slot <link=Xigo><color=#0080FFFF>Xigo</color></link> battery charger fits the <link=ThingItemBatteryCell><color=green>Battery Cell (Small)</color></link>, <link=ThingItemBatteryCellLarge><color=green>Battery Cell (Large)</color></link> and <link=ThingItemBatteryCellNuclear><color=green>Battery Cell (Nuclear)</color></link>, providing up to 500W to any connected cell. Note: the older design means this device has minor power draw (10W) even when not charging.",
      "PrefabName": "StructureBatteryCharger",
      "PrefabHash": 1945930022,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "4"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureBatteryChargerSmall",
      "Title": "Battery Charger Small",
      "Description": "",
      "PrefabName": "StructureBatteryChargerSmall",
      "PrefabHash": -761772413,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemBatteryChargerSmall",
      "Title": "Battery Charger Small",
      "Description": "",
      "PrefabName": "ItemBatteryChargerSmall",
      "PrefabHash": 1008295833,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingBattery_Wireless_cell",
      "Title": "Battery Wireless Cell",
      "Description": "0.Empty\n1.Critical\n2.VeryLow\n3.Low\n4.Medium\n5.High\n6.Full",
      "PrefabName": "Battery_Wireless_cell",
      "PrefabHash": -462415758,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Empty",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Critical",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "VeryLow",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Low",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Medium",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "High",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Full",
          "LogicAccessTypes": "6"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Mode": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Battery",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingBattery_Wireless_cell_Big",
      "Title": "Battery Wireless Cell (Big)",
      "Description": "0.Empty\n1.Critical\n2.VeryLow\n3.Low\n4.Medium\n5.High\n6.Full",
      "PrefabName": "Battery_Wireless_cell_Big",
      "PrefabHash": -41519077,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Empty",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Critical",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "VeryLow",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Low",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Medium",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "High",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Full",
          "LogicAccessTypes": "6"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Mode": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Battery",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureBeacon",
      "Title": "Beacon",
      "Description": "",
      "PrefabName": "StructureBeacon",
      "PrefabHash": -188177083,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeColor><color=orange>Color</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Color": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": true
      }
    },
    {
      "Key": "ThingStructureAngledBench",
      "Title": "Bench (Angled)",
      "Description": "",
      "PrefabName": "StructureAngledBench",
      "PrefabHash": 1811979158,
      "SlotInserts": [
        {
          "SlotName": "Seat",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureBench1",
      "Title": "Bench (Counter Style)",
      "Description": "",
      "PrefabName": "StructureBench1",
      "PrefabHash": 406745009,
      "SlotInserts": [
        {
          "SlotName": "Appliance 1",
          "SlotType": "Appliance",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Appliance 2",
          "SlotType": "Appliance",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureFlatBench",
      "Title": "Bench (Flat)",
      "Description": "",
      "PrefabName": "StructureFlatBench",
      "PrefabHash": 839890807,
      "SlotInserts": [
        {
          "SlotName": "Seat",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureBench3",
      "Title": "Bench (Frame Style)",
      "Description": "",
      "PrefabName": "StructureBench3",
      "PrefabHash": -164622691,
      "SlotInserts": [
        {
          "SlotName": "Appliance 1",
          "SlotType": "Appliance",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Appliance 2",
          "SlotType": "Appliance",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureBench2",
      "Title": "Bench (High Tech Style)",
      "Description": "",
      "PrefabName": "StructureBench2",
      "PrefabHash": -2127086069,
      "SlotInserts": [
        {
          "SlotName": "Appliance 1",
          "SlotType": "Appliance",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Appliance 2",
          "SlotType": "Appliance",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureBench4",
      "Title": "Bench (Workbench Style)",
      "Description": "",
      "PrefabName": "StructureBench4",
      "PrefabHash": 1750375230,
      "SlotInserts": [
        {
          "SlotName": "Appliance 1",
          "SlotType": "Appliance",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Appliance 2",
          "SlotType": "Appliance",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemBiomass",
      "Title": "Biomass",
      "Description": "Diced organic material that is returned when food and organic matter is passed through the <link=ThingStructureRecycler><color=green>Recycler</color></link> and <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link>. Can be burned in a <link=ThingStructureFurnace><color=green>Furnace</color></link> into <link=ThingItemCharcoal><color=green>Charcoal</color></link> for use in the <link=ThingStructureSolidFuelGenerator><color=green>Generator (Solid Fuel)</color></link>.",
      "PrefabName": "ItemBiomass",
      "PrefabHash": -831480639,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "Ingredient": true,
        "Reagents": {
          "Biomass": 1.0
        }
      }
    },
    {
      "Key": "ThingStructureBlastDoor",
      "Title": "Blast Door",
      "Description": "Airtight and almost undamageable, the original 'Millmar' series of blast door was designed by off-world mining giant <link=Recurso><color=#0080FFFF>Recurso</color></link> to protect asteroid-mining facilities from nuclear-incident-level explosive decompression.\nShort of a pocket-sized singularity blinking into the local space-time frame, there is effectively no limit to the pressure these blast doors can contain - ideal for constructing airlocks in pressure-sensitive environments.",
      "PrefabName": "StructureBlastDoor",
      "PrefabHash": 337416191,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureBlockBed",
      "Title": "Block Bed",
      "Description": "Description coming.",
      "PrefabName": "StructureBlockBed",
      "PrefabHash": 697908419,
      "SlotInserts": [
        {
          "SlotName": "Bed",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureBlocker",
      "Title": "Blocker",
      "Description": "",
      "PrefabName": "StructureBlocker",
      "PrefabHash": 378084505,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingItemBreadLoaf",
      "Title": "Bread Loaf",
      "Description": "",
      "PrefabName": "ItemBreadLoaf",
      "PrefabHash": 893514943,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingStructureCableCorner3Burnt",
      "Title": "Burnt Cable (3-Way Corner)",
      "Description": "",
      "PrefabName": "StructureCableCorner3Burnt",
      "PrefabHash": 318437449,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableCorner4Burnt",
      "Title": "Burnt Cable (4-Way Corner)",
      "Description": "",
      "PrefabName": "StructureCableCorner4Burnt",
      "PrefabHash": 268421361,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableJunction4Burnt",
      "Title": "Burnt Cable (4-Way Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunction4Burnt",
      "PrefabHash": -1756896811,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableJunction4HBurnt",
      "Title": "Burnt Cable (4-Way Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunction4HBurnt",
      "PrefabHash": -115809132,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableJunction5Burnt",
      "Title": "Burnt Cable (5-Way Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunction5Burnt",
      "PrefabHash": 1545286256,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableJunction6Burnt",
      "Title": "Burnt Cable (6-Way Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunction6Burnt",
      "PrefabHash": -628145954,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableJunction6HBurnt",
      "Title": "Burnt Cable (6-Way Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunction6HBurnt",
      "PrefabHash": 1854404029,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableCornerHBurnt",
      "Title": "Burnt Cable (Corner)",
      "Description": "",
      "PrefabName": "StructureCableCornerHBurnt",
      "PrefabHash": 1931412811,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableCornerBurnt",
      "Title": "Burnt Cable (Corner)",
      "Description": "",
      "PrefabName": "StructureCableCornerBurnt",
      "PrefabHash": -177220914,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableJunctionHBurnt",
      "Title": "Burnt Cable (Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunctionHBurnt",
      "PrefabHash": -341365649,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableJunctionBurnt",
      "Title": "Burnt Cable (Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunctionBurnt",
      "PrefabHash": -1620686196,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableStraightHBurnt",
      "Title": "Burnt Cable (Straight)",
      "Description": "",
      "PrefabName": "StructureCableStraightHBurnt",
      "PrefabHash": 2085762089,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableStraightBurnt",
      "Title": "Burnt Cable (Straight)",
      "Description": "",
      "PrefabName": "StructureCableStraightBurnt",
      "PrefabHash": -1196981113,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableCorner4HBurnt",
      "Title": "Burnt Heavy Cable (4-Way Corner)",
      "Description": "",
      "PrefabName": "StructureCableCorner4HBurnt",
      "PrefabHash": -981223316,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCableJunctionH5Burnt",
      "Title": "Burnt Heavy Cable (5-Way Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunctionH5Burnt",
      "PrefabHash": 1701593300,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureLogicButton",
      "Title": "Button",
      "Description": "",
      "PrefabName": "StructureLogicButton",
      "PrefabHash": 491845673,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCableCorner3",
      "Title": "Cable (3-Way Corner)",
      "Description": "Carrying power and data alike, cable coil has come to symbolize the innovation, independence and flexibility of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> life - so essential, the <link=ODA><color=#0080FFFF>ODA</color></link> designated it an official <link=ToolPage><color=#0080FFFF>'tool'</color></link> during the 3rd Decannual Stationeer Solar Conference.\nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
      "PrefabName": "StructureCableCorner3",
      "PrefabHash": 980469101,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructureCableCorner4",
      "Title": "Cable (4-Way Corner)",
      "Description": "",
      "PrefabName": "StructureCableCorner4",
      "PrefabHash": -1542172466,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingStructureCableJunction4",
      "Title": "Cable (4-Way Junction)",
      "Description": "Carrying power and data alike, cable coil has come to symbolize the innovation, independence and flexibility of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> life - so much so, the <link=ODA><color=#0080FFFF>ODA</color></link> designated it an official <link=ToolPage><color=#0080FFFF>'tool'</color></link> during the 3rd Decannual Stationeer Solar Conference.\nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
      "PrefabName": "StructureCableJunction4",
      "PrefabHash": 1112047202,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingStructureCableJunction5",
      "Title": "Cable (5-Way Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunction5",
      "PrefabHash": 894390004,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        }
      ]
    },
    {
      "Key": "ThingStructureCableJunction6",
      "Title": "Cable (6-Way Junction)",
      "Description": "Carrying power and data alike, cable coil has come to symbolize the innovation, independence and flexibility of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> duty - so much so, the <link=ODA><color=#0080FFFF>ODA</color></link> designated it an official <link=ToolPage><color=#0080FFFF>'tool'</color></link> during the 3rd Decannual Stationeer Solar Conference.\nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
      "PrefabName": "StructureCableJunction6",
      "PrefabHash": -1404690610,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "5"
        }
      ]
    },
    {
      "Key": "ThingStructureCableCorner",
      "Title": "Cable (Corner)",
      "Description": "Carrying power and data alike, cable coil has come to symbolize the innovation, independence and flexibility of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> life - so essential, the <link=ODA><color=#0080FFFF>ODA</color></link> designated it an official <link=ToolPage><color=#0080FFFF>'tool'</color></link> during the 3rd Decannual Stationeer Solar Conference.\nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
      "PrefabName": "StructureCableCorner",
      "PrefabHash": -889269388,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureCableJunction",
      "Title": "Cable (Junction)",
      "Description": "Carrying power and data alike, cable coil has come to symbolize the innovation, independence and flexibility of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> life - so much so, the <link=ODA><color=#0080FFFF>ODA</color></link> designated it an official <link=ToolPage><color=#0080FFFF>'tool'</color></link> during the 3rd Decannual Stationeer Solar Conference.\nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
      "PrefabName": "StructureCableJunction",
      "PrefabHash": -175342021,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructureCableStraight",
      "Title": "Cable (Straight)",
      "Description": "Carrying power and data alike, cable coil has come to symbolize the innovation, independence and flexibility of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> life - so much so, the <link=ODA><color=#0080FFFF>ODA</color></link> designated it an official <link=ToolPage><color=#0080FFFF>'tool'</color></link>.\nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
      "PrefabName": "StructureCableStraight",
      "PrefabHash": 605357050,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureCableAnalysizer",
      "Title": "Cable Analyzer",
      "Description": "",
      "PrefabName": "StructureCableAnalysizer",
      "PrefabHash": 1036015121,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePowerPotential><color=orange>PowerPotential</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerActual><color=orange>PowerActual</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerRequired><color=orange>PowerRequired</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "PowerRequired": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemCableCoil",
      "Title": "Cable Coil",
      "Description": "Bodily metaphors are tired and anthropocentric, but it was Frida Stuppen, the first <link=ODA><color=#0080FFFF>ODA</color></link> Administrator, who said, 'Let the cabling be as the nerve and the vessel, transmitting power and data alike through systems we forge among the stars.' Later commentators suggested that she was simply putting a romantic gloss on a piece of dubious economy. Whatever the case, standard cabling is where any <link=Stationeers><color=#0080FFFF>Stationeer's</color></link> network begins. \nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
      "PrefabName": "ItemCableCoil",
      "PrefabHash": -466050668,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Resources",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemCableCoilHeavy",
      "Title": "Cable Coil (Heavy)",
      "Description": "Use heavy cable coil for power systems with large draws. Unlike <link=ThingStructureCableCoil><color=green><N:EN:StructureCableCoil></color></link>, which can only safely conduct 5kW, heavy cables can transmit up to 100kW.",
      "PrefabName": "ItemCableCoilHeavy",
      "PrefabHash": 2060134443,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Resources",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingStructureCamera",
      "Title": "Camera",
      "Description": "Nothing says 'I care' like a security camera that's been linked a <link=ThingStructureMotionSensor><color=green>Motion Sensor</color></link> and a <link=ThingStructureConsole><color=green>Console</color></link> fitted with a <link=ThingCircuitboardCameraDisplay><color=green>Camera Display</color></link>.\nBe there, even when you're not.",
      "PrefabName": "StructureCamera",
      "PrefabHash": -342072665,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Mode": "ReadWrite",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingCircuitboardCameraDisplay",
      "Title": "Camera Display",
      "Description": "Surveillance is sometimes necessary when building bases in highly hostile environments. The camera display circuit board allows wary Stationeers to turn a <link=ThingStructureConsole><color=green>Console</color></link> into a security display when connected to a <link=ThingStructureCamera><color=green>Camera</color></link>.",
      "PrefabName": "CircuitboardCameraDisplay",
      "PrefabHash": -412104504,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemGasCanisterEmpty",
      "Title": "Canister",
      "Description": "",
      "PrefabName": "ItemGasCanisterEmpty",
      "PrefabHash": 42280099,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingItemGasCanisterCarbonDioxide",
      "Title": "Canister (CO2)",
      "Description": "",
      "PrefabName": "ItemGasCanisterCarbonDioxide",
      "PrefabHash": -767685874,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingItemGasCanisterFuel",
      "Title": "Canister (Fuel)",
      "Description": "",
      "PrefabName": "ItemGasCanisterFuel",
      "PrefabHash": -1014695176,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingItemGasCanisterNitrogen",
      "Title": "Canister (Nitrogen)",
      "Description": "",
      "PrefabName": "ItemGasCanisterNitrogen",
      "PrefabHash": 2145068424,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingItemGasCanisterOxygen",
      "Title": "Canister (Oxygen)",
      "Description": "",
      "PrefabName": "ItemGasCanisterOxygen",
      "PrefabHash": -1152261938,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingItemGasCanisterPollutants",
      "Title": "Canister (Pollutants)",
      "Description": "",
      "PrefabName": "ItemGasCanisterPollutants",
      "PrefabHash": -1552586384,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingItemGasCanisterVolatiles",
      "Title": "Canister (Volatiles)",
      "Description": "",
      "PrefabName": "ItemGasCanisterVolatiles",
      "PrefabHash": -472094806,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingItemCannedCondensedMilk",
      "Title": "Canned Condensed Milk",
      "Description": "Made in an <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link> or <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link>, using <link=ThingItemCookedCondensedMilk><color=green>Condensed Milk</color></link> and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link>, canned condensed milk is fairly high in nutrition, and does not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
      "PrefabName": "ItemCannedCondensedMilk",
      "PrefabHash": -2104175091,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemCannedEdamame",
      "Title": "Canned Edamame",
      "Description": "Made in an <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link> or <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link>, using <link=ThingItemCookedSoybean><color=green>Cooked Soybean</color></link> and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link>, canned edamame beans are fairly high in nutrition, and do not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
      "PrefabName": "ItemCannedEdamame",
      "PrefabHash": -999714082,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemFrenchFries",
      "Title": "Canned French Fries",
      "Description": "Because space would suck without 'em.",
      "PrefabName": "ItemFrenchFries",
      "PrefabHash": -57608687,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemCannedMushroom",
      "Title": "Canned Mushroom",
      "Description": "Made in an <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link> or <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link>, using <link=ThingItemCookedMushroom><color=green>Cooked Mushroom</color></link>  and a <link=ThingItemEmptyCan><color=green>Empty Can</color></link>, delicious mushroom soup is fairly high in nutrition, and does not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
      "PrefabName": "ItemCannedMushroom",
      "PrefabHash": -1344601965,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemCannedPowderedEggs",
      "Title": "Canned Powdered Eggs",
      "Description": "Made in an <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link> or <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link>, using <link=ThingItemCookedPowderedEggs><color=green>Powdered Eggs</color></link>  and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link>, canned powdered eggs are an exciting, dynamic food that's fairly high in nutrition, and does not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
      "PrefabName": "ItemCannedPowderedEggs",
      "PrefabHash": 1161510063,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemCannedRicePudding",
      "Title": "Canned Rice Pudding",
      "Description": "Made in an <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link> or <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link>, using <link=ThingItemCookedRice><color=green>Cooked Rice</color></link> and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link>, canned rice pudding is a sweet treat, fairly high in nutrition, and does not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
      "PrefabName": "ItemCannedRicePudding",
      "PrefabHash": -1185552595,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingCardboardBox",
      "Title": "Cardboard Box",
      "Description": "",
      "PrefabName": "CardboardBox",
      "PrefabHash": -1976947556,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Storage"
      }
    },
    {
      "Key": "ThingStructureCargoStorageMedium",
      "Title": "Cargo Storage (Medium)",
      "Description": "",
      "PrefabName": "StructureCargoStorageMedium",
      "PrefabHash": 1151864003,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "9"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "10"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "11"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "12"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "13"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "14"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "15"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "16"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "17"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "18"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "19"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "20"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "21"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "22"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "23"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "24"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "25"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "26"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "27"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "28"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "29"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "30"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "31"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "32"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "33"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "34"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "35"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "36"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "37"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "38"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "39"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "40"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "41"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "42"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "43"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "44"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "45"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "46"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "47"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "48"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "49"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "50"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "51"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "52"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "53"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "54"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "55"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "56"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "57"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "58"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "59"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "60"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "61"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "62"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "63"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "64"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "65"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "66"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "67"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "68"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "69"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "70"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "71"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "72"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "73"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "74"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "75"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "76"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "77"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "78"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "79"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "80"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "81"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "82"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "83"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "84"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "85"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "86"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "87"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "88"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "89"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "90"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "91"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "92"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "93"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "94"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "95"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "96"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "97"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "98"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "99"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "100"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "101"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {},
          "2": {},
          "3": {},
          "4": {},
          "5": {},
          "6": {},
          "7": {},
          "8": {},
          "9": {},
          "10": {},
          "11": {},
          "12": {},
          "13": {},
          "14": {},
          "15": {},
          "16": {},
          "17": {},
          "18": {},
          "19": {},
          "20": {},
          "21": {},
          "22": {},
          "23": {},
          "24": {},
          "25": {},
          "26": {},
          "27": {},
          "28": {},
          "29": {},
          "30": {},
          "31": {},
          "32": {},
          "33": {},
          "34": {},
          "35": {},
          "36": {},
          "37": {},
          "38": {},
          "39": {},
          "40": {},
          "41": {},
          "42": {},
          "43": {},
          "44": {},
          "45": {},
          "46": {},
          "47": {},
          "48": {},
          "49": {},
          "50": {},
          "51": {},
          "52": {},
          "53": {},
          "54": {},
          "55": {},
          "56": {},
          "57": {},
          "58": {},
          "59": {},
          "60": {},
          "61": {},
          "62": {},
          "63": {},
          "64": {},
          "65": {},
          "66": {},
          "67": {},
          "68": {},
          "69": {},
          "70": {},
          "71": {},
          "72": {},
          "73": {},
          "74": {},
          "75": {},
          "76": {},
          "77": {},
          "78": {},
          "79": {},
          "80": {},
          "81": {},
          "82": {},
          "83": {},
          "84": {},
          "85": {},
          "86": {},
          "87": {},
          "88": {},
          "89": {},
          "90": {},
          "91": {},
          "92": {},
          "93": {},
          "94": {},
          "95": {},
          "96": {},
          "97": {},
          "98": {},
          "99": {},
          "100": {},
          "101": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Ratio": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Chute",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCargoStorageSmall",
      "Title": "Cargo Storage (Small)",
      "Description": "",
      "PrefabName": "StructureCargoStorageSmall",
      "PrefabHash": -1493672123,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "9"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "10"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "11"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "12"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "13"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "14"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "15"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "16"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "17"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "18"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "19"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "20"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "21"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "22"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "23"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "24"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "25"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "26"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "27"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "28"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "29"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "30"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "31"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "32"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "33"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "34"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "35"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "36"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "37"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "38"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "39"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "40"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "41"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "42"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "43"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "44"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "45"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "46"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "47"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "48"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "49"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "50"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "51"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "15": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "16": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "17": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "18": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "19": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "20": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "21": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "22": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "23": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "24": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "25": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "26": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "27": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "28": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "29": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "30": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "31": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "32": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "33": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "34": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "35": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "36": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "37": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "38": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "39": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "40": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "41": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "42": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "43": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "44": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "45": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "46": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "47": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "48": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "49": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "50": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "51": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Ratio": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Chute",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingCartridgeAccessController",
      "Title": "Cartridge (Access Controller)",
      "Description": "",
      "PrefabName": "CartridgeAccessController",
      "PrefabHash": -1634532552,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Cartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingCartridgePlantAnalyser",
      "Title": "Cartridge Plant Analyser",
      "Description": "",
      "PrefabName": "CartridgePlantAnalyser",
      "PrefabHash": 1101328282,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Cartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemGasFilterCarbonDioxideInfinite",
      "Title": "Catalytic Filter (Carbon Dioxide)",
      "Description": "A filter that selectively targets Carbon Dioxide. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
      "PrefabName": "ItemGasFilterCarbonDioxideInfinite",
      "PrefabHash": -185568964,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "CarbonDioxide"
      }
    },
    {
      "Key": "ThingItemGasFilterNitrogenInfinite",
      "Title": "Catalytic Filter (Nitrogen)",
      "Description": "A filter that selectively targets Nitrogen. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
      "PrefabName": "ItemGasFilterNitrogenInfinite",
      "PrefabHash": 152751131,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Nitrogen"
      }
    },
    {
      "Key": "ThingItemGasFilterNitrousOxideInfinite",
      "Title": "Catalytic Filter (Nitrous Oxide)",
      "Description": "A filter that selectively targets Nitrous Oxide. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
      "PrefabName": "ItemGasFilterNitrousOxideInfinite",
      "PrefabHash": -123934842,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "NitrousOxide"
      }
    },
    {
      "Key": "ThingItemGasFilterOxygenInfinite",
      "Title": "Catalytic Filter (Oxygen)",
      "Description": "A filter that selectively targets Oxygen. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
      "PrefabName": "ItemGasFilterOxygenInfinite",
      "PrefabHash": -1055451111,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Oxygen"
      }
    },
    {
      "Key": "ThingItemGasFilterPollutantsInfinite",
      "Title": "Catalytic Filter (Pollutants)",
      "Description": "A filter that selectively targets Pollutants. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
      "PrefabName": "ItemGasFilterPollutantsInfinite",
      "PrefabHash": -503738105,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Pollutant"
      }
    },
    {
      "Key": "ThingItemGasFilterVolatilesInfinite",
      "Title": "Catalytic Filter (Volatiles)",
      "Description": "A filter that selectively targets <link=GasVolatiles><color=#44AD83>Volatiles</color></link>. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
      "PrefabName": "ItemGasFilterVolatilesInfinite",
      "PrefabHash": -1916176068,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Volatiles"
      }
    },
    {
      "Key": "ThingItemGasFilterWaterInfinite",
      "Title": "Catalytic Filter (Water)",
      "Description": "A filter that selectively targets Water. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
      "PrefabName": "ItemGasFilterWaterInfinite",
      "PrefabHash": -1678456554,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Steam"
      }
    },
    {
      "Key": "ThingStructureCentrifuge",
      "Title": "Centrifuge",
      "Description": "If a <link=ThingStructureRecycler><color=green>Recycler</color></link> or unbalanced <link=ThingStructureFurnace><color=green>Furnace</color></link> outputs <link=ReagentPage><color=#0080FFFF>reagent</color></link> mixture rather than the desired <link=IngotPage><color=#0080FFFF>ingots</color></link>, a centrifuge allows you to reclaim the raw <link=OrePage><color=#0080FFFF>ore</color></link>. \n        It also refines <link=ThingItemDirtyOre><color=green>Dirty Ore</color></link> produced from the <link=ThingStructureDeepMiner><color=green>Deep Miner</color></link> and <link=ThingItemSpaceOre><color=green>Dirty Ore</color></link> produced from the <link=ThingStructureRocketMiner><color=green>Rocket Miner</color></link>. \n        Its bigger brother <link=ThingStructureCombustionCentrifuge><color=green>Combustion Centrifuge</color></link> can be used to process items significantly faster. Items processed by the centrifuge will be de-gassed. \n        If openned while powered on, the centrifuge will enter an errored state and reduce its rpm to 0 and then export any items.",
      "PrefabName": "StructureCentrifuge",
      "PrefabHash": 690945935,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemCerealBar",
      "Title": "Cereal Bar",
      "Description": "Sustains, without decay. If only all our relationships were so well balanced.",
      "PrefabName": "ItemCerealBar",
      "PrefabHash": 791746840,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingStructureChair",
      "Title": "Chair",
      "Description": "One of the universe's many chairs, optimized for bipeds with somewhere between zero and two upper limbs.",
      "PrefabName": "StructureChair",
      "PrefabHash": 1167659360,
      "SlotInserts": [
        {
          "SlotName": "Seat",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChairBacklessDouble",
      "Title": "Chair (Backless Double)",
      "Description": "",
      "PrefabName": "StructureChairBacklessDouble",
      "PrefabHash": 1944858936,
      "SlotInserts": [
        {
          "SlotName": "Seat",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChairBacklessSingle",
      "Title": "Chair (Backless Single)",
      "Description": "",
      "PrefabName": "StructureChairBacklessSingle",
      "PrefabHash": 1672275150,
      "SlotInserts": [
        {
          "SlotName": "Seat",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChairBoothCornerLeft",
      "Title": "Chair (Booth Corner Left)",
      "Description": "",
      "PrefabName": "StructureChairBoothCornerLeft",
      "PrefabHash": -367720198,
      "SlotInserts": [
        {
          "SlotName": "Seat",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChairBoothMiddle",
      "Title": "Chair (Booth Middle)",
      "Description": "",
      "PrefabName": "StructureChairBoothMiddle",
      "PrefabHash": 1640720378,
      "SlotInserts": [
        {
          "SlotName": "Seat",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChairRectangleDouble",
      "Title": "Chair (Rectangle Double)",
      "Description": "",
      "PrefabName": "StructureChairRectangleDouble",
      "PrefabHash": -1152812099,
      "SlotInserts": [
        {
          "SlotName": "Seat",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChairRectangleSingle",
      "Title": "Chair (Rectangle Single)",
      "Description": "",
      "PrefabName": "StructureChairRectangleSingle",
      "PrefabHash": -1425428917,
      "SlotInserts": [
        {
          "SlotName": "Seat",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChairThickDouble",
      "Title": "Chair (Thick Double)",
      "Description": "",
      "PrefabName": "StructureChairThickDouble",
      "PrefabHash": -1245724402,
      "SlotInserts": [
        {
          "SlotName": "Seat",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChairThickSingle",
      "Title": "Chair (Thick Single)",
      "Description": "",
      "PrefabName": "StructureChairThickSingle",
      "PrefabHash": -1510009608,
      "SlotInserts": [
        {
          "SlotName": "Seat",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemCharcoal",
      "Title": "Charcoal",
      "Description": "Charcoal is a lightweight, black carbon residue produced by heating <link=ThingItemBiomass><color=green>Biomass</color></link> in a <link=ThingStructureArcFurnace><color=green>Arc Furnace</color></link>. It contains less energy potential than <link=ThingItemCoalOre><color=green>Ore (Coal)</color></link>, but can be used as a basic fuel source. Charcoal can also be substituted for coal in <link=IngotPage><color=#0080FFFF>alloy</color></link> recipes.",
      "PrefabName": "ItemCharcoal",
      "PrefabHash": 252561409,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 200.0,
        "Ingredient": true,
        "Reagents": {
          "Carbon": 1.0
        }
      }
    },
    {
      "Key": "ThingItemChemLightBlue",
      "Title": "Chem Light (Blue)",
      "Description": "A safe and slightly rave-some source of blue light. Snap to activate.",
      "PrefabName": "ItemChemLightBlue",
      "PrefabHash": -772542081,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemChemLightGreen",
      "Title": "Chem Light (Green)",
      "Description": "Enliven the dreariest, airless rock with this glowy green light. Snap to activate.",
      "PrefabName": "ItemChemLightGreen",
      "PrefabHash": -597479390,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemChemLightRed",
      "Title": "Chem Light (Red)",
      "Description": "A red glowstick. Snap to activate. Then reach for the lasers.",
      "PrefabName": "ItemChemLightRed",
      "PrefabHash": -525810132,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemChemLightWhite",
      "Title": "Chem Light (White)",
      "Description": "Snap the glowstick to activate a pale radiance that keeps the darkness at bay.",
      "PrefabName": "ItemChemLightWhite",
      "PrefabHash": 1312166823,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemChemLightYellow",
      "Title": "Chem Light (Yellow)",
      "Description": "Dispel the darkness with this yellow glowstick.",
      "PrefabName": "ItemChemLightYellow",
      "PrefabHash": 1224819963,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingApplianceChemistryStation",
      "Title": "Chemistry Station",
      "Description": "",
      "PrefabName": "ApplianceChemistryStation",
      "PrefabHash": 1365789392,
      "SlotInserts": [
        {
          "SlotName": "Output",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Appliance",
        "SortingClass": "Appliances"
      }
    },
    {
      "Key": "ThingNpcChick",
      "Title": "Chick",
      "Description": "",
      "PrefabName": "NpcChick",
      "PrefabHash": 155856647,
      "SlotInserts": [
        {
          "SlotName": "Brain",
          "SlotType": "Organ",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Lungs",
          "SlotType": "Organ",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingNpcChicken",
      "Title": "Chicken",
      "Description": "",
      "PrefabName": "NpcChicken",
      "PrefabHash": 399074198,
      "SlotInserts": [
        {
          "SlotName": "Brain",
          "SlotType": "Organ",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Lungs",
          "SlotType": "Organ",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureChuteCorner",
      "Title": "Chute (Corner)",
      "Description": "Chutes act as pipes for items. Use them to connect various <link=ImportExportPage><color=#0080FFFF>import/export</color></link> equipment together such as the <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link> and printers like the <link=ThingStructureAutolathe><color=green>Autolathe</color></link>.\nThe aim for any <link=Stationeers><color=#0080FFFF>Stationeer</color></link> is to make off-world survival less of a struggle for themselves, and those who will follow in their footsteps.\nChute corners are fundamental components of chute networks, which allow the transport of items between machines with <link=ImportExportPage><color=#0080FFFF>import/export</color></link> slots, such as the <link=ThingStructureFurnace><color=green>Furnace</color></link> and other automatable structures.",
      "PrefabName": "StructureChuteCorner",
      "PrefabHash": 1360330136,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureChuteJunction",
      "Title": "Chute (Junction)",
      "Description": "The aim for any <link=Stationeers><color=#0080FFFF>Stationeer</color></link> is to make off-world survival less of a struggle for themselves, and those who will follow in their footsteps.\nChute junctions are fundamental components of chute networks, allowing merging or splitting of these networks. When combined with a programmed <link=ThingStructureSorter><color=green>Sorter</color></link>, items can be sent down different paths to various machines with <link=ImportExportPage><color=#0080FFFF>import/export</color></link> slots.",
      "PrefabName": "StructureChuteJunction",
      "PrefabHash": -611232514,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Input2",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructureChuteStraight",
      "Title": "Chute (Straight)",
      "Description": "Chutes act as pipes for items. Use them to connect various <link=ImportExportPage><color=#0080FFFF>import/export</color></link> equipment together such as the <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link> and printers like the <link=ThingStructureAutolathe><color=green>Autolathe</color></link>.\nThe aim for any <link=Stationeers><color=#0080FFFF>Stationeer</color></link> is to make off-world survival less of a struggle for themselves, and those who will follow in their footsteps.\nChutes are fundamental components of chute networks, which allow the transport of items between any machine or device with an <link=ImportExportPage><color=#0080FFFF>import/export</color></link> slot.",
      "PrefabName": "StructureChuteStraight",
      "PrefabHash": 168307007,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureChuteWindow",
      "Title": "Chute (Window)",
      "Description": "Chute's with windows let you see what's passing through your <link=ImportExportPage><color=#0080FFFF>import/export</color></link> network. But be warned, they are not insulated as other chutes are. Ices will melt.",
      "PrefabName": "StructureChuteWindow",
      "PrefabHash": -607241919,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureChuteBin",
      "Title": "Chute Bin",
      "Description": "The <link=Stationeers><color=#0080FFFF>Stationeer's</color></link> goal is to make off-world survival less of a struggle for themselves, and those who will follow in their footsteps.\nLike most <link=Recurso><color=#0080FFFF>Recurso</color></link>-designed systems, chute bins are simple and robust powered items, allowing items to be manually passed into chute networks by pulling a lever. They can also be programmed with <link=LogicUnitPage><color=#0080FFFF>logic</color></link> to operate automatically, although full automation requires the use items such as a <link=ThingStructureSDBHopper><color=green>SDB Hopper</color></link>.",
      "PrefabName": "StructureChuteBin",
      "PrefabHash": -850484480,
      "SlotInserts": [
        {
          "SlotName": "Input",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChuteDigitalFlipFlopSplitterLeft",
      "Title": "Chute Digital Flip Flop Splitter Left",
      "Description": "The digital flip flop will toggle between two outputs using a specified ratio (n:1). For example, setting the dial to 2 would allow two items to pass through the primary output before flipping to the secondary output.",
      "PrefabName": "StructureChuteDigitalFlipFlopSplitterLeft",
      "PrefabHash": -810874728,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSettingOutput><color=orange>SettingOutput</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Output2",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Setting": "ReadWrite",
          "Quantity": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "SettingOutput": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Chute",
            "Output2"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChuteDigitalFlipFlopSplitterRight",
      "Title": "Chute Digital Flip Flop Splitter Right",
      "Description": "The digital flip flop will toggle between two outputs using a specified ratio (n:1). For example, setting the dial to 2 would allow two items to pass through the primary output before flipping to the secondary output.",
      "PrefabName": "StructureChuteDigitalFlipFlopSplitterRight",
      "PrefabHash": 163728359,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSettingOutput><color=orange>SettingOutput</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Output2",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Setting": "ReadWrite",
          "Quantity": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "SettingOutput": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Chute",
            "Output2"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChuteDigitalValveLeft",
      "Title": "Chute Digital Valve Left",
      "Description": "The Digital Chute Valve will stop the flow of materials when set to closed and when set to open, will act like a straight chute. The valve will automatically close after a certain number of items have passed through. This threshold can be set using the dial.",
      "PrefabName": "StructureChuteDigitalValveLeft",
      "PrefabHash": 648608238,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Quantity": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChuteDigitalValveRight",
      "Title": "Chute Digital Valve Right",
      "Description": "The Digital Chute Valve will stop the flow of materials when set to closed and when set to open, will act like a straight chute. The valve will automatically close after a certain number of items have passed through. This threshold can be set using the dial.",
      "PrefabName": "StructureChuteDigitalValveRight",
      "PrefabHash": -1337091041,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Quantity": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChuteFlipFlopSplitter",
      "Title": "Chute Flip Flop Splitter",
      "Description": "A chute that toggles between two outputs",
      "PrefabName": "StructureChuteFlipFlopSplitter",
      "PrefabHash": -1446854725,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Output2",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructureChuteInlet",
      "Title": "Chute Inlet",
      "Description": "The aim for any <link=Stationeers><color=#0080FFFF>Stationeer</color></link> is to make off-world survival less of a struggle for themselves, and those who will follow in their footsteps.\nThe chute inlet is an aperture by which items can be introduced to <link=ImportExportPage><color=#0080FFFF>import/export</color></link> networks. Note that its origins in zero-gravity mining means chute inlets are unpowered and permanently open, rather than interactable, allowing objects to be thrown in. They can be connected to <link=LogicUnitPage><color=#0080FFFF>logic</color></link> systems to monitor throughput.",
      "PrefabName": "StructureChuteInlet",
      "PrefabHash": -1469588766,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Lock": "ReadWrite",
          "ClearMemory": "Write",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChuteOutlet",
      "Title": "Chute Outlet",
      "Description": "The aim for any <link=Stationeers><color=#0080FFFF>Stationeer</color></link> is to make off-world survival less of a struggle for themselves, and those who will follow in their footsteps.\nThe chute outlet is an aperture for exiting items from <link=ImportExportPage><color=#0080FFFF>import/export</color></link> networks. Note that the outlet's origins in zero-gravity mining means they are permanently open, rather than interactable, but can be connected to <link=LogicUnitPage><color=#0080FFFF>logic</color></link> systems to monitor throughput.",
      "PrefabName": "StructureChuteOutlet",
      "PrefabHash": -1022714809,
      "SlotInserts": [
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Lock": "ReadWrite",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChuteOverflow",
      "Title": "Chute Overflow",
      "Description": "The overflow chute will direct materials to its overflow port when the thing connected to its default port is already occupied.",
      "PrefabName": "StructureChuteOverflow",
      "PrefabHash": 225377225,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Output2",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructureChuteValve",
      "Title": "Chute Valve",
      "Description": "The Chute Valve will stop the flow of materials when set to closed and when set to open, will act like a straight chute.",
      "PrefabName": "StructureChuteValve",
      "PrefabHash": 434875271,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingItemCoffeeMug",
      "Title": "Coffee Mug",
      "Description": "",
      "PrefabName": "ItemCoffeeMug",
      "PrefabHash": 1800622698,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingReagentColorBlue",
      "Title": "Color Dye (Blue)",
      "Description": "",
      "PrefabName": "ReagentColorBlue",
      "PrefabHash": 980054869,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "ColorBlue": 10.0
        }
      }
    },
    {
      "Key": "ThingReagentColorGreen",
      "Title": "Color Dye (Green)",
      "Description": "",
      "PrefabName": "ReagentColorGreen",
      "PrefabHash": 120807542,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "ColorGreen": 10.0
        }
      }
    },
    {
      "Key": "ThingReagentColorOrange",
      "Title": "Color Dye (Orange)",
      "Description": "",
      "PrefabName": "ReagentColorOrange",
      "PrefabHash": -400696159,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "ColorOrange": 10.0
        }
      }
    },
    {
      "Key": "ThingReagentColorRed",
      "Title": "Color Dye (Red)",
      "Description": "",
      "PrefabName": "ReagentColorRed",
      "PrefabHash": 1998377961,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "ColorRed": 10.0
        }
      }
    },
    {
      "Key": "ThingReagentColorYellow",
      "Title": "Color Dye (Yellow)",
      "Description": "",
      "PrefabName": "ReagentColorYellow",
      "PrefabHash": 635208006,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "ColorYellow": 10.0
        }
      }
    },
    {
      "Key": "ThingStructureCombustionCentrifuge",
      "Title": "Combustion Centrifuge",
      "Description": "The Combustion Centrifuge is a gas powered version of the <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link>. If a <link=ThingStructureRecycler><color=green>Recycler</color></link> or unbalanced <link=ThingStructureFurnace><color=green>Furnace</color></link> outputs <link=ReagentPage><color=#0080FFFF>reagent</color></link> mixture rather than the desired <link=IngotPage><color=#0080FFFF>ingots</color></link>, a centrifuge allows you to reclaim the raw <link=OrePage><color=#0080FFFF>ore</color></link>.\n        It also refines <link=ThingItemDirtyOre><color=green>Dirty Ore</color></link> produced from the <link=ThingStructureDeepMiner><color=green>Deep Miner</color></link> and <link=ThingItemSpaceOre><color=green>Dirty Ore</color></link> produced from the <link=ThingStructureRocketMiner><color=green>Rocket Miner</color></link>. A combustible fuel mix should be supplied to the gas input, and waste gasses should be vented from the output. \n        The machine's RPMs must be controlled via the throttle and combustion limiter levers. If the Combustion Centrifuge gains, or loses, RPMs too fast it will experience stress, and eventually grind to a halt.  Higher RPMs directly result in faster processing speeds. \n        The throttle lever controls the amount of fuel being pulled into the machine, increasing the temperature inside the engine, and leading to an increase in RPM. The limiter lever influences the speed of the combustion, and how much uncombusted gas is in the exhaust. \n        Ejecting ore from the Combustion Centrifuge while it is at high RPMs will result in additional stress build up.  If turned off while not stressed, the machine will automatically start to brake, and reduce RPMs in a controlled manner.\n\t  ",
      "PrefabName": "StructureCombustionCentrifuge",
      "PrefabHash": 1238905683,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Programmable Chip",
          "SlotType": "ProgrammableChip",
          "SlotIndex": "2"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureInput><color=orange>PressureInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureInput><color=orange>TemperatureInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenInput><color=orange>RatioOxygenInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideInput><color=orange>RatioCarbonDioxideInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenInput><color=orange>RatioNitrogenInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantInput><color=orange>RatioPollutantInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesInput><color=orange>RatioVolatilesInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterInput><color=orange>RatioWaterInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideInput><color=orange>RatioNitrousOxideInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesInput><color=orange>TotalMolesInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureOutput><color=orange>PressureOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureOutput><color=orange>TemperatureOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenOutput><color=orange>RatioOxygenOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideOutput><color=orange>RatioCarbonDioxideOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenOutput><color=orange>RatioNitrogenOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantOutput><color=orange>RatioPollutantOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesOutput><color=orange>RatioVolatilesOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterOutput><color=orange>RatioWaterOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideOutput><color=orange>RatioNitrousOxideOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesOutput><color=orange>TotalMolesOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionInput><color=orange>CombustionInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionOutput><color=orange>CombustionOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionLimiter><color=orange>CombustionLimiter</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeThrottle><color=orange>Throttle</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRpm><color=orange>Rpm</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeStress><color=orange>Stress</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "5"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {},
          "2": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "PressureInput": "Read",
          "TemperatureInput": "Read",
          "RatioOxygenInput": "Read",
          "RatioCarbonDioxideInput": "Read",
          "RatioNitrogenInput": "Read",
          "RatioPollutantInput": "Read",
          "RatioVolatilesInput": "Read",
          "RatioWaterInput": "Read",
          "RatioNitrousOxideInput": "Read",
          "TotalMolesInput": "Read",
          "PressureOutput": "Read",
          "TemperatureOutput": "Read",
          "RatioOxygenOutput": "Read",
          "RatioCarbonDioxideOutput": "Read",
          "RatioNitrogenOutput": "Read",
          "RatioPollutantOutput": "Read",
          "RatioVolatilesOutput": "Read",
          "RatioWaterOutput": "Read",
          "RatioNitrousOxideOutput": "Read",
          "TotalMolesOutput": "Read",
          "CombustionInput": "Read",
          "CombustionOutput": "Read",
          "CombustionLimiter": "ReadWrite",
          "Throttle": "ReadWrite",
          "Rpm": "Read",
          "Stress": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ]
        ],
        "DevicesLength": 2,
        "HasReagents": true,
        "HasAtmosphere": true,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingMotherboardComms",
      "Title": "Communications Motherboard",
      "Description": "When placed in a <link=ThingStructureComputer><color=green>Computer</color></link> and connected to a <link=ThingLandingpad_DataConnectionPiece><color=green>Landingpad Data And Power</color></link>, a <link=ThingStructureSatelliteDish><color=green>Medium Satellite Dish</color></link>, and a <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link> allows Stationeers to trade with suppliers. Adjust the horizontal and vertical attributes of the <link=ThingStructureSatelliteDish><color=green>Medium Satellite Dish</color></link> either directly or through logic. You need a communications signal of 95% or above to establish reliable communications with a trader. A minimum of a 3x3 clear pad area with a <link=ThingLandingpad_CenterPiece01><color=green>Landingpad Center</color></link> at the center is required for a trader to land.",
      "PrefabName": "MotherboardComms",
      "PrefabHash": -337075633,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Motherboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureCompositeCladdingAngledCornerInnerLongL",
      "Title": "Composite Cladding (Angled Corner Inner Long L)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingAngledCornerInnerLongL",
      "PrefabHash": 947705066,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingAngledCornerInnerLongR",
      "Title": "Composite Cladding (Angled Corner Inner Long R)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingAngledCornerInnerLongR",
      "PrefabHash": -1032590967,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingAngledCornerInnerLong",
      "Title": "Composite Cladding (Angled Corner Inner Long)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingAngledCornerInnerLong",
      "PrefabHash": -1417912632,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingAngledCornerInner",
      "Title": "Composite Cladding (Angled Corner Inner)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingAngledCornerInner",
      "PrefabHash": -1841871763,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingAngledCorner",
      "Title": "Composite Cladding (Angled Corner)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingAngledCorner",
      "PrefabHash": -69685069,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingAngled",
      "Title": "Composite Cladding (Angled)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingAngled",
      "PrefabHash": -1513030150,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingCylindricalPanel",
      "Title": "Composite Cladding (Cylindrical Panel)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingCylindricalPanel",
      "PrefabHash": 1077151132,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingCylindrical",
      "Title": "Composite Cladding (Cylindrical)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingCylindrical",
      "PrefabHash": 212919006,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingAngledCornerLong",
      "Title": "Composite Cladding (Long Angled Corner)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingAngledCornerLong",
      "PrefabHash": 850558385,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingAngledCornerLongR",
      "Title": "Composite Cladding (Long Angled Mirrored Corner)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingAngledCornerLongR",
      "PrefabHash": -348918222,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingAngledLong",
      "Title": "Composite Cladding (Long Angled)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingAngledLong",
      "PrefabHash": -387546514,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingPanel",
      "Title": "Composite Cladding (Panel)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingPanel",
      "PrefabHash": 1997436771,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingRoundedCornerInner",
      "Title": "Composite Cladding (Rounded Corner Inner)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingRoundedCornerInner",
      "PrefabHash": 110184667,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingRoundedCorner",
      "Title": "Composite Cladding (Rounded Corner)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingRoundedCorner",
      "PrefabHash": 1951525046,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingRounded",
      "Title": "Composite Cladding (Rounded)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingRounded",
      "PrefabHash": -259357734,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingSphericalCap",
      "Title": "Composite Cladding (Spherical Cap)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingSphericalCap",
      "PrefabHash": 534213209,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingSphericalCorner",
      "Title": "Composite Cladding (Spherical Corner)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingSphericalCorner",
      "PrefabHash": 1751355139,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeCladdingSpherical",
      "Title": "Composite Cladding (Spherical)",
      "Description": "",
      "PrefabName": "StructureCompositeCladdingSpherical",
      "PrefabHash": 139107321,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeDoor",
      "Title": "Composite Door",
      "Description": "<link=Recurso><color=#0080FFFF>Recurso's</color></link> composite doors are rated to 300kPa, which is more than sufficient for most purposes they were designed for. However, steep pressure differentials are not your friend.",
      "PrefabName": "StructureCompositeDoor",
      "PrefabHash": -793837322,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCompositeFloorGrating",
      "Title": "Composite Floor Grating",
      "Description": "While aesthetics rank low on the ladder of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> concerns, composite gratings allow the concealment of unsightly cables on floors, walls and ceilings.",
      "PrefabName": "StructureCompositeFloorGrating",
      "PrefabHash": 324868581,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeFloorGrating2",
      "Title": "Composite Floor Grating  (Type 2)",
      "Description": "",
      "PrefabName": "StructureCompositeFloorGrating2",
      "PrefabHash": -895027741,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeFloorGrating3",
      "Title": "Composite Floor Grating  (Type 3)",
      "Description": "",
      "PrefabName": "StructureCompositeFloorGrating3",
      "PrefabHash": -1113471627,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeFloorGrating4",
      "Title": "Composite Floor Grating  (Type 4)",
      "Description": "",
      "PrefabName": "StructureCompositeFloorGrating4",
      "PrefabHash": 600133846,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeFloorGratingOpen",
      "Title": "Composite Floor Grating Open",
      "Description": "",
      "PrefabName": "StructureCompositeFloorGratingOpen",
      "PrefabHash": 2109695912,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeFloorGratingOpenRotated",
      "Title": "Composite Floor Grating Open Rotated",
      "Description": "",
      "PrefabName": "StructureCompositeFloorGratingOpenRotated",
      "PrefabHash": 882307910,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingCompositeRollCover",
      "Title": "Composite Roll Cover",
      "Description": "0.Operate\n1.Logic",
      "PrefabName": "CompositeRollCover",
      "PrefabHash": 1228794916,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCompositeWall",
      "Title": "Composite Wall (Type 1)",
      "Description": "Air-tight and resistant to extreme temperatures, composite walls favor form over function, coming in a range of slightly different, functionally identical varieties.",
      "PrefabName": "StructureCompositeWall",
      "PrefabHash": 1237302061,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeWall02",
      "Title": "Composite Wall (Type 2)",
      "Description": "",
      "PrefabName": "StructureCompositeWall02",
      "PrefabHash": 718343384,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeWall03",
      "Title": "Composite Wall (Type 3)",
      "Description": "",
      "PrefabName": "StructureCompositeWall03",
      "PrefabHash": 1574321230,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeWall04",
      "Title": "Composite Wall (Type 4)",
      "Description": "",
      "PrefabName": "StructureCompositeWall04",
      "PrefabHash": -1011701267,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeWindow",
      "Title": "Composite Window",
      "Description": "Air-tight and resistant to extreme temperatures, composite walls come in several charming, near identical varieties - reflecting their designer's focus on form over function.",
      "PrefabName": "StructureCompositeWindow",
      "PrefabHash": -2060571986,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureComputer",
      "Title": "Computer",
      "Description": "In some ways a relic, the 'Chonk R1' was designed by severely conflicted <link=Norsec><color=#0080FFFF>Norsec</color></link> technicians, who needed a unit that could operate with a wide range of <link=LogicUnitPage><color=#0080FFFF>motherboards</color></link>, while also enduring the worst a new Cadet could throw at it.\nThe result is a machine described by some as 'the only PC likely to survive our collision with a black hole', while other, less appreciative users regard it as sharing most of its technological DNA with a cheese grater.\nCompatible motherboards:\n- <link=ThingMotherboardLogic><color=green>Logic Motherboard</color></link>\n- <link=ThingMotherboardManufacturing><color=green>Manufacturing Motherboard</color></link>\n- <link=ThingMotherboardSorter><color=green>Sorter Motherboard</color></link>\n- <link=ThingMotherboardComms><color=green>Communications Motherboard</color></link>\n- <link=ThingMotherboardProgrammableChip><color=green>IC Editor Motherboard</color></link>",
      "PrefabName": "StructureComputer",
      "PrefabHash": -626563514,
      "SlotInserts": [
        {
          "SlotName": "Data Disk",
          "SlotType": "DataDisk",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Data Disk",
          "SlotType": "DataDisk",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Motherboard",
          "SlotType": "Motherboard",
          "SlotIndex": "2"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {},
          "2": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCondensationChamber",
      "Title": "Condensation Chamber",
      "Description": "A device for safely condensing gasses into liquids. Liquids and Gasses will both exist safely inside the device. The Chamber will pressurise using its in-built pressure regulator to the target set by the setting wheel.\n        The secondary gas input on the left is a heat-exchanger input and allows for heat exchange between the secondary input pipe and the internal atmosphere of the Condensation Chamber.\n        Paired with <link=ThingStructureEvaporationChamber><color=green>Evaporation Chamber</color></link> Stationeers can exploit the phase change properties of gases to build a DIY air conditioner.",
      "PrefabName": "StructureCondensationChamber",
      "PrefabHash": 1420719315,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input2",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input2"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCondensationValve",
      "Title": "Condensation Valve",
      "Description": "Allows for the removal of any liquids from a gas pipe into a liquid pipe. Only allows liquids to pass in one direction.",
      "PrefabName": "StructureCondensationValve",
      "PrefabHash": -965741795,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Output"
          ],
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemCookedCondensedMilk",
      "Title": "Condensed Milk",
      "Description": "A high-nutrient cooked food, which can be canned.",
      "PrefabName": "ItemCookedCondensedMilk",
      "PrefabHash": 1715917521,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 10.0,
        "Ingredient": true,
        "Reagents": {
          "Milk": 100.0
        }
      }
    },
    {
      "Key": "ThingCartridgeConfiguration",
      "Title": "Configuration",
      "Description": "",
      "PrefabName": "CartridgeConfiguration",
      "PrefabHash": -932136011,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Cartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureConsole",
      "Title": "Console",
      "Description": "This <link=Norsec><color=#0080FFFF>Norsec-designed</color></link> control box manages devices such as the <link=ThingStructureActiveVent><color=green>Active Vent</color></link>, <link=ThingStructurePassiveVent><color=green>Passive Vent</color></link>, <link=ThingStructureGasSensor><color=green>Gas Sensor</color></link> and <link=ThingStructureCompositeDoor><color=green>Composite Door</color></link>, depending on which <link=LogicPage><color=#0080FFFF>circuitboard</color></link> is inserted into the unit. It has a shared data/power port.\nA completed console displays all devices connected to the current power network. Any devices not related to the installed circuitboard will be greyed-out and inoperable. Consoles are locked once a <link=ThingItemDataDisk><color=green>Data Disk</color></link> is removed.",
      "PrefabName": "StructureConsole",
      "PrefabHash": 235638270,
      "SlotInserts": [
        {
          "SlotName": "Circuit Board",
          "SlotType": "Circuitboard",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Data Disk",
          "SlotType": "DataDisk",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureConsoleDual",
      "Title": "Console Dual",
      "Description": "This <link=Norsec><color=#0080FFFF>Norsec-designed</color></link> control box manages devices such as the <link=ThingStructureActiveVent><color=green>Active Vent</color></link>, <link=ThingStructureGasSensor><color=green>Gas Sensor</color></link>, <link=ThingStructureCompositeDoor><color=green>Composite Door</color></link> and others, depending on which <link=LogicPage><color=#0080FFFF>circuitboard</color></link> is inserted into the unit. It has separate data and power ports.\nA completed console displays all devices connected to the current power network. Any devices not related to the installed circuitboard will be greyed-out and inoperable. Consoles are locked once a <link=ThingItemDataDisk><color=green>Data Disk</color></link> is removed.",
      "PrefabName": "StructureConsoleDual",
      "PrefabHash": -722284333,
      "SlotInserts": [
        {
          "SlotName": "Circuit Board",
          "SlotType": "Circuitboard",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Data Disk",
          "SlotType": "DataDisk",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureConsoleMonitor",
      "Title": "Console Monitor",
      "Description": "This <link=Norsec><color=#0080FFFF>Norsec-designed</color></link> control box manages devices such as the <link=ThingStructureActiveVent><color=green>Active Vent</color></link>, <link=ThingStructurePassiveVent><color=green>Passive Vent</color></link>, <link=ThingStructureGasSensor><color=green>Gas Sensor</color></link>, <link=ThingItemSecurityCamera><color=green>Security Camera</color></link> and <link=ThingStructureCompositeDoor><color=green>Composite Door</color></link>, depending on which <link=LogicPage><color=#0080FFFF>circuitboard</color></link> is inserted into the unit. It has a shared data/power port, and a charming sloped interface.\nA completed console displays all devices connected to the current power network. Any devices not related to the installed circuitboard will be greyed-out and inoperable. Consoles are locked once a <link=ThingItemDataDisk><color=green>Data Disk</color></link> is removed.",
      "PrefabName": "StructureConsoleMonitor",
      "PrefabHash": 801677497,
      "SlotInserts": [
        {
          "SlotName": "Circuit Board",
          "SlotType": "Circuitboard",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Data Disk",
          "SlotType": "DataDisk",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCrateMount",
      "Title": "Container Mount",
      "Description": "",
      "PrefabName": "StructureCrateMount",
      "PrefabHash": -733500083,
      "SlotInserts": [
        {
          "SlotName": "Container Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureControlChair",
      "Title": "Control Chair",
      "Description": "Once, these chairs were the heart of space-going behemoths. Now, they're items of nostalgia built only by a handful of Stationeers with a sense of history. In other words, kitsch.",
      "PrefabName": "StructureControlChair",
      "PrefabHash": -1961153710,
      "SlotInserts": [
        {
          "SlotName": "Entity",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionX><color=orange>PositionX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionY><color=orange>PositionY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionZ><color=orange>PositionZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityMagnitude><color=orange>VelocityMagnitude</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityRelativeX><color=orange>VelocityRelativeX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityRelativeY><color=orange>VelocityRelativeY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityRelativeZ><color=orange>VelocityRelativeZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "PositionX": "Read",
          "PositionY": "Read",
          "PositionZ": "Read",
          "VelocityMagnitude": "Read",
          "VelocityRelativeX": "Read",
          "VelocityRelativeY": "Read",
          "VelocityRelativeZ": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemCookedCorn",
      "Title": "Cooked Corn",
      "Description": "A high-nutrient cooked food, which can be canned.",
      "PrefabName": "ItemCookedCorn",
      "PrefabHash": 1344773148,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 10.0,
        "Ingredient": true,
        "Reagents": {
          "Corn": 1.0
        }
      }
    },
    {
      "Key": "ThingItemCookedMushroom",
      "Title": "Cooked Mushroom",
      "Description": "A high-nutrient cooked food, which can be canned.",
      "PrefabName": "ItemCookedMushroom",
      "PrefabHash": -1076892658,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 10.0,
        "Ingredient": true,
        "Reagents": {
          "Mushroom": 1.0
        }
      }
    },
    {
      "Key": "ThingItemCookedPumpkin",
      "Title": "Cooked Pumpkin",
      "Description": "A high-nutrient cooked food, which can be canned.",
      "PrefabName": "ItemCookedPumpkin",
      "PrefabHash": 1849281546,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 10.0,
        "Ingredient": true,
        "Reagents": {
          "Pumpkin": 1.0
        }
      }
    },
    {
      "Key": "ThingItemCookedRice",
      "Title": "Cooked Rice",
      "Description": "A high-nutrient cooked food, which can be canned.",
      "PrefabName": "ItemCookedRice",
      "PrefabHash": 2013539020,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 10.0,
        "Ingredient": true,
        "Reagents": {
          "Rice": 1.0
        }
      }
    },
    {
      "Key": "ThingItemCookedSoybean",
      "Title": "Cooked Soybean",
      "Description": "A high-nutrient cooked food, which can be canned.",
      "PrefabName": "ItemCookedSoybean",
      "PrefabHash": 1353449022,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 10.0,
        "Ingredient": true,
        "Reagents": {
          "Soy": 5.0
        }
      }
    },
    {
      "Key": "ThingItemCookedTomato",
      "Title": "Cooked Tomato",
      "Description": "A high-nutrient cooked food, which can be canned.",
      "PrefabName": "ItemCookedTomato",
      "PrefabHash": -709086714,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 10.0,
        "Ingredient": true,
        "Reagents": {
          "Tomato": 1.0
        }
      }
    },
    {
      "Key": "ThingItemCorn",
      "Title": "Corn",
      "Description": "A long growth time staple crop. Its low requirement for darkness allows for accelerated growing if provided with extra light.",
      "PrefabName": "ItemCorn",
      "PrefabHash": 258339687,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 20.0,
        "Ingredient": true,
        "Reagents": {
          "Corn": 1.0
        }
      }
    },
    {
      "Key": "ThingSeedBag_Corn",
      "Title": "Corn Seeds",
      "Description": "Grow a <link=ThingItemCorn><color=green>Corn</color></link>.",
      "PrefabName": "SeedBag_Corn",
      "PrefabHash": -1290755415,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemCornSoup",
      "Title": "Corn Soup",
      "Description": "Made using <link=ThingItemCookedCorn><color=green>Cooked Corn</color></link> and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link> in a <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link> or <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link>. Faily high in nutrition, canned food does not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
      "PrefabName": "ItemCornSoup",
      "PrefabHash": 545034114,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingStructureCornerLocker",
      "Title": "Corner Locker",
      "Description": "",
      "PrefabName": "StructureCornerLocker",
      "PrefabHash": -1968255729,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePassthroughHeatExchangerGasToGas",
      "Title": "CounterFlow Heat Exchanger - Gas + Gas",
      "Description": "Exchange heat from one pipe network to another. By drawing down the pressure of the outputs with a pump or regulator and regulating input pressures, the temperatures of two counterflowing networks can be effectively exchanged.\n      Balancing the throughput of both inputs is key to creating a good exhange of temperatures.",
      "PrefabName": "StructurePassthroughHeatExchangerGasToGas",
      "PrefabHash": -1674187440,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input2",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Output2",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Input2"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "Pipe",
            "Output2"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePassthroughHeatExchangerGasToLiquid",
      "Title": "CounterFlow Heat Exchanger - Gas + Liquid",
      "Description": "Exchange heat from one pipe network to another. By drawing down the pressure of the outputs with a pump or regulator and regulating input pressures, the temperatures of two counterflowing networks can be effectively exchanged.\n        Balancing the throughput of both inputs is key to creating a good exhange of temperatures.",
      "PrefabName": "StructurePassthroughHeatExchangerGasToLiquid",
      "PrefabHash": 1928991265,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input2",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Liquid Output2",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "PipeLiquid",
            "Input2"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "PipeLiquid",
            "Output2"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePassthroughHeatExchangerLiquidToLiquid",
      "Title": "CounterFlow Heat Exchanger - Liquid + Liquid",
      "Description": "Exchange heat from one pipe network to another. By drawing down the pressure of the outputs with a pump or regulator and regulating input pressures, the temperatures of two counterflowing networks can be effectively exchanged.\n        Balancing the throughput of both inputs is key to creating a good exchange of temperatures.",
      "PrefabName": "StructurePassthroughHeatExchangerLiquidToLiquid",
      "PrefabHash": -1472829583,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input2",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Liquid Output2",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Input2"
          ],
          [
            "PipeLiquid",
            "Output"
          ],
          [
            "PipeLiquid",
            "Output2"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingCrateMkII",
      "Title": "Crate Mk II",
      "Description": "A more heavily reinforced version of the iconic <link=ThingDynamicCrate><color=green>Dynamic Crate</color></link>, the Crate Mk II is resistant to incredibly high pressures and temperatures. Short of disposing of it in a black hole, the Mk II is about as safe as luggage gets.",
      "PrefabName": "CrateMkII",
      "PrefabHash": 8709219,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "9"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Storage"
      }
    },
    {
      "Key": "ThingItemCreditCard",
      "Title": "Credit Card",
      "Description": "",
      "PrefabName": "ItemCreditCard",
      "PrefabHash": -1756772618,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "CreditCard",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemCrowbar",
      "Title": "Crowbar",
      "Description": "<link=Recurso><color=#0080FFFF>Recurso's</color></link> entry-level crowbar is useful in a variety of everyday <link=Stationeers><color=#0080FFFF>Stationeer</color></link> settings, from opening <link=ThingStructureAreaPowerControl><color=green>Area Power Control</color></link>s and unpowered <link=ThingStructureAirlock><color=green>Airlock</color></link>s, to splatting pan-dimensional headcrabs, should the need arise.",
      "PrefabName": "ItemCrowbar",
      "PrefabHash": 856108234,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructureCryoTubeHorizontal",
      "Title": "Cryo Tube Horizontal",
      "Description": "The horizontal variant of the cryo tube. Will heal players and organs as well as revive dead players when provided with an atmosphere of Nitrogen below -150C.",
      "PrefabName": "StructureCryoTubeHorizontal",
      "PrefabHash": 1443059329,
      "SlotInserts": [
        {
          "SlotName": "Player",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeEntityState><color=orange>EntityState</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCryoTubeVertical",
      "Title": "Cryo Tube Vertical",
      "Description": "The vertical variant of the cryo tube. Will heal players and organs as well as revive dead players when provided with an atmosphere of Nitrogen below -150C.",
      "PrefabName": "StructureCryoTubeVertical",
      "PrefabHash": -1381321828,
      "SlotInserts": [
        {
          "SlotName": "Player",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeEntityState><color=orange>EntityState</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCryoTube",
      "Title": "CryoTube",
      "Description": "The exact operation of the Longsleep cryotube remains a commercial secret, with <link=Norsec><color=#0080FFFF>Norsec</color></link> merely licensing the design. Able to regenerate organ damage when supplied with power and an atmosphere, the Longsleep is a minor miracle of modern medical technology.",
      "PrefabName": "StructureCryoTube",
      "PrefabHash": 1938254586,
      "SlotInserts": [
        {
          "SlotName": "Bed",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeEntityState><color=orange>EntityState</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemSuitModCryogenicUpgrade",
      "Title": "Cryogenic Suit Upgrade",
      "Description": "Enables suits with basic cooling functionality to work with cryogenic liquid.",
      "PrefabName": "ItemSuitModCryogenicUpgrade",
      "PrefabHash": -1274308304,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "SuitMod",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemFilterFern",
      "Title": "Darga Fern",
      "Description": "A fern adapted by <link=Agrizero><color=#0080FFFF>Agrizero</color></link>to process a much greater volume of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> into <link=GasOxygen><color=#44AD83>Oxygen</color></link> than an average plant.",
      "PrefabName": "ItemFilterFern",
      "PrefabHash": 266654416,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemDataDisk",
      "Title": "Data Disk",
      "Description": "",
      "PrefabName": "ItemDataDisk",
      "PrefabHash": 1005843700,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "DataDisk",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureDaylightSensor",
      "Title": "Daylight Sensor",
      "Description": "Daylight sensors provide data on whether the current region of your base is in sunlight, and report the exact solar angle. Note that the orientation of the sensor alters the reported solar angle, while <link=LogicPage><color=#0080FFFF>Logic</color></link> systems can be used to offset it.",
      "PrefabName": "StructureDaylightSensor",
      "PrefabHash": 1076425094,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSolarAngle><color=orange>SolarAngle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSolarIrradiance><color=orange>SolarIrradiance</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Default",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Horizontal",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Vertical",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Mode": "ReadWrite",
          "Activate": "ReadWrite",
          "Horizontal": "Read",
          "Vertical": "Read",
          "SolarAngle": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "SolarIrradiance": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingDecayedFood",
      "Title": "Decayed Food",
      "Description": "When your <link=OrganicPage><color=#0080FFFF>food</color></link> decays, it turns into this. <link=ODA><color=#0080FFFF>ODA</color></link> scientists have attempted to determine the exact constituents of this substance, but it remains evasive and mysterious. Suffice to say, eating it is a bad idea. Research has determined, however, that The exact speed of decay varies individually by:\n\n- TEMPERATURE - Refrigeration will slow decay, but many foods will be damaged by exposure to extreme low pressure, as well as extreme heat. The optimum temperature is 0 kelvin (-272 C).\n\n- FOOD TYPE - Each <link=OrganicPage><color=#0080FFFF>food</color></link> type has its own decay properties. <link=ThingItemTomatoSoup><color=green>Tomato Soup</color></link> lasts a lot longer than a <link=ThingItemTomato><color=green>Tomato</color></link>, for instance.\n\n- PRESSURE - Food decays faster when the pressure drops below 1 atmosphere (101kPa). Decay happens exponentially more quickly as the atmosphere approaches a perfect vacuum. There is no effect from higher pressures. \n\n- ATMOSPHERE - Different gases can slow and accelerate the decay process. The process will take account of respective gas ratios in mixed atmospheres in calculating the decay modifier. The following rates apply across all foods:\n\n> <link=GasOxygen><color=#44AD83>Oxygen</color></link> x 1.3\n> <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> x 0.6\n> <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> x 0.8\n> <link=GasVolatiles><color=#44AD83>Volatiles</color></link> x 1\n> <link=GasPollutant><color=#44AD83>Pollutant</color></link> x 3\n> <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> x 1.5\n> <link=GasSteam><color=#44AD83>Steam</color></link> x 2\n> Vacuum (see PRESSURE above)\n\n",
      "PrefabName": "DecayedFood",
      "PrefabHash": 1531087544,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 25.0
      }
    },
    {
      "Key": "ThingStructureDeepMiner",
      "Title": "Deep Miner",
      "Description": "Drills through terrain until it hits bedrock. Once inside bedrock <link=ThingItemDirtyOre><color=green>Dirty Ore</color></link> is produced roughly every 90s",
      "PrefabName": "StructureDeepMiner",
      "PrefabHash": 265720906,
      "SlotInserts": [
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingDeviceStepUnit",
      "Title": "Device Step Unit",
      "Description": "0.C-2\n1.C#-2\n2.D-2\n3.D#-2\n4.E-2\n5.F-2\n6.F#-2\n7.G-2\n8.G#-2\n9.A-2\n10.A#-2\n11.B-2\n12.C-1\n13.C#-1\n14.D-1\n15.D#-1\n16.E-1\n17.F-1\n18.F#-1\n19.G-1\n20.G#-1\n21.A-1\n22.A#-1\n23.B-1\n24.C0\n25.C#0\n26.D0\n27.D#0\n28.E0\n29.F0\n30.F#0\n31.G0\n32.G#0\n33.A0\n34.A#0\n35.B0\n36.C1\n37.C#1\n38.D1\n39.D#1\n40.E1\n41.F1\n42.F#1\n43.G1\n44.G#1\n45.A1\n46.A#1\n47.B1\n48.C2\n49.C#2\n50.D2\n51.D#2\n52.E2\n53.F2\n54.F#2\n55.G2\n56.G#2\n57.A2\n58.A#2\n59.B2\n60.C3\n61.C#3\n62.D3\n63.D#3\n64.E3\n65.F3\n66.F#3\n67.G3\n68.G#3\n69.A3\n70.A#3\n71.B3\n72.C4\n73.C#4\n74.D4\n75.D#4\n76.E4\n77.F4\n78.F#4\n79.G4\n80.G#4\n81.A4\n82.A#4\n83.B4\n84.C5\n85.C#5\n86.D5\n87.D#5\n88.E5\n89.F5\n90.F#5\n91.G5 \n92.G#5\n93.A5\n94.A#5\n95.B5\n96.C6\n97.C#6\n98.D6\n99.D#6\n100.E6\n101.F6\n102.F#6\n103.G6\n104.G#6\n105.A6\n106.A#6\n107.B6\n108.C7\n109.C#7\n110.D7\n111.D#7\n112.E7\n113.F7\n114.F#7\n115.G7\n116.G#7\n117.A7\n118.A#7\n119.B7\n120.C8\n121.C#8\n122.D8\n123.D#8\n124.E8\n125.F8\n126.F#8\n127.G8",
      "PrefabName": "DeviceStepUnit",
      "PrefabHash": 1762696475,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "C-2",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "C#-2",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "D-2",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "D#-2",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "E-2",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "F-2",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "F#-2",
          "LogicAccessTypes": "6"
        },
        {
          "LogicName": "G-2",
          "LogicAccessTypes": "7"
        },
        {
          "LogicName": "G#-2",
          "LogicAccessTypes": "8"
        },
        {
          "LogicName": "A-2",
          "LogicAccessTypes": "9"
        },
        {
          "LogicName": "A#-2",
          "LogicAccessTypes": "10"
        },
        {
          "LogicName": "B-2",
          "LogicAccessTypes": "11"
        },
        {
          "LogicName": "C-1",
          "LogicAccessTypes": "12"
        },
        {
          "LogicName": "C#-1",
          "LogicAccessTypes": "13"
        },
        {
          "LogicName": "D-1",
          "LogicAccessTypes": "14"
        },
        {
          "LogicName": "D#-1",
          "LogicAccessTypes": "15"
        },
        {
          "LogicName": "E-1",
          "LogicAccessTypes": "16"
        },
        {
          "LogicName": "F-1",
          "LogicAccessTypes": "17"
        },
        {
          "LogicName": "F#-1",
          "LogicAccessTypes": "18"
        },
        {
          "LogicName": "G-1",
          "LogicAccessTypes": "19"
        },
        {
          "LogicName": "G#-1",
          "LogicAccessTypes": "20"
        },
        {
          "LogicName": "A-1",
          "LogicAccessTypes": "21"
        },
        {
          "LogicName": "A#-1",
          "LogicAccessTypes": "22"
        },
        {
          "LogicName": "B-1",
          "LogicAccessTypes": "23"
        },
        {
          "LogicName": "C0",
          "LogicAccessTypes": "24"
        },
        {
          "LogicName": "C#0",
          "LogicAccessTypes": "25"
        },
        {
          "LogicName": "D0",
          "LogicAccessTypes": "26"
        },
        {
          "LogicName": "D#0",
          "LogicAccessTypes": "27"
        },
        {
          "LogicName": "E0",
          "LogicAccessTypes": "28"
        },
        {
          "LogicName": "F0",
          "LogicAccessTypes": "29"
        },
        {
          "LogicName": "F#0",
          "LogicAccessTypes": "30"
        },
        {
          "LogicName": "G0",
          "LogicAccessTypes": "31"
        },
        {
          "LogicName": "G#0",
          "LogicAccessTypes": "32"
        },
        {
          "LogicName": "A0",
          "LogicAccessTypes": "33"
        },
        {
          "LogicName": "A#0",
          "LogicAccessTypes": "34"
        },
        {
          "LogicName": "B0",
          "LogicAccessTypes": "35"
        },
        {
          "LogicName": "C1",
          "LogicAccessTypes": "36"
        },
        {
          "LogicName": "C#1",
          "LogicAccessTypes": "37"
        },
        {
          "LogicName": "D1",
          "LogicAccessTypes": "38"
        },
        {
          "LogicName": "D#1",
          "LogicAccessTypes": "39"
        },
        {
          "LogicName": "E1",
          "LogicAccessTypes": "40"
        },
        {
          "LogicName": "F1",
          "LogicAccessTypes": "41"
        },
        {
          "LogicName": "F#1",
          "LogicAccessTypes": "42"
        },
        {
          "LogicName": "G1",
          "LogicAccessTypes": "43"
        },
        {
          "LogicName": "G#1",
          "LogicAccessTypes": "44"
        },
        {
          "LogicName": "A1",
          "LogicAccessTypes": "45"
        },
        {
          "LogicName": "A#1",
          "LogicAccessTypes": "46"
        },
        {
          "LogicName": "B1",
          "LogicAccessTypes": "47"
        },
        {
          "LogicName": "C2",
          "LogicAccessTypes": "48"
        },
        {
          "LogicName": "C#2",
          "LogicAccessTypes": "49"
        },
        {
          "LogicName": "D2",
          "LogicAccessTypes": "50"
        },
        {
          "LogicName": "D#2",
          "LogicAccessTypes": "51"
        },
        {
          "LogicName": "E2",
          "LogicAccessTypes": "52"
        },
        {
          "LogicName": "F2",
          "LogicAccessTypes": "53"
        },
        {
          "LogicName": "F#2",
          "LogicAccessTypes": "54"
        },
        {
          "LogicName": "G2",
          "LogicAccessTypes": "55"
        },
        {
          "LogicName": "G#2",
          "LogicAccessTypes": "56"
        },
        {
          "LogicName": "A2",
          "LogicAccessTypes": "57"
        },
        {
          "LogicName": "A#2",
          "LogicAccessTypes": "58"
        },
        {
          "LogicName": "B2",
          "LogicAccessTypes": "59"
        },
        {
          "LogicName": "C3",
          "LogicAccessTypes": "60"
        },
        {
          "LogicName": "C#3",
          "LogicAccessTypes": "61"
        },
        {
          "LogicName": "D3",
          "LogicAccessTypes": "62"
        },
        {
          "LogicName": "D#3",
          "LogicAccessTypes": "63"
        },
        {
          "LogicName": "E3",
          "LogicAccessTypes": "64"
        },
        {
          "LogicName": "F3",
          "LogicAccessTypes": "65"
        },
        {
          "LogicName": "F#3",
          "LogicAccessTypes": "66"
        },
        {
          "LogicName": "G3",
          "LogicAccessTypes": "67"
        },
        {
          "LogicName": "G#3",
          "LogicAccessTypes": "68"
        },
        {
          "LogicName": "A3",
          "LogicAccessTypes": "69"
        },
        {
          "LogicName": "A#3",
          "LogicAccessTypes": "70"
        },
        {
          "LogicName": "B3",
          "LogicAccessTypes": "71"
        },
        {
          "LogicName": "C4",
          "LogicAccessTypes": "72"
        },
        {
          "LogicName": "C#4",
          "LogicAccessTypes": "73"
        },
        {
          "LogicName": "D4",
          "LogicAccessTypes": "74"
        },
        {
          "LogicName": "D#4",
          "LogicAccessTypes": "75"
        },
        {
          "LogicName": "E4",
          "LogicAccessTypes": "76"
        },
        {
          "LogicName": "F4",
          "LogicAccessTypes": "77"
        },
        {
          "LogicName": "F#4",
          "LogicAccessTypes": "78"
        },
        {
          "LogicName": "G4",
          "LogicAccessTypes": "79"
        },
        {
          "LogicName": "G#4",
          "LogicAccessTypes": "80"
        },
        {
          "LogicName": "A4",
          "LogicAccessTypes": "81"
        },
        {
          "LogicName": "A#4",
          "LogicAccessTypes": "82"
        },
        {
          "LogicName": "B4",
          "LogicAccessTypes": "83"
        },
        {
          "LogicName": "C5",
          "LogicAccessTypes": "84"
        },
        {
          "LogicName": "C#5",
          "LogicAccessTypes": "85"
        },
        {
          "LogicName": "D5",
          "LogicAccessTypes": "86"
        },
        {
          "LogicName": "D#5",
          "LogicAccessTypes": "87"
        },
        {
          "LogicName": "E5",
          "LogicAccessTypes": "88"
        },
        {
          "LogicName": "F5",
          "LogicAccessTypes": "89"
        },
        {
          "LogicName": "F#5",
          "LogicAccessTypes": "90"
        },
        {
          "LogicName": "G5 ",
          "LogicAccessTypes": "91"
        },
        {
          "LogicName": "G#5",
          "LogicAccessTypes": "92"
        },
        {
          "LogicName": "A5",
          "LogicAccessTypes": "93"
        },
        {
          "LogicName": "A#5",
          "LogicAccessTypes": "94"
        },
        {
          "LogicName": "B5",
          "LogicAccessTypes": "95"
        },
        {
          "LogicName": "C6",
          "LogicAccessTypes": "96"
        },
        {
          "LogicName": "C#6",
          "LogicAccessTypes": "97"
        },
        {
          "LogicName": "D6",
          "LogicAccessTypes": "98"
        },
        {
          "LogicName": "D#6",
          "LogicAccessTypes": "99"
        },
        {
          "LogicName": "E6",
          "LogicAccessTypes": "100"
        },
        {
          "LogicName": "F6",
          "LogicAccessTypes": "101"
        },
        {
          "LogicName": "F#6",
          "LogicAccessTypes": "102"
        },
        {
          "LogicName": "G6",
          "LogicAccessTypes": "103"
        },
        {
          "LogicName": "G#6",
          "LogicAccessTypes": "104"
        },
        {
          "LogicName": "A6",
          "LogicAccessTypes": "105"
        },
        {
          "LogicName": "A#6",
          "LogicAccessTypes": "106"
        },
        {
          "LogicName": "B6",
          "LogicAccessTypes": "107"
        },
        {
          "LogicName": "C7",
          "LogicAccessTypes": "108"
        },
        {
          "LogicName": "C#7",
          "LogicAccessTypes": "109"
        },
        {
          "LogicName": "D7",
          "LogicAccessTypes": "110"
        },
        {
          "LogicName": "D#7",
          "LogicAccessTypes": "111"
        },
        {
          "LogicName": "E7",
          "LogicAccessTypes": "112"
        },
        {
          "LogicName": "F7",
          "LogicAccessTypes": "113"
        },
        {
          "LogicName": "F#7",
          "LogicAccessTypes": "114"
        },
        {
          "LogicName": "G7",
          "LogicAccessTypes": "115"
        },
        {
          "LogicName": "G#7",
          "LogicAccessTypes": "116"
        },
        {
          "LogicName": "A7",
          "LogicAccessTypes": "117"
        },
        {
          "LogicName": "A#7",
          "LogicAccessTypes": "118"
        },
        {
          "LogicName": "B7",
          "LogicAccessTypes": "119"
        },
        {
          "LogicName": "C8",
          "LogicAccessTypes": "120"
        },
        {
          "LogicName": "C#8",
          "LogicAccessTypes": "121"
        },
        {
          "LogicName": "D8",
          "LogicAccessTypes": "122"
        },
        {
          "LogicName": "D#8",
          "LogicAccessTypes": "123"
        },
        {
          "LogicName": "E8",
          "LogicAccessTypes": "124"
        },
        {
          "LogicName": "F8",
          "LogicAccessTypes": "125"
        },
        {
          "LogicName": "F#8",
          "LogicAccessTypes": "126"
        },
        {
          "LogicName": "G8",
          "LogicAccessTypes": "127"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Volume": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Power",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicDial",
      "Title": "Dial",
      "Description": "An assignable dial with up to 1000 modes.",
      "PrefabName": "StructureLogicDial",
      "PrefabHash": 554524804,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Mode": "ReadWrite",
          "Setting": "ReadWrite",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureDigitalValve",
      "Title": "Digital Valve",
      "Description": "The digital valve allows <link=Stationeers><color=#0080FFFF>Stationeers</color></link> to create <link=LogicPage><color=#0080FFFF>logic-controlled</color></link> valves and pipe networks.",
      "PrefabName": "StructureDigitalValve",
      "PrefabHash": -1280984102,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Output"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureDiodeSlide",
      "Title": "Diode Slide",
      "Description": "",
      "PrefabName": "StructureDiodeSlide",
      "PrefabHash": 576516101,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemDirtCanister",
      "Title": "Dirt Canister",
      "Description": "A container the will fill with Dirt when using a <link=ThingItemMiningDrill><color=green>Mining Drill</color></link> when placed inside a <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>. You can then use this <link=SlotDirtCanister><color=orange>Dirt Canister</color></link> with the <link=ThingItemTerrainManipulator><color=green>Terrain Manipulator</color></link> to adjust the terrain to suit your needs.",
      "PrefabName": "ItemDirtCanister",
      "PrefabHash": 902565329,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemSpaceOre",
      "Title": "Dirty Ore",
      "Description": "Ore mined from asteroids via the <link=ThingStructureRocketMiner><color=green>Rocket Miner</color></link> which then must be processed in the <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link>, or <link=ThingStructureCombustionCentrifuge><color=green>Combustion Centrifuge</color></link> to produce smeltable ores.",
      "PrefabName": "ItemSpaceOre",
      "PrefabHash": 2131916219,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemDirtyOre",
      "Title": "Dirty Ore",
      "Description": "Ore mined from bedrock via the <link=ThingStructureDeepMiner><color=green>Deep Miner</color></link> which then can be used in the <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link>, or <link=ThingStructureCombustionCentrifuge><color=green>Combustion Centrifuge</color></link>. Once processed, it produces ore in a ratio similar to the average found on the planet's surface. ",
      "PrefabName": "ItemDirtyOre",
      "PrefabHash": -1234745580,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Ores",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemDisposableBatteryCharger",
      "Title": "Disposable Battery Charger",
      "Description": "Consumable battery the recharges your suit battery. If used on a HEM-Droid it will recharge the HEM-Droids internal battery.",
      "PrefabName": "ItemDisposableBatteryCharger",
      "PrefabHash": -2124435700,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingStructureDockPortSide",
      "Title": "Dock (Port Side)",
      "Description": "",
      "PrefabName": "StructureDockPortSide",
      "PrefabHash": -137465079,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "None"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingCircuitboardDoorControl",
      "Title": "Door Control",
      "Description": "A basic tool of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> base construction, this circuit board provides a way to open and close a <link=ThingStructureCompositeDoor><color=green>Composite Door</color></link>, <link=ThingStructureBlastDoor><color=green>Blast Door</color></link> or <link=ThingStructureGlassDoor><color=green>Glass Door</color></link> remotely, when connected to a <link=ThingStructureConsole><color=green>Console</color></link>. This system can be further linked to <link=ThingStructureMotionSensor><color=green>Motion Sensor</color></link> to create automatic doors.",
      "PrefabName": "CircuitboardDoorControl",
      "PrefabHash": 855694771,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureSleeperVerticalDroid",
      "Title": "Droid Sleeper Vertical",
      "Description": "The Droid Sleeper will recharge robot batteries and equiped suit batteries if present. This sleeper variant is only safe for robots. Entering as a non robot character will cause you to take damage.",
      "PrefabName": "StructureSleeperVerticalDroid",
      "PrefabHash": 1382098999,
      "SlotInserts": [
        {
          "SlotName": "Player",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemDuctTape",
      "Title": "Duct Tape",
      "Description": "In the distant past, one of Earth's great champions taught a generation of 'Fix-It People' that duct tape was the answer to any problem. <link=Stationeers><color=#0080FFFF>Stationeers</color></link> have demonstrated that this is truth holds strong, so long as the problem is a damaged <link=ThingItemEvaSuit><color=green>Eva Suit</color></link>, <link=ThingItemJetpackBasic><color=green>Jetpack Basic</color></link>, <link=ThingItemSpaceHelmet><color=green>Space Helmet</color></link>, or even a <link=ThingStructureSolarPanel><color=green>Solar Panel</color></link>.\nTo use on yourself: put duct tape in your active hand, hold RIGHT MOUSE BUTTON to automatically repair damage.",
      "PrefabName": "ItemDuctTape",
      "PrefabHash": -1943134693,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingDynamicCrate",
      "Title": "Dynamic Crate",
      "Description": "The humble dynamic crate has become a symbol of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> invention and independence. With twelve slots and handles at either end for ease of carriage, it's both standard issue and critical kit for cadets and Commanders alike.",
      "PrefabName": "DynamicCrate",
      "PrefabHash": 1941079206,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "9"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Storage"
      }
    },
    {
      "Key": "ThingDynamicGasCanisterRocketFuel",
      "Title": "Dynamic Gas Canister Rocket Fuel",
      "Description": "",
      "PrefabName": "DynamicGasCanisterRocketFuel",
      "PrefabHash": -8883951,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemFertilizedEgg",
      "Title": "Egg",
      "Description": "To hatch it requires an incubation temperature of between 35 and 45 degrees Celsius and will hatch into a <link=ThingNpcChick><color=green>Chick</color></link>. If the egg is exposed to tepratures below 10 degrees it will no longer be viable.",
      "PrefabName": "ItemFertilizedEgg",
      "PrefabHash": -383972371,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Egg",
        "SortingClass": "Resources",
        "Ingredient": true,
        "Reagents": {
          "Egg": 1.0
        }
      }
    },
    {
      "Key": "ThingItemEggCarton",
      "Title": "Egg Carton",
      "Description": "Within, eggs reside in mysterious, marmoreal silence.",
      "PrefabName": "ItemEggCarton",
      "PrefabHash": -524289310,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "Egg",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "Egg",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "Egg",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "Egg",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "Egg",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "Egg",
          "SlotIndex": "5"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Storage"
      }
    },
    {
      "Key": "ThingStructureElectrolyzer",
      "Title": "Electrolyzer",
      "Description": "The <link=Norsec><color=#0080FFFF>Norsec-designed</color></link> Electrolyzer splits <link=GasWater><color=#44AD83>Water</color></link> into hydrogen and <link=GasOxygen><color=#44AD83>Oxygen</color></link>. Employing unknown proprietary technology, the device uses water's latent heat as the energy to drive the electrosis process. If there is a downside to this near-miraculous fission, it's that the device is limited by the quantity of power available, which is used to maintain the temperature output. In other words, the machine works best with hot gas.",
      "PrefabName": "StructureElectrolyzer",
      "PrefabHash": -1668992663,
      "SlotInserts": [
        {
          "SlotName": "Programmable Chip",
          "SlotType": "ProgrammableChip",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureInput><color=orange>PressureInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureInput><color=orange>TemperatureInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenInput><color=orange>RatioOxygenInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideInput><color=orange>RatioCarbonDioxideInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenInput><color=orange>RatioNitrogenInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantInput><color=orange>RatioPollutantInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesInput><color=orange>RatioVolatilesInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterInput><color=orange>RatioWaterInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideInput><color=orange>RatioNitrousOxideInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesInput><color=orange>TotalMolesInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureOutput><color=orange>PressureOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureOutput><color=orange>TemperatureOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenOutput><color=orange>RatioOxygenOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideOutput><color=orange>RatioCarbonDioxideOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenOutput><color=orange>RatioNitrogenOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantOutput><color=orange>RatioPollutantOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesOutput><color=orange>RatioVolatilesOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterOutput><color=orange>RatioWaterOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideOutput><color=orange>RatioNitrousOxideOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesOutput><color=orange>TotalMolesOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionInput><color=orange>CombustionInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionOutput><color=orange>CombustionOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Idle",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Active",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "PressureInput": "Read",
          "TemperatureInput": "Read",
          "RatioOxygenInput": "Read",
          "RatioCarbonDioxideInput": "Read",
          "RatioNitrogenInput": "Read",
          "RatioPollutantInput": "Read",
          "RatioVolatilesInput": "Read",
          "RatioWaterInput": "Read",
          "RatioNitrousOxideInput": "Read",
          "TotalMolesInput": "Read",
          "PressureOutput": "Read",
          "TemperatureOutput": "Read",
          "RatioOxygenOutput": "Read",
          "RatioCarbonDioxideOutput": "Read",
          "RatioNitrogenOutput": "Read",
          "RatioPollutantOutput": "Read",
          "RatioVolatilesOutput": "Read",
          "RatioWaterOutput": "Read",
          "RatioNitrousOxideOutput": "Read",
          "TotalMolesOutput": "Read",
          "CombustionInput": "Read",
          "CombustionOutput": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "DevicesLength": 2,
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemElectronicParts",
      "Title": "Electronic Parts",
      "Description": "",
      "PrefabName": "ItemElectronicParts",
      "PrefabHash": 731250882,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 20.0
      }
    },
    {
      "Key": "ThingElectronicPrinterMod",
      "Title": "Electronic Printer Mod",
      "Description": "Apply to an <link=ThingStructureElectronicsPrinter><color=green>Electronics Printer</color></link> with a <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link> or <link=ThingItemArcWelder><color=green>Arc Welder</color></link> to upgrade for increased processing speed and more recipe options.",
      "PrefabName": "ElectronicPrinterMod",
      "PrefabHash": -311170652,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureElectronicsPrinter",
      "Title": "Electronics Printer",
      "Description": "The electronic printer will create any <link=ElectronicPage><color=#0080FFFF>electronic</color></link> part you need. From circuit boards and electronic devices to solar panels. The choice is yours. Upgrade the device using a <link=ThingElectronicPrinterMod><color=green>Electronic Printer Mod</color></link> for additional recipes and faster processing speeds.",
      "PrefabName": "StructureElectronicsPrinter",
      "PrefabHash": 1307165496,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "Ingot",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRecipeHash><color=orange>RecipeHash</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCompletionRatio><color=orange>CompletionRatio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingElevatorCarrage",
      "Title": "Elevator",
      "Description": "",
      "PrefabName": "ElevatorCarrage",
      "PrefabHash": -110788403,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureElevatorLevelIndustrial",
      "Title": "Elevator Level",
      "Description": "",
      "PrefabName": "StructureElevatorLevelIndustrial",
      "PrefabHash": 2060648791,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeElevatorSpeed><color=orange>ElevatorSpeed</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeElevatorLevel><color=orange>ElevatorLevel</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ElevatorSpeed": "ReadWrite",
          "ElevatorLevel": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Elevator",
            "None"
          ],
          [
            "Elevator",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureElevatorLevelFront",
      "Title": "Elevator Level (Cabled)",
      "Description": "",
      "PrefabName": "StructureElevatorLevelFront",
      "PrefabHash": -827912235,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeElevatorSpeed><color=orange>ElevatorSpeed</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeElevatorLevel><color=orange>ElevatorLevel</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ElevatorSpeed": "ReadWrite",
          "ElevatorLevel": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Elevator",
            "None"
          ],
          [
            "Elevator",
            "None"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureElevatorShaftIndustrial",
      "Title": "Elevator Shaft",
      "Description": "",
      "PrefabName": "StructureElevatorShaftIndustrial",
      "PrefabHash": 1998354978,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeElevatorSpeed><color=orange>ElevatorSpeed</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeElevatorLevel><color=orange>ElevatorLevel</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "ElevatorSpeed": "ReadWrite",
          "ElevatorLevel": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Elevator",
            "None"
          ],
          [
            "Elevator",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureElevatorShaft",
      "Title": "Elevator Shaft (Cabled)",
      "Description": "",
      "PrefabName": "StructureElevatorShaft",
      "PrefabHash": 826144419,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeElevatorSpeed><color=orange>ElevatorSpeed</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeElevatorLevel><color=orange>ElevatorLevel</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ElevatorSpeed": "ReadWrite",
          "ElevatorLevel": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Elevator",
            "None"
          ],
          [
            "Elevator",
            "None"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemEmergencyAngleGrinder",
      "Title": "Emergency Angle Grinder",
      "Description": "",
      "PrefabName": "ItemEmergencyAngleGrinder",
      "PrefabHash": -351438780,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemEmergencyArcWelder",
      "Title": "Emergency Arc Welder",
      "Description": "",
      "PrefabName": "ItemEmergencyArcWelder",
      "PrefabHash": -1056029600,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemEmergencyCrowbar",
      "Title": "Emergency Crowbar",
      "Description": "",
      "PrefabName": "ItemEmergencyCrowbar",
      "PrefabHash": 976699731,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemEmergencyDrill",
      "Title": "Emergency Drill",
      "Description": "",
      "PrefabName": "ItemEmergencyDrill",
      "PrefabHash": -2052458905,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemEmergencyEvaSuit",
      "Title": "Emergency Eva Suit",
      "Description": "",
      "PrefabName": "ItemEmergencyEvaSuit",
      "PrefabHash": 1791306431,
      "SlotInserts": [
        {
          "SlotName": "Air Tank",
          "SlotType": "GasCanister",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Waste Tank",
          "SlotType": "GasCanister",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Life Support",
          "SlotType": "Battery",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "5"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Suit",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemEmergencyPickaxe",
      "Title": "Emergency Pickaxe",
      "Description": "",
      "PrefabName": "ItemEmergencyPickaxe",
      "PrefabHash": -1061510408,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemEmergencyScrewdriver",
      "Title": "Emergency Screwdriver",
      "Description": "",
      "PrefabName": "ItemEmergencyScrewdriver",
      "PrefabHash": 266099983,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemEmergencySpaceHelmet",
      "Title": "Emergency Space Helmet",
      "Description": "",
      "PrefabName": "ItemEmergencySpaceHelmet",
      "PrefabHash": 205916793,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeFlush><color=orange>Flush</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeSoundAlert><color=orange>SoundAlert</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "TotalMoles": "Read",
          "Volume": "ReadWrite",
          "RatioNitrousOxide": "Read",
          "Combustion": "Read",
          "Flush": "Write",
          "SoundAlert": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Item": {
        "SlotClass": "Helmet",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemEmergencyToolBelt",
      "Title": "Emergency Tool Belt",
      "Description": "",
      "PrefabName": "ItemEmergencyToolBelt",
      "PrefabHash": 1661941301,
      "SlotInserts": [
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "7"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Belt",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemEmergencyWireCutters",
      "Title": "Emergency Wire Cutters",
      "Description": "",
      "PrefabName": "ItemEmergencyWireCutters",
      "PrefabHash": 2102803952,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemEmergencyWrench",
      "Title": "Emergency Wrench",
      "Description": "",
      "PrefabName": "ItemEmergencyWrench",
      "PrefabHash": 162553030,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemEmptyCan",
      "Title": "Empty Can",
      "Description": "Used for making soups when combined with food in the <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link> or <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link>. Fairly high in nutrition, canned food does not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
      "PrefabName": "ItemEmptyCan",
      "PrefabHash": 1013818348,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0,
        "Ingredient": true,
        "Reagents": {
          "Steel": 1.0
        }
      }
    },
    {
      "Key": "ThingItemPlantEndothermic_Creative",
      "Title": "Endothermic Plant Creative",
      "Description": "",
      "PrefabName": "ItemPlantEndothermic_Creative",
      "PrefabHash": -1159179557,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingWeaponPistolEnergy",
      "Title": "Energy Pistol",
      "Description": "0.Stun\n1.Kill",
      "PrefabName": "WeaponPistolEnergy",
      "PrefabHash": -385323479,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Stun",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Kill",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingWeaponRifleEnergy",
      "Title": "Energy Rifle",
      "Description": "0.Stun\n1.Kill",
      "PrefabName": "WeaponRifleEnergy",
      "PrefabHash": 1154745374,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Stun",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Kill",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructureEngineMountTypeA1",
      "Title": "Engine Mount (Type A1)",
      "Description": "",
      "PrefabName": "StructureEngineMountTypeA1",
      "PrefabHash": 2035781224,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingEntityChick",
      "Title": "Entity Chick",
      "Description": "Once a chick is hatched, it gets hungry. It will eat soybeans, corn, and wheat, and lay eggs. Some will be fertilized, producing further chickens. Some will not.",
      "PrefabName": "EntityChick",
      "PrefabHash": 1730165908,
      "SlotInserts": [
        {
          "SlotName": "Brain",
          "SlotType": "Organ",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingEntityChickenBrown",
      "Title": "Entity Chicken Brown",
      "Description": "Like so many of its brethren, this is a chicken. A brown one. It will eat soybeans, corn, and wheat, and lay eggs. Some will be fertilized, producing further chickens. Some will not.",
      "PrefabName": "EntityChickenBrown",
      "PrefabHash": 334097180,
      "SlotInserts": [
        {
          "SlotName": "Brain",
          "SlotType": "Organ",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingEntityChickenWhite",
      "Title": "Entity Chicken White",
      "Description": "It's a chicken, as white as moondust. It will eat soybeans, corn, and wheat, and lay eggs. Some will be fertilized, producing further chickens. Some will not.",
      "PrefabName": "EntityChickenWhite",
      "PrefabHash": 1010807532,
      "SlotInserts": [
        {
          "SlotName": "Brain",
          "SlotType": "Organ",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingEntityRoosterBlack",
      "Title": "Entity Rooster Black",
      "Description": "This is a rooster. It is black. There is dignity in this.",
      "PrefabName": "EntityRoosterBlack",
      "PrefabHash": 966959649,
      "SlotInserts": [
        {
          "SlotName": "Brain",
          "SlotType": "Organ",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingEntityRoosterBrown",
      "Title": "Entity Rooster Brown",
      "Description": "The common brown rooster. Don't let it hear you say that.",
      "PrefabName": "EntityRoosterBrown",
      "PrefabHash": -583103395,
      "SlotInserts": [
        {
          "SlotName": "Brain",
          "SlotType": "Organ",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemEvaSuit",
      "Title": "Eva Suit",
      "Description": "The EVA suit is the basic suit <link=Stationeers><color=#0080FFFF>Stationeers</color></link> need to survive in the inhospitable environment of space. For more information on EVA suits, consult the <link=EVAPage><color=#0080FFFF>EVA suit</color></link> guide.",
      "PrefabName": "ItemEvaSuit",
      "PrefabHash": 1677018918,
      "SlotInserts": [
        {
          "SlotName": "Air Tank",
          "SlotType": "GasCanister",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Waste Tank",
          "SlotType": "GasCanister",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Life Support",
          "SlotType": "Battery",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "5"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Suit",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingStructureEvaporationChamber",
      "Title": "Evaporation Chamber",
      "Description": "A device for safely evaporating liquids into gasses. Liquids and Gasses will both exist safely inside the device. Lowering the pressure target of the in-built back pressure regulator using the setting wheel will change the boiling temperature of liquids inside.\n        The secondary gas input on the left is a heat-exchanger input and allows for heat exchange between the secondary input pipe and the internal atmosphere of the Evaporation Chamber. \n        Paired with <link=ThingStructureCondensationChamber><color=green>Condensation Chamber</color></link> Stationeers can exploit the phase change properties of gases to build a DIY air conditioner.",
      "PrefabName": "StructureEvaporationChamber",
      "PrefabHash": -1429782576,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input2",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input2"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureExpansionValve",
      "Title": "Expansion Valve",
      "Description": "Allows for moving liquids from a liquid pipe into a gas pipe. Only allows liquids to pass in one direction. Typically this is done to allow the liquid to evaporate into a gas as part of an airconditioning loop.",
      "PrefabName": "StructureExpansionValve",
      "PrefabHash": 195298587,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Output"
          ],
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureFairingTypeA1",
      "Title": "Fairing (Type A1)",
      "Description": "",
      "PrefabName": "StructureFairingTypeA1",
      "PrefabHash": 1622567418,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureFairingTypeA2",
      "Title": "Fairing (Type A2)",
      "Description": "",
      "PrefabName": "StructureFairingTypeA2",
      "PrefabHash": -104908736,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureFairingTypeA3",
      "Title": "Fairing (Type A3)",
      "Description": "",
      "PrefabName": "StructureFairingTypeA3",
      "PrefabHash": -1900541738,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingItemFern",
      "Title": "Fern",
      "Description": "There was a time, when Stationeers had to make <link=ThingReagentFenoxitone><color=green>Fenoxitone Powder</color></link> using the <link=ThingApplianceReagentProcessor><color=green>Reagent Processor</color></link>. Recent advances in technology allow you to use equivalent quantities of fern directly in recipes.",
      "PrefabName": "ItemFern",
      "PrefabHash": 892110467,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "Ingredient": true,
        "Reagents": {
          "Fenoxitone": 1.0
        }
      }
    },
    {
      "Key": "ThingSeedBag_Fern",
      "Title": "Fern Seeds",
      "Description": "Grow a <link=ThingItemFern><color=green>Fern</color></link>.",
      "PrefabName": "SeedBag_Fern",
      "PrefabHash": -1990600883,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingFertilizer",
      "Title": "Fertilizer",
      "Description": "Fertilizer alters plant growth processes, and is created by the basic composter and the <link=ThingStructureAdvancedComposter><color=green>Advanced Composter</color></link> using <link=OrganicPage><color=#0080FFFF>organic</color></link> matter.\nFertilizer's affects depend on its ingredients:\n\n- <link=OrganicPage><color=#0080FFFF>Food</color></link> increases PLANT YIELD up to two times\n- <link=ThingDecayedFood><color=green>Decayed Food</color></link> increases plant GROWTH SPEED up to two times\n- <link=ThingItemBiomass><color=green>Biomass</color></link> increases the NUMBER OF GROWTH CYCLES the fertilizer lasts for\n\nThe effect of these ingredients depends on their respective proportions in the composter when processing is activated. ",
      "PrefabName": "Fertilizer",
      "PrefabHash": 1517856652,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemGasFilterCarbonDioxide",
      "Title": "Filter (Carbon Dioxide)",
      "Description": "Given humanity's obsession with exhaling <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link>, all <link=Stationeers><color=#0080FFFF>Stationeers</color></link> are issued two basic <link=Sinotai><color=#0080FFFF>Sinotai</color></link> <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> <link=SlotGasFilter><color=orange>Gas Filter</color></link> as part of their standard deployment kit (SDK). These filters allow passage of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> into the suit's waste <link=ThingItemGasCanisterEmpty><color=green>Canister</color></link>, but are also critical components of the <link=ThingDynamicScrubber><color=green>Portable Air Scrubber</color></link> and the <link=ThingStructureFiltration><color=green>Filtration</color></link>. The <link=ThingItemGasFilterCarbonDioxideM><color=green>Medium Filter (Carbon Dioxide)</color></link> and <link=ThingItemGasFilterCarbonDioxideL><color=green>Heavy Filter (Carbon Dioxide)</color></link> are also available.",
      "PrefabName": "ItemGasFilterCarbonDioxide",
      "PrefabHash": 1635000764,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "CarbonDioxide"
      }
    },
    {
      "Key": "ThingItemGasFilterNitrogen",
      "Title": "Filter (Nitrogen)",
      "Description": "Filters are used to capture various gases, which can be disposed of or used elsewhere. <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> is a byproduct of smelting various ores, notably <link=ThingItemNitrice><color=green>Ice (Nitrice)</color></link>, which may be combined with <link=GasOxygen><color=#44AD83>Oxygen</color></link> to make a breathable - and considerably less flammable - atmosphere.",
      "PrefabName": "ItemGasFilterNitrogen",
      "PrefabHash": 632853248,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Nitrogen"
      }
    },
    {
      "Key": "ThingItemGasFilterNitrousOxide",
      "Title": "Filter (Nitrous Oxide)",
      "Description": "",
      "PrefabName": "ItemGasFilterNitrousOxide",
      "PrefabHash": -1247674305,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "NitrousOxide"
      }
    },
    {
      "Key": "ThingItemGasFilterOxygen",
      "Title": "Filter (Oxygen)",
      "Description": "<link=Sinotai><color=#0080FFFF>Sinotai</color></link> have cornered the market in filter design. Their trademarked templates are simple to print and highly efficient at capturing various gases, which can be disposed of or used elsewhere. <link=GasOxygen><color=#44AD83>Oxygen</color></link> is a common byproduct of smelting various ores, but must be filtered of such impurities as <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> using this filter and various devices, such as the <link=ThingItemDynamicScrubber><color=green>Kit (Portable Scrubber)</color></link>.",
      "PrefabName": "ItemGasFilterOxygen",
      "PrefabHash": -721824748,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Oxygen"
      }
    },
    {
      "Key": "ThingItemGasFilterPollutants",
      "Title": "Filter (Pollutant)",
      "Description": "Filters are used to capture various gases, such as waste emissions from a <link=ThingStructureFurnace><color=green>Furnace</color></link> or <link=ThingStructureArcFurnace><color=green>Arc Furnace</color></link>. Adding <link=Sinotai><color=#0080FFFF>Sinotai</color></link>-designed <link=GasPollutant><color=#44AD83>Pollutant</color></link> filters to a <link=ThingItemDynamicScrubber><color=green>Kit (Portable Scrubber)</color></link> allows you to isolate this gas, then add it to a pipe network and employ its excellent coolant properties in a <link=ThingStructureWallCooler><color=green>Wall Cooler</color></link>. Try not to inhale.",
      "PrefabName": "ItemGasFilterPollutants",
      "PrefabHash": 1915566057,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Pollutant"
      }
    },
    {
      "Key": "ThingItemGasFilterVolatiles",
      "Title": "Filter (Volatiles)",
      "Description": "Filters are used to capture various gases, which can be disposed of or used elsewhere. <link=GasVolatiles><color=#44AD83>Volatiles</color></link> are created by exposing <link=ThingItemVolatiles><color=green>Ice (Volatiles)</color></link> to heat. The product can then be collected and combined with <link=GasOxygen><color=#44AD83>Oxygen</color></link> to create fuel, or used within a <link=ThingStructureFurnace><color=green>Furnace</color></link> to smelt ores and create <link=IngotPage><color=#0080FFFF>alloys</color></link>.",
      "PrefabName": "ItemGasFilterVolatiles",
      "PrefabHash": 15011598,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Volatiles"
      }
    },
    {
      "Key": "ThingItemGasFilterWater",
      "Title": "Filter (Water)",
      "Description": "<link=Sinotai><color=#0080FFFF>Sinotai</color></link> filters are used to capture various gases, which can be disposed of, or used elsewhere. <link=GasWater><color=#44AD83>Water</color></link> can be collected by filtering smelted <link=ThingItemIce><color=green>Ice (Water)</color></link>",
      "PrefabName": "ItemGasFilterWater",
      "PrefabHash": -1993197973,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Steam"
      }
    },
    {
      "Key": "ThingStructureFiltration",
      "Title": "Filtration",
      "Description": "The Filtration Unit is based on a long-standing <link=ExMin><color=#0080FFFF>ExMin</color></link> system, itself based on older designs of uncertain provenance. It is available in the <link=ThingItemKitAtmospherics><color=green>Kit (Atmospherics)</color></link>.\nThe device has nonetheless proven indispensable for <link=Stationeers><color=#0080FFFF>Stationeer</color></link> atmospheric systems, as it can filter two <link=GasPage><color=#0080FFFF>gases</color></link> simultaneously from a single pipe network using a dual filter array. The unit has an input, and a filter output as well as an unfiltered outlet for any residual gases.\n",
      "PrefabName": "StructureFiltration",
      "PrefabHash": -348054045,
      "SlotInserts": [
        {
          "SlotName": "Gas Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Gas Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Programmable Chip",
          "SlotType": "ProgrammableChip",
          "SlotIndex": "2"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureInput><color=orange>PressureInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureInput><color=orange>TemperatureInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenInput><color=orange>RatioOxygenInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideInput><color=orange>RatioCarbonDioxideInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenInput><color=orange>RatioNitrogenInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantInput><color=orange>RatioPollutantInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesInput><color=orange>RatioVolatilesInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterInput><color=orange>RatioWaterInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideInput><color=orange>RatioNitrousOxideInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesInput><color=orange>TotalMolesInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureOutput><color=orange>PressureOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureOutput><color=orange>TemperatureOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenOutput><color=orange>RatioOxygenOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideOutput><color=orange>RatioCarbonDioxideOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenOutput><color=orange>RatioNitrogenOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantOutput><color=orange>RatioPollutantOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesOutput><color=orange>RatioVolatilesOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterOutput><color=orange>RatioWaterOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideOutput><color=orange>RatioNitrousOxideOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesOutput><color=orange>TotalMolesOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureOutput2><color=orange>PressureOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureOutput2><color=orange>TemperatureOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenOutput2><color=orange>RatioOxygenOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideOutput2><color=orange>RatioCarbonDioxideOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenOutput2><color=orange>RatioNitrogenOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantOutput2><color=orange>RatioPollutantOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesOutput2><color=orange>RatioVolatilesOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterOutput2><color=orange>RatioWaterOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideOutput2><color=orange>RatioNitrousOxideOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesOutput2><color=orange>TotalMolesOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionInput><color=orange>CombustionInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionOutput><color=orange>CombustionOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionOutput2><color=orange>CombustionOutput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Idle",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Active",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Waste",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {},
          "2": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "PressureInput": "Read",
          "TemperatureInput": "Read",
          "RatioOxygenInput": "Read",
          "RatioCarbonDioxideInput": "Read",
          "RatioNitrogenInput": "Read",
          "RatioPollutantInput": "Read",
          "RatioVolatilesInput": "Read",
          "RatioWaterInput": "Read",
          "RatioNitrousOxideInput": "Read",
          "TotalMolesInput": "Read",
          "PressureOutput": "Read",
          "TemperatureOutput": "Read",
          "RatioOxygenOutput": "Read",
          "RatioCarbonDioxideOutput": "Read",
          "RatioNitrogenOutput": "Read",
          "RatioPollutantOutput": "Read",
          "RatioVolatilesOutput": "Read",
          "RatioWaterOutput": "Read",
          "RatioNitrousOxideOutput": "Read",
          "TotalMolesOutput": "Read",
          "PressureOutput2": "Read",
          "TemperatureOutput2": "Read",
          "RatioOxygenOutput2": "Read",
          "RatioCarbonDioxideOutput2": "Read",
          "RatioNitrogenOutput2": "Read",
          "RatioPollutantOutput2": "Read",
          "RatioVolatilesOutput2": "Read",
          "RatioWaterOutput2": "Read",
          "RatioNitrousOxideOutput2": "Read",
          "TotalMolesOutput2": "Read",
          "CombustionInput": "Read",
          "CombustionOutput": "Read",
          "CombustionOutput2": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "Pipe",
            "Waste"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "DevicesLength": 2,
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingFireArmSMG",
      "Title": "Fire Arm SMG",
      "Description": "0.Single\n1.Auto",
      "PrefabName": "FireArmSMG",
      "PrefabHash": -86315541,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "Magazine",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Single",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Auto",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemReusableFireExtinguisher",
      "Title": "Fire Extinguisher (Reusable)",
      "Description": "Requires a canister filled with any inert liquid to opperate.",
      "PrefabName": "ItemReusableFireExtinguisher",
      "PrefabHash": -1773192190,
      "SlotInserts": [
        {
          "SlotName": "Liquid  Canister",
          "SlotType": "LiquidCanister",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingFlag_ODA_10m",
      "Title": "Flag (ODA 10m)",
      "Description": "",
      "PrefabName": "Flag_ODA_10m",
      "PrefabHash": 1845441951,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingFlag_ODA_4m",
      "Title": "Flag (ODA 4m)",
      "Description": "",
      "PrefabName": "Flag_ODA_4m",
      "PrefabHash": 1159126354,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingFlag_ODA_6m",
      "Title": "Flag (ODA 6m)",
      "Description": "",
      "PrefabName": "Flag_ODA_6m",
      "PrefabHash": 1998634960,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingFlag_ODA_8m",
      "Title": "Flag (ODA 8m)",
      "Description": "",
      "PrefabName": "Flag_ODA_8m",
      "PrefabHash": -375156130,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingFlareGun",
      "Title": "Flare Gun",
      "Description": "",
      "PrefabName": "FlareGun",
      "PrefabHash": 118685786,
      "SlotInserts": [
        {
          "SlotName": "Magazine",
          "SlotType": "Flare",
          "SlotIndex": "0"
        },
        {
          "SlotName": "<N:EN:Chamber>",
          "SlotType": "Blocked",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructureFlashingLight",
      "Title": "Flashing Light",
      "Description": "Few objects or ideas are as clearly and transparently named as the Flashing Light, although fans of scrupulous accuracy have been known to refer to it by its full, official title: 'Default Yellow Flashing Light'.",
      "PrefabName": "StructureFlashingLight",
      "PrefabHash": -1535893860,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemFlashlight",
      "Title": "Flashlight",
      "Description": "A flashlight with a narrow and wide beam options.",
      "PrefabName": "ItemFlashlight",
      "PrefabHash": -838472102,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Low Power",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "High Power",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemFlour",
      "Title": "Flour",
      "Description": "Pulverized <link=ThingItemWheat><color=green>Wheat</color></link>, a key ingredient in many foods created by the <link=ThingApplianceMicrowave><color=green>Microwave</color></link> and the <link=ThingItemKitAutomatedOven><color=green>Kit (Automated Oven)</color></link>.",
      "PrefabName": "ItemFlour",
      "PrefabHash": -665995854,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Flour": 50.0
        }
      }
    },
    {
      "Key": "ThingItemFlowerBlue",
      "Title": "Flower (Blue)",
      "Description": "",
      "PrefabName": "ItemFlowerBlue",
      "PrefabHash": -1573623434,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemFlowerGreen",
      "Title": "Flower (Green)",
      "Description": "",
      "PrefabName": "ItemFlowerGreen",
      "PrefabHash": -1513337058,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemFlowerOrange",
      "Title": "Flower (Orange)",
      "Description": "",
      "PrefabName": "ItemFlowerOrange",
      "PrefabHash": -1411986716,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemFlowerRed",
      "Title": "Flower (Red)",
      "Description": "",
      "PrefabName": "ItemFlowerRed",
      "PrefabHash": -81376085,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemFlowerYellow",
      "Title": "Flower (Yellow)",
      "Description": "",
      "PrefabName": "ItemFlowerYellow",
      "PrefabHash": 1712822019,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemFries",
      "Title": "French Fries",
      "Description": "",
      "PrefabName": "ItemFries",
      "PrefabHash": 1371786091,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingStructureFridgeBig",
      "Title": "Fridge (Large)",
      "Description": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> Koolaid fridge is a self-cooling storage device with 15 slots that preserves food when powered and turned on. While many users have complained about the placement of the power switch, its place in the pantheon of off-world whiteware is unquestioned.\n      \nWith its own permanent internal atmosphere, the Koolaid fridge slows the decay of <link=OrganicPage><color=#0080FFFF>food</color></link> by maintaining an optimal internal temperature. Its power usage varies on the external temperature against which it must balance its internal temperature. As such, it must shed heat to operate, so the Koolaid fridge DOES NOT work in a vacuum.\n      \nAlso, don't leave the door open, as it will equalize with the current world temperature. And maybe start to beep.\n\nFor more information about food preservation, visit the <link=DecayPage><color=#0080FFFF>food decay</color></link> section of the Stationpedia.",
      "PrefabName": "StructureFridgeBig",
      "PrefabHash": 958476921,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "9"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "10"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "11"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "12"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "13"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "14"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureFridgeSmall",
      "Title": "Fridge Small",
      "Description": "Essentially a heavily insulated box that allows users to pipe in any desired atmosphere, the <link=Recurso><color=#0080FFFF>Recurso</color></link> Minibar fridge was a simple solution to the problem of <link=NutritionPage><color=#0080FFFF>food decay</color></link>. It stores a small number of items, at any temperature you can muster.\n      \n      For more information about food preservation, visit the <link=DecayPage><color=#0080FFFF>food decay</color></link> section of the Stationpedia.",
      "PrefabName": "StructureFridgeSmall",
      "PrefabHash": 751887598,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureFurnace",
      "Title": "Furnace",
      "Description": "The Zhurong furnace employs a high-temperature gas mixture of <link=GasOxygen><color=#44AD83>Oxygen</color></link> and <link=GasVolatiles><color=#44AD83>Volatiles</color></link> to smelt <link=IngotPage><color=#0080FFFF>ingots</color></link> and a range of <link=IngotPage><color=#0080FFFF>alloys</color></link> as raw materials for <link=FabricatorPage><color=#0080FFFF>fabricators</color></link>.\nA basic gas mixture can be achieved by adding <link=ThingItemOxite><color=green>Ice (Oxite)</color></link> and <link=ThingItemVolatiles><color=green>Ice (Volatiles)</color></link> in a 1:2 ratio directly to the furnace, but more complex alloys will require careful management of a dedicated gas mixing network. Exact ingredient ratios must be observed. Likewise, smelting ores at insufficient temperatures will produce <link=ReagentPage><color=#0080FFFF>reagents</color></link>, which must be recycled.\nIf liquids are present in the furnace, they will gather there until the furnace is connected to a liquid pipe network.",
      "PrefabName": "StructureFurnace",
      "PrefabHash": 1947944864,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRecipeHash><color=orange>RecipeHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Pipe Liquid Output2",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "5"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Reagents": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "RecipeHash": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "PipeLiquid",
            "Output2"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": true,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCableFuse100k",
      "Title": "Fuse (100kW)",
      "Description": "",
      "PrefabName": "StructureCableFuse100k",
      "PrefabHash": 281380789,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCableFuse1k",
      "Title": "Fuse (1kW)",
      "Description": "",
      "PrefabName": "StructureCableFuse1k",
      "PrefabHash": -1103727120,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCableFuse50k",
      "Title": "Fuse (50kW)",
      "Description": "",
      "PrefabName": "StructureCableFuse50k",
      "PrefabHash": -349716617,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCableFuse5k",
      "Title": "Fuse (5kW)",
      "Description": "",
      "PrefabName": "StructureCableFuse5k",
      "PrefabHash": -631590668,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureFuselageTypeA1",
      "Title": "Fuselage (Type A1)",
      "Description": "",
      "PrefabName": "StructureFuselageTypeA1",
      "PrefabHash": 1033024712,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureFuselageTypeA2",
      "Title": "Fuselage (Type A2)",
      "Description": "",
      "PrefabName": "StructureFuselageTypeA2",
      "PrefabHash": -1533287054,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureFuselageTypeA4",
      "Title": "Fuselage (Type A4)",
      "Description": "",
      "PrefabName": "StructureFuselageTypeA4",
      "PrefabHash": 1308115015,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureFuselageTypeC5",
      "Title": "Fuselage (Type C5)",
      "Description": "",
      "PrefabName": "StructureFuselageTypeC5",
      "PrefabHash": 147395155,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingCartridgeGPS",
      "Title": "GPS",
      "Description": "",
      "PrefabName": "CartridgeGPS",
      "PrefabHash": -1957063345,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Cartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemGasCanisterNitrousOxide",
      "Title": "Gas Canister (Sleeping)",
      "Description": "",
      "PrefabName": "ItemGasCanisterNitrousOxide",
      "PrefabHash": -1712153401,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingItemGasCanisterSmart",
      "Title": "Gas Canister (Smart)",
      "Description": "0.Mode0\n1.Mode1",
      "PrefabName": "ItemGasCanisterSmart",
      "PrefabHash": -668314371,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingStructureMediumRocketGasFuelTank",
      "Title": "Gas Capsule Tank Medium",
      "Description": "",
      "PrefabName": "StructureMediumRocketGasFuelTank",
      "PrefabHash": -1093860567,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Output"
          ],
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCapsuleTankGas",
      "Title": "Gas Capsule Tank Small",
      "Description": "",
      "PrefabName": "StructureCapsuleTankGas",
      "PrefabHash": -1385712131,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingCircuitboardGasDisplay",
      "Title": "Gas Display",
      "Description": "Information is power. Place this circuitboard into a <link=ThingStructureConsole><color=green>Console</color></link> to create a display that shows gas pressure or temperature of any connected tank, storage cannister, <link=ThingItemPipeAnalyizer><color=green>Kit (Pipe Analyzer)</color></link> or <link=ThingItemGasSensor><color=green>Kit (Gas Sensor)</color></link>.",
      "PrefabName": "CircuitboardGasDisplay",
      "PrefabHash": -82343730,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureGasGenerator",
      "Title": "Gas Fuel Generator",
      "Description": "",
      "PrefabName": "StructureGasGenerator",
      "PrefabHash": 1165997963,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerGeneration><color=orange>PowerGeneration</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PowerGeneration": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureGasMixer",
      "Title": "Gas Mixer",
      "Description": "Indispensable for producing precise atmospheric ratios, this gas mixer blends two gases in proportions ranging anywhere from 0-100%.",
      "PrefabName": "StructureGasMixer",
      "PrefabHash": 2104106366,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input2",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Output"
          ],
          [
            "Pipe",
            "Input2"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureGasSensor",
      "Title": "Gas Sensor",
      "Description": "Gas sensors are designed to monitor and report basic atmospheric information, including temperature, pressure, and gas ratios. They also make wonderful wedding presents.",
      "PrefabName": "StructureGasSensor",
      "PrefabHash": -1252983604,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingDynamicGasTankAdvanced",
      "Title": "Gas Tank Mk II",
      "Description": "0.Mode0\n1.Mode1",
      "PrefabName": "DynamicGasTankAdvanced",
      "PrefabHash": -386375420,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureGasTankStorage",
      "Title": "Gas Tank Storage",
      "Description": "When connected to a pipe network, the tank storage unit allows you to refill a <link=ThingItemGasCanisterEmpty><color=green>Canister</color></link>, as well as read various atmospheric data from the <link=SlotGasCanister><color=orange>Gas Canister</color></link>.",
      "PrefabName": "StructureGasTankStorage",
      "PrefabHash": 1632165346,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "GasCanister",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Quantity": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSolidFuelGenerator",
      "Title": "Generator (Solid Fuel)",
      "Description": "The mainstay of power generation for Stationeers, this device provides 20kW of power. Multiple solid resources can be loaded. While operating, the device will output its maximum power regardless of whether you have captured it or not. Watch for blown wires! It will output much more power than your regular <link=ThingItemCableCoil><color=green>Cable Coil</color></link> can handle.",
      "PrefabName": "StructureSolidFuelGenerator",
      "PrefabHash": 813146305,
      "SlotInserts": [
        {
          "SlotName": "Input",
          "SlotType": "Ore",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerGeneration><color=orange>PowerGeneration</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Not Generating",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Generating",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "ClearMemory": "Write",
          "ImportCount": "Read",
          "PowerGeneration": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureGlassDoor",
      "Title": "Glass Door",
      "Description": "0.Operate\n1.Logic",
      "PrefabName": "StructureGlassDoor",
      "PrefabHash": -324331872,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemGlassSheets",
      "Title": "Glass Sheets",
      "Description": "A fundamental construction component, glass sheets are created from <link=ReagentSilicon><color=#B566FF>Silicon</color></link>. Fabricated on the <link=ThingStructureAutolathe><color=green>Autolathe</color></link>, they are used to make {THING:StructureSolarPanel;Solar Panels}, <link=ThingStructureAirlock;Airlocks><color=green><N:EN:StructureAirlock;Airlocks></color></link> and many other structures.",
      "PrefabName": "ItemGlassSheets",
      "PrefabHash": 1588896491,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemGlasses",
      "Title": "Glasses",
      "Description": "",
      "PrefabName": "ItemGlasses",
      "PrefabHash": -1068925231,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Glasses",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingCircuitboardGraphDisplay",
      "Title": "Graph Display",
      "Description": "",
      "PrefabName": "CircuitboardGraphDisplay",
      "PrefabHash": 1344368806,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureGrowLight",
      "Title": "Grow Light",
      "Description": "<link=Agrizero><color=#0080FFFF>Agrizero's</color></link> leading hydroponic lighting system, the GrowUp UV light supplements sunshine in low light or sun-distant conditions. The unit adds growability over the space of a grid, so requires proximate placement to work. ",
      "PrefabName": "StructureGrowLight",
      "PrefabHash": -1758710260,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingCartridgeGuide",
      "Title": "Guide",
      "Description": "",
      "PrefabName": "CartridgeGuide",
      "PrefabHash": 872720793,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Cartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingH2Combustor",
      "Title": "H2 Combustor",
      "Description": "Adapted slightly from its original <link=Recurso><color=#0080FFFF>Recurso</color></link> design, the <link=GasVolatiles><color=#44AD83>Volatiles</color></link> Combustor does exactly what its name suggests - it burns a mixture of volatiles and <link=GasOxygen><color=#44AD83>Oxygen</color></link> to create water. Extremely useful in hot or arid environments, users need to be aware that the combustor outputs considerable waste heat. The device is also less than perfectly efficient, resulting in the autoignition of volatiles in the chamber, and the production of waste gases which must be dealt with.",
      "PrefabName": "H2Combustor",
      "PrefabHash": 1840108251,
      "SlotInserts": [
        {
          "SlotName": "Programmable Chip",
          "SlotType": "ProgrammableChip",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureInput><color=orange>PressureInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureInput><color=orange>TemperatureInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenInput><color=orange>RatioOxygenInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideInput><color=orange>RatioCarbonDioxideInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenInput><color=orange>RatioNitrogenInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantInput><color=orange>RatioPollutantInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesInput><color=orange>RatioVolatilesInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterInput><color=orange>RatioWaterInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideInput><color=orange>RatioNitrousOxideInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesInput><color=orange>TotalMolesInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureOutput><color=orange>PressureOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureOutput><color=orange>TemperatureOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenOutput><color=orange>RatioOxygenOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideOutput><color=orange>RatioCarbonDioxideOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenOutput><color=orange>RatioNitrogenOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantOutput><color=orange>RatioPollutantOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesOutput><color=orange>RatioVolatilesOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterOutput><color=orange>RatioWaterOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideOutput><color=orange>RatioNitrousOxideOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesOutput><color=orange>TotalMolesOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionInput><color=orange>CombustionInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionOutput><color=orange>CombustionOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Idle",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Active",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "PressureInput": "Read",
          "TemperatureInput": "Read",
          "RatioOxygenInput": "Read",
          "RatioCarbonDioxideInput": "Read",
          "RatioNitrogenInput": "Read",
          "RatioPollutantInput": "Read",
          "RatioVolatilesInput": "Read",
          "RatioWaterInput": "Read",
          "RatioNitrousOxideInput": "Read",
          "TotalMolesInput": "Read",
          "PressureOutput": "Read",
          "TemperatureOutput": "Read",
          "RatioOxygenOutput": "Read",
          "RatioCarbonDioxideOutput": "Read",
          "RatioNitrogenOutput": "Read",
          "RatioPollutantOutput": "Read",
          "RatioVolatilesOutput": "Read",
          "RatioWaterOutput": "Read",
          "RatioNitrousOxideOutput": "Read",
          "TotalMolesOutput": "Read",
          "CombustionInput": "Read",
          "CombustionOutput": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "DevicesLength": 2,
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemHEMDroidRepairKit",
      "Title": "HEMDroid Repair Kit",
      "Description": "Repairs damaged HEM-Droids to full health.",
      "PrefabName": "ItemHEMDroidRepairKit",
      "PrefabHash": 470636008,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemPlantThermogenic_Genepool1",
      "Title": "Hades Flower (Alpha strain)",
      "Description": "The <link=Agrizero><color=#0080FFFF>Agrizero's</color></link>-created Hades Flower is the result of as dubious experiment to combine the allure of tropical plants with the comfort and homeliness of a heat pump. The plant breathes a 1:3 mix of <link=GasVolatiles><color=#44AD83>Volatiles</color></link> and <link=GasOxygen><color=#44AD83>Oxygen</color></link>, and exhales heated <link=GasPollutant><color=#44AD83>Pollutant</color></link>.",
      "PrefabName": "ItemPlantThermogenic_Genepool1",
      "PrefabHash": -177792789,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemPlantThermogenic_Genepool2",
      "Title": "Hades Flower (Beta strain)",
      "Description": "The <link=Agrizero><color=#0080FFFF>Agrizero's</color></link>-created Hades Flower is the result of as dubious experiment to combine the allure of tropical plants with the comfort and homeliness of a heat pump. The plant breathes a 1:3 mix of <link=GasVolatiles><color=#44AD83>Volatiles</color></link> and <link=GasOxygen><color=#44AD83>Oxygen</color></link>, and exhales heated <link=GasPollutant><color=#44AD83>Pollutant</color></link>. The beta strain is notably more efficient than the earlier, more experimental alpha variant.",
      "PrefabName": "ItemPlantThermogenic_Genepool2",
      "PrefabHash": 1819167057,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemDrill",
      "Title": "Hand Drill",
      "Description": "The <link=ExMin><color=#0080FFFF>ExMin</color></link> Off-whirled Hand Drill has been a companion to <link=Stationeers><color=#0080FFFF>Stationeers</color></link> for decades. Essential for assembling and deconstructing various items and structures, regardless of gravity, pressure or temperature.",
      "PrefabName": "ItemDrill",
      "PrefabHash": 2009673399,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemGrenade",
      "Title": "Hand Grenade",
      "Description": "Invented by the Romans, who threw Greek Fire at their enemies in ceramic jars, the word 'grenade' is derived from the Old French word for 'pomegranate', as many modern grenades resemble this round, many-seeded fruit. Also like many grenades before it, this one goes boom and breaks stuff.",
      "PrefabName": "ItemGrenade",
      "PrefabHash": 1544275894,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingHandgun",
      "Title": "Handgun",
      "Description": "",
      "PrefabName": "Handgun",
      "PrefabHash": 247238062,
      "SlotInserts": [
        {
          "SlotName": "Magazine",
          "SlotType": "Magazine",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingHandgunMagazine",
      "Title": "Handgun Magazine",
      "Description": "",
      "PrefabName": "HandgunMagazine",
      "PrefabHash": 1254383185,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Magazine",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemScanner",
      "Title": "Handheld Scanner",
      "Description": "A mysterious piece of technology, rumored to have Zrillian origins.",
      "PrefabName": "ItemScanner",
      "PrefabHash": 1661270830,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemTablet",
      "Title": "Handheld Tablet",
      "Description": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> handheld 'Padi' tablet is an all-purpose data platform, provided as standard issue to all <link=Stationeers><color=#0080FFFF>Stationeers</color></link>. A dynamic multi-tool that accepts a range of <link=CartridgePage><color=#0080FFFF>cartridges</color></link>, the Padi becomes an <link=ThingCartridgeAtmosAnalyser><color=green>Atmos Analyzer</color></link> or <link=ThingCartridgeTracker><color=green>Tracker</color></link>, <link=ThingCartridgeMedicalAnalyser><color=green>Medical Analyzer</color></link>, <link=ThingCartridgeOreScanner><color=green>Ore Scanner</color></link>, <link=ThingCartridgeElectronicReader><color=green>eReader</color></link>, and various other functions.",
      "PrefabName": "ItemTablet",
      "PrefabHash": -229808600,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Cartridge",
          "SlotType": "Cartridge",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemHardMiningBackPack",
      "Title": "Hard Mining Backpack",
      "Description": "",
      "PrefabName": "ItemHardMiningBackPack",
      "PrefabHash": 900366130,
      "SlotInserts": [
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "9"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "10"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "11"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "12"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "13"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "14"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "15"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "16"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "17"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "18"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "19"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "20"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "21"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "22"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "23"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "24"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "25"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "26"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "27"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Back",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemHardSuit",
      "Title": "Hardsuit",
      "Description": "Connects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
      "PrefabName": "ItemHardSuit",
      "PrefabHash": -1758310454,
      "SlotInserts": [
        {
          "SlotName": "Air Tank",
          "SlotType": "GasCanister",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Waste Tank",
          "SlotType": "GasCanister",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Life Support",
          "SlotType": "Battery",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Programmable Chip",
          "SlotType": "ProgrammableChip",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "7"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureExternal><color=orange>PressureExternal</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressureSetting><color=orange>PressureSetting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureSetting><color=orange>TemperatureSetting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureExternal><color=orange>TemperatureExternal</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeFiltration><color=orange>Filtration</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeAirRelease><color=orange>AirRelease</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePositionX><color=orange>PositionX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionY><color=orange>PositionY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionZ><color=orange>PositionZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityMagnitude><color=orange>VelocityMagnitude</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityRelativeX><color=orange>VelocityRelativeX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityRelativeY><color=orange>VelocityRelativeY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityRelativeZ><color=orange>VelocityRelativeZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSoundAlert><color=orange>SoundAlert</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeForwardX><color=orange>ForwardX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeForwardY><color=orange>ForwardY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeForwardZ><color=orange>ForwardZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOrientation><color=orange>Orientation</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityX><color=orange>VelocityX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityY><color=orange>VelocityY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityZ><color=orange>VelocityZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeEntityState><color=orange>EntityState</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeFilterType><color=orange>FilterType</color></link>",
          "LogicAccessTypes": "4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "PressureExternal": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "TotalMoles": "Read",
          "Volume": "ReadWrite",
          "PressureSetting": "ReadWrite",
          "TemperatureSetting": "ReadWrite",
          "TemperatureExternal": "Read",
          "Filtration": "ReadWrite",
          "AirRelease": "ReadWrite",
          "PositionX": "Read",
          "PositionY": "Read",
          "PositionZ": "Read",
          "VelocityMagnitude": "Read",
          "VelocityRelativeX": "Read",
          "VelocityRelativeY": "Read",
          "VelocityRelativeZ": "Read",
          "RatioNitrousOxide": "Read",
          "Combustion": "Read",
          "SoundAlert": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "ForwardX": "Read",
          "ForwardY": "Read",
          "ForwardZ": "Read",
          "Orientation": "Read",
          "VelocityX": "Read",
          "VelocityY": "Read",
          "VelocityZ": "Read",
          "EntityState": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Memory": {
        "MemorySize": 0,
        "MemorySizeReadable": "0 B",
        "MemoryAccess": "ReadWrite"
      },
      "WirelessLogic": true,
      "Item": {
        "SlotClass": "Suit",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemHardBackpack",
      "Title": "Hardsuit Backpack",
      "Description": "This backpack can be useful when you are working inside and don't need to fly around.",
      "PrefabName": "ItemHardBackpack",
      "PrefabHash": 374891127,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "9"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "10"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "11"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Back",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemHardsuitHelmet",
      "Title": "Hardsuit Helmet",
      "Description": "The Hardsuit Helmet is similar to the <link=ThingItemSpaceHelmet><color=green>Space Helmet</color></link>, but can withstand higher temperatures and pressures. It's perfect for enduring harsh environments like Venus and Vulcan.",
      "PrefabName": "ItemHardsuitHelmet",
      "PrefabHash": -84573099,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeFlush><color=orange>Flush</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeSoundAlert><color=orange>SoundAlert</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "TotalMoles": "Read",
          "Volume": "ReadWrite",
          "RatioNitrousOxide": "Read",
          "Combustion": "Read",
          "Flush": "Write",
          "SoundAlert": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Item": {
        "SlotClass": "Helmet",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemHardJetpack",
      "Title": "Hardsuit Jetpack",
      "Description": "The <link=Norsec><color=#0080FFFF>Norsec</color></link> jetpack isn't 'technically' a jetpack at all, it's a gas thruster. It can be powered by any gas, so long as the internal pressure of the <link=AtmosphericsPage><color=#0080FFFF>canister</color></link> is higher than the ambient external pressure. If the external pressure is greater, the spacepack will not function. Adjusting the thrust value alters your rate of acceleration, while activating the stablizer causes the spacepack to hover when a given height is reached.\nThe hardsuit jetpack is capable of much higher speeds than the <link=ThingItemJetpackBasic><color=green>Jetpack Basic</color></link> - up to 15m/s. Indispensable for building, mining and general movement, it has fourteen storage slots.\nUSE: 'J' to activate; 'space' to fly up; 'left ctrl' to descend; and 'WASD' to move.",
      "PrefabName": "ItemHardJetpack",
      "PrefabHash": -412551656,
      "SlotInserts": [
        {
          "SlotName": "Propellant",
          "SlotType": "GasCanister",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "9"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "10"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "11"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "12"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "13"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "14"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Back",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingStructureHarvie",
      "Title": "Harvie",
      "Description": "Use above a <link=ThingStructureHydroponicsTray><color=green>Hydroponics Tray</color></link> or <link=ThingStructureHydroponicsTrayData><color=green>Hydroponics Device</color></link> to manage the planting and harvest of your crops. It contains a button that will allow you to activate it's modes, or connect it to a logic system to do this for you. The modes indicate current growth status of the plant below. Import is used for planting, and harvested plants are sent to export.",
      "PrefabName": "StructureHarvie",
      "PrefabHash": 958056199,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "Plant",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Hand",
          "SlotType": "None",
          "SlotIndex": "2"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePlant><color=orange>Plant</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeHarvest><color=orange>Harvest</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Idle",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Happy",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "UnHappy",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Dead",
          "LogicAccessTypes": "3"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "Plant": "Write",
          "Harvest": "Write",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingCircuitboardHashDisplay",
      "Title": "Hash Display",
      "Description": "",
      "PrefabName": "CircuitboardHashDisplay",
      "PrefabHash": 1633074601,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemHat",
      "Title": "Hat",
      "Description": "As the name suggests, this is a hat.",
      "PrefabName": "ItemHat",
      "PrefabHash": 299189339,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Helmet",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemCropHay",
      "Title": "Hay",
      "Description": "",
      "PrefabName": "ItemCropHay",
      "PrefabHash": 215486157,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemWearLamp",
      "Title": "Headlamp",
      "Description": "",
      "PrefabName": "ItemWearLamp",
      "PrefabHash": -598730959,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Helmet",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingStructureHeatExchangerGastoGas",
      "Title": "Heat Exchanger - Gas",
      "Description": "The original specs for the N Series Flow-P heat exchanger were rumored to have been scrawled on the back of a burger receipt by a bored <link=Sinotai><color=#0080FFFF>Sinotai</color></link> designer riding up the Brazilian space elevator, but that hasn't stopped it becoming one of the most widely-copied heat exchanger designs in the Solar System.\nThe 'N Flow-P' has four connections, allowing you to pass two gas networks into the unit, which then works to equalize temperature across the two separate networks.\nAs the N Flow-P is a passive system, it equalizes pressure across the entire of each individual network, unless connected to gas management devices like a <link=ThingStructureVolumePump><color=green>Volume Pump</color></link> or a <link=ThingStructureBackPressureRegulator><color=green>Back Pressure Regulator</color></link>.",
      "PrefabName": "StructureHeatExchangerGastoGas",
      "PrefabHash": 21266291,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "Pipe",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureHeatExchangerLiquidtoLiquid",
      "Title": "Heat Exchanger - Liquid",
      "Description": "The original specs for the N Series Flow-P heat exchanger were rumored to have been scrawled on the back of a burger receipt by a bored <link=Sinotai><color=#0080FFFF>Sinotai</color></link> designer riding up the Brazilian space elevator, but that hasn't stopped it becoming one of the most widely-copied heat exchanger designs in the Solar System.\nThe 'N Flow-P' has four connections, allowing you to pass two liquid networks into the unit, which then works to equalize temperature across the two separate networks.\nAs the N Flow-P is a passive system, it equalizes pressure across the entire of each individual network, unless connected to liquid management devices like a <link=ThingStructureLiquidVolumePump><color=green>Liquid Volume Pump</color></link> or a <link=ThingStructureBackLiquidPressureRegulator><color=green>Liquid Back Volume Regulator</color></link>.\n",
      "PrefabName": "StructureHeatExchangerLiquidtoLiquid",
      "PrefabHash": -613784254,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ],
          [
            "PipeLiquid",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureHeatExchangeLiquidtoGas",
      "Title": "Heat Exchanger - Liquid + Gas",
      "Description": "The original specs for the N Series Flow-P heat exchanger were rumored to have been scrawled on the back of a burger receipt by a bored <link=Sinotai><color=#0080FFFF>Sinotai</color></link> designer riding up the Brazilian space elevator, but that hasn't stopped it becoming one of the most widely-copied heat exchanger designs in the Solar System.\nThe 'N Flow-P' has four connections, allowing you to pass separate liquid and gas networks into the unit, which then works to equalize temperature across the two separate networks.\nAs the N Flow-P is a passive system, it equalizes pressure across the entire of each individual network, unless connected to devices like a <link=ThingStructureVolumePump><color=green>Volume Pump</color></link> or a <link=ThingStructureBackLiquidPressureRegulator><color=green>Liquid Back Volume Regulator</color></link>.",
      "PrefabName": "StructureHeatExchangeLiquidtoGas",
      "PrefabHash": 944685608,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCableCornerH3",
      "Title": "Heavy Cable (3-Way Corner)",
      "Description": "",
      "PrefabName": "StructureCableCornerH3",
      "PrefabHash": -1843379322,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructureCableJunctionH",
      "Title": "Heavy Cable (3-Way Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunctionH",
      "PrefabHash": 469451637,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructureCableCornerH4",
      "Title": "Heavy Cable (4-Way Corner)",
      "Description": "",
      "PrefabName": "StructureCableCornerH4",
      "PrefabHash": 205837861,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingStructureCableJunctionH4",
      "Title": "Heavy Cable (4-Way Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunctionH4",
      "PrefabHash": -742234680,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingStructureCableJunctionH5",
      "Title": "Heavy Cable (5-Way Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunctionH5",
      "PrefabHash": -1530571426,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        }
      ]
    },
    {
      "Key": "ThingStructureCableJunctionH6",
      "Title": "Heavy Cable (6-Way Junction)",
      "Description": "",
      "PrefabName": "StructureCableJunctionH6",
      "PrefabHash": 1036780772,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "5"
        }
      ]
    },
    {
      "Key": "ThingStructureCableCornerH",
      "Title": "Heavy Cable (Corner)",
      "Description": "",
      "PrefabName": "StructureCableCornerH",
      "PrefabHash": -39359015,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureCableStraightH",
      "Title": "Heavy Cable (Straight)",
      "Description": "",
      "PrefabName": "StructureCableStraightH",
      "PrefabHash": -146200530,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingItemGasFilterCarbonDioxideL",
      "Title": "Heavy Filter (Carbon Dioxide)",
      "Description": "",
      "PrefabName": "ItemGasFilterCarbonDioxideL",
      "PrefabHash": 1876847024,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "CarbonDioxide"
      }
    },
    {
      "Key": "ThingItemGasFilterNitrogenL",
      "Title": "Heavy Filter (Nitrogen)",
      "Description": "",
      "PrefabName": "ItemGasFilterNitrogenL",
      "PrefabHash": -1387439451,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Nitrogen"
      }
    },
    {
      "Key": "ThingItemGasFilterNitrousOxideL",
      "Title": "Heavy Filter (Nitrous Oxide)",
      "Description": "",
      "PrefabName": "ItemGasFilterNitrousOxideL",
      "PrefabHash": 465267979,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "NitrousOxide"
      }
    },
    {
      "Key": "ThingItemGasFilterOxygenL",
      "Title": "Heavy Filter (Oxygen)",
      "Description": "",
      "PrefabName": "ItemGasFilterOxygenL",
      "PrefabHash": -1217998945,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Oxygen"
      }
    },
    {
      "Key": "ThingItemGasFilterPollutantsL",
      "Title": "Heavy Filter (Pollutants)",
      "Description": "",
      "PrefabName": "ItemGasFilterPollutantsL",
      "PrefabHash": 1959564765,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Pollutant"
      }
    },
    {
      "Key": "ThingItemGasFilterVolatilesL",
      "Title": "Heavy Filter (Volatiles)",
      "Description": "",
      "PrefabName": "ItemGasFilterVolatilesL",
      "PrefabHash": 1255156286,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Volatiles"
      }
    },
    {
      "Key": "ThingItemGasFilterWaterL",
      "Title": "Heavy Filter (Water)",
      "Description": "",
      "PrefabName": "ItemGasFilterWaterL",
      "PrefabHash": 2004969680,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Steam"
      }
    },
    {
      "Key": "ThingItemHighVolumeGasCanisterEmpty",
      "Title": "High Volume Gas Canister",
      "Description": "",
      "PrefabName": "ItemHighVolumeGasCanisterEmpty",
      "PrefabHash": 998653377,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingItemHorticultureBelt",
      "Title": "Horticulture Belt",
      "Description": "",
      "PrefabName": "ItemHorticultureBelt",
      "PrefabHash": -1117581553,
      "SlotInserts": [
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "9"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Belt",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingHumanSkull",
      "Title": "Human Skull",
      "Description": "",
      "PrefabName": "HumanSkull",
      "PrefabHash": -857713709,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureHydraulicPipeBender",
      "Title": "Hydraulic Pipe Bender",
      "Description": "A go-to tool for all your atmospheric and plumbing needs, the <link=ExMin><color=#0080FFFF>ExMin</color></link> Atmoprinter will create everything from pipes, pumps and tanks, to vents and filters, ensuring your survival in any environment. Upgrade the Atmoprinter using a <link=ThingPipeBenderMod><color=green>Pipe Bender Mod</color></link> for additional recipes and faster processing speeds.",
      "PrefabName": "StructureHydraulicPipeBender",
      "PrefabHash": -1888248335,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "Ingot",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRecipeHash><color=orange>RecipeHash</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCompletionRatio><color=orange>CompletionRatio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureHydroponicsTrayData",
      "Title": "Hydroponics Device",
      "Description": "The <link=Agrizero><color=#0080FFFF>Agrizero</color></link> hydroponics device is the ideal vessel for growing a range of <link=OrganicPage><color=#0080FFFF>plantlife</color></link>. It must be supplied with <link=GasWater><color=#44AD83>Water</color></link> using a pipe network, and sufficient light to generate photosynthesis. \nIt can be automated using the <link=ThingStructureHarvie><color=green>Harvie</color></link>. Note that unlike the <link=ThingStructureHydroponicsTray><color=green>Hydroponics Tray</color></link>, these cannot be placed consecutively as they are considered devices rather than pure pipes. They do, however, allow data interrogation for logic systems.",
      "PrefabName": "StructureHydroponicsTrayData",
      "PrefabHash": -1841632400,
      "SlotInserts": [
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Fertiliser",
          "SlotType": "Plant",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeEfficiency><color=orange>Efficiency</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeHealth><color=orange>Health</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeGrowth><color=orange>Growth</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMature><color=orange>Mature</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSeeding><color=orange>Seeding</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "Seeding": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "None"
          ],
          [
            "PipeLiquid",
            "None"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureHydroponicsStation",
      "Title": "Hydroponics Station",
      "Description": "",
      "PrefabName": "StructureHydroponicsStation",
      "PrefabHash": 1441767298,
      "SlotInserts": [
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "7"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeEfficiency><color=orange>Efficiency</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeHealth><color=orange>Health</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeGrowth><color=orange>Growth</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeMature><color=orange>Mature</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureHydroponicsTray",
      "Title": "Hydroponics Tray",
      "Description": "The <link=Agrizero><color=#0080FFFF>Agrizero</color></link> hydroponics tray is the ideal vessel for growing a range of <link=OrganicPage><color=#0080FFFF>plantlife</color></link>. It must be supplied with water using a pipe network, and sufficient light to generate photosynthesis. \nIt can be automated using the <link=ThingStructureHarvie><color=green>Harvie</color></link>.",
      "PrefabName": "StructureHydroponicsTray",
      "PrefabHash": 1464854517,
      "SlotInserts": [
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Fertiliser",
          "SlotType": "Plant",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingMotherboardProgrammableChip",
      "Title": "IC Editor Motherboard",
      "Description": "When placed in a <link=ThingStructureComputer><color=green>Computer</color></link>, the IC Editor allows players to write and edit IC code, which can then be uploaded to a <link=ThingItemIntegratedCircuit10><color=green>Integrated Circuit (IC10)</color></link> if housed in an <link=ThingStructureCircuitHousing><color=green>IC Housing</color></link>.",
      "PrefabName": "MotherboardProgrammableChip",
      "PrefabHash": -161107071,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Motherboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureCircuitHousing",
      "Title": "IC Housing",
      "Description": "",
      "PrefabName": "StructureCircuitHousing",
      "PrefabHash": -128473777,
      "SlotInserts": [
        {
          "SlotName": "Programmable Chip",
          "SlotType": "ProgrammableChip",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLineNumber><color=orange>LineNumber</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeLineNumber><color=orange>LineNumber</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "LineNumber": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "LineNumber": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Memory": {
        "MemorySize": 0,
        "MemorySizeReadable": "0 B",
        "MemoryAccess": "ReadWrite"
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "DevicesLength": 6,
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemNitrice",
      "Title": "Ice (Nitrice)",
      "Description": "Nitrice is the nickname given to solid <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> Ice, and found on many planets and moons in the Solar System. Given the inert nature of the <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> it produces, the ice is useful when making breathable atmospheres with low flammability.\n\nHighly sensitive to temperature, nitrice will begin to melt as soon as it is mined, unless the temperature is below zero, or it is stored in the <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>, <link=ThingItemMiningBeltAdvanced><color=green>Mining Belt MK II</color></link> or devices like the <link=ThingStructureIceCrusher><color=green>Ice Crusher</color></link> or <link=ThingStructureFridgeSmall><color=green>Fridge Small</color></link>.",
      "PrefabName": "ItemNitrice",
      "PrefabHash": -1499471529,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemOxite",
      "Title": "Ice (Oxite)",
      "Description": "Oxite ice is largely composed of frozen <link=GasOxygen><color=#44AD83>Oxygen</color></link>, and found on many planets in the Solar System. Highly valuable and sought after, not all planets a <link=Stationeers><color=#0080FFFF>Stationeer</color></link> visits will have some. \n\nHighly sensitive to temperature, oxite will begin to melt as soon as it is mined, unless the temperature is below zero, or it is stored in the <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>, <link=ThingItemMiningBeltAdvanced><color=green>Mining Belt MK II</color></link> or devices like the <link=ThingStructureIceCrusher><color=green>Ice Crusher</color></link> or <link=ThingStructureFridgeSmall><color=green>Fridge Small</color></link>. When melting, oxite produces a mixture of <link=GasOxygen><color=#44AD83>Oxygen</color></link> and <link=GasNitrogen><color=#44AD83>Nitrogen</color></link>.",
      "PrefabName": "ItemOxite",
      "PrefabHash": -1805394113,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemVolatiles",
      "Title": "Ice (Volatiles)",
      "Description": "An extremely reactive ice with numerous hydrocarbons trapped inside. For simplicity's sake, these are often displayed as H2 by devices like the <link=ThingCartridgeAtmosAnalyser><color=green>Atmos Analyzer</color></link>.\n      \n<link=GasVolatiles><color=#44AD83>Volatiles</color></link> combust in a 2:1 ratio with <link=GasOxygen><color=#44AD83>Oxygen</color></link>, creating <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> and pollutants. However when catalysed via devices such as the <link=ThingH2Combustor><color=green>H2 Combustor</color></link> in the presence of <link=GasOxygen><color=#44AD83>Oxygen</color></link>, they produce\n        <link=GasSteam><color=#44AD83>Steam</color></link> and heat with a modicum of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> and <link=GasPollutant><color=#44AD83>Pollutant</color></link> due to the autoignition of the volatiles in the chamber. Along with <link=GasOxygen><color=#44AD83>Oxygen</color></link>, volatiles gas is also the major component of fuel for such devices as the <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link>.\n",
      "PrefabName": "ItemVolatiles",
      "PrefabHash": 1253102035,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemIce",
      "Title": "Ice (Water)",
      "Description": "Water ice can be found on most planets in the Solar System, though not all worlds visited by <link=Stationeers><color=#0080FFFF>Stationeers</color></link> possess this resource. Highly sensitive to temperature, ice will begin to melt as soon as it is mined, unless kept in the <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>. When melting, ice produces a mixture of <link=GasSteam><color=#44AD83>Steam</color></link> and <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> gas.",
      "PrefabName": "ItemIce",
      "PrefabHash": 1217489948,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingStructureIceCrusher",
      "Title": "Ice Crusher",
      "Description": "The <link=Recurso><color=#0080FFFF>Recurso</color></link> KoolAuger converts various ices into their respective <link=GasPage><color=#0080FFFF>gases</color></link> and liquids.\nA remarkably smart and compact sublimation-melting unit, it produces gas or liquid depending on the ice being processed. The upper outlet is gas, the lower for liquid, and while you can attach any pipe you like to either outlet, it will only function if the correct network is attached. It will also only pass gas or liquid into a network if it is powered and turned on.\nIf the KoolAuger is full, it will not accept any further ice until the gas or liquid contents is drained. In this state, it will flash a yellow error state on the activation switch.",
      "PrefabName": "StructureIceCrusher",
      "PrefabHash": 443849486,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "Ore",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Pipe Liquid Output2",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ],
          [
            "Chute",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "PipeLiquid",
            "Output2"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureIgniter",
      "Title": "Igniter",
      "Description": "It gets the party started. Especially if that party is an explosive gas mixture.",
      "PrefabName": "StructureIgniter",
      "PrefabHash": 1005491513,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureEmergencyButton",
      "Title": "Important Button",
      "Description": "Description coming.",
      "PrefabName": "StructureEmergencyButton",
      "PrefabHash": 1668452680,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureInLineTankGas1x2",
      "Title": "In-Line Tank Gas",
      "Description": "A small expansion tank that increases the volume of a pipe network.",
      "PrefabName": "StructureInLineTankGas1x2",
      "PrefabHash": 35149429,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureInLineTankLiquid1x2",
      "Title": "In-Line Tank Liquid",
      "Description": "A small expansion tank that increases the volume of a pipe network.",
      "PrefabName": "StructureInLineTankLiquid1x2",
      "PrefabHash": -1183969663,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureInLineTankGas1x1",
      "Title": "In-Line Tank Small Gas",
      "Description": "A small expansion tank that increases the volume of a pipe network.",
      "PrefabName": "StructureInLineTankGas1x1",
      "PrefabHash": -1693382705,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureInLineTankLiquid1x1",
      "Title": "In-Line Tank Small Liquid",
      "Description": "A small expansion tank that increases the volume of a pipe network.",
      "PrefabName": "StructureInLineTankLiquid1x1",
      "PrefabHash": 543645499,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingItemAstroloyIngot",
      "Title": "Ingot (Astroloy)",
      "Description": "Due to the original Stationeer manual collapsing into a singularity, Astroloy recipes have been warped by spacetime contortions. The correct Astroloy recipe, as memorialized for all time in a series of charming plastic icons, is 1.0 Copper, 1.0 Cobalt, and 2.0 Steel.",
      "PrefabName": "ItemAstroloyIngot",
      "PrefabHash": 412924554,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Astroloy": 1.0
        }
      }
    },
    {
      "Key": "ThingItemConstantanIngot",
      "Title": "Ingot (Constantan)",
      "Description": "",
      "PrefabName": "ItemConstantanIngot",
      "PrefabHash": 1058547521,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Constantan": 1.0
        }
      }
    },
    {
      "Key": "ThingItemCopperIngot",
      "Title": "Ingot (Copper)",
      "Description": "Copper ingots are created by smelting <link=ThingItemCopperOre><color=green>Ore (Copper)</color></link> in the <link=ThingStructureFurnace><color=green>Furnace</color></link> and <link=ThingStructureArcFurnace><color=green>Arc Furnace</color></link>, and used to create a variety of items.",
      "PrefabName": "ItemCopperIngot",
      "PrefabHash": -404336834,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Copper": 1.0
        }
      }
    },
    {
      "Key": "ThingItemElectrumIngot",
      "Title": "Ingot (Electrum)",
      "Description": "",
      "PrefabName": "ItemElectrumIngot",
      "PrefabHash": 502280180,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Electrum": 1.0
        }
      }
    },
    {
      "Key": "ThingItemGoldIngot",
      "Title": "Ingot (Gold)",
      "Description": "There is an enduring paradox at the heart of the <link=Stationeers><color=#0080FFFF>Stationeers</color></link> project: An initiative conceived as 'cut-price space exploration' uses <link=ReagentGold><color=#B566FF>Gold</color></link> as a fundamental ingredient in fabricating so much of its equipment and materiel. ",
      "PrefabName": "ItemGoldIngot",
      "PrefabHash": 226410516,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Gold": 1.0
        }
      }
    },
    {
      "Key": "ThingItemHastelloyIngot",
      "Title": "Ingot (Hastelloy)",
      "Description": "",
      "PrefabName": "ItemHastelloyIngot",
      "PrefabHash": 1579842814,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Hastelloy": 1.0
        }
      }
    },
    {
      "Key": "ThingItemInconelIngot",
      "Title": "Ingot (Inconel)",
      "Description": "",
      "PrefabName": "ItemInconelIngot",
      "PrefabHash": -787796599,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Inconel": 1.0
        }
      }
    },
    {
      "Key": "ThingItemInvarIngot",
      "Title": "Ingot (Invar)",
      "Description": "",
      "PrefabName": "ItemInvarIngot",
      "PrefabHash": -297990285,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Invar": 1.0
        }
      }
    },
    {
      "Key": "ThingItemIronIngot",
      "Title": "Ingot (Iron)",
      "Description": "The most basic unit of construction available to <link=Stationeers><color=#0080FFFF>Stationeer</color></link>-kind, iron ingots are created by smelting <link=ThingItemIronOre><color=green>Ore (Iron)</color></link> in the <link=ThingStructureFurnace><color=green>Furnace</color></link> and <link=ThingStructureArcFurnace><color=green>Arc Furnace</color></link>, and used to create a variety of items.",
      "PrefabName": "ItemIronIngot",
      "PrefabHash": -1301215609,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Iron": 1.0
        }
      }
    },
    {
      "Key": "ThingItemLeadIngot",
      "Title": "Ingot (Lead)",
      "Description": "",
      "PrefabName": "ItemLeadIngot",
      "PrefabHash": 2134647745,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Lead": 1.0
        }
      }
    },
    {
      "Key": "ThingItemNickelIngot",
      "Title": "Ingot (Nickel)",
      "Description": "",
      "PrefabName": "ItemNickelIngot",
      "PrefabHash": -1406385572,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Nickel": 1.0
        }
      }
    },
    {
      "Key": "ThingItemSiliconIngot",
      "Title": "Ingot (Silicon)",
      "Description": "",
      "PrefabName": "ItemSiliconIngot",
      "PrefabHash": -290196476,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Silicon": 1.0
        }
      }
    },
    {
      "Key": "ThingItemSilverIngot",
      "Title": "Ingot (Silver)",
      "Description": "",
      "PrefabName": "ItemSilverIngot",
      "PrefabHash": -929742000,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Silver": 1.0
        }
      }
    },
    {
      "Key": "ThingItemSolderIngot",
      "Title": "Ingot (Solder)",
      "Description": "",
      "PrefabName": "ItemSolderIngot",
      "PrefabHash": -82508479,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Solder": 1.0
        }
      }
    },
    {
      "Key": "ThingItemSteelIngot",
      "Title": "Ingot (Steel)",
      "Description": "Steel ingots are a metal alloy, crafted in a <link=ThingStructureFurnace><color=green>Furnace</color></link> by smelting <link=ThingItemIronOre><color=green>Ore (Iron)</color></link> and <link=ThingItemCoalOre><color=green>Ore (Coal)</color></link> at a ratio of 3:1.\nIt may not be elegant, but <link=ThingItemOxite><color=green>Ice (Oxite)</color></link> and <link=ThingItemVolatiles><color=green>Ice (Volatiles)</color></link> can be combined at a ratio of 1:2 in a furnace to create the necessary gas mixture for smelting.",
      "PrefabName": "ItemSteelIngot",
      "PrefabHash": -654790771,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Steel": 1.0
        }
      }
    },
    {
      "Key": "ThingItemStelliteIngot",
      "Title": "Ingot (Stellite)",
      "Description": "",
      "PrefabName": "ItemStelliteIngot",
      "PrefabHash": -1897868623,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Stellite": 1.0
        }
      }
    },
    {
      "Key": "ThingItemWaspaloyIngot",
      "Title": "Ingot (Waspaloy)",
      "Description": "",
      "PrefabName": "ItemWaspaloyIngot",
      "PrefabHash": 156348098,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ingot",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Waspaloy": 1.0
        }
      }
    },
    {
      "Key": "ThingStructureInsulatedInLineTankGas1x2",
      "Title": "Insulated In-Line Tank Gas",
      "Description": "",
      "PrefabName": "StructureInsulatedInLineTankGas1x2",
      "PrefabHash": -177610944,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedInLineTankLiquid1x2",
      "Title": "Insulated In-Line Tank Liquid",
      "Description": "",
      "PrefabName": "StructureInsulatedInLineTankLiquid1x2",
      "PrefabHash": 1452100517,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedInLineTankGas1x1",
      "Title": "Insulated In-Line Tank Small Gas",
      "Description": "",
      "PrefabName": "StructureInsulatedInLineTankGas1x1",
      "PrefabHash": 1818267386,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedInLineTankLiquid1x1",
      "Title": "Insulated In-Line Tank Small Liquid",
      "Description": "",
      "PrefabName": "StructureInsulatedInLineTankLiquid1x1",
      "PrefabHash": -813426145,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeLiquidCrossJunction",
      "Title": "Insulated Liquid Pipe (3-Way Junction)",
      "Description": "Liquid piping with very low temperature loss or gain.",
      "PrefabName": "StructureInsulatedPipeLiquidCrossJunction",
      "PrefabHash": 1926651727,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeLiquidCrossJunction4",
      "Title": "Insulated Liquid Pipe (4-Way Junction)",
      "Description": "Liquid piping with very low temperature loss or gain.",
      "PrefabName": "StructureInsulatedPipeLiquidCrossJunction4",
      "PrefabHash": 363303270,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeLiquidCrossJunction5",
      "Title": "Insulated Liquid Pipe (5-Way Junction)",
      "Description": "Liquid piping with very low temperature loss or gain.",
      "PrefabName": "StructureInsulatedPipeLiquidCrossJunction5",
      "PrefabHash": 1654694384,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeLiquidCrossJunction6",
      "Title": "Insulated Liquid Pipe (6-Way Junction)",
      "Description": "Liquid piping with very low temperature loss or gain.",
      "PrefabName": "StructureInsulatedPipeLiquidCrossJunction6",
      "PrefabHash": -72748982,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "5"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeLiquidCorner",
      "Title": "Insulated Liquid Pipe (Corner)",
      "Description": "Liquid piping with very low temperature loss or gain.",
      "PrefabName": "StructureInsulatedPipeLiquidCorner",
      "PrefabHash": 1713710802,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeInsulatedLiquidCrossJunction",
      "Title": "Insulated Liquid Pipe (Cross Junction)",
      "Description": "Liquid piping with very low temperature loss or gain.",
      "PrefabName": "StructurePipeInsulatedLiquidCrossJunction",
      "PrefabHash": -2068497073,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeLiquidStraight",
      "Title": "Insulated Liquid Pipe (Straight)",
      "Description": "Liquid piping with very low temperature loss or gain.",
      "PrefabName": "StructureInsulatedPipeLiquidStraight",
      "PrefabHash": 295678685,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeLiquidTJunction",
      "Title": "Insulated Liquid Pipe (T Junction)",
      "Description": "Liquid piping with very low temperature loss or gain.",
      "PrefabName": "StructureInsulatedPipeLiquidTJunction",
      "PrefabHash": -532384855,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructureLiquidTankBigInsulated",
      "Title": "Insulated Liquid Tank Big",
      "Description": "",
      "PrefabName": "StructureLiquidTankBigInsulated",
      "PrefabHash": -1430440215,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidTankSmallInsulated",
      "Title": "Insulated Liquid Tank Small",
      "Description": "",
      "PrefabName": "StructureLiquidTankSmallInsulated",
      "PrefabHash": 608607718,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePassiveVentInsulated",
      "Title": "Insulated Passive Vent",
      "Description": "",
      "PrefabName": "StructurePassiveVentInsulated",
      "PrefabHash": 1363077139,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeCrossJunction3",
      "Title": "Insulated Pipe (3-Way Junction)",
      "Description": "Insulated pipes greatly reduce heat loss from gases stored in them.",
      "PrefabName": "StructureInsulatedPipeCrossJunction3",
      "PrefabHash": 1328210035,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeCrossJunction4",
      "Title": "Insulated Pipe (4-Way Junction)",
      "Description": "Insulated pipes greatly reduce heat loss from gases stored in them.",
      "PrefabName": "StructureInsulatedPipeCrossJunction4",
      "PrefabHash": -783387184,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeCrossJunction5",
      "Title": "Insulated Pipe (5-Way Junction)",
      "Description": "Insulated pipes greatly reduce heat loss from gases stored in them.",
      "PrefabName": "StructureInsulatedPipeCrossJunction5",
      "PrefabHash": -1505147578,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeCrossJunction6",
      "Title": "Insulated Pipe (6-Way Junction)",
      "Description": "Insulated pipes greatly reduce heat loss from gases stored in them.",
      "PrefabName": "StructureInsulatedPipeCrossJunction6",
      "PrefabHash": 1061164284,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "5"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeCorner",
      "Title": "Insulated Pipe (Corner)",
      "Description": "Insulated pipes greatly reduce heat loss from gases stored in them.",
      "PrefabName": "StructureInsulatedPipeCorner",
      "PrefabHash": -1967711059,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeCrossJunction",
      "Title": "Insulated Pipe (Cross Junction)",
      "Description": "Insulated pipes greatly reduce heat loss from gases stored in them.",
      "PrefabName": "StructureInsulatedPipeCrossJunction",
      "PrefabHash": -92778058,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeStraight",
      "Title": "Insulated Pipe (Straight)",
      "Description": "Insulated pipes greatly reduce heat loss from gases stored in them.",
      "PrefabName": "StructureInsulatedPipeStraight",
      "PrefabHash": 2134172356,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedPipeTJunction",
      "Title": "Insulated Pipe (T Junction)",
      "Description": "Insulated pipes greatly reduce heat loss from gases stored in them.",
      "PrefabName": "StructureInsulatedPipeTJunction",
      "PrefabHash": -2076086215,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedTankConnector",
      "Title": "Insulated Tank Connector",
      "Description": "",
      "PrefabName": "StructureInsulatedTankConnector",
      "PrefabHash": -31273349,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ]
    },
    {
      "Key": "ThingStructureInsulatedTankConnectorLiquid",
      "Title": "Insulated Tank Connector Liquid",
      "Description": "",
      "PrefabName": "StructureInsulatedTankConnectorLiquid",
      "PrefabHash": -1602030414,
      "SlotInserts": [
        {
          "SlotName": "Portable Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ]
    },
    {
      "Key": "ThingItemInsulation",
      "Title": "Insulation",
      "Description": "Mysterious in the extreme, the function of this item is lost to the ages.",
      "PrefabName": "ItemInsulation",
      "PrefabHash": 897176943,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources"
      }
    },
    {
      "Key": "ThingItemIntegratedCircuit10",
      "Title": "Integrated Circuit (IC10)",
      "Description": "",
      "PrefabName": "ItemIntegratedCircuit10",
      "PrefabHash": -744098481,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeLineNumber><color=orange>LineNumber</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "LineNumber": "Read",
          "ReferenceId": "Read"
        }
      },
      "Memory": {
        "MemorySize": 512,
        "MemorySizeReadable": "4096 KB",
        "MemoryAccess": "ReadWrite"
      },
      "Item": {
        "SlotClass": "ProgrammableChip",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureInteriorDoorGlass",
      "Title": "Interior Door Glass",
      "Description": "0.Operate\n1.Logic",
      "PrefabName": "StructureInteriorDoorGlass",
      "PrefabHash": -2096421875,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureInteriorDoorPadded",
      "Title": "Interior Door Padded",
      "Description": "0.Operate\n1.Logic",
      "PrefabName": "StructureInteriorDoorPadded",
      "PrefabHash": 847461335,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureInteriorDoorPaddedThin",
      "Title": "Interior Door Padded Thin",
      "Description": "0.Operate\n1.Logic",
      "PrefabName": "StructureInteriorDoorPaddedThin",
      "PrefabHash": 1981698201,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureInteriorDoorTriangle",
      "Title": "Interior Door Triangle",
      "Description": "0.Operate\n1.Logic",
      "PrefabName": "StructureInteriorDoorTriangle",
      "PrefabHash": -1182923101,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureFrameIron",
      "Title": "Iron Frame",
      "Description": "",
      "PrefabName": "StructureFrameIron",
      "PrefabHash": -1240951678,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingItemIronFrames",
      "Title": "Iron Frames",
      "Description": "",
      "PrefabName": "ItemIronFrames",
      "PrefabHash": 1225836666,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 30.0
      }
    },
    {
      "Key": "ThingItemIronSheets",
      "Title": "Iron Sheets",
      "Description": "",
      "PrefabName": "ItemIronSheets",
      "PrefabHash": -487378546,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingStructureWallIron",
      "Title": "Iron Wall (Type 1)",
      "Description": "",
      "PrefabName": "StructureWallIron",
      "PrefabHash": 1287324802,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallIron02",
      "Title": "Iron Wall (Type 2)",
      "Description": "",
      "PrefabName": "StructureWallIron02",
      "PrefabHash": 1485834215,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallIron03",
      "Title": "Iron Wall (Type 3)",
      "Description": "",
      "PrefabName": "StructureWallIron03",
      "PrefabHash": 798439281,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallIron04",
      "Title": "Iron Wall (Type 4)",
      "Description": "",
      "PrefabName": "StructureWallIron04",
      "PrefabHash": -1309433134,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureCompositeWindowIron",
      "Title": "Iron Window",
      "Description": "",
      "PrefabName": "StructureCompositeWindowIron",
      "PrefabHash": -688284639,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingItemJetpackBasic",
      "Title": "Jetpack Basic",
      "Description": "The basic <link=CHAC><color=#0080FFFF>CHAC</color></link> jetpack isn't 'technically' a jetpack, it's a gas thruster. It can be powered by any gas, so long as the internal pressure of the <link=AtmosphericsPage><color=#0080FFFF>canister</color></link> is higher than the ambient external pressure. If the external pressure is greater, the spacepack will not function.\nIndispensable for building, mining and general movement, it has ten storage slots and lets <link=Stationeers><color=#0080FFFF>Stationeers</color></link> fly at 3m/s, compared to the more powerful <link=ThingItemHardJetpack><color=green>Hardsuit Jetpack</color></link>. Adjusting the thrust value alters your rate of acceleration, while activating the stabilizer causes the spacepack to hover when a given height is reached.\nUSE: 'J' to activate; 'space' to fly up; 'left ctrl' to descend; and 'WASD' to move.",
      "PrefabName": "ItemJetpackBasic",
      "PrefabHash": 1969189000,
      "SlotInserts": [
        {
          "SlotName": "Propellant",
          "SlotType": "GasCanister",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "9"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Back",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingUniformOrangeJumpSuit",
      "Title": "Jump Suit (Orange)",
      "Description": "",
      "PrefabName": "UniformOrangeJumpSuit",
      "PrefabHash": 810053150,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Access Card",
          "SlotType": "AccessCard",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Credit Card",
          "SlotType": "CreditCard",
          "SlotIndex": "3"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Uniform",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemKitAIMeE",
      "Title": "Kit (AIMeE)",
      "Description": "",
      "PrefabName": "ItemKitAIMeE",
      "PrefabHash": 496830914,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitAccessBridge",
      "Title": "Kit (Access Bridge)",
      "Description": "",
      "PrefabName": "ItemKitAccessBridge",
      "PrefabHash": 513258369,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemActiveVent",
      "Title": "Kit (Active Vent)",
      "Description": "When constructed, this kit places an <link=ThingStructureActiveVent><color=green>Active Vent</color></link> on any support structure.",
      "PrefabName": "ItemActiveVent",
      "PrefabHash": -842048328,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitAdvancedComposter",
      "Title": "Kit (Advanced Composter)",
      "Description": "",
      "PrefabName": "ItemKitAdvancedComposter",
      "PrefabHash": -1431998347,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitAdvancedFurnace",
      "Title": "Kit (Advanced Furnace)",
      "Description": "",
      "PrefabName": "ItemKitAdvancedFurnace",
      "PrefabHash": -616758353,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitAdvancedPackagingMachine",
      "Title": "Kit (Advanced Packaging Machine)",
      "Description": "",
      "PrefabName": "ItemKitAdvancedPackagingMachine",
      "PrefabHash": -598545233,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitAirlock",
      "Title": "Kit (Airlock)",
      "Description": "",
      "PrefabName": "ItemKitAirlock",
      "PrefabHash": 964043875,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitArcFurnace",
      "Title": "Kit (Arc Furnace)",
      "Description": "",
      "PrefabName": "ItemKitArcFurnace",
      "PrefabHash": -98995857,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitWallArch",
      "Title": "Kit (Arched Wall)",
      "Description": "",
      "PrefabName": "ItemKitWallArch",
      "PrefabHash": 1625214531,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 30.0
      }
    },
    {
      "Key": "ThingItemKitAtmospherics",
      "Title": "Kit (Atmospherics)",
      "Description": "",
      "PrefabName": "ItemKitAtmospherics",
      "PrefabHash": 1222286371,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitAutolathe",
      "Title": "Kit (Autolathe)",
      "Description": "",
      "PrefabName": "ItemKitAutolathe",
      "PrefabHash": -1753893214,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitHydroponicAutomated",
      "Title": "Kit (Automated Hydroponics)",
      "Description": "",
      "PrefabName": "ItemKitHydroponicAutomated",
      "PrefabHash": -927931558,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitAutomatedOven",
      "Title": "Kit (Automated Oven)",
      "Description": "",
      "PrefabName": "ItemKitAutomatedOven",
      "PrefabHash": -1931958659,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitAutoMinerSmall",
      "Title": "Kit (Autominer Small)",
      "Description": "",
      "PrefabName": "ItemKitAutoMinerSmall",
      "PrefabHash": 1668815415,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitRocketAvionics",
      "Title": "Kit (Avionics)",
      "Description": "",
      "PrefabName": "ItemKitRocketAvionics",
      "PrefabHash": 1396305045,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitChute",
      "Title": "Kit (Basic Chutes)",
      "Description": "",
      "PrefabName": "ItemKitChute",
      "PrefabHash": 1025254665,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitBasket",
      "Title": "Kit (Basket)",
      "Description": "",
      "PrefabName": "ItemKitBasket",
      "PrefabHash": 148305004,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemBatteryCharger",
      "Title": "Kit (Battery Charger)",
      "Description": "This kit produces a 5-slot <link=ThingItemBatteryCharger><color=green>Kit (Battery Charger)</color></link>.",
      "PrefabName": "ItemBatteryCharger",
      "PrefabHash": -1866880307,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitBatteryLarge",
      "Title": "Kit (Battery Large)",
      "Description": "",
      "PrefabName": "ItemKitBatteryLarge",
      "PrefabHash": -21225041,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitBattery",
      "Title": "Kit (Battery)",
      "Description": "",
      "PrefabName": "ItemKitBattery",
      "PrefabHash": 1406656973,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitBeacon",
      "Title": "Kit (Beacon)",
      "Description": "",
      "PrefabName": "ItemKitBeacon",
      "PrefabHash": 249073136,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitBeds",
      "Title": "Kit (Beds)",
      "Description": "",
      "PrefabName": "ItemKitBeds",
      "PrefabHash": -1241256797,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitBlastDoor",
      "Title": "Kit (Blast Door)",
      "Description": "",
      "PrefabName": "ItemKitBlastDoor",
      "PrefabHash": -1755116240,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemCableAnalyser",
      "Title": "Kit (Cable Analyzer)",
      "Description": "",
      "PrefabName": "ItemCableAnalyser",
      "PrefabHash": -1792787349,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemCableFuse",
      "Title": "Kit (Cable Fuses)",
      "Description": "",
      "PrefabName": "ItemCableFuse",
      "PrefabHash": 195442047,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemGasTankStorage",
      "Title": "Kit (Canister Storage)",
      "Description": "This kit produces a <link=ThingItemGasTankStorage><color=green>Kit (Canister Storage)</color></link> for refilling a <link=ThingItemGasCanisterEmpty><color=green>Canister</color></link>.",
      "PrefabName": "ItemGasTankStorage",
      "PrefabHash": -2113012215,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitCentrifuge",
      "Title": "Kit (Centrifuge)",
      "Description": "",
      "PrefabName": "ItemKitCentrifuge",
      "PrefabHash": 578182956,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitChairs",
      "Title": "Kit (Chairs)",
      "Description": "",
      "PrefabName": "ItemKitChairs",
      "PrefabHash": -1394008073,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitChuteUmbilical",
      "Title": "Kit (Chute Umbilical)",
      "Description": "",
      "PrefabName": "ItemKitChuteUmbilical",
      "PrefabHash": -876560854,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitCompositeCladding",
      "Title": "Kit (Cladding)",
      "Description": "",
      "PrefabName": "ItemKitCompositeCladding",
      "PrefabHash": -1470820996,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingKitStructureCombustionCentrifuge",
      "Title": "Kit (Combustion Centrifuge)",
      "Description": "",
      "PrefabName": "KitStructureCombustionCentrifuge",
      "PrefabHash": 231903234,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitComputer",
      "Title": "Kit (Computer)",
      "Description": "",
      "PrefabName": "ItemKitComputer",
      "PrefabHash": 1990225489,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitConsole",
      "Title": "Kit (Consoles)",
      "Description": "",
      "PrefabName": "ItemKitConsole",
      "PrefabHash": -1241851179,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitCrateMount",
      "Title": "Kit (Container Mount)",
      "Description": "",
      "PrefabName": "ItemKitCrateMount",
      "PrefabHash": -551612946,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitPassthroughHeatExchanger",
      "Title": "Kit (CounterFlow Heat Exchanger)",
      "Description": "",
      "PrefabName": "ItemKitPassthroughHeatExchanger",
      "PrefabHash": 636112787,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitCrateMkII",
      "Title": "Kit (Crate Mk II)",
      "Description": "",
      "PrefabName": "ItemKitCrateMkII",
      "PrefabHash": -1585956426,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitCrate",
      "Title": "Kit (Crate)",
      "Description": "",
      "PrefabName": "ItemKitCrate",
      "PrefabHash": 429365598,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemRTG",
      "Title": "Kit (Creative RTG)",
      "Description": "This kit creates that miracle of modern science, a <link=ThingItemRTG><color=green>Kit (Creative RTG)</color></link>.",
      "PrefabName": "ItemRTG",
      "PrefabHash": 495305053,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitCryoTube",
      "Title": "Kit (Cryo Tube)",
      "Description": "",
      "PrefabName": "ItemKitCryoTube",
      "PrefabHash": -545234195,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitDeepMiner",
      "Title": "Kit (Deep Miner)",
      "Description": "",
      "PrefabName": "ItemKitDeepMiner",
      "PrefabHash": -1935075707,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemPipeDigitalValve",
      "Title": "Kit (Digital Valve)",
      "Description": "This kit creates a <link=ThingStructureDigitalValve><color=green>Digital Valve</color></link>.",
      "PrefabName": "ItemPipeDigitalValve",
      "PrefabHash": -1532448832,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitDockingPort",
      "Title": "Kit (Docking Port)",
      "Description": "",
      "PrefabName": "ItemKitDockingPort",
      "PrefabHash": 77421200,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitDoor",
      "Title": "Kit (Door)",
      "Description": "",
      "PrefabName": "ItemKitDoor",
      "PrefabHash": 168615924,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitDrinkingFountain",
      "Title": "Kit (Drinking Fountain)",
      "Description": "",
      "PrefabName": "ItemKitDrinkingFountain",
      "PrefabHash": -1743663875,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitElectronicsPrinter",
      "Title": "Kit (Electronics Printer)",
      "Description": "",
      "PrefabName": "ItemKitElectronicsPrinter",
      "PrefabHash": -1181922382,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitElevator",
      "Title": "Kit (Elevator)",
      "Description": "",
      "PrefabName": "ItemKitElevator",
      "PrefabHash": -945806652,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitEngineLarge",
      "Title": "Kit (Engine Large)",
      "Description": "",
      "PrefabName": "ItemKitEngineLarge",
      "PrefabHash": 755302726,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitEngineMedium",
      "Title": "Kit (Engine Medium)",
      "Description": "",
      "PrefabName": "ItemKitEngineMedium",
      "PrefabHash": 1969312177,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitEngineSmall",
      "Title": "Kit (Engine Small)",
      "Description": "",
      "PrefabName": "ItemKitEngineSmall",
      "PrefabHash": 19645163,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemFlashingLight",
      "Title": "Kit (Flashing Light)",
      "Description": "",
      "PrefabName": "ItemFlashingLight",
      "PrefabHash": -2107840748,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitWallFlat",
      "Title": "Kit (Flat Wall)",
      "Description": "",
      "PrefabName": "ItemKitWallFlat",
      "PrefabHash": -846838195,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 30.0
      }
    },
    {
      "Key": "ThingItemKitCompositeFloorGrating",
      "Title": "Kit (Floor Grating)",
      "Description": "",
      "PrefabName": "ItemKitCompositeFloorGrating",
      "PrefabHash": 1182412869,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitFridgeBig",
      "Title": "Kit (Fridge Large)",
      "Description": "",
      "PrefabName": "ItemKitFridgeBig",
      "PrefabHash": -1168199498,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitFridgeSmall",
      "Title": "Kit (Fridge Small)",
      "Description": "",
      "PrefabName": "ItemKitFridgeSmall",
      "PrefabHash": 1661226524,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitFurnace",
      "Title": "Kit (Furnace)",
      "Description": "",
      "PrefabName": "ItemKitFurnace",
      "PrefabHash": -806743925,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitFurniture",
      "Title": "Kit (Furniture)",
      "Description": "",
      "PrefabName": "ItemKitFurniture",
      "PrefabHash": 1162905029,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitFuselage",
      "Title": "Kit (Fuselage)",
      "Description": "",
      "PrefabName": "ItemKitFuselage",
      "PrefabHash": -366262681,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitGasGenerator",
      "Title": "Kit (Gas Fuel Generator)",
      "Description": "",
      "PrefabName": "ItemKitGasGenerator",
      "PrefabHash": 377745425,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemPipeGasMixer",
      "Title": "Kit (Gas Mixer)",
      "Description": "This kit creates a <link=ThingStructureGasMixer><color=green>Gas Mixer</color></link>.",
      "PrefabName": "ItemPipeGasMixer",
      "PrefabHash": -1134459463,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemGasSensor",
      "Title": "Kit (Gas Sensor)",
      "Description": "",
      "PrefabName": "ItemGasSensor",
      "PrefabHash": 1717593480,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitGasUmbilical",
      "Title": "Kit (Gas Umbilical)",
      "Description": "",
      "PrefabName": "ItemKitGasUmbilical",
      "PrefabHash": -1867280568,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitWallGeometry",
      "Title": "Kit (Geometric Wall)",
      "Description": "",
      "PrefabName": "ItemKitWallGeometry",
      "PrefabHash": -784733231,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 30.0
      }
    },
    {
      "Key": "ThingItemKitGrowLight",
      "Title": "Kit (Grow Light)",
      "Description": "",
      "PrefabName": "ItemKitGrowLight",
      "PrefabHash": 341030083,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitAirlockGate",
      "Title": "Kit (Hangar Door)",
      "Description": "",
      "PrefabName": "ItemKitAirlockGate",
      "PrefabHash": 682546947,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitHarvie",
      "Title": "Kit (Harvie)",
      "Description": "",
      "PrefabName": "ItemKitHarvie",
      "PrefabHash": -1022693454,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitHydraulicPipeBender",
      "Title": "Kit (Hydraulic Pipe Bender)",
      "Description": "",
      "PrefabName": "ItemKitHydraulicPipeBender",
      "PrefabHash": -2098556089,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitHydroponicStation",
      "Title": "Kit (Hydroponic Station)",
      "Description": "",
      "PrefabName": "ItemKitHydroponicStation",
      "PrefabHash": 2057179799,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemHydroponicTray",
      "Title": "Kit (Hydroponic Tray)",
      "Description": "This kits creates a <link=ThingStructureHydroponicsTray><color=green>Hydroponics Tray</color></link> for growing various plants.",
      "PrefabName": "ItemHydroponicTray",
      "PrefabHash": -1193543727,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitLogicCircuit",
      "Title": "Kit (IC Housing)",
      "Description": "",
      "PrefabName": "ItemKitLogicCircuit",
      "PrefabHash": 1512322581,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitIceCrusher",
      "Title": "Kit (Ice Crusher)",
      "Description": "",
      "PrefabName": "ItemKitIceCrusher",
      "PrefabHash": 288111533,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemIgniter",
      "Title": "Kit (Igniter)",
      "Description": "This kit creates an <link=ThingItemIgniter><color=green>Kit (Igniter)</color></link> unit.",
      "PrefabName": "ItemIgniter",
      "PrefabHash": 890106742,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitInsulatedLiquidPipe",
      "Title": "Kit (Insulated Liquid Pipe)",
      "Description": "",
      "PrefabName": "ItemKitInsulatedLiquidPipe",
      "PrefabHash": 2067655311,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 20.0
      }
    },
    {
      "Key": "ThingItemKitLiquidTankInsulated",
      "Title": "Kit (Insulated Liquid Tank)",
      "Description": "",
      "PrefabName": "ItemKitLiquidTankInsulated",
      "PrefabHash": 617773453,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemPassiveVentInsulated",
      "Title": "Kit (Insulated Passive Vent)",
      "Description": "",
      "PrefabName": "ItemPassiveVentInsulated",
      "PrefabHash": -1397583760,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitInsulatedPipeUtility",
      "Title": "Kit (Insulated Pipe Utility Gas)",
      "Description": "",
      "PrefabName": "ItemKitInsulatedPipeUtility",
      "PrefabHash": -27284803,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitInsulatedPipeUtilityLiquid",
      "Title": "Kit (Insulated Pipe Utility Liquid)",
      "Description": "",
      "PrefabName": "ItemKitInsulatedPipeUtilityLiquid",
      "PrefabHash": -1831558953,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitInsulatedPipe",
      "Title": "Kit (Insulated Pipe)",
      "Description": "",
      "PrefabName": "ItemKitInsulatedPipe",
      "PrefabHash": 452636699,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 20.0
      }
    },
    {
      "Key": "ThingItemKitInteriorDoors",
      "Title": "Kit (Interior Doors)",
      "Description": "",
      "PrefabName": "ItemKitInteriorDoors",
      "PrefabHash": 1935945891,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitWallIron",
      "Title": "Kit (Iron Wall)",
      "Description": "",
      "PrefabName": "ItemKitWallIron",
      "PrefabHash": -524546923,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 30.0
      }
    },
    {
      "Key": "ThingItemKitLadder",
      "Title": "Kit (Ladder)",
      "Description": "",
      "PrefabName": "ItemKitLadder",
      "PrefabHash": 489494578,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitLandingPadAtmos",
      "Title": "Kit (Landing Pad Atmospherics)",
      "Description": "",
      "PrefabName": "ItemKitLandingPadAtmos",
      "PrefabHash": 1817007843,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitLandingPadBasic",
      "Title": "Kit (Landing Pad Basic)",
      "Description": "",
      "PrefabName": "ItemKitLandingPadBasic",
      "PrefabHash": 293581318,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitLandingPadWaypoint",
      "Title": "Kit (Landing Pad Runway)",
      "Description": "",
      "PrefabName": "ItemKitLandingPadWaypoint",
      "PrefabHash": -1267511065,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitLargeDirectHeatExchanger",
      "Title": "Kit (Large Direct Heat Exchanger)",
      "Description": "",
      "PrefabName": "ItemKitLargeDirectHeatExchanger",
      "PrefabHash": 450164077,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitLargeExtendableRadiator",
      "Title": "Kit (Large Extendable Radiator)",
      "Description": "",
      "PrefabName": "ItemKitLargeExtendableRadiator",
      "PrefabHash": 847430620,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitLargeSatelliteDish",
      "Title": "Kit (Large Satellite Dish)",
      "Description": "",
      "PrefabName": "ItemKitLargeSatelliteDish",
      "PrefabHash": -2039971217,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitLaunchMount",
      "Title": "Kit (Launch Mount)",
      "Description": "",
      "PrefabName": "ItemKitLaunchMount",
      "PrefabHash": -1854167549,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemWallLight",
      "Title": "Kit (Lights)",
      "Description": "This kit creates any one of ten <link=ThingItemWallLight><color=green>Kit (Lights)</color></link> variants.",
      "PrefabName": "ItemWallLight",
      "PrefabHash": 1108423476,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemLiquidTankStorage",
      "Title": "Kit (Liquid Canister Storage)",
      "Description": "This kit produces a <link=ThingItemLiquidTankStorage><color=green>Kit (Liquid Canister Storage)</color></link> for refilling a <link=ThingItemLiquidCanisterEmpty><color=green>Liquid Canister</color></link>.",
      "PrefabName": "ItemLiquidTankStorage",
      "PrefabHash": 2037427578,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemWaterPipeDigitalValve",
      "Title": "Kit (Liquid Digital Valve)",
      "Description": "",
      "PrefabName": "ItemWaterPipeDigitalValve",
      "PrefabHash": 309693520,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemLiquidDrain",
      "Title": "Kit (Liquid Drain)",
      "Description": "",
      "PrefabName": "ItemLiquidDrain",
      "PrefabHash": 2036225202,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemLiquidPipeAnalyzer",
      "Title": "Kit (Liquid Pipe Analyzer)",
      "Description": "",
      "PrefabName": "ItemLiquidPipeAnalyzer",
      "PrefabHash": 226055671,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemWaterPipeMeter",
      "Title": "Kit (Liquid Pipe Meter)",
      "Description": "",
      "PrefabName": "ItemWaterPipeMeter",
      "PrefabHash": -90898877,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemLiquidPipeValve",
      "Title": "Kit (Liquid Pipe Valve)",
      "Description": "This kit creates a <link=ThingStructureLiquidValve><color=green>Liquid Valve</color></link>.",
      "PrefabName": "ItemLiquidPipeValve",
      "PrefabHash": -2126113312,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitPipeLiquid",
      "Title": "Kit (Liquid Pipe)",
      "Description": "",
      "PrefabName": "ItemKitPipeLiquid",
      "PrefabHash": -1166461357,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 20.0
      }
    },
    {
      "Key": "ThingItemPipeLiquidRadiator",
      "Title": "Kit (Liquid Radiator)",
      "Description": "This kit creates a <link=ThingStructureLiquidPipeRadiator><color=green>Liquid Pipe Convection Radiator</color></link>.",
      "PrefabName": "ItemPipeLiquidRadiator",
      "PrefabHash": -906521320,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitLiquidRegulator",
      "Title": "Kit (Liquid Regulator)",
      "Description": "",
      "PrefabName": "ItemKitLiquidRegulator",
      "PrefabHash": 1951126161,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitLiquidTank",
      "Title": "Kit (Liquid Tank)",
      "Description": "",
      "PrefabName": "ItemKitLiquidTank",
      "PrefabHash": -799849305,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitLiquidUmbilical",
      "Title": "Kit (Liquid Umbilical)",
      "Description": "",
      "PrefabName": "ItemKitLiquidUmbilical",
      "PrefabHash": 1571996765,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemLiquidPipeVolumePump",
      "Title": "Kit (Liquid Volume Pump)",
      "Description": "",
      "PrefabName": "ItemLiquidPipeVolumePump",
      "PrefabHash": -2106280569,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemWaterWallCooler",
      "Title": "Kit (Liquid Wall Cooler)",
      "Description": "",
      "PrefabName": "ItemWaterWallCooler",
      "PrefabHash": -1721846327,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitLocker",
      "Title": "Kit (Locker)",
      "Description": "",
      "PrefabName": "ItemKitLocker",
      "PrefabHash": 882301399,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitLogicInputOutput",
      "Title": "Kit (Logic I/O)",
      "Description": "",
      "PrefabName": "ItemKitLogicInputOutput",
      "PrefabHash": 1997293610,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitLogicMemory",
      "Title": "Kit (Logic Memory)",
      "Description": "",
      "PrefabName": "ItemKitLogicMemory",
      "PrefabHash": -2098214189,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitLogicProcessor",
      "Title": "Kit (Logic Processor)",
      "Description": "",
      "PrefabName": "ItemKitLogicProcessor",
      "PrefabHash": 220644373,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitLogicSwitch",
      "Title": "Kit (Logic Switch)",
      "Description": "",
      "PrefabName": "ItemKitLogicSwitch",
      "PrefabHash": 124499454,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitLogicTransmitter",
      "Title": "Kit (Logic Transmitter)",
      "Description": "",
      "PrefabName": "ItemKitLogicTransmitter",
      "PrefabHash": 1005397063,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitPassiveLargeRadiatorLiquid",
      "Title": "Kit (Medium Radiator Liquid)",
      "Description": "",
      "PrefabName": "ItemKitPassiveLargeRadiatorLiquid",
      "PrefabHash": 1453961898,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitPassiveLargeRadiatorGas",
      "Title": "Kit (Medium Radiator)",
      "Description": "",
      "PrefabName": "ItemKitPassiveLargeRadiatorGas",
      "PrefabHash": -1752768283,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitSatelliteDish",
      "Title": "Kit (Medium Satellite Dish)",
      "Description": "",
      "PrefabName": "ItemKitSatelliteDish",
      "PrefabHash": 178422810,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitMotherShipCore",
      "Title": "Kit (Mothership)",
      "Description": "",
      "PrefabName": "ItemKitMotherShipCore",
      "PrefabHash": -344968335,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitMusicMachines",
      "Title": "Kit (Music Machines)",
      "Description": "",
      "PrefabName": "ItemKitMusicMachines",
      "PrefabHash": -2038889137,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitFlagODA",
      "Title": "Kit (ODA Flag)",
      "Description": "",
      "PrefabName": "ItemKitFlagODA",
      "PrefabHash": 1701764190,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitHorizontalAutoMiner",
      "Title": "Kit (OGRE)",
      "Description": "",
      "PrefabName": "ItemKitHorizontalAutoMiner",
      "PrefabHash": 844391171,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitWallPadded",
      "Title": "Kit (Padded Wall)",
      "Description": "",
      "PrefabName": "ItemKitWallPadded",
      "PrefabHash": -821868990,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 30.0
      }
    },
    {
      "Key": "ThingItemKitEvaporationChamber",
      "Title": "Kit (Phase Change Device)",
      "Description": "",
      "PrefabName": "ItemKitEvaporationChamber",
      "PrefabHash": 1587787610,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemPipeAnalyizer",
      "Title": "Kit (Pipe Analyzer)",
      "Description": "This kit creates a <link=ThingStructurePipeAnalysizer><color=green>Pipe Analyzer</color></link>.",
      "PrefabName": "ItemPipeAnalyizer",
      "PrefabHash": -767597887,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemPipeIgniter",
      "Title": "Kit (Pipe Igniter)",
      "Description": "",
      "PrefabName": "ItemPipeIgniter",
      "PrefabHash": 1366030599,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemPipeLabel",
      "Title": "Kit (Pipe Label)",
      "Description": "This kit creates a <link=ThingStructurePipeLabel><color=green>Pipe Label</color></link>.",
      "PrefabName": "ItemPipeLabel",
      "PrefabHash": 391769637,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 20.0
      }
    },
    {
      "Key": "ThingItemPipeMeter",
      "Title": "Kit (Pipe Meter)",
      "Description": "This kit creates a <link=ThingStructurePipeMeter><color=green>Pipe Meter</color></link>.",
      "PrefabName": "ItemPipeMeter",
      "PrefabHash": 1207939683,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitPipeOrgan",
      "Title": "Kit (Pipe Organ)",
      "Description": "",
      "PrefabName": "ItemKitPipeOrgan",
      "PrefabHash": -827125300,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitPipeRadiatorLiquid",
      "Title": "Kit (Pipe Radiator Liquid)",
      "Description": "",
      "PrefabName": "ItemKitPipeRadiatorLiquid",
      "PrefabHash": -1697302609,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitPipeRadiator",
      "Title": "Kit (Pipe Radiator)",
      "Description": "",
      "PrefabName": "ItemKitPipeRadiator",
      "PrefabHash": 920411066,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitPipeUtility",
      "Title": "Kit (Pipe Utility Gas)",
      "Description": "",
      "PrefabName": "ItemKitPipeUtility",
      "PrefabHash": 1934508338,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitPipeUtilityLiquid",
      "Title": "Kit (Pipe Utility Liquid)",
      "Description": "",
      "PrefabName": "ItemKitPipeUtilityLiquid",
      "PrefabHash": 595478589,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemPipeValve",
      "Title": "Kit (Pipe Valve)",
      "Description": "This kit creates a <link=ThingStructureValve><color=green>Valve</color></link>.",
      "PrefabName": "ItemPipeValve",
      "PrefabHash": 799323450,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitPipe",
      "Title": "Kit (Pipe)",
      "Description": "",
      "PrefabName": "ItemKitPipe",
      "PrefabHash": -1619793705,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 20.0
      }
    },
    {
      "Key": "ThingItemKitPlanter",
      "Title": "Kit (Planter)",
      "Description": "",
      "PrefabName": "ItemKitPlanter",
      "PrefabHash": 119096484,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemDynamicAirCon",
      "Title": "Kit (Portable Air Conditioner)",
      "Description": "",
      "PrefabName": "ItemDynamicAirCon",
      "PrefabHash": 1072914031,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitDynamicGasTankAdvanced",
      "Title": "Kit (Portable Gas Tank Mk II)",
      "Description": "",
      "PrefabName": "ItemKitDynamicGasTankAdvanced",
      "PrefabHash": 1533501495,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitDynamicCanister",
      "Title": "Kit (Portable Gas Tank)",
      "Description": "",
      "PrefabName": "ItemKitDynamicCanister",
      "PrefabHash": -1061945368,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitDynamicGenerator",
      "Title": "Kit (Portable Generator)",
      "Description": "",
      "PrefabName": "ItemKitDynamicGenerator",
      "PrefabHash": -732720413,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitDynamicHydroponics",
      "Title": "Kit (Portable Hydroponics)",
      "Description": "",
      "PrefabName": "ItemKitDynamicHydroponics",
      "PrefabHash": -1861154222,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitDynamicMKIILiquidCanister",
      "Title": "Kit (Portable Liquid Tank Mk II)",
      "Description": "",
      "PrefabName": "ItemKitDynamicMKIILiquidCanister",
      "PrefabHash": -638019974,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitDynamicLiquidCanister",
      "Title": "Kit (Portable Liquid Tank)",
      "Description": "",
      "PrefabName": "ItemKitDynamicLiquidCanister",
      "PrefabHash": 375541286,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemDynamicScrubber",
      "Title": "Kit (Portable Scrubber)",
      "Description": "",
      "PrefabName": "ItemDynamicScrubber",
      "PrefabHash": -971920158,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitPortablesConnector",
      "Title": "Kit (Portables Connector)",
      "Description": "",
      "PrefabName": "ItemKitPortablesConnector",
      "PrefabHash": 1041148999,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemPowerConnector",
      "Title": "Kit (Power Connector)",
      "Description": "This kit creates a <link=ThingStructurePowerConnector><color=green>Power Connector</color></link>.",
      "PrefabName": "ItemPowerConnector",
      "PrefabHash": 839924019,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemAreaPowerControl",
      "Title": "Kit (Power Controller)",
      "Description": "This kit places a <link=ThingStructureAreaPowerControl><color=green>Area Power Control</color></link> (APC) on any support structure. The APC kit has two options, selecting which direction you would like the APC power to flow.",
      "PrefabName": "ItemAreaPowerControl",
      "PrefabHash": 1757673317,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitPowerTransmitterOmni",
      "Title": "Kit (Power Transmitter Omni)",
      "Description": "",
      "PrefabName": "ItemKitPowerTransmitterOmni",
      "PrefabHash": -831211676,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitPowerTransmitter",
      "Title": "Kit (Power Transmitter)",
      "Description": "",
      "PrefabName": "ItemKitPowerTransmitter",
      "PrefabHash": 291368213,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitElectricUmbilical",
      "Title": "Kit (Power Umbilical)",
      "Description": "",
      "PrefabName": "ItemKitElectricUmbilical",
      "PrefabHash": 1603046970,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitStandardChute",
      "Title": "Kit (Powered Chutes)",
      "Description": "",
      "PrefabName": "ItemKitStandardChute",
      "PrefabHash": 2133035682,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitPoweredVent",
      "Title": "Kit (Powered Vent)",
      "Description": "",
      "PrefabName": "ItemKitPoweredVent",
      "PrefabHash": 2015439334,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitPressureFedGasEngine",
      "Title": "Kit (Pressure Fed Gas Engine)",
      "Description": "",
      "PrefabName": "ItemKitPressureFedGasEngine",
      "PrefabHash": -121514007,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitPressureFedLiquidEngine",
      "Title": "Kit (Pressure Fed Liquid Engine)",
      "Description": "",
      "PrefabName": "ItemKitPressureFedLiquidEngine",
      "PrefabHash": -99091572,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitRegulator",
      "Title": "Kit (Pressure Regulator)",
      "Description": "",
      "PrefabName": "ItemKitRegulator",
      "PrefabHash": 1181371795,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitGovernedGasRocketEngine",
      "Title": "Kit (Pumped Gas Rocket Engine)",
      "Description": "",
      "PrefabName": "ItemKitGovernedGasRocketEngine",
      "PrefabHash": 206848766,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitPumpedLiquidEngine",
      "Title": "Kit (Pumped Liquid Engine)",
      "Description": "",
      "PrefabName": "ItemKitPumpedLiquidEngine",
      "PrefabHash": 1921918951,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemRTGSurvival",
      "Title": "Kit (RTG)",
      "Description": "This kit creates a <link=ThingItemRTGSurvival><color=green>Kit (RTG)</color></link>.",
      "PrefabName": "ItemRTGSurvival",
      "PrefabHash": 1817645803,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemPipeRadiator",
      "Title": "Kit (Radiator)",
      "Description": "This kit creates a <link=ThingStructurePipeRadiator><color=green>Pipe Convection Radiator</color></link>.",
      "PrefabName": "ItemPipeRadiator",
      "PrefabHash": -1796655088,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitRailing",
      "Title": "Kit (Railing)",
      "Description": "",
      "PrefabName": "ItemKitRailing",
      "PrefabHash": 750176282,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitRecycler",
      "Title": "Kit (Recycler)",
      "Description": "",
      "PrefabName": "ItemKitRecycler",
      "PrefabHash": 849148192,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitReinforcedWindows",
      "Title": "Kit (Reinforced Windows)",
      "Description": "",
      "PrefabName": "ItemKitReinforcedWindows",
      "PrefabHash": 1459985302,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitRespawnPointWallMounted",
      "Title": "Kit (Respawn)",
      "Description": "",
      "PrefabName": "ItemKitRespawnPointWallMounted",
      "PrefabHash": 1574688481,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitRocketBattery",
      "Title": "Kit (Rocket Battery)",
      "Description": "",
      "PrefabName": "ItemKitRocketBattery",
      "PrefabHash": -314072139,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitRocketCargoStorage",
      "Title": "Kit (Rocket Cargo Storage)",
      "Description": "",
      "PrefabName": "ItemKitRocketCargoStorage",
      "PrefabHash": 479850239,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitRocketCelestialTracker",
      "Title": "Kit (Rocket Celestial Tracker)",
      "Description": "",
      "PrefabName": "ItemKitRocketCelestialTracker",
      "PrefabHash": -303008602,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitRocketCircuitHousing",
      "Title": "Kit (Rocket Circuit Housing)",
      "Description": "",
      "PrefabName": "ItemKitRocketCircuitHousing",
      "PrefabHash": 721251202,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitRocketDatalink",
      "Title": "Kit (Rocket Datalink)",
      "Description": "",
      "PrefabName": "ItemKitRocketDatalink",
      "PrefabHash": -1256996603,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitRocketGasFuelTank",
      "Title": "Kit (Rocket Gas Fuel Tank)",
      "Description": "",
      "PrefabName": "ItemKitRocketGasFuelTank",
      "PrefabHash": -1629347579,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitLaunchTower",
      "Title": "Kit (Rocket Launch Tower)",
      "Description": "",
      "PrefabName": "ItemKitLaunchTower",
      "PrefabHash": -174523552,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitRocketLiquidFuelTank",
      "Title": "Kit (Rocket Liquid Fuel Tank)",
      "Description": "",
      "PrefabName": "ItemKitRocketLiquidFuelTank",
      "PrefabHash": 2032027950,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitRocketManufactory",
      "Title": "Kit (Rocket Manufactory)",
      "Description": "",
      "PrefabName": "ItemKitRocketManufactory",
      "PrefabHash": -636127860,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitRocketMiner",
      "Title": "Kit (Rocket Miner)",
      "Description": "",
      "PrefabName": "ItemKitRocketMiner",
      "PrefabHash": -867969909,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitRocketScanner",
      "Title": "Kit (Rocket Scanner)",
      "Description": "",
      "PrefabName": "ItemKitRocketScanner",
      "PrefabHash": 1753647154,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitRoverFrame",
      "Title": "Kit (Rover Frame)",
      "Description": "",
      "PrefabName": "ItemKitRoverFrame",
      "PrefabHash": 1827215803,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitRoverMKI",
      "Title": "Kit (Rover Mk I)",
      "Description": "",
      "PrefabName": "ItemKitRoverMKI",
      "PrefabHash": 197243872,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitSDBHopper",
      "Title": "Kit (SDB Hopper)",
      "Description": "",
      "PrefabName": "ItemKitSDBHopper",
      "PrefabHash": 323957548,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingKitSDBSilo",
      "Title": "Kit (SDB Silo)",
      "Description": "This kit creates a <link=ThingStructureSDBSilo><color=green>SDB Silo</color></link>.",
      "PrefabName": "KitSDBSilo",
      "PrefabHash": 1932952652,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitSecurityPrinter",
      "Title": "Kit (Security Printer)",
      "Description": "",
      "PrefabName": "ItemKitSecurityPrinter",
      "PrefabHash": 578078533,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitSensor",
      "Title": "Kit (Sensors)",
      "Description": "",
      "PrefabName": "ItemKitSensor",
      "PrefabHash": -1776897113,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitShower",
      "Title": "Kit (Shower)",
      "Description": "",
      "PrefabName": "ItemKitShower",
      "PrefabHash": 735858725,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitSign",
      "Title": "Kit (Sign)",
      "Description": "",
      "PrefabName": "ItemKitSign",
      "PrefabHash": 529996327,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitSleeper",
      "Title": "Kit (Sleeper)",
      "Description": "",
      "PrefabName": "ItemKitSleeper",
      "PrefabHash": 326752036,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitSmallDirectHeatExchanger",
      "Title": "Kit (Small Direct Heat Exchanger)",
      "Description": "",
      "PrefabName": "ItemKitSmallDirectHeatExchanger",
      "PrefabHash": -1332682164,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemFlagSmall",
      "Title": "Kit (Small Flag)",
      "Description": "",
      "PrefabName": "ItemFlagSmall",
      "PrefabHash": 2011191088,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitSmallSatelliteDish",
      "Title": "Kit (Small Satellite Dish)",
      "Description": "",
      "PrefabName": "ItemKitSmallSatelliteDish",
      "PrefabHash": 1960952220,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitSolarPanelBasicReinforced",
      "Title": "Kit (Solar Panel Basic Heavy)",
      "Description": "",
      "PrefabName": "ItemKitSolarPanelBasicReinforced",
      "PrefabHash": -528695432,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitSolarPanelBasic",
      "Title": "Kit (Solar Panel Basic)",
      "Description": "",
      "PrefabName": "ItemKitSolarPanelBasic",
      "PrefabHash": 844961456,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitSolarPanelReinforced",
      "Title": "Kit (Solar Panel Heavy)",
      "Description": "",
      "PrefabName": "ItemKitSolarPanelReinforced",
      "PrefabHash": -364868685,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitSolarPanel",
      "Title": "Kit (Solar Panel)",
      "Description": "",
      "PrefabName": "ItemKitSolarPanel",
      "PrefabHash": -1924492105,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitSolidGenerator",
      "Title": "Kit (Solid Generator)",
      "Description": "",
      "PrefabName": "ItemKitSolidGenerator",
      "PrefabHash": 1293995736,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitSorter",
      "Title": "Kit (Sorter)",
      "Description": "",
      "PrefabName": "ItemKitSorter",
      "PrefabHash": 969522478,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitSpeaker",
      "Title": "Kit (Speaker)",
      "Description": "",
      "PrefabName": "ItemKitSpeaker",
      "PrefabHash": -126038526,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitStacker",
      "Title": "Kit (Stacker)",
      "Description": "",
      "PrefabName": "ItemKitStacker",
      "PrefabHash": 1013244511,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitStairs",
      "Title": "Kit (Stairs)",
      "Description": "",
      "PrefabName": "ItemKitStairs",
      "PrefabHash": 170878959,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitStairwell",
      "Title": "Kit (Stairwell)",
      "Description": "",
      "PrefabName": "ItemKitStairwell",
      "PrefabHash": -1868555784,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitStirlingEngine",
      "Title": "Kit (Stirling Engine)",
      "Description": "",
      "PrefabName": "ItemKitStirlingEngine",
      "PrefabHash": -1821571150,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitSuitStorage",
      "Title": "Kit (Suit Storage)",
      "Description": "",
      "PrefabName": "ItemKitSuitStorage",
      "PrefabHash": 1088892825,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitTables",
      "Title": "Kit (Tables)",
      "Description": "",
      "PrefabName": "ItemKitTables",
      "PrefabHash": -1361598922,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitTankInsulated",
      "Title": "Kit (Tank Insulated)",
      "Description": "",
      "PrefabName": "ItemKitTankInsulated",
      "PrefabHash": 1021053608,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitTank",
      "Title": "Kit (Tank)",
      "Description": "",
      "PrefabName": "ItemKitTank",
      "PrefabHash": 771439840,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitGroundTelescope",
      "Title": "Kit (Telescope)",
      "Description": "",
      "PrefabName": "ItemKitGroundTelescope",
      "PrefabHash": -2140672772,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitToolManufactory",
      "Title": "Kit (Tool Manufactory)",
      "Description": "",
      "PrefabName": "ItemKitToolManufactory",
      "PrefabHash": 529137748,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitTransformer",
      "Title": "Kit (Transformer Large)",
      "Description": "",
      "PrefabName": "ItemKitTransformer",
      "PrefabHash": -453039435,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitRocketTransformerSmall",
      "Title": "Kit (Transformer Small (Rocket))",
      "Description": "",
      "PrefabName": "ItemKitRocketTransformerSmall",
      "PrefabHash": -932335800,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitTransformerSmall",
      "Title": "Kit (Transformer Small)",
      "Description": "",
      "PrefabName": "ItemKitTransformerSmall",
      "PrefabHash": 665194284,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitPressurePlate",
      "Title": "Kit (Trigger Plate)",
      "Description": "",
      "PrefabName": "ItemKitPressurePlate",
      "PrefabHash": 123504691,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitTurbineGenerator",
      "Title": "Kit (Turbine Generator)",
      "Description": "",
      "PrefabName": "ItemKitTurbineGenerator",
      "PrefabHash": -1590715731,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitTurboVolumePump",
      "Title": "Kit (Turbo Volume Pump - Gas)",
      "Description": "",
      "PrefabName": "ItemKitTurboVolumePump",
      "PrefabHash": -1248429712,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitLiquidTurboVolumePump",
      "Title": "Kit (Turbo Volume Pump - Liquid)",
      "Description": "",
      "PrefabName": "ItemKitLiquidTurboVolumePump",
      "PrefabHash": -1805020897,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitUprightWindTurbine",
      "Title": "Kit (Upright Wind Turbine)",
      "Description": "",
      "PrefabName": "ItemKitUprightWindTurbine",
      "PrefabHash": -1798044015,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitVendingMachineRefrigerated",
      "Title": "Kit (Vending Machine Refrigerated)",
      "Description": "",
      "PrefabName": "ItemKitVendingMachineRefrigerated",
      "PrefabHash": -1867508561,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitVendingMachine",
      "Title": "Kit (Vending Machine)",
      "Description": "",
      "PrefabName": "ItemKitVendingMachine",
      "PrefabHash": -2038384332,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemPipeVolumePump",
      "Title": "Kit (Volume Pump)",
      "Description": "This kit creates a <link=ThingStructureVolumePump><color=green>Volume Pump</color></link>.",
      "PrefabName": "ItemPipeVolumePump",
      "PrefabHash": -1766301997,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemWallCooler",
      "Title": "Kit (Wall Cooler)",
      "Description": "This kit creates a <link=ThingStructureWallCooler><color=green>Wall Cooler</color></link>.",
      "PrefabName": "ItemWallCooler",
      "PrefabHash": -1567752627,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemWallHeater",
      "Title": "Kit (Wall Heater)",
      "Description": "This kit creates a <link=ThingItemWallHeater><color=green>Kit (Wall Heater)</color></link>.",
      "PrefabName": "ItemWallHeater",
      "PrefabHash": 1880134612,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingItemKitWall",
      "Title": "Kit (Wall)",
      "Description": "",
      "PrefabName": "ItemKitWall",
      "PrefabHash": -1826855889,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 30.0
      }
    },
    {
      "Key": "ThingItemKitWaterBottleFiller",
      "Title": "Kit (Water Bottle Filler)",
      "Description": "",
      "PrefabName": "ItemKitWaterBottleFiller",
      "PrefabHash": 159886536,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitWaterPurifier",
      "Title": "Kit (Water Purifier)",
      "Description": "",
      "PrefabName": "ItemKitWaterPurifier",
      "PrefabHash": 611181283,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitWeatherStation",
      "Title": "Kit (Weather Station)",
      "Description": "",
      "PrefabName": "ItemKitWeatherStation",
      "PrefabHash": 337505889,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemKitWindTurbine",
      "Title": "Kit (Wind Turbine)",
      "Description": "",
      "PrefabName": "ItemKitWindTurbine",
      "PrefabHash": -868916503,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitWindowShutter",
      "Title": "Kit (Window Shutter)",
      "Description": "",
      "PrefabName": "ItemKitWindowShutter",
      "PrefabHash": 1779979754,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitHeatExchanger",
      "Title": "Kit Heat Exchanger",
      "Description": "",
      "PrefabName": "ItemKitHeatExchanger",
      "PrefabHash": -1710540039,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitPictureFrame",
      "Title": "Kit Picture Frame",
      "Description": "",
      "PrefabName": "ItemKitPictureFrame",
      "PrefabHash": -2062364768,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemKitResearchMachine",
      "Title": "Kit Research Machine",
      "Description": "",
      "PrefabName": "ItemKitResearchMachine",
      "PrefabHash": 724776762,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingKitchenTableShort",
      "Title": "Kitchen Table (Short)",
      "Description": "",
      "PrefabName": "KitchenTableShort",
      "PrefabHash": -1427415566,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingKitchenTableSimpleShort",
      "Title": "Kitchen Table (Simple Short)",
      "Description": "",
      "PrefabName": "KitchenTableSimpleShort",
      "PrefabHash": -78099334,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingKitchenTableSimpleTall",
      "Title": "Kitchen Table (Simple Tall)",
      "Description": "",
      "PrefabName": "KitchenTableSimpleTall",
      "PrefabHash": -1068629349,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingKitchenTableTall",
      "Title": "Kitchen Table (Tall)",
      "Description": "",
      "PrefabName": "KitchenTableTall",
      "PrefabHash": -1386237782,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureKlaxon",
      "Title": "Klaxon Speaker",
      "Description": "Klaxons allow you to play over 50 announcements and sounds, depending on your <link=LogicPage><color=#0080FFFF>Logic</color></link> set-up. Set the mode to select the output.",
      "PrefabName": "StructureKlaxon",
      "PrefabHash": -828056979,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSoundAlert><color=orange>SoundAlert</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "None",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Alarm2",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Alarm3",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Alarm4",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Alarm5",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Alarm6",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Alarm7",
          "LogicAccessTypes": "6"
        },
        {
          "LogicName": "Music1",
          "LogicAccessTypes": "7"
        },
        {
          "LogicName": "Music2",
          "LogicAccessTypes": "8"
        },
        {
          "LogicName": "Music3",
          "LogicAccessTypes": "9"
        },
        {
          "LogicName": "Alarm8",
          "LogicAccessTypes": "10"
        },
        {
          "LogicName": "Alarm9",
          "LogicAccessTypes": "11"
        },
        {
          "LogicName": "Alarm10",
          "LogicAccessTypes": "12"
        },
        {
          "LogicName": "Alarm11",
          "LogicAccessTypes": "13"
        },
        {
          "LogicName": "Alarm12",
          "LogicAccessTypes": "14"
        },
        {
          "LogicName": "Danger",
          "LogicAccessTypes": "15"
        },
        {
          "LogicName": "Warning",
          "LogicAccessTypes": "16"
        },
        {
          "LogicName": "Alert",
          "LogicAccessTypes": "17"
        },
        {
          "LogicName": "StormIncoming",
          "LogicAccessTypes": "18"
        },
        {
          "LogicName": "IntruderAlert",
          "LogicAccessTypes": "19"
        },
        {
          "LogicName": "Depressurising",
          "LogicAccessTypes": "20"
        },
        {
          "LogicName": "Pressurising",
          "LogicAccessTypes": "21"
        },
        {
          "LogicName": "AirlockCycling",
          "LogicAccessTypes": "22"
        },
        {
          "LogicName": "PowerLow",
          "LogicAccessTypes": "23"
        },
        {
          "LogicName": "SystemFailure",
          "LogicAccessTypes": "24"
        },
        {
          "LogicName": "Welcome",
          "LogicAccessTypes": "25"
        },
        {
          "LogicName": "MalfunctionDetected",
          "LogicAccessTypes": "26"
        },
        {
          "LogicName": "HaltWhoGoesThere",
          "LogicAccessTypes": "27"
        },
        {
          "LogicName": "FireFireFire",
          "LogicAccessTypes": "28"
        },
        {
          "LogicName": "One",
          "LogicAccessTypes": "29"
        },
        {
          "LogicName": "Two",
          "LogicAccessTypes": "30"
        },
        {
          "LogicName": "Three",
          "LogicAccessTypes": "31"
        },
        {
          "LogicName": "Four",
          "LogicAccessTypes": "32"
        },
        {
          "LogicName": "Five",
          "LogicAccessTypes": "33"
        },
        {
          "LogicName": "Floor",
          "LogicAccessTypes": "34"
        },
        {
          "LogicName": "RocketLaunching",
          "LogicAccessTypes": "35"
        },
        {
          "LogicName": "LiftOff",
          "LogicAccessTypes": "36"
        },
        {
          "LogicName": "TraderIncoming",
          "LogicAccessTypes": "37"
        },
        {
          "LogicName": "TraderLanded",
          "LogicAccessTypes": "38"
        },
        {
          "LogicName": "PressureHigh",
          "LogicAccessTypes": "39"
        },
        {
          "LogicName": "PressureLow",
          "LogicAccessTypes": "40"
        },
        {
          "LogicName": "TemperatureHigh",
          "LogicAccessTypes": "41"
        },
        {
          "LogicName": "TemperatureLow",
          "LogicAccessTypes": "42"
        },
        {
          "LogicName": "PollutantsDetected",
          "LogicAccessTypes": "43"
        },
        {
          "LogicName": "HighCarbonDioxide",
          "LogicAccessTypes": "44"
        },
        {
          "LogicName": "Alarm1",
          "LogicAccessTypes": "45"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Volume": "ReadWrite",
          "PrefabHash": "Read",
          "SoundAlert": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureDiode",
      "Title": "LED",
      "Description": "",
      "PrefabName": "StructureDiode",
      "PrefabHash": 1944485013,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeColor><color=orange>Color</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Color": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": true
      }
    },
    {
      "Key": "ThingStructureConsoleLED1x3",
      "Title": "LED Display (Large)",
      "Description": "0.Default\n1.Percent\n2.Power",
      "PrefabName": "StructureConsoleLED1x3",
      "PrefabHash": -1949054743,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeColor><color=orange>Color</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Default",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Percent",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Power",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Color": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": true
      }
    },
    {
      "Key": "ThingStructureConsoleLED1x2",
      "Title": "LED Display (Medium)",
      "Description": "0.Default\n1.Percent\n2.Power",
      "PrefabName": "StructureConsoleLED1x2",
      "PrefabHash": -53151617,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeColor><color=orange>Color</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Default",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Percent",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Power",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Color": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": true
      }
    },
    {
      "Key": "ThingStructureConsoleLED5",
      "Title": "LED Display (Small)",
      "Description": "0.Default\n1.Percent\n2.Power",
      "PrefabName": "StructureConsoleLED5",
      "PrefabHash": -815193061,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeColor><color=orange>Color</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Default",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Percent",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Power",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Color": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": true
      }
    },
    {
      "Key": "ThingItemLabeller",
      "Title": "Labeller",
      "Description": "A labeller lets you set names and values on a variety of devices and structures, including <link=ThingStructureConsole><color=green>Console</color></link> and <link=LogicPage><color=#0080FFFF>Logic</color></link>.",
      "PrefabName": "ItemLabeller",
      "PrefabHash": -743968726,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructureLadder",
      "Title": "Ladder",
      "Description": "",
      "PrefabName": "StructureLadder",
      "PrefabHash": -415420281,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureLadderEnd",
      "Title": "Ladder End",
      "Description": "",
      "PrefabName": "StructureLadderEnd",
      "PrefabHash": 1541734993,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePlatformLadderOpen",
      "Title": "Ladder Platform",
      "Description": "",
      "PrefabName": "StructurePlatformLadderOpen",
      "PrefabHash": 1559586682,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingLander",
      "Title": "Lander",
      "Description": "",
      "PrefabName": "Lander",
      "PrefabHash": 1605130615,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Entity",
          "SlotType": "Entity",
          "SlotIndex": "8"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingLandingpad_BlankPiece",
      "Title": "Landingpad",
      "Description": "",
      "PrefabName": "Landingpad_BlankPiece",
      "PrefabHash": 912453390,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingLandingpad_2x2CenterPiece01",
      "Title": "Landingpad 2x2 Center Piece",
      "Description": "Recommended for larger traders. This allows for the creation of 4x4 and 6x6 landing areas with symetrical doors",
      "PrefabName": "Landingpad_2x2CenterPiece01",
      "PrefabHash": -1295222317,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "6"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "7"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {}
      }
    },
    {
      "Key": "ThingLandingpad_CenterPiece01",
      "Title": "Landingpad Center",
      "Description": "The target point where the trader shuttle will land. Requires a clear view of the sky.",
      "PrefabName": "Landingpad_CenterPiece01",
      "PrefabHash": 1070143159,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "None",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "NoContact",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Moving",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Holding",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Landed",
          "LogicAccessTypes": "4"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {}
      }
    },
    {
      "Key": "ThingLandingpad_CrossPiece",
      "Title": "Landingpad Cross",
      "Description": "Extends the size of the landing pad area. A basic trader shuttle requires a 3x3 clear landing area.",
      "PrefabName": "Landingpad_CrossPiece",
      "PrefabHash": 1101296153,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingLandingpad_DataConnectionPiece",
      "Title": "Landingpad Data And Power",
      "Description": "Provides power to the landing pad. The data port must be connected to the data port of a computer with a communications motherboard for a trader to be called in to land.",
      "PrefabName": "Landingpad_DataConnectionPiece",
      "PrefabHash": -2066405918,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeContactTypeId><color=orange>ContactTypeId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "None",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "NoContact",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Moving",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Holding",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Landed",
          "LogicAccessTypes": "4"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Vertical": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "ContactTypeId": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ],
          [
            "LandingPad",
            "Input"
          ],
          [
            "LandingPad",
            "Input"
          ],
          [
            "LandingPad",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingLandingpad_DiagonalPiece01",
      "Title": "Landingpad Diagonal",
      "Description": "Extends the size of the landing pad area. A basic trader shuttle requires a 3x3 clear landing area.",
      "PrefabName": "Landingpad_DiagonalPiece01",
      "PrefabHash": 977899131,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingLandingpad_GasConnectorInwardPiece",
      "Title": "Landingpad Gas Input",
      "Description": "",
      "PrefabName": "Landingpad_GasConnectorInwardPiece",
      "PrefabHash": 817945707,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "LandingPad",
            "Input"
          ],
          [
            "LandingPad",
            "Input"
          ],
          [
            "LandingPad",
            "Input"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingLandingpad_GasConnectorOutwardPiece",
      "Title": "Landingpad Gas Output",
      "Description": "Pumps gas purchased from a trader out of the landing pad. You can increase the landing pad's gas storage capacity by adding more <link=ThingLandingpad_GasCylinderTankPiece><color=green>Landingpad Gas Storage</color></link> to the landing pad.",
      "PrefabName": "Landingpad_GasConnectorOutwardPiece",
      "PrefabHash": -1100218307,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "LandingPad",
            "Input"
          ],
          [
            "LandingPad",
            "Input"
          ],
          [
            "LandingPad",
            "Input"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingLandingpad_GasCylinderTankPiece",
      "Title": "Landingpad Gas Storage",
      "Description": "Increases the volume of the landing pads gas storage capacity. This volume is used for buying and selling gas to traders.",
      "PrefabName": "Landingpad_GasCylinderTankPiece",
      "PrefabHash": 170818567,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingLandingpad_LiquidConnectorInwardPiece",
      "Title": "Landingpad Liquid Input",
      "Description": "",
      "PrefabName": "Landingpad_LiquidConnectorInwardPiece",
      "PrefabHash": -1216167727,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "LandingPad",
            "Input"
          ],
          [
            "LandingPad",
            "Input"
          ],
          [
            "LandingPad",
            "Input"
          ],
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingLandingpad_LiquidConnectorOutwardPiece",
      "Title": "Landingpad Liquid Output",
      "Description": "Pumps liquid purchased from a trader out of the landing pad. You can increase the landing pad's liquid storage capacity by adding more <link=ThingLandingpad_GasCylinderTankPiece><color=green>Landingpad Gas Storage</color></link> to the landing pad.",
      "PrefabName": "Landingpad_LiquidConnectorOutwardPiece",
      "PrefabHash": -1788929869,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "LandingPad",
            "Input"
          ],
          [
            "LandingPad",
            "Input"
          ],
          [
            "LandingPad",
            "Input"
          ],
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingLandingpad_StraightPiece01",
      "Title": "Landingpad Straight",
      "Description": "Extends the size of the landing pad area. A basic trader shuttle requires a 3x3 clear landing area.",
      "PrefabName": "Landingpad_StraightPiece01",
      "PrefabHash": -976273247,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingLandingpad_TaxiPieceCorner",
      "Title": "Landingpad Taxi Corner",
      "Description": "",
      "PrefabName": "Landingpad_TaxiPieceCorner",
      "PrefabHash": -1872345847,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingLandingpad_TaxiPieceHold",
      "Title": "Landingpad Taxi Hold",
      "Description": "",
      "PrefabName": "Landingpad_TaxiPieceHold",
      "PrefabHash": 146051619,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingLandingpad_TaxiPieceStraight",
      "Title": "Landingpad Taxi Straight",
      "Description": "",
      "PrefabName": "Landingpad_TaxiPieceStraight",
      "PrefabHash": -1477941080,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingLandingpad_ThreshholdPiece",
      "Title": "Landingpad Threshhold",
      "Description": "",
      "PrefabName": "Landingpad_ThreshholdPiece",
      "PrefabHash": -1514298582,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Landing Pad Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "LandingPad",
            "Input"
          ],
          [
            "LandingPad",
            "Input"
          ],
          [
            "LandingPad",
            "Input"
          ],
          [
            "Data",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemLaptop",
      "Title": "Laptop",
      "Description": "The Laptop functions as a portable IC editor. To operate the Laptop it must be powered with a battery, have a <link=ThingMotherboardProgrammableChip><color=green>IC Editor Motherboard</color></link> in the motherboard slot, and an <link=ThingItemIntegratedCircuit10><color=green>Integrated Circuit (IC10)</color></link> in the Programmable Chip Slot.\n\nYou must place the laptop down to interact with the onsreen UI.\n        \nConnects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
      "PrefabName": "ItemLaptop",
      "PrefabHash": 141535121,
      "SlotInserts": [
        {
          "SlotName": "Programmable Chip",
          "SlotType": "ProgrammableChip",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Motherboard",
          "SlotType": "Motherboard",
          "SlotIndex": "2"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureExternal><color=orange>PressureExternal</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureExternal><color=orange>TemperatureExternal</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionX><color=orange>PositionX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionY><color=orange>PositionY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionZ><color=orange>PositionZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "PressureExternal": "Read",
          "On": "ReadWrite",
          "TemperatureExternal": "Read",
          "PositionX": "Read",
          "PositionY": "Read",
          "PositionZ": "Read",
          "ReferenceId": "Read"
        }
      },
      "WirelessLogic": true,
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructureLargeDirectHeatExchangeLiquidtoLiquid",
      "Title": "Large Direct Heat Exchange - Liquid + Liquid",
      "Description": "Direct Heat Exchangers equalize the temperature of the two input networks.",
      "PrefabName": "StructureLargeDirectHeatExchangeLiquidtoLiquid",
      "PrefabHash": 792686502,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input2",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Input2"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLargeDirectHeatExchangeGastoGas",
      "Title": "Large Direct Heat Exchanger - Gas + Gas",
      "Description": "Direct Heat Exchangers equalize the temperature of the two input networks.",
      "PrefabName": "StructureLargeDirectHeatExchangeGastoGas",
      "PrefabHash": -1230658883,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input2",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Input2"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLargeDirectHeatExchangeGastoLiquid",
      "Title": "Large Direct Heat Exchanger - Gas + Liquid",
      "Description": "Direct Heat Exchangers equalize the temperature of the two input networks.",
      "PrefabName": "StructureLargeDirectHeatExchangeGastoLiquid",
      "PrefabHash": 1412338038,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input2",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "Pipe",
            "Input2"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLargeExtendableRadiator",
      "Title": "Large Extendable Radiator",
      "Description": "Omptimised for radiating heat in vacuum and low pressure environments. If pointed at the sun it will heat its contents rapidly via solar heating. The panels can fold away to stop all heat radiation/solar heating and protect them from storms.",
      "PrefabName": "StructureLargeExtendableRadiator",
      "PrefabHash": -566775170,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Horizontal": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLargeHangerDoor",
      "Title": "Large Hangar Door",
      "Description": "1 x 3 modular door piece for building hangar doors.",
      "PrefabName": "StructureLargeHangerDoor",
      "PrefabHash": -1351081801,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLargeSatelliteDish",
      "Title": "Large Satellite Dish",
      "Description": "This large communications unit can be used to communicate with nearby trade vessels.\n\n        When connected to a <link=ThingStructureComputer><color=green>Computer</color></link> containing a <link=ThingMotherboardComms><color=green>Communications Motherboard</color></link> motherboard, a <link=ThingLandingpad_CenterPiece01><color=green>Landingpad Center</color></link>, and a <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link>, this allows Stationeers to contact traders. Adjust its horizontal and vertical attributes either directly or through logic.",
      "PrefabName": "StructureLargeSatelliteDish",
      "PrefabHash": 1913391845,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSignalStrength><color=orange>SignalStrength</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSignalID><color=orange>SignalID</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeInterrogationProgress><color=orange>InterrogationProgress</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTargetPadIndex><color=orange>TargetPadIndex</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSizeX><color=orange>SizeX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSizeZ><color=orange>SizeZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMinimumWattsToContact><color=orange>MinimumWattsToContact</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeWattsReachingContact><color=orange>WattsReachingContact</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeContactTypeId><color=orange>ContactTypeId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeBestContactFilter><color=orange>BestContactFilter</color></link>",
          "LogicAccessTypes": "Read Write"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Setting": "ReadWrite",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "SignalStrength": "Read",
          "SignalID": "Read",
          "InterrogationProgress": "Read",
          "TargetPadIndex": "ReadWrite",
          "SizeX": "Read",
          "SizeZ": "Read",
          "MinimumWattsToContact": "Read",
          "WattsReachingContact": "Read",
          "ContactTypeId": "Read",
          "ReferenceId": "Read",
          "BestContactFilter": "ReadWrite"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureTankBig",
      "Title": "Large Tank",
      "Description": "",
      "PrefabName": "StructureTankBig",
      "PrefabHash": -1606848156,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLaunchMount",
      "Title": "Launch Mount",
      "Description": "The first piece to place whern building a rocket. Rockets can be constructed and/or landed here. Each Launch Mount will be allocated a slot on the Space Map and assigned a Location Code.",
      "PrefabName": "StructureLaunchMount",
      "PrefabHash": -558953231,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureRocketTower",
      "Title": "Launch Tower",
      "Description": "",
      "PrefabName": "StructureRocketTower",
      "PrefabHash": -654619479,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureLogicSwitch",
      "Title": "Lever",
      "Description": "",
      "PrefabName": "StructureLogicSwitch",
      "PrefabHash": 1220484876,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLightRound",
      "Title": "Light Round",
      "Description": "Description coming.",
      "PrefabName": "StructureLightRound",
      "PrefabHash": 1514476632,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLightRoundAngled",
      "Title": "Light Round (Angled)",
      "Description": "Description coming.",
      "PrefabName": "StructureLightRoundAngled",
      "PrefabHash": 1592905386,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLightRoundSmall",
      "Title": "Light Round (Small)",
      "Description": "Description coming.",
      "PrefabName": "StructureLightRoundSmall",
      "PrefabHash": 1436121888,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemLightSword",
      "Title": "Light Sword",
      "Description": "A charming, if useless, pseudo-weapon. (Creative only.)",
      "PrefabName": "ItemLightSword",
      "PrefabHash": 1949076595,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureBackLiquidPressureRegulator",
      "Title": "Liquid Back Volume Regulator",
      "Description": "Regulates the volume ratio of liquid in the input Liquid pipe. This is expressed as percentage where 100 is totally full and 0 is empty.",
      "PrefabName": "StructureBackLiquidPressureRegulator",
      "PrefabHash": 2099900163,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemLiquidCanisterEmpty",
      "Title": "Liquid Canister",
      "Description": "",
      "PrefabName": "ItemLiquidCanisterEmpty",
      "PrefabHash": -185207387,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "LiquidCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingItemLiquidCanisterSmart",
      "Title": "Liquid Canister (Smart)",
      "Description": "0.Mode0\n1.Mode1",
      "PrefabName": "ItemLiquidCanisterSmart",
      "PrefabHash": 777684475,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "LiquidCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingItemGasCanisterWater",
      "Title": "Liquid Canister (Water)",
      "Description": "",
      "PrefabName": "ItemGasCanisterWater",
      "PrefabHash": -1854861891,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "LiquidCanister",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingStructureMediumRocketLiquidFuelTank",
      "Title": "Liquid Capsule Tank Medium",
      "Description": "",
      "PrefabName": "StructureMediumRocketLiquidFuelTank",
      "PrefabHash": 1143639539,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Output"
          ],
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureCapsuleTankLiquid",
      "Title": "Liquid Capsule Tank Small",
      "Description": "",
      "PrefabName": "StructureCapsuleTankLiquid",
      "PrefabHash": 1415396263,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWaterDigitalValve",
      "Title": "Liquid Digital Valve",
      "Description": "",
      "PrefabName": "StructureWaterDigitalValve",
      "PrefabHash": -517628750,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Output"
          ],
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePipeLiquidCrossJunction3",
      "Title": "Liquid Pipe (3-Way Junction)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidCrossJunction3><color=green><N:EN:StructureInsulatedPipeLiquidCrossJunction3></color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeLiquidCrossJunction3",
      "PrefabHash": 1628087508,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeLiquidCrossJunction4",
      "Title": "Liquid Pipe (4-Way Junction)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidCrossJunction4><color=green>Insulated Liquid Pipe (4-Way Junction)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeLiquidCrossJunction4",
      "PrefabHash": -9555593,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeLiquidCrossJunction5",
      "Title": "Liquid Pipe (5-Way Junction)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidCrossJunction5><color=green>Insulated Liquid Pipe (5-Way Junction)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeLiquidCrossJunction5",
      "PrefabHash": -2006384159,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeLiquidCrossJunction6",
      "Title": "Liquid Pipe (6-Way Junction)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidCrossJunction6><color=green>Insulated Liquid Pipe (6-Way Junction)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeLiquidCrossJunction6",
      "PrefabHash": 291524699,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "5"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeLiquidCorner",
      "Title": "Liquid Pipe (Corner)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidCorner><color=green>Insulated Liquid Pipe (Corner)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeLiquidCorner",
      "PrefabHash": -1856720921,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeLiquidCrossJunction",
      "Title": "Liquid Pipe (Cross Junction)",
      "Description": "You can upgrade this pipe to an <link=ThingStructurePipeInsulatedLiquidCrossJunction><color=green>Insulated Liquid Pipe (Cross Junction)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeLiquidCrossJunction",
      "PrefabHash": 1848735691,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeLiquidStraight",
      "Title": "Liquid Pipe (Straight)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidStraight><color=green>Insulated Liquid Pipe (Straight)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeLiquidStraight",
      "PrefabHash": 667597982,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeLiquidTJunction",
      "Title": "Liquid Pipe (T Junction)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidTJunction><color=green>Insulated Liquid Pipe (T Junction)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeLiquidTJunction",
      "PrefabHash": 262616717,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructureLiquidPipeAnalyzer",
      "Title": "Liquid Pipe Analyzer",
      "Description": "",
      "PrefabName": "StructureLiquidPipeAnalyzer",
      "PrefabHash": -2113838091,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidPipeRadiator",
      "Title": "Liquid Pipe Convection Radiator",
      "Description": "A simple heat exchanger, pipe radiators can be placed on pipes to shed or gain heat, depending on the temperature of the surrounding atmosphere. If the atmosphere is hotter, heat will be added to the liquid within the pipe network, and visa versa if colder. In a vacuum, heat will be radiated. \nThe speed of heat gain or loss will depend on the liquid in question. Adding multiple radiators will speed up heat transfer.",
      "PrefabName": "StructureLiquidPipeRadiator",
      "PrefabHash": 2072805863,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWaterPipeMeter",
      "Title": "Liquid Pipe Meter",
      "Description": "",
      "PrefabName": "StructureWaterPipeMeter",
      "PrefabHash": 433184168,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidTankBig",
      "Title": "Liquid Tank Big",
      "Description": "",
      "PrefabName": "StructureLiquidTankBig",
      "PrefabHash": 1098900430,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureTankConnectorLiquid",
      "Title": "Liquid Tank Connector",
      "Description": "These basic mounting devices allow you to attach a <link=ThingDynamicLiquidCanisterEmpty><color=green>Portable Liquid Tank</color></link> to a liquid pipe network.",
      "PrefabName": "StructureTankConnectorLiquid",
      "PrefabHash": 1331802518,
      "SlotInserts": [
        {
          "SlotName": "Portable Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ]
    },
    {
      "Key": "ThingStructureLiquidTankSmall",
      "Title": "Liquid Tank Small",
      "Description": "",
      "PrefabName": "StructureLiquidTankSmall",
      "PrefabHash": 1988118157,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidTankStorage",
      "Title": "Liquid Tank Storage",
      "Description": "When connected to a liquid pipe network, the tank storage unit allows you to refill a <link=ThingItemLiquidCanisterEmpty><color=green>Liquid Canister</color></link>, as well as read various atmospheric data from the <link=SlotGasCanister><color=orange>Gas Canister</color></link>. It will not accept gas canisters.",
      "PrefabName": "StructureLiquidTankStorage",
      "PrefabHash": 1691898022,
      "SlotInserts": [
        {
          "SlotName": "Liquid Canister",
          "SlotType": "LiquidCanister",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Quantity": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidValve",
      "Title": "Liquid Valve",
      "Description": "",
      "PrefabName": "StructureLiquidValve",
      "PrefabHash": 1849974453,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "None"
          ],
          [
            "PipeLiquid",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidVolumePump",
      "Title": "Liquid Volume Pump",
      "Description": "",
      "PrefabName": "StructureLiquidVolumePump",
      "PrefabHash": -454028979,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Output"
          ],
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidPressureRegulator",
      "Title": "Liquid Volume Regulator",
      "Description": "Regulates the volume ratio of liquid in the output Liquid pipe. This is expressed as percentage where 100 is totally full and 0 is empty.",
      "PrefabName": "StructureLiquidPressureRegulator",
      "PrefabHash": 482248766,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWaterWallCooler",
      "Title": "Liquid Wall Cooler",
      "Description": "",
      "PrefabName": "StructureWaterWallCooler",
      "PrefabHash": -1369060582,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "DataDisk",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "None"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureStorageLocker",
      "Title": "Locker",
      "Description": "",
      "PrefabName": "StructureStorageLocker",
      "PrefabHash": -793623899,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "9"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "10"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "11"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "12"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "13"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "14"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "15"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "16"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "17"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "18"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "19"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "20"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "21"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "22"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "23"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "24"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "25"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "26"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "27"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "28"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "29"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "15": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "16": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "17": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "18": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "19": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "20": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "21": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "22": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "23": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "24": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "25": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "26": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "27": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "28": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "29": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLockerSmall",
      "Title": "Locker (Small)",
      "Description": "",
      "PrefabName": "StructureLockerSmall",
      "PrefabHash": -647164662,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicCompare",
      "Title": "Logic Compare",
      "Description": "0.Equals\n1.Greater\n2.Less\n3.NotEquals",
      "PrefabName": "StructureLogicCompare",
      "PrefabHash": -1489728908,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Equals",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Greater",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Less",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "NotEquals",
          "LogicAccessTypes": "3"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicGate",
      "Title": "Logic Gate",
      "Description": "A <link=LogicPage><color=#0080FFFF>logic</color></link> device that performs a logical operation on one or more binary inputs that produces a single binary output. An input greater than zero is considered true for operations.",
      "PrefabName": "StructureLogicGate",
      "PrefabHash": 1942143074,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "AND",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "OR",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "XOR",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "NAND",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "NOR",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "XNOR",
          "LogicAccessTypes": "5"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicHashGen",
      "Title": "Logic Hash Generator",
      "Description": "",
      "PrefabName": "StructureLogicHashGen",
      "PrefabHash": 2077593121,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicMath",
      "Title": "Logic Math",
      "Description": "0.Add\n1.Subtract\n2.Multiply\n3.Divide\n4.Mod\n5.Atan2\n6.Pow\n7.Log",
      "PrefabName": "StructureLogicMath",
      "PrefabHash": 1657691323,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Add",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Subtract",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Multiply",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Divide",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Mod",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Atan2",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Pow",
          "LogicAccessTypes": "6"
        },
        {
          "LogicName": "Log",
          "LogicAccessTypes": "7"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicMemory",
      "Title": "Logic Memory",
      "Description": "",
      "PrefabName": "StructureLogicMemory",
      "PrefabHash": -851746783,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicMinMax",
      "Title": "Logic Min/Max",
      "Description": "0.Greater\n1.Less",
      "PrefabName": "StructureLogicMinMax",
      "PrefabHash": 929022276,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Greater",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Less",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicMirror",
      "Title": "Logic Mirror",
      "Description": "",
      "PrefabName": "StructureLogicMirror",
      "PrefabHash": 2096189278,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {}
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingMotherboardLogic",
      "Title": "Logic Motherboard",
      "Description": "Motherboards are connected to <link=ThingStructureComputer><color=green>Computer</color></link>s to perform various technical functions.\nThe <link=Norsec><color=#0080FFFF>Norsec-designed</color></link> K-cops logic motherboard allows <link=Stationeers><color=#0080FFFF>Stationeers</color></link> to set variables and actions on specific <link=LogicUnitPage><color=#0080FFFF>logic</color></link>-controlled items.",
      "PrefabName": "MotherboardLogic",
      "PrefabHash": 502555944,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Motherboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureLogicReader",
      "Title": "Logic Reader",
      "Description": "",
      "PrefabName": "StructureLogicReader",
      "PrefabHash": -345383640,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicRocketDownlink",
      "Title": "Logic Rocket Downlink",
      "Description": "",
      "PrefabName": "StructureLogicRocketDownlink",
      "PrefabHash": 876108549,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Power And Data Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicSelect",
      "Title": "Logic Select",
      "Description": "0.Equals\n1.Greater\n2.Less\n3.NotEquals",
      "PrefabName": "StructureLogicSelect",
      "PrefabHash": 1822736084,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Equals",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Greater",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Less",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "NotEquals",
          "LogicAccessTypes": "3"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicSorter",
      "Title": "Logic Sorter",
      "Description": "Contains an Internal Memory which is assessed to check whether something should be sorted. When an item is in the <link=SlotImport><color=orange>Import</color></link> Slot, the stack is checked and if result is true the thing is moved to the <link=SlotExport2><color=orange>Export 2</color></link> slot, otherwise it is moved to the <link=SlotExport><color=orange>Export</color></link> slot. The Mode is used in how the stack is assessed, by default the mode is ALL, so every instruction in the stack would need to return true.",
      "PrefabName": "StructureLogicSorter",
      "PrefabHash": 873418029,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Export 2",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Data Disk",
          "SlotType": "DataDisk",
          "SlotIndex": "3"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "All",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Any",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "None",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Output2",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Memory": {
        "MemorySize": 32,
        "MemorySizeReadable": "256 B",
        "MemoryAccess": "ReadWrite",
        "Instructions": {
          "FilterPrefabHashEquals": {
            "Type": "SorterInstruction",
            "Value": 1,
            "Description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>PREFAB_HASH</color>                  | <color=orange>INT_32</color>     |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>"
          },
          "FilterPrefabHashNotEquals": {
            "Type": "SorterInstruction",
            "Value": 2,
            "Description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>PREFAB_HASH</color>                  | <color=orange>INT_32</color>     |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>"
          },
          "FilterSortingClassCompare": {
            "Type": "SorterInstruction",
            "Value": 3,
            "Description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>CONDITION_OPERATION</color>          | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-31 </color>   | <color=yellow>SORTING_CLASS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>32-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>32</color>         |</color>"
          },
          "FilterSlotTypeCompare": {
            "Type": "SorterInstruction",
            "Value": 4,
            "Description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>CONDITION_OPERATION</color>          | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-31 </color>   | <color=yellow>SLOT_TYPE</color>                    | <color=orange>USHORT_16</color>  |\r\n| <color=grey>32-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>32</color>         |</color>"
          },
          "FilterQuantityCompare": {
            "Type": "SorterInstruction",
            "Value": 5,
            "Description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>CONDITION_OPERATION</color>          | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-31 </color>   | <color=yellow>QUANTITY</color>                     | <color=orange>USHORT_16</color>  |\r\n| <color=grey>32-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>32</color>         |</color>"
          },
          "LimitNextExecutionByCount": {
            "Type": "SorterInstruction",
            "Value": 6,
            "Description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>COUNT</color>                        | <color=orange>UINT_32</color>    |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>"
          }
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Output2"
          ],
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingLogicStepSequencer8",
      "Title": "Logic Step Sequencer",
      "Description": "The <link=ODA><color=#0080FFFF>ODA</color></link> does not approve of soundtracks or other distractions.\nAs such, <link=Stationeers><color=#0080FFFF>Stationeers</color></link> have had to create their own musical accompaniment to the demanding labor of building and maintaining off-world infrastructure.\nCentral to this pastime is the step sequencer, which allows Stationeers to sequence short musical patterns or loops. \n\n<size=120%><b>DIY MUSIC - GETTING STARTED</b></size>\n\n1: Connect 8 <link=ThingDeviceStepUnit><color=green>Device Step Unit</color></link>s to your step sequencer via the data port on the left hand side.\n\n2: Label each step unit, then assign step units 1 through 8 on the step sequencer using the screwdriver.\n\n3: Select the output speaker (eg <link=ThingPassiveSpeaker><color=green>Passive Speaker</color></link>) where the sequencer will play the sounds. This needs to be connected to the logic network on the right hand side of the sequencer.\n\n4: Place a <link=ThingStopWatch><color=green>Stop Watch</color></link> and use a <link=ThingStructureLogicReader><color=green>Logic Reader</color></link> and <link=ThingStructureLogicWriter><color=green>Logic Writer</color></link> to write the time to the time variable on the sequencer.\n\n5: Set the BPM on the sequencer using a <link=ThingStructureLogicDial><color=green>Dial</color></link> and a <link=ThingStructureLogicWriter><color=green>Logic Writer</color></link> to write to the sequencer's BPM variable. A higher bpm will play the sequence faster. \n\n6: Insert a sound cartridge of your choosing and select which variant of sound you wish to play by pushing the arrow buttons located above and below the sound cartridge slot.\n\n7: Choose the pitch of the sounds to play by setting the dial on each of your 8 step units to the desired note. With drums, each note is a different drum sounds. You can trial your sounds by pushing the activate button on each step unit (with the sequencer inactive).\n\n8: Get freaky with the <link=ThingDeviceLfoVolume><color=green>Low frequency oscillator</color></link>.\n\n9: Finally, activate the sequencer, Vibeoneer.",
      "PrefabName": "LogicStepSequencer8",
      "PrefabHash": 1531272458,
      "SlotInserts": [
        {
          "SlotName": "Sound Cartridge",
          "SlotType": "SoundCartridge",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTime><color=orange>Time</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeBpm><color=orange>Bpm</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Whole Note",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Half Note",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Quarter Note",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Eighth Note",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Sixteenth Note",
          "LogicAccessTypes": "4"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "Time": "ReadWrite",
          "Bpm": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Input"
          ],
          [
            "Power",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicTransmitter",
      "Title": "Logic Transmitter",
      "Description": "Connects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
      "PrefabName": "StructureLogicTransmitter",
      "PrefabHash": -693235651,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Passive",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Active",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {}
      },
      "WirelessLogic": true,
      "TransmissionReceiver": true,
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Input"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicRocketUplink",
      "Title": "Logic Uplink",
      "Description": "",
      "PrefabName": "StructureLogicRocketUplink",
      "PrefabHash": 546002924,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicWriter",
      "Title": "Logic Writer",
      "Description": "",
      "PrefabName": "StructureLogicWriter",
      "PrefabHash": -1326019434,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeForceWrite><color=orange>ForceWrite</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ForceWrite": "Write",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicWriterSwitch",
      "Title": "Logic Writer Switch",
      "Description": "",
      "PrefabName": "StructureLogicWriterSwitch",
      "PrefabHash": -1321250424,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeForceWrite><color=orange>ForceWrite</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ForceWrite": "Write",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingDeviceLfoVolume",
      "Title": "Low frequency oscillator",
      "Description": "The low frequency oscillator (or LFO) makes everything sound dark, twisted and crunchy by altering the shape of the waves output by a <link=ThingLogicStepSequencer8><color=green>Logic Step Sequencer</color></link>.\n      \nTo set up an LFO:\n\n1. Place the LFO unit\n2. Set the LFO output to a <link=ThingPassiveSpeaker><color=green>Passive Speaker</color></link>\n2. Set a sequencers' output to LFO - so the sequencer's signal runs through the LFO to a speaker.\n3. Place a <link=ThingStopWatch><color=green>Stop Watch</color></link> or use an existing one, then use a <link=ThingStructureLogicWriter><color=green>Logic Writer</color></link> to write it to the LFO.\n4. Use another logic writer to write the BPM to the LFO.\n5. You are ready. This is the future. You're in space. Make it sound cool.\n\nFor more info, check out the <link=MusicPage><color=#0080FFFF>music page</color></link>.",
      "PrefabName": "DeviceLfoVolume",
      "PrefabHash": -1844430312,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTime><color=orange>Time</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeBpm><color=orange>Bpm</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Whole Note",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Half Note",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Quarter Note",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Eighth Note",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Sixteenth Note",
          "LogicAccessTypes": "4"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "Time": "ReadWrite",
          "Bpm": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Power",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureManualHatch",
      "Title": "Manual Hatch",
      "Description": "Can be welded using a <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link> or <link=ThingItemArcWelder><color=green>Arc Welder</color></link> to lock it in the current state. Use the welder again to unlock.",
      "PrefabName": "StructureManualHatch",
      "PrefabHash": -1808154199,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemMarineBodyArmor",
      "Title": "Marine Armor",
      "Description": "",
      "PrefabName": "ItemMarineBodyArmor",
      "PrefabHash": 1399098998,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Suit",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemMarineHelmet",
      "Title": "Marine Helmet",
      "Description": "",
      "PrefabName": "ItemMarineHelmet",
      "PrefabHash": 1073631646,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Helmet",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingUniformMarine",
      "Title": "Marine Uniform",
      "Description": "",
      "PrefabName": "UniformMarine",
      "PrefabHash": -48342840,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Access Card",
          "SlotType": "AccessCard",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Credit Card",
          "SlotType": "CreditCard",
          "SlotIndex": "3"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Uniform",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingStructureLogicMathUnary",
      "Title": "Math Unary",
      "Description": "0.Ceil\n1.Floor\n2.Abs\n3.Log\n4.Exp\n5.Round\n6.Rand\n7.Sqrt\n8.Sin\n9.Cos\n10.Tan\n11.Asin\n12.Acos\n13.Atan\n14.Not",
      "PrefabName": "StructureLogicMathUnary",
      "PrefabHash": -1160020195,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Ceil",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Floor",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Abs",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Log",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Exp",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Round",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Rand",
          "LogicAccessTypes": "6"
        },
        {
          "LogicName": "Sqrt",
          "LogicAccessTypes": "7"
        },
        {
          "LogicName": "Sin",
          "LogicAccessTypes": "8"
        },
        {
          "LogicName": "Cos",
          "LogicAccessTypes": "9"
        },
        {
          "LogicName": "Tan",
          "LogicAccessTypes": "10"
        },
        {
          "LogicName": "Asin",
          "LogicAccessTypes": "11"
        },
        {
          "LogicName": "Acos",
          "LogicAccessTypes": "12"
        },
        {
          "LogicName": "Atan",
          "LogicAccessTypes": "13"
        },
        {
          "LogicName": "Not",
          "LogicAccessTypes": "14"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingCartridgeMedicalAnalyser",
      "Title": "Medical Analyzer",
      "Description": "When added to the OreCore <link=ThingItemTablet><color=green>Handheld Tablet</color></link>, <link=Asura><color=#0080FFFF>Asura's</color></link>'s ReadyMed medical analyzer reveals the health, or otherwise, of users various organs. Due to a design flaw, older models were notorious for producing quasar-like levels of x-ray radiation. Recent advances in shielding have more than halved the risk to users.",
      "PrefabName": "CartridgeMedicalAnalyser",
      "PrefabHash": -1116110181,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Cartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureMediumConvectionRadiator",
      "Title": "Medium Convection Radiator",
      "Description": "A stand-alone radiator unit optimized for exchanging heat with its surrounding atmosphere.",
      "PrefabName": "StructureMediumConvectionRadiator",
      "PrefabHash": -1918215845,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePassiveLargeRadiatorGas",
      "Title": "Medium Convection Radiator",
      "Description": "Has been replaced by <link=ThingStructureMediumConvectionRadiator><color=green>Medium Convection Radiator</color></link>.",
      "PrefabName": "StructurePassiveLargeRadiatorGas",
      "PrefabHash": 2066977095,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureMediumConvectionRadiatorLiquid",
      "Title": "Medium Convection Radiator Liquid",
      "Description": "A stand-alone liquid radiator unit optimized for exchanging heat with its surrounding atmosphere.",
      "PrefabName": "StructureMediumConvectionRadiatorLiquid",
      "PrefabHash": -1169014183,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePassiveLargeRadiatorLiquid",
      "Title": "Medium Convection Radiator Liquid",
      "Description": "Has been replaced by <link=ThingStructureMediumConvectionRadiatorLiquid><color=green>Medium Convection Radiator Liquid</color></link>.",
      "PrefabName": "StructurePassiveLargeRadiatorLiquid",
      "PrefabHash": 24786172,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemGasFilterCarbonDioxideM",
      "Title": "Medium Filter (Carbon Dioxide)",
      "Description": "",
      "PrefabName": "ItemGasFilterCarbonDioxideM",
      "PrefabHash": 416897318,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "CarbonDioxide"
      }
    },
    {
      "Key": "ThingItemGasFilterNitrogenM",
      "Title": "Medium Filter (Nitrogen)",
      "Description": "",
      "PrefabName": "ItemGasFilterNitrogenM",
      "PrefabHash": -632657357,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Nitrogen"
      }
    },
    {
      "Key": "ThingItemGasFilterNitrousOxideM",
      "Title": "Medium Filter (Nitrous Oxide)",
      "Description": "",
      "PrefabName": "ItemGasFilterNitrousOxideM",
      "PrefabHash": 1824284061,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "NitrousOxide"
      }
    },
    {
      "Key": "ThingItemGasFilterOxygenM",
      "Title": "Medium Filter (Oxygen)",
      "Description": "",
      "PrefabName": "ItemGasFilterOxygenM",
      "PrefabHash": -1067319543,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Oxygen"
      }
    },
    {
      "Key": "ThingItemGasFilterPollutantsM",
      "Title": "Medium Filter (Pollutants)",
      "Description": "",
      "PrefabName": "ItemGasFilterPollutantsM",
      "PrefabHash": 63677771,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Pollutant"
      }
    },
    {
      "Key": "ThingItemGasFilterVolatilesM",
      "Title": "Medium Filter (Volatiles)",
      "Description": "",
      "PrefabName": "ItemGasFilterVolatilesM",
      "PrefabHash": 1037507240,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Volatiles"
      }
    },
    {
      "Key": "ThingItemGasFilterWaterM",
      "Title": "Medium Filter (Water)",
      "Description": "",
      "PrefabName": "ItemGasFilterWaterM",
      "PrefabHash": 8804422,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "GasFilter",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "FilterType": "Steam"
      }
    },
    {
      "Key": "ThingStructureMediumHangerDoor",
      "Title": "Medium Hangar Door",
      "Description": "1 x 2 modular door piece for building hangar doors.",
      "PrefabName": "StructureMediumHangerDoor",
      "PrefabHash": -566348148,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureMediumRadiator",
      "Title": "Medium Radiator",
      "Description": "A stand-alone radiator unit optimized for radiating heat in vacuums.",
      "PrefabName": "StructureMediumRadiator",
      "PrefabHash": -975966237,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureMediumRadiatorLiquid",
      "Title": "Medium Radiator Liquid",
      "Description": "A stand-alone liquid radiator unit optimized for radiating heat in vacuums.",
      "PrefabName": "StructureMediumRadiatorLiquid",
      "PrefabHash": -1141760613,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSatelliteDish",
      "Title": "Medium Satellite Dish",
      "Description": "This medium communications unit can be used to communicate with nearby trade vessels.\n      \nWhen connected to a <link=ThingStructureComputer><color=green>Computer</color></link> containing a <link=ThingMotherboardComms><color=green>Communications Motherboard</color></link> motherboard, a <link=ThingLandingpad_CenterPiece01><color=green>Landingpad Center</color></link>, and a <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link>, this allows Stationeers to contact traders. Adjust its horizontal and vertical attributes either directly or through logic.",
      "PrefabName": "StructureSatelliteDish",
      "PrefabHash": 439026183,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSignalStrength><color=orange>SignalStrength</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSignalID><color=orange>SignalID</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeInterrogationProgress><color=orange>InterrogationProgress</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTargetPadIndex><color=orange>TargetPadIndex</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSizeX><color=orange>SizeX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSizeZ><color=orange>SizeZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMinimumWattsToContact><color=orange>MinimumWattsToContact</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeWattsReachingContact><color=orange>WattsReachingContact</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeContactTypeId><color=orange>ContactTypeId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeBestContactFilter><color=orange>BestContactFilter</color></link>",
          "LogicAccessTypes": "Read Write"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Setting": "ReadWrite",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "SignalStrength": "Read",
          "SignalID": "Read",
          "InterrogationProgress": "Read",
          "TargetPadIndex": "ReadWrite",
          "SizeX": "Read",
          "SizeZ": "Read",
          "MinimumWattsToContact": "Read",
          "WattsReachingContact": "Read",
          "ContactTypeId": "Read",
          "ReferenceId": "Read",
          "BestContactFilter": "ReadWrite"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingMeteorite",
      "Title": "Meteorite",
      "Description": "",
      "PrefabName": "Meteorite",
      "PrefabHash": -99064335,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingApplianceMicrowave",
      "Title": "Microwave",
      "Description": "While countless 'better' ways of cooking <link=FoodPage><color=#0080FFFF>Food</color></link> have been invented in the last few hundred years, few are as durable or easy to fabricate as the OK-Zoomer microwave. Licensed from <link=Xigo><color=#0080FFFF>Xigo</color></link>, the plans are based on a classic model from the mid-21st century, giving it a charmingly retro feel. But don't worry, it oscillates <link=GasWater><color=#44AD83>Water</color></link> molecules more than adequately. \nJust bolt it to a <link=ThingStructureBench><color=green>Powered Bench</color></link> using a <link=ThingItemWrench><color=green>Wrench</color></link> to power it, follow the recipe, and you're cooking.",
      "PrefabName": "ApplianceMicrowave",
      "PrefabHash": -1136173965,
      "SlotInserts": [
        {
          "SlotName": "Output",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Appliance",
        "SortingClass": "Appliances"
      }
    },
    {
      "Key": "ThingStructurePowerTransmitterReceiver",
      "Title": "Microwave Power Receiver",
      "Description": "The <link=Norsec><color=#0080FFFF>Norsec</color></link> Wireless Power Transmitter is an uni-directional, A-to-B, far field microwave electrical transmission system.The rotatable base transmitter delivers a narrow, non-lethal microwave beam to a dedicated base receiver.\nThe transmitter must be aligned to the base station in order to transmit any power. The brightness of the transmitter's collimator arc provides an indication of transmission intensity. Note that there is an attrition over longer ranges, so the unit requires more power over greater distances to deliver the same output.Connects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
      "PrefabName": "StructurePowerTransmitterReceiver",
      "PrefabHash": 1195820278,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePowerPotential><color=orange>PowerPotential</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerActual><color=orange>PowerActual</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionX><color=orange>PositionX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionY><color=orange>PositionY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionZ><color=orange>PositionZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Unlinked",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Linked",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "Read",
          "Error": "Read",
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PositionX": "Read",
          "PositionY": "Read",
          "PositionZ": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "WirelessLogic": true,
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePowerTransmitter",
      "Title": "Microwave Power Transmitter",
      "Description": "The <link=Norsec><color=#0080FFFF>Norsec</color></link> Wireless Power Transmitter is an uni-directional, A-to-B, far field microwave electrical transmission system.The rotatable base transmitter delivers a narrow, non-lethal microwave beam to a dedicated base receiver.\nThe transmitter must be aligned to the base station in order to transmit any power. The brightness of the transmitter's collimator arc provides an indication of transmission intensity. Note that there is an attrition over longer ranges, so the unit requires more power over greater distances to deliver the same output.",
      "PrefabName": "StructurePowerTransmitter",
      "PrefabHash": -65087121,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePowerPotential><color=orange>PowerPotential</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerActual><color=orange>PowerActual</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionX><color=orange>PositionX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionY><color=orange>PositionY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePositionZ><color=orange>PositionZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Unlinked",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Linked",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "Read",
          "Error": "Read",
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PositionX": "Read",
          "PositionY": "Read",
          "PositionZ": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemMilk",
      "Title": "Milk",
      "Description": "Full disclosure, it's not actually 'milk', but an <link=Agrizero><color=#0080FFFF>Agrizero-invented</color></link> synthesis of 5ml <link=ThingItemSoyOil><color=green>Soy Oil</color></link> and 5g <link=ThingItemFern><color=green>Fern</color></link>, delicately blended in the <link=ThingApplianceChemistryStation><color=green>Chemistry Station</color></link>. Surprisingly filling, it can be used as an ingredient to cook other <link=FoodPage><color=#0080FFFF>food</color></link> in the <link=ThingApplianceMicrowave><color=green>Microwave</color></link> or <link=ThingStructureAutomatedOven><color=green>Automated Oven</color></link>. Think, <link=ThingItemMuffin><color=green>Muffin</color></link>.",
      "PrefabName": "ItemMilk",
      "PrefabHash": 1327248310,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Milk": 1.0
        }
      }
    },
    {
      "Key": "ThingItemMiningBackPack",
      "Title": "Mining Backpack",
      "Description": "",
      "PrefabName": "ItemMiningBackPack",
      "PrefabHash": -1650383245,
      "SlotInserts": [
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "9"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "10"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "11"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "12"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "13"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "14"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "15"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "16"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "17"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "18"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "19"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "20"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "21"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "22"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "23"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Back",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemMiningBelt",
      "Title": "Mining Belt",
      "Description": "Originally developed by <link=Recurso><color=#0080FFFF>Recurso Espaciais</color></link> for asteroid mining, the <link=Stationeers><color=#0080FFFF>Stationeer's</color></link> mining belt has room for two <link=ToolPage><color=#0080FFFF>tools</color></link> and eight <link=OrePage><color=#0080FFFF>ore</color></link> stacks. While wearing the belt, <link=OrePage><color=#0080FFFF>ore</color></link> is automatically stored there when mined. Volatile and temperature-dependent remain stable in the environmentally controlled unit.",
      "PrefabName": "ItemMiningBelt",
      "PrefabHash": -676435305,
      "SlotInserts": [
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "9"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Belt",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemMiningBeltMKII",
      "Title": "Mining Belt MK II",
      "Description": "A larger and more capacious mining belt, the Mk II is similar to the <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>, but has 13 slots instead of the basic 8, to increase the length of your mining trips. It also has space for two tools. ",
      "PrefabName": "ItemMiningBeltMKII",
      "PrefabHash": 1470787934,
      "SlotInserts": [
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "9"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "10"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "11"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "12"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "13"
        },
        {
          "SlotName": "Ore",
          "SlotType": "Ore",
          "SlotIndex": "14"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Belt",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemMiningCharge",
      "Title": "Mining Charge",
      "Description": "A low cost, high yield explosive with a 10 second timer.",
      "PrefabName": "ItemMiningCharge",
      "PrefabHash": 15829510,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemMiningDrill",
      "Title": "Mining Drill",
      "Description": "The handheld 'Topo' tri-cone rotary mining drill was made for one thing: quick digging. Modeled on a classic <link=Recurso><color=#0080FFFF>Recurso</color></link> zero-g design, it functions equally well in vacuum and atmosphere, with cemented carbide bits to increase resilience and bearing life, and reduce spalling. As Jenk Murtons once said, 'The Topo don't stopo.'",
      "PrefabName": "ItemMiningDrill",
      "PrefabHash": 1055173191,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Default",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Flatten",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemMiningDrillHeavy",
      "Title": "Mining Drill (Heavy)",
      "Description": "Sometimes mining trips require something a little bigger to bring home the goods. This scaled up version of the <link=Recurso><color=#0080FFFF>Recurso</color></link> 'Topo' design <link=ThingItemMiningDrill><color=green>Mining Drill</color></link> can literally move mountains. The heavy mining drill will remove more ground and mine <link=OrePage><color=#0080FFFF>ore</color></link> more quickly than the standard mining drill. The heavy mining drill is also resilient to temperature and pressure. So no matter what planet or extreme weather conditions may be present, the Recurso heavy mining drill will get the job done.",
      "PrefabName": "ItemMiningDrillHeavy",
      "PrefabHash": -1663349918,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Default",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Flatten",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemRocketMiningDrillHead",
      "Title": "Mining-Drill Head (Basic)",
      "Description": "Replaceable drill head for <link=ThingStructureRocketMiner><color=green>Rocket Miner</color></link>",
      "PrefabName": "ItemRocketMiningDrillHead",
      "PrefabHash": 2109945337,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "DrillHead",
        "SortingClass": "Default",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemRocketMiningDrillHeadDurable",
      "Title": "Mining-Drill Head (Durable)",
      "Description": "",
      "PrefabName": "ItemRocketMiningDrillHeadDurable",
      "PrefabHash": 1530764483,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "DrillHead",
        "SortingClass": "Default",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemRocketMiningDrillHeadHighSpeedIce",
      "Title": "Mining-Drill Head (High Speed Ice)",
      "Description": "",
      "PrefabName": "ItemRocketMiningDrillHeadHighSpeedIce",
      "PrefabHash": 653461728,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "DrillHead",
        "SortingClass": "Default",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemRocketMiningDrillHeadHighSpeedMineral",
      "Title": "Mining-Drill Head (High Speed Mineral)",
      "Description": "",
      "PrefabName": "ItemRocketMiningDrillHeadHighSpeedMineral",
      "PrefabHash": 1440678625,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "DrillHead",
        "SortingClass": "Default",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemRocketMiningDrillHeadIce",
      "Title": "Mining-Drill Head (Ice)",
      "Description": "",
      "PrefabName": "ItemRocketMiningDrillHeadIce",
      "PrefabHash": -380904592,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "DrillHead",
        "SortingClass": "Default",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemRocketMiningDrillHeadLongTerm",
      "Title": "Mining-Drill Head (Long Term)",
      "Description": "",
      "PrefabName": "ItemRocketMiningDrillHeadLongTerm",
      "PrefabHash": -684020753,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "DrillHead",
        "SortingClass": "Default",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemRocketMiningDrillHeadMineral",
      "Title": "Mining-Drill Head (Mineral)",
      "Description": "",
      "PrefabName": "ItemRocketMiningDrillHeadMineral",
      "PrefabHash": 1083675581,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "DrillHead",
        "SortingClass": "Default",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingItemMKIIAngleGrinder",
      "Title": "Mk II Angle Grinder",
      "Description": "Angles-be-gone with the trusty angle grinder. The MK II is more resistant to temperature and pressure.",
      "PrefabName": "ItemMKIIAngleGrinder",
      "PrefabHash": 240174650,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemMKIIArcWelder",
      "Title": "Mk II Arc Welder",
      "Description": "",
      "PrefabName": "ItemMKIIArcWelder",
      "PrefabHash": -2061979347,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemMKIICrowbar",
      "Title": "Mk II Crowbar",
      "Description": "<link=Recurso><color=#0080FFFF>Recurso's</color></link> entry-level crowbar is useful in a variety of everyday <link=Stationeers><color=#0080FFFF>Stationeer</color></link> settings, from opening <link=ThingStructureAreaPowerControl><color=green>Area Power Control</color></link>s and unpowered <link=ThingStructureAirlock><color=green>Airlock</color></link>s, to splatting pan-dimensional headcrabs, should the need arise. The MK II is more resistant to temperature and pressure.",
      "PrefabName": "ItemMKIICrowbar",
      "PrefabHash": 1440775434,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemMKIIDrill",
      "Title": "Mk II Drill",
      "Description": "The <link=ExMin><color=#0080FFFF>ExMin</color></link> Off-whirled Hand Drill has been a companion to <link=Stationeers><color=#0080FFFF>Stationeers</color></link> for decades. Essential for assembling and deconstructing various items and structures, regardless of gravity, pressure or temperature.",
      "PrefabName": "ItemMKIIDrill",
      "PrefabHash": 324791548,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemMKIIDuctTape",
      "Title": "Mk II Duct Tape",
      "Description": "In the distant past, one of Earth's great champions taught a generation of 'Fix-It People' that duct tape was the answer to any problem. <link=Stationeers><color=#0080FFFF>Stationeers</color></link> have demonstrated that this is truth holds strong, so long as the problem is a damaged <link=ThingItemEvaSuit><color=green>Eva Suit</color></link>, <link=ThingItemJetpackBasic><color=green>Jetpack Basic</color></link>, <link=ThingItemSpaceHelmet><color=green>Space Helmet</color></link>, or even a <link=ThingStructureSolarPanel><color=green>Solar Panel</color></link>.\nTo use on yourself: put duct tape in your active hand, hold RIGHT MOUSE BUTTON to automatically repair damage.",
      "PrefabName": "ItemMKIIDuctTape",
      "PrefabHash": 388774906,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemMKIIMiningDrill",
      "Title": "Mk II Mining Drill",
      "Description": "The handheld 'Topo' tri-cone rotary mining drill was made for one thing: quick digging. Modeled on a classic <link=Recurso><color=#0080FFFF>Recurso</color></link> zero-g design, it functions equally well in vacuum and atmosphere, with cemented carbide bits to increase resilience and bearing life, and reduce spalling. As Jenk Murtons once said, 'The Topo don't stopo.' The MK II is more resistant to temperature and pressure.",
      "PrefabName": "ItemMKIIMiningDrill",
      "PrefabHash": -1875271296,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Default",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Flatten",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemMKIIScrewdriver",
      "Title": "Mk II Screwdriver",
      "Description": "This standard issue frictional adherence adjustor is a top of the line, bi-rotational model with a columnated uni-grip. It's definitely not just a screwdriver. Use it for construction and deconstruction of certain kits, and setting values on <link=LogicUnitPage><color=#0080FFFF>logic</color></link> units. The MK II is more resistant to temperature and pressure.",
      "PrefabName": "ItemMKIIScrewdriver",
      "PrefabHash": -2015613246,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemMKIIWireCutters",
      "Title": "Mk II Wire Cutters",
      "Description": "Wirecutters allow you to deconstruct various <link=StructurePage><color=#0080FFFF>structures</color></link>, as well as cross-lay cables when held in your non-active hand, and defuse explosives as needed. Wirecutters are stored in the <link=ThingItemToolBelt><color=green>Tool Belt</color></link>, along with other essential <link=ToolPage><color=#0080FFFF>tools</color></link>.",
      "PrefabName": "ItemMKIIWireCutters",
      "PrefabHash": -178893251,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemMKIIWrench",
      "Title": "Mk II Wrench",
      "Description": "One of humanity's enduring contributions to the cosmos, the wrench represents the essence of our species. A simple, effective and spiritually barren tool, use it to build and deconstruct a variety of <link=StructurePage><color=#0080FFFF>structures</color></link> The MK II is more resistant to temperature and pressure.",
      "PrefabName": "ItemMKIIWrench",
      "PrefabHash": 1862001680,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingCircuitboardModeControl",
      "Title": "Mode Control",
      "Description": "Can't decide which mode you love most? This circuit board allows you to switch any connected device between operation modes.",
      "PrefabName": "CircuitboardModeControl",
      "PrefabHash": -1134148135,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingMothershipCore",
      "Title": "Mothership Core",
      "Description": "A relic of from an earlier era of space ambition, <link=Sinotai><color=#0080FFFF>Sinotai's</color></link> mothership cores formed the central element of a generation's space-going creations. While Sinotai's pivot to smaller, modular craft upset some purists, motherships continue to be built and maintained by dedicated enthusiasts.",
      "PrefabName": "MothershipCore",
      "PrefabHash": -1930442922,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureMotionSensor",
      "Title": "Motion Sensor",
      "Description": "Originally developed to monitor dance marathons, the motion sensor can also be connected to <link=LogicPage><color=#0080FFFF>Logic</color></link> systems for security purposes, automatic lighting, doors and various other applications.\nThe sensor activates whenever a player enters the grid it is placed on.",
      "PrefabName": "StructureMotionSensor",
      "PrefabHash": -1713470563,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Activate": "ReadWrite",
          "Quantity": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemMuffin",
      "Title": "Muffin",
      "Description": "A delicious, semi-healthful snack, nothing comforts a <link=Stationeers><color=#0080FFFF>Stationeer</color></link> 800 million kilometers from home like a hand-made muffin.",
      "PrefabName": "ItemMuffin",
      "PrefabHash": -1864982322,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemMushroom",
      "Title": "Mushroom",
      "Description": "A tasty food item. Unlike normal plants, it consumes <link=GasOxygen><color=#44AD83>Oxygen</color></link> and outputs <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link>. Mushrooms will only mature at a moderate rate in darkness, and prolonged light will kill it.",
      "PrefabName": "ItemMushroom",
      "PrefabHash": 2044798572,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 20.0,
        "Ingredient": true,
        "Reagents": {
          "Mushroom": 1.0
        }
      }
    },
    {
      "Key": "ThingSeedBag_Mushroom",
      "Title": "Mushroom Seeds",
      "Description": "Grow a <link=ThingItemMushroom><color=green>Mushroom</color></link>.",
      "PrefabName": "SeedBag_Mushroom",
      "PrefabHash": 311593418,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingCartridgeNetworkAnalyser",
      "Title": "Network Analyzer",
      "Description": "A minor masterpiece of micro-electronic engineering, the network analyzer displays the current, voltage and wattage of a cable network, as well as any devices connected to it. Based on a widely-copied <link=Sinotai><color=#0080FFFF>Sinotai</color></link> design, it's used in conjunction with the OreCore <link=ThingItemTablet><color=green>Handheld Tablet</color></link>.",
      "PrefabName": "CartridgeNetworkAnalyser",
      "PrefabHash": 1606989119,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Cartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemNVG",
      "Title": "Night Vision Goggles",
      "Description": "",
      "PrefabName": "ItemNVG",
      "PrefabHash": 982514123,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Glasses",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingStructureNitrolyzer",
      "Title": "Nitrolyzer",
      "Description": "This device is used to create <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> from <link=GasOxygen><color=#44AD83>Oxygen</color></link>, <link=GasNitrogen><color=#44AD83>Nitrogen</color></link>, and a large amount of energy. The process does not completely transform all the available gas at once, so the output is a mix of all three gasses, which may need further processing.  More NOS will be created, if the gas inside the machine is close to a 1/1 ratio of Oxygen to Nitrogen.  The second gas input line in optional, and not required if the gas is pre mixed.",
      "PrefabName": "StructureNitrolyzer",
      "PrefabHash": 1898243702,
      "SlotInserts": [
        {
          "SlotName": "Programmable Chip",
          "SlotType": "ProgrammableChip",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureInput><color=orange>PressureInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureInput><color=orange>TemperatureInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenInput><color=orange>RatioOxygenInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideInput><color=orange>RatioCarbonDioxideInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenInput><color=orange>RatioNitrogenInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantInput><color=orange>RatioPollutantInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesInput><color=orange>RatioVolatilesInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterInput><color=orange>RatioWaterInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideInput><color=orange>RatioNitrousOxideInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesInput><color=orange>TotalMolesInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureInput2><color=orange>PressureInput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureInput2><color=orange>TemperatureInput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenInput2><color=orange>RatioOxygenInput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideInput2><color=orange>RatioCarbonDioxideInput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenInput2><color=orange>RatioNitrogenInput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantInput2><color=orange>RatioPollutantInput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesInput2><color=orange>RatioVolatilesInput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterInput2><color=orange>RatioWaterInput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideInput2><color=orange>RatioNitrousOxideInput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesInput2><color=orange>TotalMolesInput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureOutput><color=orange>PressureOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperatureOutput><color=orange>TemperatureOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygenOutput><color=orange>RatioOxygenOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxideOutput><color=orange>RatioCarbonDioxideOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogenOutput><color=orange>RatioNitrogenOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutantOutput><color=orange>RatioPollutantOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatilesOutput><color=orange>RatioVolatilesOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWaterOutput><color=orange>RatioWaterOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxideOutput><color=orange>RatioNitrousOxideOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMolesOutput><color=orange>TotalMolesOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionInput><color=orange>CombustionInput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionInput2><color=orange>CombustionInput2</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustionOutput><color=orange>CombustionOutput</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Idle",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Active",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Input2",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "PressureInput": "Read",
          "TemperatureInput": "Read",
          "RatioOxygenInput": "Read",
          "RatioCarbonDioxideInput": "Read",
          "RatioNitrogenInput": "Read",
          "RatioPollutantInput": "Read",
          "RatioVolatilesInput": "Read",
          "RatioWaterInput": "Read",
          "RatioNitrousOxideInput": "Read",
          "TotalMolesInput": "Read",
          "PressureInput2": "Read",
          "TemperatureInput2": "Read",
          "RatioOxygenInput2": "Read",
          "RatioCarbonDioxideInput2": "Read",
          "RatioNitrogenInput2": "Read",
          "RatioPollutantInput2": "Read",
          "RatioVolatilesInput2": "Read",
          "RatioWaterInput2": "Read",
          "RatioNitrousOxideInput2": "Read",
          "TotalMolesInput2": "Read",
          "PressureOutput": "Read",
          "TemperatureOutput": "Read",
          "RatioOxygenOutput": "Read",
          "RatioCarbonDioxideOutput": "Read",
          "RatioNitrogenOutput": "Read",
          "RatioPollutantOutput": "Read",
          "RatioVolatilesOutput": "Read",
          "RatioWaterOutput": "Read",
          "RatioNitrousOxideOutput": "Read",
          "TotalMolesOutput": "Read",
          "CombustionInput": "Read",
          "CombustionInput2": "Read",
          "CombustionOutput": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Input2"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "DevicesLength": 2,
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureHorizontalAutoMiner",
      "Title": "OGRE",
      "Description": "The <link=Recurso><color=#0080FFFF>Recurso</color></link> OGRE (Orthogonal Ground Rotating Excavator) is a base structure with attached mining vehicle, which will mine a horizontal shaft up to X meters long. When full, the mining vehicle will return to the base to empty itself, before returning to dig. If it encounters empty space, it will also return to base and await instruction. The unit will return if deactivated.\n      \nThe OGRE can be connected to a chute system, and is controllable by a logic network. Note that the OGRE outputs more <link=OrePage><color=#0080FFFF>ore</color></link> than a conventional <link=ThingItemMiningDrill><color=green>Mining Drill</color></link> over the same area, due to more efficient processing.\n\n<size=120%><b>MODES</b></size>\nIdle - 0\nMining - 1\nReturning - 2\nDepostingOre - 3\nFinished - 4\n",
      "PrefabName": "StructureHorizontalAutoMiner",
      "PrefabHash": 1070427573,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureOccupancySensor",
      "Title": "Occupancy Sensor",
      "Description": "Will be triggered if there is a player in the same room as the sensor. The quantity variable will show the number of players. You can use configure it to only detect players who hold the correct Access Card using a <link=ThingCartridgeAccessController><color=green>Cartridge (Access Controller)</color></link> in a <link=ThingItemTablet><color=green>Handheld Tablet</color></link>. This sensor only works when placed in a room.",
      "PrefabName": "StructureOccupancySensor",
      "PrefabHash": 322782515,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Activate": "Read",
          "Quantity": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePipeOneWayValve",
      "Title": "One Way Valve (Gas)",
      "Description": "The one way valve moves gas in one direction only: from input side to output side. It only permits flow if the input pressure is higher than output pressure.\n",
      "PrefabName": "StructurePipeOneWayValve",
      "PrefabHash": 1580412404,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidPipeOneWayValve",
      "Title": "One Way Valve (Liquid)",
      "Description": "The one way valve moves liquid in one direction only: from input side to output side. It only permits flow if the input pressure is higher than output pressure..",
      "PrefabName": "StructureLiquidPipeOneWayValve",
      "PrefabHash": -782453061,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemCoalOre",
      "Title": "Ore (Coal)",
      "Description": "Humanity wouldn't have got to space without humble, combustible coal. Burn it in a <link=ThingSolidFuelGenerator><color=green><N:EN:SolidFuelGenerator></color></link>, smelt it in the <link=ThingStructureFurnace><color=green>Furnace</color></link> to create <link=AlloysPage><color=#0080FFFF>alloys</color></link>, or use it in the <link=ThingApplianceReagentProcessor><color=green>Reagent Processor</color></link> to make  <link=ThingItemSprayCanBlack><color=green>Spray Paint (Black)</color></link>.",
      "PrefabName": "ItemCoalOre",
      "PrefabHash": 1724793494,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 50.0,
        "Ingredient": true,
        "Reagents": {
          "Hydrocarbon": 1.0
        }
      }
    },
    {
      "Key": "ThingItemCobaltOre",
      "Title": "Ore (Cobalt)",
      "Description": "Cobalt is a chemical element with the symbol \"Co\" and is typically found in only small deposits. Cobalt is a rare substance, but used create the <link=ThingItemHealPill><color=green>Heal Pill</color></link> and several  <link=IngotPage><color=#0080FFFF>alloys</color></link>.",
      "PrefabName": "ItemCobaltOre",
      "PrefabHash": -983091249,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 50.0,
        "Ingredient": true,
        "Reagents": {
          "Cobalt": 1.0
        }
      }
    },
    {
      "Key": "ThingItemCopperOre",
      "Title": "Ore (Copper)",
      "Description": "Copper is a chemical element with the symbol \"Cu\". This common and highly conductive material is found on most astronomical bodies and is used in a variety of manufacturing processes including electronic components, alloys, and wires.",
      "PrefabName": "ItemCopperOre",
      "PrefabHash": -707307845,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 50.0,
        "Ingredient": true,
        "Reagents": {
          "Copper": 1.0
        }
      }
    },
    {
      "Key": "ThingItemGoldOre",
      "Title": "Ore (Gold)",
      "Description": "Surprisingly common throughout the Solar System, <link=ReagentGold><color=#B566FF>Gold</color></link> is thought to originate in the heart of supernovas, gathering as dust in the early stages of solar formation, then incorporating into the slowly accreting planetary bodies. Now a prized element in <link=Stationeers><color=#0080FFFF>Stationeer</color></link> construction, <link=ReagentGold><color=#B566FF>Gold</color></link> is valued not for its beauty, but its reliability: inert, durable, conductive and highly stable, gold's strength is that it does nothing.",
      "PrefabName": "ItemGoldOre",
      "PrefabHash": -1348105509,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 50.0,
        "Ingredient": true,
        "Reagents": {
          "Gold": 1.0
        }
      }
    },
    {
      "Key": "ThingItemIronOre",
      "Title": "Ore (Iron)",
      "Description": "Abundant throughout the Solar System, iron is the <link=OrePage><color=#0080FFFF>ore</color></link> most commonly used by <link=Stationeers><color=#0080FFFF>Stationeers</color></link> constructing offworld bases. It can be smelted into both <link=ThingItemIronIngot><color=green>Ingot (Iron)</color></link>s and <link=ThingItemSteelIngot><color=green>Ingot (Steel)</color></link>s.",
      "PrefabName": "ItemIronOre",
      "PrefabHash": 1758427767,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 50.0,
        "Ingredient": true,
        "Reagents": {
          "Iron": 1.0
        }
      }
    },
    {
      "Key": "ThingItemLeadOre",
      "Title": "Ore (Lead)",
      "Description": "Lead is a chemical element with the symbol \"Pb\". It is a dense, heavy metal with a low melting point. Lead is a used to make a variety of things such as <link=IngotPage><color=#0080FFFF>alloys</color></link> like <link=ThingItemSolderIngot><color=green>Ingot (Solder)</color></link> and munitions.",
      "PrefabName": "ItemLeadOre",
      "PrefabHash": -190236170,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 50.0,
        "Ingredient": true,
        "Reagents": {
          "Lead": 1.0
        }
      }
    },
    {
      "Key": "ThingItemNickelOre",
      "Title": "Ore (Nickel)",
      "Description": "Nickel is a chemical element with the symbol \"Ni\" and is a rare metal commonly used as a plating to prevent corrosion. Sought after by many <link=Stationeers><color=#0080FFFF>Stationeers</color></link>, Nickel is also commonly used to create several <link=IngotPage><color=#0080FFFF>alloys</color></link>.",
      "PrefabName": "ItemNickelOre",
      "PrefabHash": 1830218956,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 50.0,
        "Ingredient": true,
        "Reagents": {
          "Nickel": 1.0
        }
      }
    },
    {
      "Key": "ThingItemSiliconOre",
      "Title": "Ore (Silicon)",
      "Description": "Silicon is a chemical element with the symbol \"Si\" and is one of the most useful elements to <link=Stationeers><color=#0080FFFF>Stationeers</color></link>. Readily available throughout the universe, silicon is used in a range of <link=IngotPage><color=#0080FFFF>alloys</color></link>, glass, plastics and various electronic components a Stationeer may  need to complete their mission.",
      "PrefabName": "ItemSiliconOre",
      "PrefabHash": 1103972403,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 50.0,
        "Ingredient": true,
        "Reagents": {
          "Silicon": 1.0
        }
      }
    },
    {
      "Key": "ThingItemSilverOre",
      "Title": "Ore (Silver)",
      "Description": "Silver is a chemical element with the symbol \"Ag\". Valued by many <link=Stationeers><color=#0080FFFF>Stationeers</color></link> for its attractive luster and sheen, it is also used in a variety of <link=ElectronicPage><color=#0080FFFF>electronics</color></link> components and <link=IngotPage><color=#0080FFFF>alloys</color></link>.",
      "PrefabName": "ItemSilverOre",
      "PrefabHash": -916518678,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 50.0,
        "Ingredient": true,
        "Reagents": {
          "Silver": 1.0
        }
      }
    },
    {
      "Key": "ThingItemUraniumOre",
      "Title": "Ore (Uranium)",
      "Description": "In 1934, Enrico Fermi noticed that bombarding uranium with neutrons produced a burst of beta rays, and a new material. This process was named 'nuclear fission', and resulted in cheap energy, the Cold War, and countless thousand deaths. While reasonably common throughout the Solar System, <link=Stationeers><color=#0080FFFF>Stationeers</color></link> are wary of the material.",
      "PrefabName": "ItemUraniumOre",
      "PrefabHash": -1516581844,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 50.0,
        "Ingredient": true,
        "Reagents": {
          "Uranium": 1.0
        }
      }
    },
    {
      "Key": "ThingCartridgeOreScanner",
      "Title": "Ore Scanner",
      "Description": "When inserted into a <link=ThingItemTablet><color=green>Handheld Tablet</color></link> the scanner will display minerals hidden underground on the tablet.",
      "PrefabName": "CartridgeOreScanner",
      "PrefabHash": -1768732546,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Cartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingCartridgeOreScannerColor",
      "Title": "Ore Scanner (Color)",
      "Description": "When inserted into a <link=ThingItemTablet><color=green>Handheld Tablet</color></link> the scanner will display minerals hidden underground in different colors on the tablet.",
      "PrefabName": "CartridgeOreScannerColor",
      "PrefabHash": 1738236580,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Cartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureOverheadShortCornerLocker",
      "Title": "Overhead Corner Locker",
      "Description": "",
      "PrefabName": "StructureOverheadShortCornerLocker",
      "PrefabHash": -1794932560,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureOverheadShortLocker",
      "Title": "Overhead Locker",
      "Description": "",
      "PrefabName": "StructureOverheadShortLocker",
      "PrefabHash": 1468249454,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "9"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingAppliancePaintMixer",
      "Title": "Paint Mixer",
      "Description": "",
      "PrefabName": "AppliancePaintMixer",
      "PrefabHash": -1339716113,
      "SlotInserts": [
        {
          "SlotName": "Output",
          "SlotType": "Bottle",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Appliance",
        "SortingClass": "Appliances"
      }
    },
    {
      "Key": "ThingStructurePassiveLiquidDrain",
      "Title": "Passive Liquid Drain",
      "Description": "Moves liquids from a pipe network to the world atmosphere.",
      "PrefabName": "StructurePassiveLiquidDrain",
      "PrefabHash": 1812364811,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureFloorDrain",
      "Title": "Passive Liquid Inlet",
      "Description": "A passive liquid floor inlet that quickly removes liquids in one direction from the world into the connected pipe network. It will equalise gasses with the world atmosphere also.",
      "PrefabName": "StructureFloorDrain",
      "PrefabHash": 1048813293,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ]
    },
    {
      "Key": "ThingPassiveSpeaker",
      "Title": "Passive Speaker",
      "Description": "",
      "PrefabName": "PassiveSpeaker",
      "PrefabHash": 248893646,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSoundAlert><color=orange>SoundAlert</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read Write"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Volume": "ReadWrite",
          "PrefabHash": "ReadWrite",
          "SoundAlert": "ReadWrite",
          "ReferenceId": "ReadWrite"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemPassiveVent",
      "Title": "Passive Vent",
      "Description": "This kit creates a <link=ThingItemPassiveVent><color=green>Passive Vent</color></link> among other variants.",
      "PrefabName": "ItemPassiveVent",
      "PrefabHash": 238631271,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingStructurePassiveVent",
      "Title": "Passive Vent",
      "Description": "Passive vents allow gases to move into and out of pipe networks, which are closed systems unless connected to a device or structure. Passive vents are not powered, merely an aperture, essentially turning an enclosed space into part of the pipe network. ",
      "PrefabName": "StructurePassiveVent",
      "PrefabHash": 335498166,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ]
    },
    {
      "Key": "ThingItemPeaceLily",
      "Title": "Peace Lily",
      "Description": "A fetching lily with greater resistance to cold temperatures.",
      "PrefabName": "ItemPeaceLily",
      "PrefabHash": 2042955224,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemPickaxe",
      "Title": "Pickaxe",
      "Description": "When the sun sets and the <link=ThingItemMiningDrill><color=green>Mining Drill</color></link> runs dead, its batteries drained and your <link=ThingStructureSolarPanel><color=green>Solar Panel</color></link> cold and lifeless, the <link=ThingStructureAutolathe><color=green>Autolathe</color></link> empty, the way forward unclear, one thing holds back the endless night of defeat: the trusty pickaxe.",
      "PrefabName": "ItemPickaxe",
      "PrefabHash": -913649823,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructurePictureFrameThickLandscapeLarge",
      "Title": "Picture Frame Thick Landscape Large",
      "Description": "",
      "PrefabName": "StructurePictureFrameThickLandscapeLarge",
      "PrefabHash": -1434523206,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThickMountLandscapeLarge",
      "Title": "Picture Frame Thick Landscape Large",
      "Description": "",
      "PrefabName": "StructurePictureFrameThickMountLandscapeLarge",
      "PrefabHash": 950004659,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThickLandscapeSmall",
      "Title": "Picture Frame Thick Landscape Small",
      "Description": "",
      "PrefabName": "StructurePictureFrameThickLandscapeSmall",
      "PrefabHash": -2041566697,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThickMountLandscapeSmall",
      "Title": "Picture Frame Thick Landscape Small",
      "Description": "",
      "PrefabName": "StructurePictureFrameThickMountLandscapeSmall",
      "PrefabHash": 347154462,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThickMountPortraitLarge",
      "Title": "Picture Frame Thick Mount Portrait Large",
      "Description": "",
      "PrefabName": "StructurePictureFrameThickMountPortraitLarge",
      "PrefabHash": -1459641358,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThickMountPortraitSmall",
      "Title": "Picture Frame Thick Mount Portrait Small",
      "Description": "",
      "PrefabName": "StructurePictureFrameThickMountPortraitSmall",
      "PrefabHash": -2066653089,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThickPortraitLarge",
      "Title": "Picture Frame Thick Portrait Large",
      "Description": "",
      "PrefabName": "StructurePictureFrameThickPortraitLarge",
      "PrefabHash": -1686949570,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThickPortraitSmall",
      "Title": "Picture Frame Thick Portrait Small",
      "Description": "",
      "PrefabName": "StructurePictureFrameThickPortraitSmall",
      "PrefabHash": -1218579821,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThinLandscapeLarge",
      "Title": "Picture Frame Thin Landscape Large",
      "Description": "",
      "PrefabName": "StructurePictureFrameThinLandscapeLarge",
      "PrefabHash": -1418288625,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThinMountLandscapeLarge",
      "Title": "Picture Frame Thin Landscape Large",
      "Description": "",
      "PrefabName": "StructurePictureFrameThinMountLandscapeLarge",
      "PrefabHash": -1146760430,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThinMountLandscapeSmall",
      "Title": "Picture Frame Thin Landscape Small",
      "Description": "",
      "PrefabName": "StructurePictureFrameThinMountLandscapeSmall",
      "PrefabHash": -1752493889,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThinLandscapeSmall",
      "Title": "Picture Frame Thin Landscape Small",
      "Description": "",
      "PrefabName": "StructurePictureFrameThinLandscapeSmall",
      "PrefabHash": -2024250974,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThinPortraitLarge",
      "Title": "Picture Frame Thin Portrait Large",
      "Description": "",
      "PrefabName": "StructurePictureFrameThinPortraitLarge",
      "PrefabHash": 1212777087,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThinMountPortraitLarge",
      "Title": "Picture Frame Thin Portrait Large",
      "Description": "",
      "PrefabName": "StructurePictureFrameThinMountPortraitLarge",
      "PrefabHash": 1094895077,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThinMountPortraitSmall",
      "Title": "Picture Frame Thin Portrait Small",
      "Description": "",
      "PrefabName": "StructurePictureFrameThinMountPortraitSmall",
      "PrefabHash": 1835796040,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructurePictureFrameThinPortraitSmall",
      "Title": "Picture Frame Thin Portrait Small",
      "Description": "",
      "PrefabName": "StructurePictureFrameThinPortraitSmall",
      "PrefabHash": 1684488658,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingItemPillHeal",
      "Title": "Pill (Medical)",
      "Description": "Three centuries of pharmaceutical technology compressed into one small, easy to ingest pill: the Heal Pill, aka the Proton Pill, aka Mr Happy contains active enzymes, therapeutic proteins, modified microbial strains, and mammalian cell line analogues in a single-dose boost of high purity, efficacy, and potency that potentiates a swift parasympathetic immune response.",
      "PrefabName": "ItemPillHeal",
      "PrefabHash": 1118069417,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemPillStun",
      "Title": "Pill (Paralysis)",
      "Description": "Through rarely publicized, the existence of this pill is an open secret. For use when all else has failed, the Sayonara Suppository immobilizes and rapidly ends the average <link=Stationeers><color=#0080FFFF>Stationeer</color></link>. The delivery mode ensures that if a Stationeer chooses to take this pill, they really have to want it.",
      "PrefabName": "ItemPillStun",
      "PrefabHash": 418958601,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingStructurePipeCrossJunction3",
      "Title": "Pipe (3-Way Junction)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeCrossJunction3><color=green>Insulated Pipe (3-Way Junction)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeCrossJunction3",
      "PrefabHash": 2038427184,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeCrossJunction4",
      "Title": "Pipe (4-Way Junction)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeCrossJunction4><color=green>Insulated Pipe (4-Way Junction)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeCrossJunction4",
      "PrefabHash": -417629293,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeCrossJunction5",
      "Title": "Pipe (5-Way Junction)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeCrossJunction5><color=green>Insulated Pipe (5-Way Junction)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeCrossJunction5",
      "PrefabHash": -1877193979,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeCrossJunction6",
      "Title": "Pipe (6-Way Junction)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeCrossJunction6><color=green>Insulated Pipe (6-Way Junction)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeCrossJunction6",
      "PrefabHash": 152378047,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "5"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeCorner",
      "Title": "Pipe (Corner)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeCorner><color=green>Insulated Pipe (Corner)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeCorner",
      "PrefabHash": -1785673561,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeCrossJunction",
      "Title": "Pipe (Cross Junction)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeCrossJunction><color=green>Insulated Pipe (Cross Junction)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeCrossJunction",
      "PrefabHash": -1405295588,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeStraight",
      "Title": "Pipe (Straight)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeStraight><color=green>Insulated Pipe (Straight)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeStraight",
      "PrefabHash": 73728932,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeTJunction",
      "Title": "Pipe (T Junction)",
      "Description": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeTJunction><color=green>Insulated Pipe (T Junction)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "StructurePipeTJunction",
      "PrefabHash": -913817472,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeAnalysizer",
      "Title": "Pipe Analyzer",
      "Description": "Allegedly the outcome of a weekend father-daughter electronics project by an overzealous {<link=ExMin><color=#0080FFFF>ExMin</color></link> engineer, the pipe analyzer is essentially a more advanced version of the <link=ThingStructurePipeMeter><color=green>Pipe Meter</color></link>.\nDisplaying the internal pressure of pipe networks, it  also reads out temperature and gas contents, and can be connected to a <link=ThingStructureConsole><color=green>Console</color></link> or <link=ThingStructureComputer><color=green>Computer</color></link> via a {<link=LogicPage><color=#0080FFFF>Logic</color></link> system.",
      "PrefabName": "StructurePipeAnalysizer",
      "PrefabHash": 435685051,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingPipeBenderMod",
      "Title": "Pipe Bender Mod",
      "Description": "Apply to an <link=ThingStructureHydraulicPipeBender><color=green>Hydraulic Pipe Bender</color></link> with a <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link> or <link=ThingItemArcWelder><color=green>Arc Welder</color></link> to upgrade for increased processing speed and more recipe options.",
      "PrefabName": "PipeBenderMod",
      "PrefabHash": 443947415,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructurePipeRadiator",
      "Title": "Pipe Convection Radiator",
      "Description": "A simple heat exchanger, pipe radiators can be placed on pipes to shed or gain heat, depending on the temperature of the surrounding atmosphere. If the atmosphere is hotter, heat will be added the gas within the pipe network, and visa versa if colder. In a vacuum, heat will be radiated. \nThe speed of heat gain or loss will depend on the gas in question. Adding multiple radiators will speed up heat transfer.",
      "PrefabName": "StructurePipeRadiator",
      "PrefabHash": 1696603168,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePipeCowl",
      "Title": "Pipe Cowl",
      "Description": "",
      "PrefabName": "StructurePipeCowl",
      "PrefabHash": 465816159,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ]
    },
    {
      "Key": "ThingItemPipeCowl",
      "Title": "Pipe Cowl",
      "Description": "This creates a <link=ThingItemPipeCowl><color=green>Pipe Cowl</color></link> that can be placed on the end of pipes to expose them to the world atmospheres.",
      "PrefabName": "ItemPipeCowl",
      "PrefabHash": -38898376,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 20.0
      }
    },
    {
      "Key": "ThingStructurePipeHeater",
      "Title": "Pipe Heater (Gas)",
      "Description": "Adds 1000 joules of heat per tick to the contents of your pipe network.",
      "PrefabName": "StructurePipeHeater",
      "PrefabHash": -419758574,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidPipeHeater",
      "Title": "Pipe Heater (Liquid)",
      "Description": "Adds 1000 joules of heat per tick to the contents of your pipe network.",
      "PrefabName": "StructureLiquidPipeHeater",
      "PrefabHash": -287495560,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemPipeHeater",
      "Title": "Pipe Heater Kit (Gas)",
      "Description": "Creates a <link=ThingStructurePipeHeater><color=green>Pipe Heater (Gas)</color></link>.",
      "PrefabName": "ItemPipeHeater",
      "PrefabHash": -1751627006,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemLiquidPipeHeater",
      "Title": "Pipe Heater Kit (Liquid)",
      "Description": "Creates a <link=ThingStructureLiquidPipeHeater><color=green>Pipe Heater (Liquid)</color></link>.",
      "PrefabName": "ItemLiquidPipeHeater",
      "PrefabHash": -248475032,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingStructurePipeIgniter",
      "Title": "Pipe Igniter",
      "Description": "Ignites the atmosphere inside the attached pipe network.",
      "PrefabName": "StructurePipeIgniter",
      "PrefabHash": 1286441942,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePipeLabel",
      "Title": "Pipe Label",
      "Description": "As its perspicacious name suggests, the pipe label is designed to be attached to a straight stretch of pipe. Users can then label the label with the <link=ThingItemLabeller><color=green>Labeller</color></link>.",
      "PrefabName": "StructurePipeLabel",
      "PrefabHash": -999721119,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePipeMeter",
      "Title": "Pipe Meter",
      "Description": "While the Stationeers program has, thus far, inspired little in the way of classical poetry, the following haiku was found etched, ironically, on a piece of pipe wreckage found on Vulcan:\n\"Humble pipe meter\nspeaks the truth, transmits pressure\nwithin any pipe\"",
      "PrefabName": "StructurePipeMeter",
      "PrefabHash": -1798362329,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePipeOrgan",
      "Title": "Pipe Organ",
      "Description": "The pipe organ can be attached to one end of a <link=ThingItemPipeValve><color=green>Kit (Pipe Valve)</color></link>. The length of the pipe after the pipe organ changes the pitch of the note it will play when the valve is opened. Use <link=LogicPage><color=#0080FFFF>Logic</color></link> to open and close the valves to create some custom tunes for your base or an audible warning.",
      "PrefabName": "StructurePipeOrgan",
      "PrefabHash": 1305252611,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "1"
        }
      ]
    },
    {
      "Key": "ThingStructurePipeRadiatorFlat",
      "Title": "Pipe Radiator",
      "Description": "A pipe mounted radiator optimized for radiating heat in vacuums.",
      "PrefabName": "StructurePipeRadiatorFlat",
      "PrefabHash": -399883995,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePipeRadiatorFlatLiquid",
      "Title": "Pipe Radiator Liquid",
      "Description": "A liquid pipe mounted radiator optimized for radiating heat in vacuums.",
      "PrefabName": "StructurePipeRadiatorFlatLiquid",
      "PrefabHash": 2024754523,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingAppliancePlantGeneticAnalyzer",
      "Title": "Plant Genetic Analyzer",
      "Description": "The Genetic Analyzer can be used to process samples from the <link=ThingItemPlantSampler><color=green>Plant Sampler</color></link>. Once processed, the genetic information of the sampled plant can be viewed by clicking on the search button.\n\nIndividual Gene Value Widgets: \nMost gene values will appear as a sliding bar between a minimum value on the left and a maximum value on the right. The actual value of the gene is in the middle of the bar, in orange.\n\nMultiple Gene Value Widgets: \nFor temperature and pressure ranges, four genes appear on the same widget. The orange values underneath the bar are the minimum and maximum thresholds for growth. Outside of this range, the plant will stop growing and eventually die. The blue values underneath the bar are the minimum and maximum thresholds for ideal growth. Inside of this range, the plant will grow at maximum speed. The white values above the bar are the minimum and maximum achievable values for the growth threshold.",
      "PrefabName": "AppliancePlantGeneticAnalyzer",
      "PrefabHash": -1303038067,
      "SlotInserts": [
        {
          "SlotName": "Input",
          "SlotType": "Tool",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Appliance",
        "SortingClass": "Appliances"
      }
    },
    {
      "Key": "ThingAppliancePlantGeneticSplicer",
      "Title": "Plant Genetic Splicer",
      "Description": "The Genetic Splicer can be used to copy a single <link=GeneticsPage><color=#0080FFFF>gene</color></link> from one 'source' plant to another 'target' plant of the same type. After copying, the source plant will be destroyed.\n        \nTo begin splicing, place a plant or seed bag in the left slot (source) and place another plant or seed bag of the same type in the right slot (target). You can select a gene using the arrow buttons. Close the sliding door and press the green activate button. Once splicing has begun, the device will be locked until the process has finished (which will take approximately twenty minutes). If you want to cancel splicing you can power off the bench or detach the appliance as a last resort.",
      "PrefabName": "AppliancePlantGeneticSplicer",
      "PrefabHash": -1094868323,
      "SlotInserts": [
        {
          "SlotName": "Source Plant",
          "SlotType": "Plant",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Target Plant",
          "SlotType": "Plant",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Appliance",
        "SortingClass": "Appliances"
      }
    },
    {
      "Key": "ThingAppliancePlantGeneticStabilizer",
      "Title": "Plant Genetic Stabilizer",
      "Description": "The Genetic Stabilizer can be used to manipulate gene stability on a specific <link=OrganicPage><color=#0080FFFF>Plants</color></link> or <link=OrganicPage><color=#0080FFFF>Seeds</color></link>. It has two modes Stabilize and Destabilize.\nStabilize: Increases all genes stability by 50%.\nDestabilize: Decreases all gene stability by 10% other than a chosen gene which will received decreased stability by 50%.\n      ",
      "PrefabName": "AppliancePlantGeneticStabilizer",
      "PrefabHash": 871432335,
      "SlotInserts": [
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Stabilize",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Destabilize",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Appliance",
        "SortingClass": "Appliances"
      }
    },
    {
      "Key": "ThingItemPlantSampler",
      "Title": "Plant Sampler",
      "Description": "The Plant Sampler allows you to take a <link=GeneticsPage><color=#0080FFFF>gene</color></link> sample of a growing plant. The sampler can then be placed in the <link=ThingAppliancePlantGeneticAnalyzer><color=green>Plant Genetic Analyzer</color></link> to attain and interpret the results.",
      "PrefabName": "ItemPlantSampler",
      "PrefabHash": 173023800,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructurePlanter",
      "Title": "Planter",
      "Description": "A small planter for decorative or hydroponic purposes. Can be connected to <link=GasWater><color=#44AD83>Water</color></link>, or watered manually using a <link=ThingItemWaterBottle><color=green>Water Bottle</color></link> or <link=ThingItemGasCanisterWater><color=green>Liquid Canister (Water)</color></link>.",
      "PrefabName": "StructurePlanter",
      "PrefabHash": -1125641329,
      "SlotInserts": [
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        }
      ]
    },
    {
      "Key": "ThingItemPlasticSheets",
      "Title": "Plastic Sheets",
      "Description": "",
      "PrefabName": "ItemPlasticSheets",
      "PrefabHash": 662053345,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingStructurePlinth",
      "Title": "Plinth",
      "Description": "",
      "PrefabName": "StructurePlinth",
      "PrefabHash": 989835703,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingItemMiningDrillPneumatic",
      "Title": "Pneumatic Mining Drill",
      "Description": "0.Default\n1.Flatten",
      "PrefabName": "ItemMiningDrillPneumatic",
      "PrefabHash": 1258187304,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "GasCanister",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Default",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Flatten",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingDynamicAirConditioner",
      "Title": "Portable Air Conditioner",
      "Description": "The <link=Sinotai><color=#0080FFFF>Sinotai</color></link>-designed Huxi portable air conditioner cools by drawing heat from the atmosphere and storing it, or adding heat to the atmosphere from its internal tank. With a max internal pressure of 8106kPa, its capacity is relatively limited, physics being clear on this subject. To extend its temperature storage ability, bolt the Huxi to a <link=ThingStructureTankConnector><color=green>Tank Connector</color></link>, then connect it to a pipe network supplying hot or cold <link=GasPage><color=#0080FFFF>gases</color></link>.",
      "PrefabName": "DynamicAirConditioner",
      "PrefabHash": 519913639,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Cold",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Hot",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingDynamicScrubber",
      "Title": "Portable Air Scrubber",
      "Description": "A portable scrubber does just what it sounds like: removes specific substances from the air. For instance, attaching a <link=ThingItemGasFilterCarbonDioxide><color=green>Filter (Carbon Dioxide)</color></link> will pull <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> from the surrounding atmosphere. Note that the scrubber has room for one battery and two filters, which will double its operating speed. Neat. When it reaches an internal pressure of 8106kPA, an error signal will flash on the switch, indicating it needs to be emptied. Either vent it directly, or attach it to a pipe network via a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
      "PrefabName": "DynamicScrubber",
      "PrefabHash": 755048589,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Gas Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Gas Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "2"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingPortableComposter",
      "Title": "Portable Composter",
      "Description": "A simple composting device, the basic composter creates <link=ThingFertilizer><color=green>Fertilizer</color></link> out of organic matter. It accepts <link=OrganicPage><color=#0080FFFF>food</color></link>, <link=ThingDecayedFood><color=green>Decayed Food</color></link> or <link=ThingItemBiomass><color=green>Biomass</color></link>. It requires a full <link=ThingItemLiquidCanisterEmpty><color=green>Liquid Canister</color></link> and a battery to operate, accelerating the natural composting process.\nWhen processing, it releases nitrogen and volatiles, as well a small amount of heat.\n\n<size=120%><b>Compost composition</b></size>\nFertilizer is produced at a 1:3 ratio of fertilizer to ingredients. The fertilizer's effects on plants will vary depending on the respective proportions of its ingredients.\n\n- <link=OrganicPage><color=#0080FFFF>food</color></link> increases PLANT YIELD up to two times\n- <link=ThingDecayedFood><color=green>Decayed Food</color></link> increases plant GROWTH SPEED up to two times\n- <link=ThingItemBiomass><color=green>Biomass</color></link> increases the NUMBER OF GROWTH CYCLES the fertilizer lasts for",
      "PrefabName": "PortableComposter",
      "PrefabHash": -1958705204,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "Battery",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Liquid Canister",
          "SlotType": "LiquidCanister",
          "SlotIndex": "3"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingDynamicGasCanisterEmpty",
      "Title": "Portable Gas Tank",
      "Description": "Portable gas tanks store gas. To refill one, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link>, then connect it to a pipe network. Try to avoid pushing it above 10 MPa, or bad things happen. Once it's full, you can refill a <link=ThingItemGasCanisterEmpty><color=green>Canister</color></link> by attaching it to the tank's striped section. Or you could vent the tank's variable flow rate valve into a room and create an atmosphere.",
      "PrefabName": "DynamicGasCanisterEmpty",
      "PrefabHash": -1741267161,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingDynamicGasCanisterAir",
      "Title": "Portable Gas Tank (Air)",
      "Description": "Portable gas tanks do one thing: store gas. But there's lots you can do with them. To refill the tank, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link>, then connect it to a pipe network. Try to avoid pushing it above 10 MPa, or bad things happen. Once it's full, you can refill a <link=ThingItemGasCanisterOxygen><color=green>Canister (Oxygen)</color></link> by attaching it to the tank's striped section. Or you could vent the tank's variable flow rate valve into a room and create an atmosphere. They also attach to rovers and rockets. Alternatively, kick it over and practice barrel rolling. The possibilities are endless.",
      "PrefabName": "DynamicGasCanisterAir",
      "PrefabHash": -1713611165,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingDynamicGasCanisterCarbonDioxide",
      "Title": "Portable Gas Tank (CO2)",
      "Description": "Portable gas tanks do one thing: store gas. To refill the tank, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link>, then connect it to a pipe network. Try to avoid pushing it above 10 MPa, or ... boom. Once it's full, you can refill a <link=ThingItemGasCanisterCarbonDioxide><color=green>Canister (CO2)</color></link> by attaching it to the tank's striped section. Or you could vent the tank's variable flow rate valve into a room and create an atmosphere ... of sorts.",
      "PrefabName": "DynamicGasCanisterCarbonDioxide",
      "PrefabHash": -322413931,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingDynamicGasCanisterFuel",
      "Title": "Portable Gas Tank (Fuel)",
      "Description": "Portable tanks store gas. They're good at it. If you need to refill a tank, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link>, then connect it to a pipe network. Try to avoid pushing it above 10 MPa, or things get messy. You can refill a <link=ThingItemGasCanisterFuel><color=green>Canister (Fuel)</color></link> by attaching it to the tank's striped section. Or you could use a <link=ThingItemWrench><color=green>Wrench</color></link> to attach it to a rover or rocket for later. It's really up to you.",
      "PrefabName": "DynamicGasCanisterFuel",
      "PrefabHash": -817051527,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingDynamicGasCanisterNitrogen",
      "Title": "Portable Gas Tank (Nitrogen)",
      "Description": "Portable tanks store gas. If you need to refill a tank, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link> using a <link=ThingItemWrench><color=green>Wrench</color></link>, then connect it to a pipe network. Try to avoid pushing it above 10 MPa, or you'll end up with <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> in places you weren't expecting. You can refill a <link=ThingItemGasCanisterNitrogen><color=green>Canister (Nitrogen)</color></link> by attaching it to the tank's striped section. Or you could use a <link=ThingItemWrench><color=green>Wrench</color></link> to attach it to a rover or rocket for later.",
      "PrefabName": "DynamicGasCanisterNitrogen",
      "PrefabHash": 121951301,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingDynamicGasCanisterNitrousOxide",
      "Title": "Portable Gas Tank (Nitrous Oxide)",
      "Description": "",
      "PrefabName": "DynamicGasCanisterNitrousOxide",
      "PrefabHash": 30727200,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingDynamicGasCanisterOxygen",
      "Title": "Portable Gas Tank (Oxygen)",
      "Description": "Portable tanks store gas. If you need to refill a tank, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link> using a <link=ThingItemWrench><color=green>Wrench</color></link>, then connect it to a pipe network. Try to avoid pushing it above 10 MPa, or you'll be picking tank shards out of your face. You can refill a <link=ThingItemGasCanisterOxygen><color=green>Canister (Oxygen)</color></link> by attaching it to the tank's striped section. Or you could vent it into a sealed room to create an atmosphere. Or even paint it pink, call it Steve and fill that sad space in your heart.",
      "PrefabName": "DynamicGasCanisterOxygen",
      "PrefabHash": 1360925836,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingDynamicGasCanisterPollutants",
      "Title": "Portable Gas Tank (Pollutants)",
      "Description": "",
      "PrefabName": "DynamicGasCanisterPollutants",
      "PrefabHash": 396065382,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingDynamicGasCanisterVolatiles",
      "Title": "Portable Gas Tank (Volatiles)",
      "Description": "Portable tanks store gas. To refill one, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link> using a <link=ThingItemWrench><color=green>Wrench</color></link>, then connect it to a pipe network. Don't fill it above 10 MPa, unless you're the sort who loves complicated, flammable emergencies. You can refill a <link=ThingItemGasCanisterVolatiles><color=green>Canister (Volatiles)</color></link> by attaching it to the tank's striped section. Or you could use a <link=ThingItemWrench><color=green>Wrench</color></link> to attach to a rocket and show it around the Solar System.",
      "PrefabName": "DynamicGasCanisterVolatiles",
      "PrefabHash": 108086870,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingDynamicGasTankAdvancedOxygen",
      "Title": "Portable Gas Tank Mk II (Oxygen)",
      "Description": "0.Mode0\n1.Mode1",
      "PrefabName": "DynamicGasTankAdvancedOxygen",
      "PrefabHash": -1264455519,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingDynamicGenerator",
      "Title": "Portable Generator",
      "Description": "Every <link=Stationeers><color=#0080FFFF>Stationeer's</color></link> best friend, the portable generator gets you up and running, fast. Fill it with a <link=ThingItemGasCanisterFuel><color=green>Canister (Fuel)</color></link> to power up and charge a <link=ThingItemBatteryCell><color=green>Battery Cell (Small)</color></link>, or attach it to a <link=ThingStructurePowerConnector><color=green>Power Connector</color></link> to link it into your electrical network. It's pressure driven, so functions more efficiently at lower temperatures, and REALLY efficiently if supercooled. Perfecting your fuel mix also makes a big difference.",
      "PrefabName": "DynamicGenerator",
      "PrefabHash": -82087220,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "GasCanister",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingDynamicHydroponics",
      "Title": "Portable Hydroponics",
      "Description": "",
      "PrefabName": "DynamicHydroponics",
      "PrefabHash": 587726607,
      "SlotInserts": [
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Plant",
          "SlotType": "Plant",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Liquid Canister",
          "SlotType": "LiquidCanister",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Liquid Canister",
          "SlotType": "Plant",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Liquid Canister",
          "SlotType": "Plant",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Liquid Canister",
          "SlotType": "Plant",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Liquid Canister",
          "SlotType": "Plant",
          "SlotIndex": "8"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingDynamicLight",
      "Title": "Portable Light",
      "Description": "Philippe Starck might not applaud, but this battery-powered light source undarkens the corners when illumination's lacking. Powered by any battery, it's a 'no-frills' <link=Xigo><color=#0080FFFF>Xigo</color></link> design that can be cheaply fabricated with the minimum of fuss. Unless you like fuss. In which case, fuss all you like.",
      "PrefabName": "DynamicLight",
      "PrefabHash": -21970188,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingDynamicLiquidCanisterEmpty",
      "Title": "Portable Liquid Tank",
      "Description": "This portable tank stores liquid, and liquid only. You can bolt one to a <link=ThingItemTankConnectorLiquid><color=green>Kit (Liquid Tank Connector)</color></link> using a <link=ThingItemWrench><color=green>Wrench</color></link>, then connect it to a pipe network to refill it. You can refill a <link=ThingItemGasCanisterWater><color=green>Liquid Canister (Water)</color></link> by attaching it to the tank's striped section. Or you could use a <link=ThingItemWrench><color=green>Wrench</color></link> to attach it to a rocket and take it somewhere distant and dry, then feel good about yourself.",
      "PrefabName": "DynamicLiquidCanisterEmpty",
      "PrefabHash": -1939209112,
      "SlotInserts": [
        {
          "SlotName": "Liquid Canister",
          "SlotType": "LiquidCanister",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingDynamicGasCanisterWater",
      "Title": "Portable Liquid Tank (Water)",
      "Description": "This portable tank stores liquid, and liquid only. You just have to fill it up. To do this, bolt one to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link> using a <link=ThingItemWrench><color=green>Wrench</color></link>, then connect it to <link=ThingStructurePipeLiquidStraight><color=green>Liquid Pipe (Straight)</color></link> to supply liquid to a network. \nTry to keep pressure under 10 MPa, or you'll end up wet, hurt and sorry, without any of the fun.\nYou can refill a <link=ThingItemGasCanisterWater><color=green>Liquid Canister (Water)</color></link> by attaching it to the tank's striped section. Or you could use a <link=ThingItemWrench><color=green>Wrench</color></link> to attach it to a rocket and take it somewhere distant and dry, then feel good about yourself.",
      "PrefabName": "DynamicGasCanisterWater",
      "PrefabHash": 197293625,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "LiquidCanister",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingDynamicMKIILiquidCanisterEmpty",
      "Title": "Portable Liquid Tank Mk II",
      "Description": "An empty, insulated liquid <link=SlotGasCanister><color=orange>Gas Canister</color></link>.",
      "PrefabName": "DynamicMKIILiquidCanisterEmpty",
      "PrefabHash": 2130739600,
      "SlotInserts": [
        {
          "SlotName": "Liquid Canister",
          "SlotType": "LiquidCanister",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingDynamicMKIILiquidCanisterWater",
      "Title": "Portable Liquid Tank Mk II (Water)",
      "Description": "An insulated version of the <link=ThingDynamicMKIILiquidCanisterWater><color=green>Portable Liquid Tank Mk II (Water)</color></link>, for storing liquids without them gaining or losing temperature.",
      "PrefabName": "DynamicMKIILiquidCanisterWater",
      "PrefabHash": -319510386,
      "SlotInserts": [
        {
          "SlotName": "Liquid Canister",
          "SlotType": "LiquidCanister",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Atmospherics"
      }
    },
    {
      "Key": "ThingPortableSolarPanel",
      "Title": "Portable Solar Panel",
      "Description": "",
      "PrefabName": "PortableSolarPanel",
      "PrefabHash": 2043318949,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructurePortablesConnector",
      "Title": "Portables Connector",
      "Description": "",
      "PrefabName": "StructurePortablesConnector",
      "PrefabHash": -899013427,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input2",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "PipeLiquid",
            "Input2"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemPotato",
      "Title": "Potato",
      "Description": " Potatoes are a simple, fast growing crop that can keep Stationeers alive in emergencies.",
      "PrefabName": "ItemPotato",
      "PrefabHash": 1929046963,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 20.0,
        "Ingredient": true,
        "Reagents": {
          "Potato": 1.0
        }
      }
    },
    {
      "Key": "ThingSeedBag_Potato",
      "Title": "Potato Seeds",
      "Description": "Grow a <link=ThingItemPotato><color=green>Potato</color></link>.",
      "PrefabName": "SeedBag_Potato",
      "PrefabHash": 1005571172,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemCookedPowderedEggs",
      "Title": "Powdered Eggs",
      "Description": "A high-nutrient cooked food, which can be canned.",
      "PrefabName": "ItemCookedPowderedEggs",
      "PrefabHash": -1712264413,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 10.0,
        "Ingredient": true,
        "Reagents": {
          "Egg": 1.0
        }
      }
    },
    {
      "Key": "ThingStructurePowerConnector",
      "Title": "Power Connector",
      "Description": "Attaches a <link=ThingItemKitDynamicGenerator><color=green>Kit (Portable Generator)</color></link> to a power network.",
      "PrefabName": "StructurePowerConnector",
      "PrefabHash": -782951720,
      "SlotInserts": [
        {
          "SlotName": "Portable Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingCircuitboardPowerControl",
      "Title": "Power Control",
      "Description": "Under distant suns and demanding environments, <link=Stationeers><color=#0080FFFF>Stationeer</color></link> systems need to balance reliability, resilience and versatility. The power control board allows remote enabling and disabling of selected devices, disconnecting manual operation. \n      \nThe circuit board has two modes: 'Link' switches all devices on or off; 'Toggle' switches each device to their alternate state. ",
      "PrefabName": "CircuitboardPowerControl",
      "PrefabHash": -1923778429,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructurePowerTransmitterOmni",
      "Title": "Power Transmitter Omni",
      "Description": "",
      "PrefabName": "StructurePowerTransmitterOmni",
      "PrefabHash": -327468845,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureBench",
      "Title": "Powered Bench",
      "Description": "When it's time to sit, nothing supports you like a bench. This bench is powered, so you can use appliances like the <link=ThingApplianceMicrowave><color=green>Microwave</color></link>.",
      "PrefabName": "StructureBench",
      "PrefabHash": -2042448192,
      "SlotInserts": [
        {
          "SlotName": "Appliance 1",
          "SlotType": "Appliance",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Appliance 2",
          "SlotType": "Appliance",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePoweredVent",
      "Title": "Powered Vent",
      "Description": "Great for moving large quantities of air into a pipe network. Its primary purpose is for the creation of multi-grid airlocks. It can effeciently pull a vacuum on a small to medium sized room.",
      "PrefabName": "StructurePoweredVent",
      "PrefabHash": 938836756,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureExternal><color=orange>PressureExternal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Outward",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Inward",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "PressureExternal": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePoweredVentLarge",
      "Title": "Powered Vent Large",
      "Description": "For building large scale airlock systems and pressurised hangers, a bigger and bolder version of the <link=ThingStructurePoweredVent><color=green>Powered Vent</color></link> that can effeciently pull a vacuum in large room.",
      "PrefabName": "StructurePoweredVentLarge",
      "PrefabHash": -785498334,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressureExternal><color=orange>PressureExternal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Outward",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Inward",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "PressureExternal": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePressurantValve",
      "Title": "Pressurant Valve",
      "Description": "Pumps gas into a liquid pipe in order to raise the pressure",
      "PrefabName": "StructurePressurantValve",
      "PrefabHash": 23052817,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePressureFedGasEngine",
      "Title": "Pressure Fed Gas Engine",
      "Description": "Inefficient but very powerful, the Pressure Fed Gas Engine moves gas from each of its two inputs based on the pressure of the input pipes. Control the mixing ratio of fuels by tweaking the input pressures to target a 2:1 mix of <link=GasVolatiles><color=#44AD83>Volatiles</color></link> to <link=GasOxygen><color=#44AD83>Oxygen</color></link> gas. Chilling propellant gasses or using <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> as an oxydizer will result in even higher thrust outputs.",
      "PrefabName": "StructurePressureFedGasEngine",
      "PrefabHash": -624011170,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeThrottle><color=orange>Throttle</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePassedMoles><color=orange>PassedMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input2",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Power And Data Output",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "Throttle": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "PassedMoles": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Input2"
          ],
          [
            "PowerAndData",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePressureFedLiquidEngine",
      "Title": "Pressure Fed Liquid Engine",
      "Description": "Highly efficient and powerful, the Pressure Fed Liquid Engine is a challenging engine to run in a stable configuration. Liquid is pulled from the input into the engine based on the input gas pressure. Some gas is also moved in this process so Stationeers will need to devise a system to maintain a high gas pressure in the liquid input pipe. The second liquid pipe connection is an optional heat-exchanger connection which exchanges heat between the pipes contents and the engine bell, the Setting variable drives the effectiveness of the heat-exchanger.",
      "PrefabName": "StructurePressureFedLiquidEngine",
      "PrefabHash": 379750958,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeThrottle><color=orange>Throttle</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePassedMoles><color=orange>PassedMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input2",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Power And Data Output",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "Throttle": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "PassedMoles": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Input2"
          ],
          [
            "PowerAndData",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePressureRegulator",
      "Title": "Pressure Regulator",
      "Description": "Controlling the flow of gas between two pipe networks, pressure regulators shift gas until a set pressure on the outlet side is achieved, or the gas supply is exhausted. The back pressure regulator, by contrast, will only operate when pressure on the intake side exceeds the set value. With a max pressure of over 20,000kPa, it requires power to operate.",
      "PrefabName": "StructurePressureRegulator",
      "PrefabHash": 209854039,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureProximitySensor",
      "Title": "Proximity Sensor",
      "Description": "Will be triggered if there is a player in the range of the sensor (as defined by the setting dial). The quantity variable will show the number of players. You can configure the sensor to only detect players who hold the correct Access Card using a <link=ThingCartridgeAccessController><color=green>Cartridge (Access Controller)</color></link> in a <link=ThingItemTablet><color=green>Handheld Tablet</color></link>.",
      "PrefabName": "StructureProximitySensor",
      "PrefabHash": 568800213,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Activate": "Read",
          "Setting": "ReadWrite",
          "Quantity": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureGovernedGasEngine",
      "Title": "Pumped Gas Engine",
      "Description": "The most reliable of all the rocket engines, the Pumped Gas Engine runs on a 2:1 mix of <link=GasVolatiles><color=#44AD83>Volatiles</color></link> to <link=GasOxygen><color=#44AD83>Oxygen</color></link> gas.",
      "PrefabName": "StructureGovernedGasEngine",
      "PrefabHash": -214232602,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeThrottle><color=orange>Throttle</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePassedMoles><color=orange>PassedMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "Throttle": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "PassedMoles": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePumpedLiquidEngine",
      "Title": "Pumped Liquid Engine",
      "Description": "Liquid propellants bring greater efficiencies with Pumped Liquid Engine. Two inputs are provided so Stationeers can seperate their fuels, the Setting variable controls the mixing ratio of the inputs. The engine is designed to run on <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link> and <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link>, some Stationeers have reported excessive thrust values by switching to <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link>",
      "PrefabName": "StructurePumpedLiquidEngine",
      "PrefabHash": -2031440019,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeThrottle><color=orange>Throttle</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePassedMoles><color=orange>PassedMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Power And Data Output",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "Throttle": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "PassedMoles": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "None"
          ],
          [
            "PipeLiquid",
            "None"
          ],
          [
            "PowerAndData",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemPumpkin",
      "Title": "Pumpkin",
      "Description": "Pumpkins are a perennial plant, with both a long growth time, and a long time between harvests.  Its low requirement for darkness allows for accelerated growing if provided with extra light.",
      "PrefabName": "ItemPumpkin",
      "PrefabHash": 1277828144,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 20.0,
        "Ingredient": true,
        "Reagents": {
          "Pumpkin": 1.0
        }
      }
    },
    {
      "Key": "ThingItemPumpkinPie",
      "Title": "Pumpkin Pie",
      "Description": "",
      "PrefabName": "ItemPumpkinPie",
      "PrefabHash": 62768076,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingSeedBag_Pumpkin",
      "Title": "Pumpkin Seeds",
      "Description": "Grow a <link=ThingItemPumpkin><color=green>Pumpkin</color></link>.",
      "PrefabName": "SeedBag_Pumpkin",
      "PrefabHash": 1423199840,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemPumpkinSoup",
      "Title": "Pumpkin Soup",
      "Description": "Made using <link=ThingItemCookedPumpkin><color=green>Cooked Pumpkin</color></link> and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link> in a <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link> or <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link>. Fairly high in nutrition, canned food does not <link=DecayPage><color=#0080FFFF>decay</color></link>",
      "PrefabName": "ItemPumpkinSoup",
      "PrefabHash": 1277979876,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemPureIceCarbonDioxide",
      "Title": "Pure Ice Carbon Dioxide",
      "Description": "A frozen chunk of pure <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link>",
      "PrefabName": "ItemPureIceCarbonDioxide",
      "PrefabHash": -1251009404,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceHydrogen",
      "Title": "Pure Ice Hydrogen",
      "Description": "A frozen chunk of pure <link=GasHydrogen><color=#44AD83>Hydrogen</color></link>",
      "PrefabName": "ItemPureIceHydrogen",
      "PrefabHash": 944530361,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceLiquidCarbonDioxide",
      "Title": "Pure Ice Liquid Carbon Dioxide",
      "Description": "A frozen chunk of pure <link=GasLiquidCarbonDioxide><color=#44AD83>Liquid Carbon Dioxide</color></link>",
      "PrefabName": "ItemPureIceLiquidCarbonDioxide",
      "PrefabHash": -1715945725,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceLiquidHydrogen",
      "Title": "Pure Ice Liquid Hydrogen",
      "Description": "A frozen chunk of pure <link=GasLiquidHydrogen><color=#44AD83>Liquid Hydrogen</color></link>",
      "PrefabName": "ItemPureIceLiquidHydrogen",
      "PrefabHash": -1044933269,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceLiquidNitrogen",
      "Title": "Pure Ice Liquid Nitrogen",
      "Description": "A frozen chunk of pure <link=GasLiquidNitrogen><color=#44AD83>Liquid Nitrogen</color></link>",
      "PrefabName": "ItemPureIceLiquidNitrogen",
      "PrefabHash": 1674576569,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceLiquidNitrous",
      "Title": "Pure Ice Liquid Nitrous",
      "Description": "A frozen chunk of pure <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link>",
      "PrefabName": "ItemPureIceLiquidNitrous",
      "PrefabHash": 1428477399,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceLiquidOxygen",
      "Title": "Pure Ice Liquid Oxygen",
      "Description": "A frozen chunk of pure <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link>",
      "PrefabName": "ItemPureIceLiquidOxygen",
      "PrefabHash": 541621589,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceLiquidPollutant",
      "Title": "Pure Ice Liquid Pollutant",
      "Description": "A frozen chunk of pure <link=GasLiquidPollutant><color=#44AD83>Liquid Pollutant</color></link>",
      "PrefabName": "ItemPureIceLiquidPollutant",
      "PrefabHash": -1748926678,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceLiquidVolatiles",
      "Title": "Pure Ice Liquid Volatiles",
      "Description": "A frozen chunk of pure <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link>",
      "PrefabName": "ItemPureIceLiquidVolatiles",
      "PrefabHash": -1306628937,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceNitrogen",
      "Title": "Pure Ice Nitrogen",
      "Description": "A frozen chunk of pure <link=GasNitrogen><color=#44AD83>Nitrogen</color></link>",
      "PrefabName": "ItemPureIceNitrogen",
      "PrefabHash": -1708395413,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceNitrous",
      "Title": "Pure Ice NitrousOxide",
      "Description": "A frozen chunk of pure <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link>",
      "PrefabName": "ItemPureIceNitrous",
      "PrefabHash": 386754635,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceOxygen",
      "Title": "Pure Ice Oxygen",
      "Description": "A frozen chunk of pure <link=GasOxygen><color=#44AD83>Oxygen</color></link>",
      "PrefabName": "ItemPureIceOxygen",
      "PrefabHash": -1150448260,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIcePollutant",
      "Title": "Pure Ice Pollutant",
      "Description": "A frozen chunk of pure <link=GasPollutant><color=#44AD83>Pollutant</color></link>",
      "PrefabName": "ItemPureIcePollutant",
      "PrefabHash": -1755356,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIcePollutedWater",
      "Title": "Pure Ice Polluted Water",
      "Description": "A frozen chunk of <link=GasPollutedWater><color=#44AD83>Polluted Water</color></link>",
      "PrefabName": "ItemPureIcePollutedWater",
      "PrefabHash": -2073202179,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceSteam",
      "Title": "Pure Ice Steam",
      "Description": "A frozen chunk of pure <link=GasSteam><color=#44AD83>Steam</color></link>",
      "PrefabName": "ItemPureIceSteam",
      "PrefabHash": -874791066,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIceVolatiles",
      "Title": "Pure Ice Volatiles",
      "Description": "A frozen chunk of pure <link=GasVolatiles><color=#44AD83>Volatiles</color></link>",
      "PrefabName": "ItemPureIceVolatiles",
      "PrefabHash": -633723719,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemPureIce",
      "Title": "Pure Ice Water",
      "Description": "A frozen chunk of pure <link=GasWater><color=#44AD83>Water</color></link>",
      "PrefabName": "ItemPureIce",
      "PrefabHash": -1616308158,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ices",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingStructurePurgeValve",
      "Title": "Purge Valve",
      "Description": "Allows for removal of pressurant gas and evaporated liquids from a liquid pipe. Similar in function to a <link=ThingStructureBackPressureRegulator><color=green>Back Pressure Regulator</color></link> the <link=ThingStructurePurgeValve><color=green>Purge Valve</color></link> moves gas from the input liquid pipe to the output gas pipe aiming to keep the pressure of the input at the target setting.",
      "PrefabName": "StructurePurgeValve",
      "PrefabHash": -737232128,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingRailingElegant01",
      "Title": "Railing Elegant (Type 1)",
      "Description": "",
      "PrefabName": "RailingElegant01",
      "PrefabHash": 399661231,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingRailingElegant02",
      "Title": "Railing Elegant (Type 2)",
      "Description": "",
      "PrefabName": "RailingElegant02",
      "PrefabHash": -1898247915,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureRailing",
      "Title": "Railing Industrial (Type 1)",
      "Description": "\"Safety third.\"",
      "PrefabName": "StructureRailing",
      "PrefabHash": -1756913871,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingRailingIndustrial02",
      "Title": "Railing Industrial (Type 2)",
      "Description": "",
      "PrefabName": "RailingIndustrial02",
      "PrefabHash": -2072792175,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingItemReagentMix",
      "Title": "Reagent Mix",
      "Description": "Reagent mix is pure potential. A slurry of undifferentiated <link=OrePage><color=#0080FFFF>ores</color></link>, it is output by the <link=ThingStructureRecycler><color=green>Recycler</color></link> and can be fed into the <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link> to separate and recover the individual materials. Reagent mix is also output by the <link=ThingStructureFurnace><color=green>Furnace</color></link> when the current contents are ejected without smelting a specific ingot.",
      "PrefabName": "ItemReagentMix",
      "PrefabHash": -1641500434,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingApplianceReagentProcessor",
      "Title": "Reagent Processor",
      "Description": "Sitting somewhere between a high powered juicer and an alchemist's alembic, the <link=Xigo><color=#0080FFFF>Xigo</color></link> reagent processor turns certain raw materials and food items into cooking and crafting ingredients. Indispensible in any space kitchen, just bolt it to the bench, and you're ready to go.",
      "PrefabName": "ApplianceReagentProcessor",
      "PrefabHash": 1260918085,
      "SlotInserts": [
        {
          "SlotName": "Input",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Output",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Appliance",
        "SortingClass": "Appliances"
      }
    },
    {
      "Key": "ThingStructureLogicReagentReader",
      "Title": "Reagent Reader",
      "Description": "",
      "PrefabName": "StructureLogicReagentReader",
      "PrefabHash": -124308857,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureRecycler",
      "Title": "Recycler",
      "Description": "A device for collecting the raw resources while destroying an item. Produces <link=ThingItemReagentMix><color=green>Reagent Mix</color></link> containing packages of reagents. Pass these through the <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link> to gain back the source ores. Plants and organic matter passed through will create Biomass, which when passed through the <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link> will produce <link=ThingItemBiomass><color=green>Biomass</color></link>.",
      "PrefabName": "StructureRecycler",
      "PrefabHash": -1633947337,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureRefrigeratedVendingMachine",
      "Title": "Refrigerated Vending Machine",
      "Description": "The refrigerated OmniKool vending machine is an advanced version of the standard <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link>, which maintains an optimum pressure and constant temperature of -130 degrees C, to prevent food spoilage. It can hold up to 100 stacks.\nThe OmniKool also has an in-built <link=ThingStructureStacker><color=green>Stacker</color></link>, allowing players to set the stack sizes of any items ADDED to the device. The unit's default stack size is 50.\nNOTE: altering stack sizes DOES NOT update existing stacks within the machine, only those subsequently added. ",
      "PrefabName": "StructureRefrigeratedVendingMachine",
      "PrefabHash": -1577831321,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "9"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "10"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "11"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "12"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "13"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "14"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "15"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "16"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "17"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "18"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "19"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "20"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "21"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "22"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "23"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "24"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "25"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "26"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "27"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "28"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "29"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "30"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "31"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "32"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "33"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "34"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "35"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "36"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "37"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "38"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "39"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "40"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "41"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "42"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "43"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "44"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "45"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "46"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "47"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "48"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "49"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "50"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "51"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "52"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "53"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "54"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "55"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "56"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "57"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "58"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "59"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "60"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "61"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "62"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "63"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "64"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "65"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "66"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "67"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "68"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "69"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "70"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "71"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "72"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "73"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "74"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "75"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "76"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "77"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "78"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "79"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "80"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "81"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "82"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "83"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "84"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "85"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "86"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "87"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "88"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "89"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "90"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "91"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "92"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "93"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "94"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "95"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "96"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "97"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "98"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "99"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "100"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "101"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRequestHash><color=orange>RequestHash</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {},
          "2": {},
          "3": {},
          "4": {},
          "5": {},
          "6": {},
          "7": {},
          "8": {},
          "9": {},
          "10": {},
          "11": {},
          "12": {},
          "13": {},
          "14": {},
          "15": {},
          "16": {},
          "17": {},
          "18": {},
          "19": {},
          "20": {},
          "21": {},
          "22": {},
          "23": {},
          "24": {},
          "25": {},
          "26": {},
          "27": {},
          "28": {},
          "29": {},
          "30": {},
          "31": {},
          "32": {},
          "33": {},
          "34": {},
          "35": {},
          "36": {},
          "37": {},
          "38": {},
          "39": {},
          "40": {},
          "41": {},
          "42": {},
          "43": {},
          "44": {},
          "45": {},
          "46": {},
          "47": {},
          "48": {},
          "49": {},
          "50": {},
          "51": {},
          "52": {},
          "53": {},
          "54": {},
          "55": {},
          "56": {},
          "57": {},
          "58": {},
          "59": {},
          "60": {},
          "61": {},
          "62": {},
          "63": {},
          "64": {},
          "65": {},
          "66": {},
          "67": {},
          "68": {},
          "69": {},
          "70": {},
          "71": {},
          "72": {},
          "73": {},
          "74": {},
          "75": {},
          "76": {},
          "77": {},
          "78": {},
          "79": {},
          "80": {},
          "81": {},
          "82": {},
          "83": {},
          "84": {},
          "85": {},
          "86": {},
          "87": {},
          "88": {},
          "89": {},
          "90": {},
          "91": {},
          "92": {},
          "93": {},
          "94": {},
          "95": {},
          "96": {},
          "97": {},
          "98": {},
          "99": {},
          "100": {},
          "101": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Ratio": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RequestHash": "ReadWrite",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureReinforcedCompositeWindowSteel",
      "Title": "Reinforced Window (Composite Steel)",
      "Description": "Enjoy vistas of even the most savage, alien landscapes with these heavy duty window frames, which are resistant to pressure differentials up to 1MPa.",
      "PrefabName": "StructureReinforcedCompositeWindowSteel",
      "PrefabHash": -816454272,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureReinforcedCompositeWindow",
      "Title": "Reinforced Window (Composite)",
      "Description": "Enjoy vistas of even the most savage, alien landscapes with these heavy duty window frames, which are resistant to pressure differentials up to 1MPa.",
      "PrefabName": "StructureReinforcedCompositeWindow",
      "PrefabHash": 2027713511,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureReinforcedWallPaddedWindow",
      "Title": "Reinforced Window (Padded)",
      "Description": "Enjoy vistas of even the most savage, alien landscapes with these heavy duty window frames, which are resistant to pressure differentials up to 1MPa.",
      "PrefabName": "StructureReinforcedWallPaddedWindow",
      "PrefabHash": 1939061729,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureReinforcedWallPaddedWindowThin",
      "Title": "Reinforced Window (Thin)",
      "Description": "Enjoy vistas of even the most savage, alien landscapes with these heavy duty window frames, which are resistant to pressure differentials up to 1MPa.",
      "PrefabName": "StructureReinforcedWallPaddedWindowThin",
      "PrefabHash": 158502707,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingItemRemoteDetonator",
      "Title": "Remote Detonator",
      "Description": "",
      "PrefabName": "ItemRemoteDetonator",
      "PrefabHash": 678483886,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemExplosive",
      "Title": "Remote Explosive",
      "Description": "",
      "PrefabName": "ItemExplosive",
      "PrefabHash": 235361649,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemResearchCapsule",
      "Title": "Research Capsule Blue",
      "Description": "",
      "PrefabName": "ItemResearchCapsule",
      "PrefabHash": 819096942,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemResearchCapsuleGreen",
      "Title": "Research Capsule Green",
      "Description": "",
      "PrefabName": "ItemResearchCapsuleGreen",
      "PrefabHash": -1352732550,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemResearchCapsuleRed",
      "Title": "Research Capsule Red",
      "Description": "",
      "PrefabName": "ItemResearchCapsuleRed",
      "PrefabHash": 954947943,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemResearchCapsuleYellow",
      "Title": "Research Capsule Yellow",
      "Description": "",
      "PrefabName": "ItemResearchCapsuleYellow",
      "PrefabHash": 750952701,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingStructureResearchMachine",
      "Title": "Research Machine",
      "Description": "",
      "PrefabName": "StructureResearchMachine",
      "PrefabHash": -796627526,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "<N:EN:HoldingSlot>",
          "SlotType": "None",
          "SlotIndex": "2"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCurrentResearchPodType><color=orange>CurrentResearchPodType</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeManualResearchRequiredPod><color=orange>ManualResearchRequiredPod</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {},
          "2": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "CurrentResearchPodType": "Read",
          "ManualResearchRequiredPod": "Write",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingRespawnPoint",
      "Title": "Respawn Point",
      "Description": "Place a respawn point to set a player entry point to your base when loading in, or returning from the dead.",
      "PrefabName": "RespawnPoint",
      "PrefabHash": -788672929,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingRespawnPointWallMounted",
      "Title": "Respawn Point (Mounted)",
      "Description": "",
      "PrefabName": "RespawnPointWallMounted",
      "PrefabHash": -491247370,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingItemRice",
      "Title": "Rice",
      "Description": "Rice grows at a moderate rate as long as its supplied with plenty of water.  Being more dependant on water, rice plants can easily die during periods of drought.",
      "PrefabName": "ItemRice",
      "PrefabHash": 658916791,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 50.0,
        "Ingredient": true,
        "Reagents": {
          "Rice": 1.0
        }
      }
    },
    {
      "Key": "ThingSeedBag_Rice",
      "Title": "Rice Seeds",
      "Description": "Grow some <link=ThingItemRice><color=green>Rice</color></link>.",
      "PrefabName": "SeedBag_Rice",
      "PrefabHash": -1691151239,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemRoadFlare",
      "Title": "Road Flare",
      "Description": "Designed to burn anywhere in the Solar System, the EZC magnesium fusee supplies its own oxygen to fuel combustion, and dispel the eternal night of space.",
      "PrefabName": "ItemRoadFlare",
      "PrefabHash": 871811564,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Flare",
        "SortingClass": "Default",
        "MaxQuantity": 20.0
      }
    },
    {
      "Key": "ThingStructureRocketAvionics",
      "Title": "Rocket Avionics",
      "Description": "",
      "PrefabName": "StructureRocketAvionics",
      "PrefabHash": 808389066,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVelocityRelativeY><color=orange>VelocityRelativeY</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeProgress><color=orange>Progress</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeDestinationCode><color=orange>DestinationCode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeAcceleration><color=orange>Acceleration</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeAutoShutOff><color=orange>AutoShutOff</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMass><color=orange>Mass</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeDryMass><color=orange>DryMass</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeThrust><color=orange>Thrust</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeWeight><color=orange>Weight</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeThrustToWeight><color=orange>ThrustToWeight</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTimeToDestination><color=orange>TimeToDestination</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeBurnTimeRemaining><color=orange>BurnTimeRemaining</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeAutoLand><color=orange>AutoLand</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeFlightControlRule><color=orange>FlightControlRule</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReEntryAltitude><color=orange>ReEntryAltitude</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeApex><color=orange>Apex</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeDiscover><color=orange>Discover</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeChart><color=orange>Chart</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSurvey><color=orange>Survey</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeNavPoints><color=orange>NavPoints</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeChartedNavPoints><color=orange>ChartedNavPoints</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSites><color=orange>Sites</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCurrentCode><color=orange>CurrentCode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeDensity><color=orange>Density</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRichness><color=orange>Richness</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSize><color=orange>Size</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalQuantity><color=orange>TotalQuantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMinedQuantity><color=orange>MinedQuantity</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Invalid",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "None",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Mine",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Survey",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Discover",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "Chart",
          "LogicAccessTypes": "5"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Temperature": "Read",
          "Reagents": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "VelocityRelativeY": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "Progress": "Read",
          "DestinationCode": "ReadWrite",
          "Acceleration": "Read",
          "ReferenceId": "Read",
          "AutoShutOff": "ReadWrite",
          "Mass": "Read",
          "DryMass": "Read",
          "Thrust": "Read",
          "Weight": "Read",
          "ThrustToWeight": "Read",
          "TimeToDestination": "Read",
          "BurnTimeRemaining": "Read",
          "AutoLand": "Write",
          "FlightControlRule": "Read",
          "ReEntryAltitude": "Read",
          "Apex": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "Discover": "Read",
          "Chart": "Read",
          "Survey": "Read",
          "NavPoints": "Read",
          "ChartedNavPoints": "Read",
          "Sites": "Read",
          "CurrentCode": "Read",
          "Density": "Read",
          "Richness": "Read",
          "Size": "Read",
          "TotalQuantity": "Read",
          "MinedQuantity": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureRocketCelestialTracker",
      "Title": "Rocket Celestial Tracker",
      "Description": "The Celestial Tracker can be placed in Rockets and when turned on will provide data that can be used to orientate devices such as the <link=ThingStructureGroundBasedTelescope><color=green>Telescope</color></link>. The Horizontal and Vertical output is localized to the orientation of the tracker. You can calibrate your alignment by comparing the result for the primary body with the output from the <link=ThingStructureDaylightSensor><color=green>Daylight Sensor</color></link>. Full functionality will only be available in orbit, but you can configure using the primary body. For aligning with the telescope, have the face plate facing up and the cables facing in the same direction as for the telescope and the output values will be aligned.",
      "PrefabName": "StructureRocketCelestialTracker",
      "PrefabHash": 997453927,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIndex><color=orange>Index</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCelestialHash><color=orange>CelestialHash</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Horizontal": "Read",
          "Vertical": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "Index": "ReadWrite",
          "CelestialHash": "Read"
        }
      },
      "Memory": {
        "MemorySize": 12,
        "MemorySizeReadable": "96 B",
        "MemoryAccess": "Read",
        "Instructions": {
          "BodyOrientation": {
            "Type": "CelestialTracking",
            "Value": 1,
            "Description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>CELESTIAL_INDEX</color>              | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-31 </color>   | <color=yellow>HORIZONTAL_DECI_DEGREES</color>      | <color=orange>SHORT_16</color>   |\r\n| <color=red>32-47 </color>   | <color=yellow>VERTICAL_DECI_DEGREES</color>        | <color=orange>SHORT_16</color>   |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>"
          }
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureRocketCircuitHousing",
      "Title": "Rocket Circuit Housing",
      "Description": "",
      "PrefabName": "StructureRocketCircuitHousing",
      "PrefabHash": 150135861,
      "SlotInserts": [
        {
          "SlotName": "Programmable Chip",
          "SlotType": "ProgrammableChip",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLineNumber><color=orange>LineNumber</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeLineNumber><color=orange>LineNumber</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Power And Data Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "LineNumber": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "LineNumber": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Memory": {
        "MemorySize": 0,
        "MemorySizeReadable": "0 B",
        "MemoryAccess": "ReadWrite"
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "Input"
          ]
        ],
        "DevicesLength": 6,
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingMotherboardRockets",
      "Title": "Rocket Control Motherboard",
      "Description": "",
      "PrefabName": "MotherboardRockets",
      "PrefabHash": -806986392,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Motherboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureRocketEngineTiny",
      "Title": "Rocket Engine (Tiny)",
      "Description": "",
      "PrefabName": "StructureRocketEngineTiny",
      "PrefabHash": 178472613,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureRocketManufactory",
      "Title": "Rocket Manufactory",
      "Description": "",
      "PrefabName": "StructureRocketManufactory",
      "PrefabHash": 1781051034,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "Ingot",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRecipeHash><color=orange>RecipeHash</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCompletionRatio><color=orange>CompletionRatio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureRocketMiner",
      "Title": "Rocket Miner",
      "Description": "Gathers available resources at the rocket's current space location.",
      "PrefabName": "StructureRocketMiner",
      "PrefabHash": -2087223687,
      "SlotInserts": [
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Drill Head Slot",
          "SlotType": "DrillHead",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeDrillCondition><color=orange>DrillCondition</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "DrillCondition": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureRocketScanner",
      "Title": "Rocket Scanner",
      "Description": "",
      "PrefabName": "StructureRocketScanner",
      "PrefabHash": 2014252591,
      "SlotInserts": [
        {
          "SlotName": "Scanner Head Slot",
          "SlotType": "ScanningHead",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemRocketScanningHead",
      "Title": "Rocket Scanner Head",
      "Description": "",
      "PrefabName": "ItemRocketScanningHead",
      "PrefabHash": -1198702771,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "ScanningHead",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingRoverCargo",
      "Title": "Rover (Cargo)",
      "Description": "Connects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
      "PrefabName": "RoverCargo",
      "PrefabHash": 350726273,
      "SlotInserts": [
        {
          "SlotName": "Entity",
          "SlotType": "Entity",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Entity",
          "SlotType": "Entity",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Gas Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Gas Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Gas Filter",
          "SlotType": "GasFilter",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Gas Canister",
          "SlotType": "GasCanister",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Gas Canister",
          "SlotType": "GasCanister",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Gas Canister",
          "SlotType": "GasCanister",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Gas Canister",
          "SlotType": "GasCanister",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "9"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "10"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "11"
        },
        {
          "SlotName": "Container Slot",
          "SlotType": "None",
          "SlotIndex": "12"
        },
        {
          "SlotName": "Container Slot",
          "SlotType": "None",
          "SlotIndex": "13"
        },
        {
          "SlotName": "<N:EN:GasTank>",
          "SlotType": "None",
          "SlotIndex": "14"
        },
        {
          "SlotName": "<N:EN:GasTank>",
          "SlotType": "None",
          "SlotIndex": "15"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15"
        },
        {
          "LogicName": "<link=LogicSlotTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "5, 6, 7, 8"
        },
        {
          "LogicName": "<link=LogicSlotTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "5, 6, 7, 8"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15"
        },
        {
          "LogicName": "<link=LogicSlotTypeFilterType><color=orange>FilterType</color></link>",
          "LogicAccessTypes": "2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "15": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "WirelessLogic": true,
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureRover",
      "Title": "Rover Frame",
      "Description": "",
      "PrefabName": "StructureRover",
      "PrefabHash": 806513938,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingRover_MkI_build_states",
      "Title": "Rover MKI",
      "Description": "",
      "PrefabName": "Rover_MkI_build_states",
      "PrefabHash": 861674123,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingRover_MkI",
      "Title": "Rover MkI",
      "Description": "A distant cousin of the jeep, the Mk I {<link=Sinotai><color=#0080FFFF>Sinotai</color></link> electric rover is one of the most simple and durable light vehicles in the known universe. Able to carry two passengers and cargo such as the <link=ThingDynamicGasCanisterAir><color=green>Portable Gas Tank (Air)</color></link> or <link=ThingCrate><color=green><N:EN:Crate></color></link>, it is powered by up to three batteries, accepting everything including <link=ThingItemBatteryCellNuclear><color=green>Battery Cell (Nuclear)</color></link>.\nA quad-array of hub-mounted electric engines propels the reinforced aluminium frame over most terrain and modest obstacles. While the Mk I is designed for stability in low-horizontality circumstances, if it rolls, try using your <link=ThingItemCrowbar><color=green>Crowbar</color></link> to put it right way up.Connects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
      "PrefabName": "Rover_MkI",
      "PrefabHash": -2049946335,
      "SlotInserts": [
        {
          "SlotName": "Entity",
          "SlotType": "Entity",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Entity",
          "SlotType": "Entity",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "4"
        },
        {
          "SlotName": "<N:EN:ContainerConnection>",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "<N:EN:ContainerConnection>",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "<N:EN:GasTankConnection>",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "<N:EN:GasTankConnection>",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "<N:EN:GasTankConnection>",
          "SlotType": "None",
          "SlotIndex": "9"
        },
        {
          "SlotName": "<N:EN:GasTankConnection>",
          "SlotType": "None",
          "SlotIndex": "10"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "2, 3, 4"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "WirelessLogic": true,
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureSDBHopper",
      "Title": "SDB Hopper",
      "Description": "",
      "PrefabName": "StructureSDBHopper",
      "PrefabHash": -1875856925,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "ClearMemory": "Write",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSDBHopperAdvanced",
      "Title": "SDB Hopper Advanced",
      "Description": "",
      "PrefabName": "StructureSDBHopperAdvanced",
      "PrefabHash": 467225612,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "ClearMemory": "Write",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ],
          [
            "Chute",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSDBSilo",
      "Title": "SDB Silo",
      "Description": "The majestic silo holds large quantities of almost anything. While it is doing that, it cannot be deconstructed. Note also, that any food you put into a silo is likely to <link=DecayPage><color=#0080FFFF>decay</color></link> extremely rapidly. The silo can hold up to 600 stacks.",
      "PrefabName": "StructureSDBSilo",
      "PrefabHash": 1155865682,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingSMGMagazine",
      "Title": "SMG Magazine",
      "Description": "",
      "PrefabName": "SMGMagazine",
      "PrefabHash": -256607540,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Magazine",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemScrewdriver",
      "Title": "Screwdriver",
      "Description": "This standard issue frictional adherence adjustor is a top of the line, bi-rotational model with a columnated uni-grip. It's definitely not just a screwdriver. Use it for construction and deconstruction of certain kits, and setting values on <link=LogicUnitPage><color=#0080FFFF>logic</color></link> units.",
      "PrefabName": "ItemScrewdriver",
      "PrefabHash": 687940869,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemSecurityCamera",
      "Title": "Security Camera",
      "Description": "Security cameras can be paired with a <link=ThingStructureMotionSensor><color=green>Motion Sensor</color></link>, then connected to a <link=ThingStructureConsole><color=green>Console</color></link> fitted with a <link=ThingCircuitboardCameraDisplay><color=green>Camera Display</color></link> for that 'always watched' feeling.",
      "PrefabName": "ItemSecurityCamera",
      "PrefabHash": -1981101032,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default",
        "MaxQuantity": 5.0
      }
    },
    {
      "Key": "ThingStructureSecurityPrinter",
      "Title": "Security Printer",
      "Description": "Any <link=Stationeer><color=#0080FFFF>Stationeer</color></link> concerned about security needs the <link=Harkwell><color=#0080FFFF>Harkwell-designed</color></link> Vigilant-E security printer. Use the Vigilant-E to create a <link=ThingCartridgeAccessController><color=green>Cartridge (Access Controller)</color></link>, in order to restrict access to different parts of your base via keycards like the <link=ThingAccessCardBlue><color=green>Access Card (Blue)</color></link>. The printer also makes a variety of weapons and ammunitions to defend your base against any hostile, aggressive or just slightly rude entites you encounter as you explore the Solar System.\n",
      "PrefabName": "StructureSecurityPrinter",
      "PrefabHash": -641491515,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "Ingot",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRecipeHash><color=orange>RecipeHash</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCompletionRatio><color=orange>CompletionRatio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemSensorLenses",
      "Title": "Sensor Lenses",
      "Description": "These <link=Norsec><color=#0080FFFF>Norsec</color></link> glasses might not be the most fashionable thing, but when a <link=ThingItemSensorProcessingUnitOreScanner><color=green>Sensor Processing Unit (Ore Scanner)</color></link> is inserted, Stationeers can use these handy glasses to x-ray the ground and find ores that are hidden beneath the surface.",
      "PrefabName": "ItemSensorLenses",
      "PrefabHash": -1176140051,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Sensor Processing Unit",
          "SlotType": "SensorProcessingUnit",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Glasses",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemSensorProcessingUnitCelestialScanner",
      "Title": "Sensor Processing Unit (Celestial Scanner)",
      "Description": "",
      "PrefabName": "ItemSensorProcessingUnitCelestialScanner",
      "PrefabHash": -1154200014,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "SensorProcessingUnit",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemSensorProcessingUnitOreScanner",
      "Title": "Sensor Processing Unit (Ore Scanner)",
      "Description": "The Sensor Processing unit can be inserted into <link=ThingItemSensorLenses><color=green>Sensor Lenses</color></link> to reveal underground minerals in a HUD.",
      "PrefabName": "ItemSensorProcessingUnitOreScanner",
      "PrefabHash": -1219128491,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "SensorProcessingUnit",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemSensorProcessingUnitMesonScanner",
      "Title": "Sensor Processing Unit (T-Ray Scanner)",
      "Description": "The T-Ray Scanner Sensor Processing Unit can be inserted into the <link=ThingItemSensorLenses><color=green>Sensor Lenses</color></link> to show an overlay of pipes and cables. This can be useful when building behind walls or other structures.",
      "PrefabName": "ItemSensorProcessingUnitMesonScanner",
      "PrefabHash": -1730464583,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "SensorProcessingUnit",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureShelf",
      "Title": "Shelf",
      "Description": "",
      "PrefabName": "StructureShelf",
      "PrefabHash": 1172114950,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureShelfMedium",
      "Title": "Shelf Medium",
      "Description": "A shelf for putting things on, so you can see them.",
      "PrefabName": "StructureShelfMedium",
      "PrefabHash": 182006674,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "9"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "10"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "11"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "12"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "13"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "14"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingCircuitboardShipDisplay",
      "Title": "Ship Display",
      "Description": "When the original <link=Stationeers><color=#0080FFFF>Stationeer</color></link> Handbook collapsed under its own weight into a singularity, certain information was irretrievably lost. Amongst this mysterious corpus of knowledge is the exact purpose of the ship display board.",
      "PrefabName": "CircuitboardShipDisplay",
      "PrefabHash": -2044446819,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureShortCornerLocker",
      "Title": "Short Corner Locker",
      "Description": "",
      "PrefabName": "StructureShortCornerLocker",
      "PrefabHash": 1330754486,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureShortLocker",
      "Title": "Short Locker",
      "Description": "",
      "PrefabName": "StructureShortLocker",
      "PrefabHash": -554553467,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "9"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureShower",
      "Title": "Shower",
      "Description": "",
      "PrefabName": "StructureShower",
      "PrefabHash": -775128944,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Open": "ReadWrite",
          "Activate": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureShowerPowered",
      "Title": "Shower (Powered)",
      "Description": "",
      "PrefabName": "StructureShowerPowered",
      "PrefabHash": -1081797501,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSign1x1",
      "Title": "Sign 1x1",
      "Description": "",
      "PrefabName": "StructureSign1x1",
      "PrefabHash": 879058460,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSign2x1",
      "Title": "Sign 2x1",
      "Description": "",
      "PrefabName": "StructureSign2x1",
      "PrefabHash": 908320837,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSingleBed",
      "Title": "Single Bed",
      "Description": "Description coming.",
      "PrefabName": "StructureSingleBed",
      "PrefabHash": -492611,
      "SlotInserts": [
        {
          "SlotName": "Bed",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingDynamicSkeleton",
      "Title": "Skeleton",
      "Description": "",
      "PrefabName": "DynamicSkeleton",
      "PrefabHash": 106953348,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureSleeper",
      "Title": "Sleeper",
      "Description": "",
      "PrefabName": "StructureSleeper",
      "PrefabHash": -1467449329,
      "SlotInserts": [
        {
          "SlotName": "Bed",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeEntityState><color=orange>EntityState</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSleeperLeft",
      "Title": "Sleeper Left",
      "Description": "A horizontal variant of the sleeper. Will keep players hydrated and fed while they are logged out - as long as a breathable atmosphere is provided.",
      "PrefabName": "StructureSleeperLeft",
      "PrefabHash": 1213495833,
      "SlotInserts": [
        {
          "SlotName": "Player",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeEntityState><color=orange>EntityState</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Safe",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Unsafe",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Unpowered",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSleeperRight",
      "Title": "Sleeper Right",
      "Description": "A horizontal variant of the sleeper. Will keep players hydrated and fed while they are logged out - as long as a breathable atmosphere is provided.",
      "PrefabName": "StructureSleeperRight",
      "PrefabHash": -1812330717,
      "SlotInserts": [
        {
          "SlotName": "Player",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeEntityState><color=orange>EntityState</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Safe",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Unsafe",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Unpowered",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSleeperVertical",
      "Title": "Sleeper Vertical",
      "Description": "The vertical variant of the sleeper. Will keep players hydrated and fed while they are logged out - as long as a breathable atmosphere is provided.",
      "PrefabName": "StructureSleeperVertical",
      "PrefabHash": -1300059018,
      "SlotInserts": [
        {
          "SlotName": "Player",
          "SlotType": "Entity",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeEntityState><color=orange>EntityState</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Safe",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Unsafe",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Unpowered",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicSlotReader",
      "Title": "Slot Reader",
      "Description": "",
      "PrefabName": "StructureLogicSlotReader",
      "PrefabHash": -767867194,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Data Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Data",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSmallTableBacklessDouble",
      "Title": "Small (Table Backless Double)",
      "Description": "",
      "PrefabName": "StructureSmallTableBacklessDouble",
      "PrefabHash": -1633000411,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureSmallTableBacklessSingle",
      "Title": "Small (Table Backless Single)",
      "Description": "",
      "PrefabName": "StructureSmallTableBacklessSingle",
      "PrefabHash": -1897221677,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureSmallTableDinnerSingle",
      "Title": "Small (Table Dinner Single)",
      "Description": "",
      "PrefabName": "StructureSmallTableDinnerSingle",
      "PrefabHash": 1260651529,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureSmallTableRectangleDouble",
      "Title": "Small (Table Rectangle Double)",
      "Description": "",
      "PrefabName": "StructureSmallTableRectangleDouble",
      "PrefabHash": -660451023,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureSmallTableRectangleSingle",
      "Title": "Small (Table Rectangle Single)",
      "Description": "",
      "PrefabName": "StructureSmallTableRectangleSingle",
      "PrefabHash": -924678969,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureSmallTableThickDouble",
      "Title": "Small (Table Thick Double)",
      "Description": "",
      "PrefabName": "StructureSmallTableThickDouble",
      "PrefabHash": -19246131,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureSmallDirectHeatExchangeGastoGas",
      "Title": "Small Direct Heat Exchanger - Gas + Gas",
      "Description": "Direct Heat Exchangers equalize the temperature of the two input networks.",
      "PrefabName": "StructureSmallDirectHeatExchangeGastoGas",
      "PrefabHash": 1310303582,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input2",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Input2"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSmallDirectHeatExchangeLiquidtoGas",
      "Title": "Small Direct Heat Exchanger - Liquid + Gas ",
      "Description": "Direct Heat Exchangers equalize the temperature of the two input networks.",
      "PrefabName": "StructureSmallDirectHeatExchangeLiquidtoGas",
      "PrefabHash": 1825212016,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input2",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "Pipe",
            "Input2"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSmallDirectHeatExchangeLiquidtoLiquid",
      "Title": "Small Direct Heat Exchanger - Liquid + Liquid",
      "Description": "Direct Heat Exchangers equalize the temperature of the two input networks.",
      "PrefabName": "StructureSmallDirectHeatExchangeLiquidtoLiquid",
      "PrefabHash": -507770416,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input2",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Input2"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureFlagSmall",
      "Title": "Small Flag",
      "Description": "",
      "PrefabName": "StructureFlagSmall",
      "PrefabHash": -1529819532,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureAirlockGate",
      "Title": "Small Hangar Door",
      "Description": "1 x 1 modular door piece for building hangar doors.",
      "PrefabName": "StructureAirlockGate",
      "PrefabHash": 1736080881,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSmallSatelliteDish",
      "Title": "Small Satellite Dish",
      "Description": "This small communications unit can be used to communicate with nearby trade vessels.\n\n        When connected to a <link=ThingStructureComputer><color=green>Computer</color></link> containing a <link=ThingMotherboardComms><color=green>Communications Motherboard</color></link> motherboard, a <link=ThingLandingpad_CenterPiece01><color=green>Landingpad Center</color></link>, and a <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link>, this allows Stationeers to contact traders. Adjust its horizontal and vertical attributes either directly or through logic.",
      "PrefabName": "StructureSmallSatelliteDish",
      "PrefabHash": -2138748650,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSignalStrength><color=orange>SignalStrength</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSignalID><color=orange>SignalID</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeInterrogationProgress><color=orange>InterrogationProgress</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTargetPadIndex><color=orange>TargetPadIndex</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSizeX><color=orange>SizeX</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSizeZ><color=orange>SizeZ</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMinimumWattsToContact><color=orange>MinimumWattsToContact</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeWattsReachingContact><color=orange>WattsReachingContact</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeContactTypeId><color=orange>ContactTypeId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeBestContactFilter><color=orange>BestContactFilter</color></link>",
          "LogicAccessTypes": "Read Write"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Setting": "ReadWrite",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "SignalStrength": "Read",
          "SignalID": "Read",
          "InterrogationProgress": "Read",
          "TargetPadIndex": "ReadWrite",
          "SizeX": "Read",
          "SizeZ": "Read",
          "MinimumWattsToContact": "Read",
          "WattsReachingContact": "Read",
          "ContactTypeId": "Read",
          "ReferenceId": "Read",
          "BestContactFilter": "ReadWrite"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSmallTableThickSingle",
      "Title": "Small Table (Thick Single)",
      "Description": "",
      "PrefabName": "StructureSmallTableThickSingle",
      "PrefabHash": -291862981,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureTankSmall",
      "Title": "Small Tank",
      "Description": "",
      "PrefabName": "StructureTankSmall",
      "PrefabHash": 1013514688,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureTankSmallAir",
      "Title": "Small Tank (Air)",
      "Description": "",
      "PrefabName": "StructureTankSmallAir",
      "PrefabHash": 955744474,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureTankSmallFuel",
      "Title": "Small Tank (Fuel)",
      "Description": "",
      "PrefabName": "StructureTankSmallFuel",
      "PrefabHash": 2102454415,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingCircuitboardSolarControl",
      "Title": "Solar Control",
      "Description": "Adding a solar control board to a <link=ThingStructureConsole><color=green>Console</color></link> lets you manually control the horizontal and vertical angles of any connected <link=ThingStructureSolarPanel><color=green>Solar Panel</color></link>.",
      "PrefabName": "CircuitboardSolarControl",
      "PrefabHash": 2020180320,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Circuitboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureSolarPanel",
      "Title": "Solar Panel",
      "Description": "<link=Sinotai><color=#0080FFFF>Sinotai's</color></link> standard solar panels are used for generating power from sunlight. They can be connected to <link=LogicPage><color=#0080FFFF>Logic</color></link> systems, in order to track sunlight, but their reduced during storms and when damaged. You can repair these using some trusty <link=ThingItemDuctTape><color=green>Duct Tape</color></link>.",
      "PrefabName": "StructureSolarPanel",
      "PrefabHash": -2045627372,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSolarPanel45",
      "Title": "Solar Panel (Angled)",
      "Description": "<link=Sinotai><color=#0080FFFF>Sinotai</color></link> basic solar panels generate power from sunlight, sitting at 45 degrees to the ground. Their efficiency is reduced during storms and when damaged. You can repair these using some trusty <link=ThingItemDuctTape><color=green>Duct Tape</color></link>.",
      "PrefabName": "StructureSolarPanel45",
      "PrefabHash": -1554349863,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSolarPanelDual",
      "Title": "Solar Panel (Dual)",
      "Description": "<link=Sinotai><color=#0080FFFF>Sinotai</color></link> dual solar panels are used for generating power from sunlight, with dedicated data and power ports. They can be connected to {<link=LogicPage><color=#0080FFFF>Logic</color></link> systems, in order to track sunlight, but their efficiency is reduced during storms and when damaged. You can repair these using some trusty <link=ThingItemDuctTape><color=green>Duct Tape</color></link>.",
      "PrefabName": "StructureSolarPanelDual",
      "PrefabHash": -539224550,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSolarPanelFlat",
      "Title": "Solar Panel (Flat)",
      "Description": "<link=Sinotai><color=#0080FFFF>Sinotai</color></link> basic solar panels generate power from sunlight. They lie flat to the ground, and their efficiency is reduced during storms and when damaged. You can repair these using some trusty <link=ThingItemDuctTape><color=green>Duct Tape</color></link>.",
      "PrefabName": "StructureSolarPanelFlat",
      "PrefabHash": 1968102968,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSolarPanel45Reinforced",
      "Title": "Solar Panel (Heavy Angled)",
      "Description": "This solar panel is resistant to storm damage.",
      "PrefabName": "StructureSolarPanel45Reinforced",
      "PrefabHash": 930865127,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSolarPanelDualReinforced",
      "Title": "Solar Panel (Heavy Dual)",
      "Description": "This solar panel is resistant to storm damage.",
      "PrefabName": "StructureSolarPanelDualReinforced",
      "PrefabHash": -1545574413,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSolarPanelFlatReinforced",
      "Title": "Solar Panel (Heavy Flat)",
      "Description": "This solar panel is resistant to storm damage.",
      "PrefabName": "StructureSolarPanelFlatReinforced",
      "PrefabHash": 1697196770,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSolarPanelReinforced",
      "Title": "Solar Panel (Heavy)",
      "Description": "This solar panel is resistant to storm damage.",
      "PrefabName": "StructureSolarPanelReinforced",
      "PrefabHash": -934345724,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemSolidFuel",
      "Title": "Solid Fuel (Hydrocarbon)",
      "Description": "",
      "PrefabName": "ItemSolidFuel",
      "PrefabHash": -365253871,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Resources",
        "MaxQuantity": 500.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Hydrocarbon": 1.0
        }
      }
    },
    {
      "Key": "ThingStructureSorter",
      "Title": "Sorter",
      "Description": "No amount of automation is complete without some way of moving different items to different parts of a system. The <link=Xigo><color=#0080FFFF>Xigo</color></link> A2B sorter can be programmed via a computer with a <link=ThingMotherboardSorter><color=green>Sorter Motherboard</color></link> to direct various items into different chute networks. Filtered items are always passed out the righthand side of the sorter, while non filtered items continue straight through.",
      "PrefabName": "StructureSorter",
      "PrefabHash": -1009150565,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Export 2",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Data Disk",
          "SlotType": "DataDisk",
          "SlotIndex": "3"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOutput><color=orange>Output</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Split",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Filter",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Output2",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "Output": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Output2"
          ],
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingMotherboardSorter",
      "Title": "Sorter Motherboard",
      "Description": "Motherboards are connected to <link=ThingStructureComputer><color=green>Computer</color></link>s to perform various technical functions.\nThe <link=Norsec><color=#0080FFFF>Norsec-designed</color></link> K-cops 10-10 sorter motherboard permits <link=Stationeers><color=#0080FFFF>Stationeers</color></link> to control which items a <link=ThingStructureSorter><color=green>Sorter</color></link> does, and does not, permit to pass.",
      "PrefabName": "MotherboardSorter",
      "PrefabHash": -1908268220,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Motherboard",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemSoundCartridgeBass",
      "Title": "Sound Cartridge Bass",
      "Description": "",
      "PrefabName": "ItemSoundCartridgeBass",
      "PrefabHash": -1883441704,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "SoundCartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemSoundCartridgeDrums",
      "Title": "Sound Cartridge Drums",
      "Description": "",
      "PrefabName": "ItemSoundCartridgeDrums",
      "PrefabHash": -1901500508,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "SoundCartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemSoundCartridgeLeads",
      "Title": "Sound Cartridge Leads",
      "Description": "",
      "PrefabName": "ItemSoundCartridgeLeads",
      "PrefabHash": -1174735962,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "SoundCartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemSoundCartridgeSynth",
      "Title": "Sound Cartridge Synth",
      "Description": "",
      "PrefabName": "ItemSoundCartridgeSynth",
      "PrefabHash": -1971419310,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "SoundCartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemSoyOil",
      "Title": "Soy Oil",
      "Description": "",
      "PrefabName": "ItemSoyOil",
      "PrefabHash": 1387403148,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "Consumable": true,
        "Ingredient": true,
        "Reagents": {
          "Oil": 1.0
        }
      }
    },
    {
      "Key": "ThingItemSoybean",
      "Title": "Soybean",
      "Description": " Soybeans grow at a moderate rate, but require atmospheric <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> to grow.  Its main use is to create <link=ThingItemSoyOil><color=green>Soy Oil</color></link>",
      "PrefabName": "ItemSoybean",
      "PrefabHash": 1924673028,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 100.0,
        "Ingredient": true,
        "Reagents": {
          "Soy": 1.0
        }
      }
    },
    {
      "Key": "ThingSeedBag_Soybean",
      "Title": "Soybean Seeds",
      "Description": "Grow some <link=ThingItemSoybean><color=green>Soybean</color></link>.",
      "PrefabName": "SeedBag_Soybean",
      "PrefabHash": 1783004244,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemSpaceCleaner",
      "Title": "Space Cleaner",
      "Description": "There was a time when humanity really wanted to keep space clean. That time has passed.",
      "PrefabName": "ItemSpaceCleaner",
      "PrefabHash": -1737666461,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemSpaceHelmet",
      "Title": "Space Helmet",
      "Description": "The basic space helmet insulates <link=Stationeers><color=#0080FFFF>Stationeers</color></link> against everything from hard vacuum to weird cooking smells. Providing a pressure-controlled, breathable atmosphere, it comes with a built-in light powered by your <link=ThingItemEvaSuit><color=green>Eva Suit</color></link> <link=ThingItemBatteryCell><color=green>Battery Cell (Small)</color></link>.\nIt also incorporates a lock/unlock feature to avoid accidental opening, as well as a flush function to expel and replace the internal atmosphere. If damaged, use <link=ThingItemDuctTape><color=green>Duct Tape</color></link> to fix it, or paint it any color you like using the <link=ThingAppliancePaintMixer><color=green>Paint Mixer</color></link>.",
      "PrefabName": "ItemSpaceHelmet",
      "PrefabHash": 714830451,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeFlush><color=orange>Flush</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeSoundAlert><color=orange>SoundAlert</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "TotalMoles": "Read",
          "Volume": "ReadWrite",
          "RatioNitrousOxide": "Read",
          "Combustion": "Read",
          "Flush": "Write",
          "SoundAlert": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Item": {
        "SlotClass": "Helmet",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemSpaceIce",
      "Title": "Space Ice",
      "Description": "",
      "PrefabName": "ItemSpaceIce",
      "PrefabHash": 675686937,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Ore",
        "SortingClass": "Ores",
        "MaxQuantity": 100.0
      }
    },
    {
      "Key": "ThingSpaceShuttle",
      "Title": "Space Shuttle",
      "Description": "An antiquated <link=Sinotai><color=#0080FFFF>Sinotai</color></link> transport craft, long since decommissioned.",
      "PrefabName": "SpaceShuttle",
      "PrefabHash": -1991297271,
      "SlotInserts": [
        {
          "SlotName": "Captain's Seat",
          "SlotType": "Entity",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Passenger Seat Left",
          "SlotType": "Entity",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Passenger Seat Right",
          "SlotType": "Entity",
          "SlotIndex": "2"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemSpacepack",
      "Title": "Spacepack",
      "Description": "The basic <link=CHAC><color=#0080FFFF>CHAC</color></link> spacepack isn't 'technically' a jetpack, it's a gas thruster. It can be powered by any gas, so long as the internal pressure of the <link=AtmosphericsPage><color=#0080FFFF>canister</color></link> is higher than the ambient external pressure. If the external pressure is greater, the spacepack will not function.\nIndispensable for building, mining and general movement, it has ten storage slots and lets <link=Stationeers><color=#0080FFFF>Stationeers</color></link> fly at 3m/s, compared to the more powerful <link=ThingItemJetpackBasic><color=green>Jetpack Basic</color></link> or <link=ThingItemHardJetpack><color=green>Hardsuit Jetpack</color></link>. Adjusting the thrust value alters your rate of acceleration, while activating the stablizer causes the spacepack to hover when a given height is reached.\nUSE: 'J' to activate; 'space' to fly up; 'left ctrl' to descend; and 'WASD' to move.",
      "PrefabName": "ItemSpacepack",
      "PrefabHash": -1260618380,
      "SlotInserts": [
        {
          "SlotName": "Propellant",
          "SlotType": "GasCanister",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "9"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Back",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemSprayGun",
      "Title": "Spray Gun",
      "Description": "Use with Spray cans in the <link=SlotSprayCan><color=orange>Spray Can</color></link> to paint structures, cables and pipes. Much more efficient and faster than doing it with individual spray cans.",
      "PrefabName": "ItemSprayGun",
      "PrefabHash": 1289723966,
      "SlotInserts": [
        {
          "SlotName": "Spray Can",
          "SlotType": "Bottle",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemSprayCanBlack",
      "Title": "Spray Paint (Black)",
      "Description": "Go classic, clandestine or just plain Gothic with black paint, which can be applied to most items. Each can has 20 uses.",
      "PrefabName": "ItemSprayCanBlack",
      "PrefabHash": -688107795,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Bottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemSprayCanBlue",
      "Title": "Spray Paint (Blue)",
      "Description": "What kind of a color is blue? The kind of of color that says, 'Hey, what about me?'",
      "PrefabName": "ItemSprayCanBlue",
      "PrefabHash": -498464883,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Bottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemSprayCanBrown",
      "Title": "Spray Paint (Brown)",
      "Description": "In more artistic <link=Stationeers><color=#0080FFFF>Stationeers</color></link> circles, the absence of brown is often lamented, but seldom changed.",
      "PrefabName": "ItemSprayCanBrown",
      "PrefabHash": 845176977,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Bottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemSprayCanGreen",
      "Title": "Spray Paint (Green)",
      "Description": "Green is the color of life, and longing. Paradoxically, it's also the color of envy, and tolerance. It denotes sickness, youth, and wealth. But really, it's just what light does at around 500 billionths of a meter.",
      "PrefabName": "ItemSprayCanGreen",
      "PrefabHash": -1880941852,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Bottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemSprayCanGrey",
      "Title": "Spray Paint (Grey)",
      "Description": "Arguably the most popular color in the universe, grey was invented so designers had something to do.",
      "PrefabName": "ItemSprayCanGrey",
      "PrefabHash": -1645266981,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Bottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemSprayCanKhaki",
      "Title": "Spray Paint (Khaki)",
      "Description": "Not so much a single color, as a category of boredom, khaki is the pigmentation equivalent of a mild depressive episode.",
      "PrefabName": "ItemSprayCanKhaki",
      "PrefabHash": 1918456047,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Bottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemSprayCanOrange",
      "Title": "Spray Paint (Orange)",
      "Description": "Orange is fun, but also suggestive of hazards. Sitting proudly in the middle of the visual spectrum, it has nothing to prove.",
      "PrefabName": "ItemSprayCanOrange",
      "PrefabHash": -158007629,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Bottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemSprayCanPink",
      "Title": "Spray Paint (Pink)",
      "Description": "With the invention of enduring chemical dyes, the 20th century bestowed associations with innocence and tenderness upon this pale tint of red. Yet classically, it was the color of seduction and eroticism. Things change.",
      "PrefabName": "ItemSprayCanPink",
      "PrefabHash": 1344257263,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Bottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemSprayCanPurple",
      "Title": "Spray Paint (Purple)",
      "Description": "Purple is a curious color. You need to be careful with purple. It can be very good, or go horribly, horribly wrong.",
      "PrefabName": "ItemSprayCanPurple",
      "PrefabHash": 30686509,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Bottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemSprayCanRed",
      "Title": "Spray Paint (Red)",
      "Description": "The king of colors, red is perhaps the defining tone of the universe. Linked to blood, royalty, fire and damnation, it is the chromatic expression of power.",
      "PrefabName": "ItemSprayCanRed",
      "PrefabHash": 1514393921,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Bottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemSprayCanWhite",
      "Title": "Spray Paint (White)",
      "Description": "White looks clean, sharp and nice. But <link=Stationeers><color=#0080FFFF>Stationeering</color></link> can be a dirty job. White tends to scuff.",
      "PrefabName": "ItemSprayCanWhite",
      "PrefabHash": 498481505,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Bottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemSprayCanYellow",
      "Title": "Spray Paint (Yellow)",
      "Description": "A caricature of light itself, yellow lacks the self-confidence of red, or the swagger of purple. It's less fun than orange, but less emotionally limp than khaki. It's hard to know when yellow is appropriate, but it persists as a primary color regardless. Suggesting that yellow gonna yellow, no matter what anyone thinks.",
      "PrefabName": "ItemSprayCanYellow",
      "PrefabHash": 995468116,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Bottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingStructureStackerReverse",
      "Title": "Stacker",
      "Description": "A stacker is an important part of any automated chute network. The <link=Xigo><color=#0080FFFF>Xigo</color></link> ProKompile can be set manually or via logic, to make sure items passing through the stacker are maximized for your storage needs. The reversed stacker has power and data on the opposite side.\nThe ProKompile can stack a wide variety of things such as <link=IngotPage><color=#0080FFFF>ingots</color></link>, as well as splitting stacks into appropriate sizes as needed.",
      "PrefabName": "StructureStackerReverse",
      "PrefabHash": 1585641623,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "2"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOutput><color=orange>Output</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Automatic",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "Output": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Chute",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureStacker",
      "Title": "Stacker",
      "Description": "A stacker is an important part of any automated chute network. The <link=Xigo><color=#0080FFFF>Xigo</color></link> ProKompile can be set manually or via logic, to make sure items passing through the stacker are maximized for your storage needs.\nThe ProKompile can stack a wide variety of things such as <link=IngotPage><color=#0080FFFF>ingots</color></link>, as well as splitting stacks into appropriate sizes as needed.",
      "PrefabName": "StructureStacker",
      "PrefabHash": -2020231820,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Processing",
          "SlotType": "None",
          "SlotIndex": "2"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOutput><color=orange>Output</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Automatic",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "Output": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Chute",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureStairs4x2",
      "Title": "Stairs",
      "Description": "",
      "PrefabName": "StructureStairs4x2",
      "PrefabHash": 1405018945,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureStairs4x2RailL",
      "Title": "Stairs with Rail (Left)",
      "Description": "",
      "PrefabName": "StructureStairs4x2RailL",
      "PrefabHash": 155214029,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureStairs4x2RailR",
      "Title": "Stairs with Rail (Right)",
      "Description": "",
      "PrefabName": "StructureStairs4x2RailR",
      "PrefabHash": -212902482,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureStairs4x2Rails",
      "Title": "Stairs with Rails",
      "Description": "",
      "PrefabName": "StructureStairs4x2Rails",
      "PrefabHash": -1088008720,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureStairwellBackLeft",
      "Title": "Stairwell (Back Left)",
      "Description": "",
      "PrefabName": "StructureStairwellBackLeft",
      "PrefabHash": 505924160,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureStairwellBackPassthrough",
      "Title": "Stairwell (Back Passthrough)",
      "Description": "",
      "PrefabName": "StructureStairwellBackPassthrough",
      "PrefabHash": -862048392,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureStairwellBackRight",
      "Title": "Stairwell (Back Right)",
      "Description": "",
      "PrefabName": "StructureStairwellBackRight",
      "PrefabHash": -2128896573,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureStairwellFrontLeft",
      "Title": "Stairwell (Front Left)",
      "Description": "",
      "PrefabName": "StructureStairwellFrontLeft",
      "PrefabHash": -37454456,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureStairwellFrontPassthrough",
      "Title": "Stairwell (Front Passthrough)",
      "Description": "",
      "PrefabName": "StructureStairwellFrontPassthrough",
      "PrefabHash": -1625452928,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureStairwellFrontRight",
      "Title": "Stairwell (Front Right)",
      "Description": "",
      "PrefabName": "StructureStairwellFrontRight",
      "PrefabHash": 340210934,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureStairwellNoDoors",
      "Title": "Stairwell (No Doors)",
      "Description": "",
      "PrefabName": "StructureStairwellNoDoors",
      "PrefabHash": 2049879875,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureBattery",
      "Title": "Station Battery",
      "Description": "Providing large-scale, reliable power storage, the <link=Sinotai><color=#0080FFFF>Sinotai</color></link> 'Dianzi' station battery is the heart of most <link=Stationeers><color=#0080FFFF>Stationeer</color></link> bases. \nThere are a variety of cautions to the design of electrical systems using batteries, and every experienced Stationeer has a story to tell, hence the Stationeer adage: 'Dianzi cooks, but it also frys.' \n<size=120%><b>POWER OUTPUT</b></size>\nAble to store up to 3600000W of power, there are no practical limits to its throughput, hence it is wise to use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>. Seasoned electrical engineers will also laugh in the face of those who fail to separate out their power generation networks using an <link=ThingStructureAreaPowerControl><color=green>Area Power Control</color></link> and <link=ThingStructureTransformer><color=green>Transformer (Large)</color></link>.",
      "PrefabName": "StructureBattery",
      "PrefabHash": -400115994,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerPotential><color=orange>PowerPotential</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerActual><color=orange>PowerActual</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Empty",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Critical",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "VeryLow",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Low",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Medium",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "High",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Full",
          "LogicAccessTypes": "6"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Charge": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "Input"
          ],
          [
            "Power",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureBatteryLarge",
      "Title": "Station Battery (Large)",
      "Description": "Providing even better large-scale, reliable power storage than the {THING;StructureBattery}, the <link=Sinotai><color=#0080FFFF>Sinotai</color></link> 'Da Dianchi' large station battery is the heart of most <link=Stationeers><color=#0080FFFF>Stationeer</color></link> bases. \nThere are a variety of cautions to the design of electrical systems using batteries, and every experienced Stationeer has a story to tell, hence the Stationeer adage: 'Dianzi cooks, but it also frys.' \n<size=120%><b>POWER OUTPUT</b></size>\nAble to store up to 9000001 watts of power, there are no practical limits to its throughput, hence it is wise to use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>. Seasoned electrical engineers will also laugh in the face of those who fail to separate out their power generation networks using an <link=ThingStructureAreaPowerControl><color=green>Area Power Control</color></link> and <link=ThingStructureTransformer><color=green>Transformer (Large)</color></link>. ",
      "PrefabName": "StructureBatteryLarge",
      "PrefabHash": -1388288459,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerPotential><color=orange>PowerPotential</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerActual><color=orange>PowerActual</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Empty",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Critical",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "VeryLow",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Low",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Medium",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "High",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Full",
          "LogicAccessTypes": "6"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Charge": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "Input"
          ],
          [
            "Power",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureFrame",
      "Title": "Steel Frame",
      "Description": "More durable than the <link=ThingStructureFrameIron><color=green>Iron Frame</color></link>, steel frames also have several variations for more complex constructions, such as the <link=ThingStructureFrameCorner><color=green>Steel Frame (Corner)</color></link> and <link=ThingStructureFrameCornerCut><color=green>Steel Frame (Corner Cut)</color></link>. Like iron frames, they are placed then completed by welding <link=ThingItemSteelSheets><color=green>Steel Sheets</color></link> to the open framework.",
      "PrefabName": "StructureFrame",
      "PrefabHash": 1432512808,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureFrameCornerCut",
      "Title": "Steel Frame (Corner Cut)",
      "Description": "0.Mode0\n1.Mode1",
      "PrefabName": "StructureFrameCornerCut",
      "PrefabHash": 271315669,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureFrameCorner",
      "Title": "Steel Frame (Corner)",
      "Description": "More durable than the <link=ThingStructureFrameIron><color=green>Iron Frame</color></link>, steel frames also offer several variations for more complex lattice constructions. \nWith a little patience and maneuvering, the corner frame's Gothic-inspired silhouette allows the creation of ogival arches and even more ambitious architecture, although they are not airtight and cannot be built on.",
      "PrefabName": "StructureFrameCorner",
      "PrefabHash": -2112390778,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureFrameSide",
      "Title": "Steel Frame (Side)",
      "Description": "More durable than the <link=ThingStructureFrameIron><color=green>Iron Frame</color></link>, steel frames also provide variations for more ornate constructions.",
      "PrefabName": "StructureFrameSide",
      "PrefabHash": -302420053,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingItemSteelFrames",
      "Title": "Steel Frames",
      "Description": "An advanced and stronger version of <link=ThingItemIronFrames><color=green>Iron Frames</color></link>, steel frames are placed by right-clicking. To complete construction, use <link=ThingItemSteelSheets><color=green>Steel Sheets</color></link> and a <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link> in your active hand.",
      "PrefabName": "ItemSteelFrames",
      "PrefabHash": -1448105779,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Kits",
        "MaxQuantity": 30.0
      }
    },
    {
      "Key": "ThingItemSteelSheets",
      "Title": "Steel Sheets",
      "Description": "An advanced building material, <link=ThingItemSteelIngot><color=green>Ingot (Steel)</color></link> sheets are used when constructing a <link=ThingStructureFrame><color=green>Steel Frame</color></link> and several other <link=StructuresPage><color=#0080FFFF>wall</color></link> types.",
      "PrefabName": "ItemSteelSheets",
      "PrefabHash": 38555961,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingItemStelliteGlassSheets",
      "Title": "Stellite Glass Sheets",
      "Description": "A stronger glass substitute.",
      "PrefabName": "ItemStelliteGlassSheets",
      "PrefabHash": -2038663432,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Resources",
        "MaxQuantity": 50.0
      }
    },
    {
      "Key": "ThingStructureStirlingEngine",
      "Title": "Stirling Engine",
      "Description": "Harnessing an ancient thermal exploit, the <link=Recurso><color=#0080FFFF>Recurso</color></link> 'Libra' Stirling Engine generates power via the expansion and contraction of a working gas to drive pistons operating an electrical generator.\n      \nWhen high pressure hot gas is supplied into the input pipe, this gas will heat the hot side of the unit, then pass into the output pipe. The cooler side uses the room's ambient atmosphere, which must be kept at a lower temperature and pressure in order to create a differential. Add a working gas by inserting a <link=SlotGasCanister><color=orange>Gas Canister</color></link>. The unit must be deactivated when adding or removing canisters, or the working gas may leak into the surrounding atmosphere.\n \nGases with a low molecular mass make the most efficient working gases. Increasing the moles of working gas can result in a greater potential power output. However, overpressuring the unit may have ... sub-optimal results.",
      "PrefabName": "StructureStirlingEngine",
      "PrefabHash": -260316435,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "GasCanister",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePowerGeneration><color=orange>PowerGeneration</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeEnvironmentEfficiency><color=orange>EnvironmentEfficiency</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeWorkingGasEfficiency><color=orange>WorkingGasEfficiency</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PowerGeneration": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "EnvironmentEfficiency": "Read",
          "WorkingGasEfficiency": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStopWatch",
      "Title": "Stop Watch",
      "Description": "",
      "PrefabName": "StopWatch",
      "PrefabHash": -1527229051,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTime><color=orange>Time</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "Time": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "Input"
          ],
          [
            "Power",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureSuitStorage",
      "Title": "Suit Storage",
      "Description": "As tidy as it is useful, the suit storage rack holds an <link=ThingItemEvaSuit><color=green>Eva Suit</color></link>, <link=ThingItemSpaceHelmet><color=green>Space Helmet</color></link> and a <link=ThingItemJetpackBasic><color=green>Jetpack Basic</color></link>.\nWhen powered and connected to <link=ThingOxygen><color=green><N:EN:Oxygen></color></link> and <link=ThingPropellant><color=green><N:EN:Propellant></color></link>, it will recharge the suit's batteries, refill the <link=ThingItemGasCanisterOxygen><color=green>Canister (Oxygen)</color></link> and your <link=ThingItemGasFilterNitrogen><color=green>Filter (Nitrogen)</color></link> <link=SlotGasCanister><color=orange>Gas Canister</color></link>. The wastetank will be pumped out to the pipe connected to the waste outlet.\nAll the rack's pipes must be connected or the unit will show an error state, but it will still charge the battery.",
      "PrefabName": "StructureSuitStorage",
      "PrefabHash": 255034731,
      "SlotInserts": [
        {
          "SlotName": "Helmet",
          "SlotType": "Helmet",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Suit",
          "SlotType": "Suit",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Back",
          "SlotType": "Back",
          "SlotIndex": "2"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypePressureWaste><color=orange>PressureWaste</color></link>",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "<link=LogicSlotTypePressureAir><color=orange>PressureAir</color></link>",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Input2",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Open": "ReadWrite",
            "On": "ReadWrite",
            "Lock": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "PressureWaste": "Read",
            "PressureAir": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "Pipe",
            "Input2"
          ],
          [
            "Pipe",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLogicSwitch2",
      "Title": "Switch",
      "Description": "",
      "PrefabName": "StructureLogicSwitch2",
      "PrefabHash": 321604921,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemPlantSwitchGrass",
      "Title": "Switch Grass",
      "Description": "",
      "PrefabName": "ItemPlantSwitchGrass",
      "PrefabHash": -532672323,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingSeedBag_Switchgrass",
      "Title": "Switchgrass Seed",
      "Description": "",
      "PrefabName": "SeedBag_Switchgrass",
      "PrefabHash": 488360169,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingApplianceTabletDock",
      "Title": "Tablet Dock",
      "Description": "",
      "PrefabName": "ApplianceTabletDock",
      "PrefabHash": 1853941363,
      "SlotInserts": [
        {
          "SlotName": "<N:EN:Tablet>",
          "SlotType": "Tool",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Appliance",
        "SortingClass": "Appliances"
      }
    },
    {
      "Key": "ThingStructureTankBigInsulated",
      "Title": "Tank Big (Insulated)",
      "Description": "",
      "PrefabName": "StructureTankBigInsulated",
      "PrefabHash": 1280378227,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureTankConnector",
      "Title": "Tank Connector",
      "Description": "Tank connectors are basic mounting devices that allow you to attach a <link=ThingDynamicGasCanisterEmpty><color=green>Portable Gas Tank</color></link> to a gas pipe network.",
      "PrefabName": "StructureTankConnector",
      "PrefabHash": -1276379454,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ]
    },
    {
      "Key": "ThingStructureTankSmallInsulated",
      "Title": "Tank Small (Insulated)",
      "Description": "",
      "PrefabName": "StructureTankSmallInsulated",
      "PrefabHash": 272136332,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatioOxygen><color=orange>RatioOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioCarbonDioxide><color=orange>RatioCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrogen><color=orange>RatioNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutant><color=orange>RatioPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioVolatiles><color=orange>RatioVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioWater><color=orange>RatioWater</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTotalMoles><color=orange>TotalMoles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioNitrousOxide><color=orange>RatioNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCombustion><color=orange>Combustion</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrogen><color=orange>RatioLiquidNitrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeVolumeOfLiquid><color=orange>VolumeOfLiquid</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidOxygen><color=orange>RatioLiquidOxygen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidVolatiles><color=orange>RatioLiquidVolatiles</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioSteam><color=orange>RatioSteam</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidCarbonDioxide><color=orange>RatioLiquidCarbonDioxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidPollutant><color=orange>RatioLiquidPollutant</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidNitrousOxide><color=orange>RatioLiquidNitrousOxide</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioHydrogen><color=orange>RatioHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioLiquidHydrogen><color=orange>RatioLiquidHydrogen</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatioPollutedWater><color=orange>RatioPollutedWater</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": true,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureGroundBasedTelescope",
      "Title": "Telescope",
      "Description": "A telescope that can be oriented to observe Celestial Bodies. When within full alignment will show orbital information for that celestial object. Atmospheric conditions may disrupt the ability to observe some objects at some times of day. To collect Horizontal and Vertical values you can use a <link=ThingStructureRocketCelestialTracker><color=green>Rocket Celestial Tracker</color></link> while it is in orbit, or a <link=ThingStructureDaylightSensor><color=green>Daylight Sensor</color></link> for primary body data.",
      "PrefabName": "StructureGroundBasedTelescope",
      "PrefabHash": -619745681,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeHorizontal><color=orange>Horizontal</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVertical><color=orange>Vertical</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeHorizontalRatio><color=orange>HorizontalRatio</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeVerticalRatio><color=orange>VerticalRatio</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCelestialHash><color=orange>CelestialHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeAlignmentError><color=orange>AlignmentError</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeDistanceAu><color=orange>DistanceAu</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOrbitPeriod><color=orange>OrbitPeriod</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeInclination><color=orange>Inclination</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeEccentricity><color=orange>Eccentricity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSemiMajorAxis><color=orange>SemiMajorAxis</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeDistanceKm><color=orange>DistanceKm</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeCelestialParentHash><color=orange>CelestialParentHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeTrueAnomaly><color=orange>TrueAnomaly</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "HorizontalRatio": "ReadWrite",
          "VerticalRatio": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "CelestialHash": "Read",
          "AlignmentError": "Read",
          "DistanceAu": "Read",
          "OrbitPeriod": "Read",
          "Inclination": "Read",
          "Eccentricity": "Read",
          "SemiMajorAxis": "Read",
          "DistanceKm": "Read",
          "CelestialParentHash": "Read",
          "TrueAnomaly": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemTerrainManipulator",
      "Title": "Terrain Manipulator",
      "Description": "0.Mode0\n1.Mode1",
      "PrefabName": "ItemTerrainManipulator",
      "PrefabHash": 111280987,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Dirt Canister",
          "SlotType": "Ore",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Mode0",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Mode1",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemPlantThermogenic_Creative",
      "Title": "Thermogenic Plant Creative",
      "Description": "",
      "PrefabName": "ItemPlantThermogenic_Creative",
      "PrefabHash": -1208890208,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemTomato",
      "Title": "Tomato",
      "Description": "Tomato plants are perennial, and will produce multiple harvests without needing to be replanted. Once the plant is mature, it will fruit at a moderate pace.",
      "PrefabName": "ItemTomato",
      "PrefabHash": -998592080,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 20.0,
        "Ingredient": true,
        "Reagents": {
          "Tomato": 1.0
        }
      }
    },
    {
      "Key": "ThingSeedBag_Tomato",
      "Title": "Tomato Seeds",
      "Description": "Grow a <link=ThingItemTomato><color=green>Tomato</color></link>.",
      "PrefabName": "SeedBag_Tomato",
      "PrefabHash": -1922066841,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemTomatoSoup",
      "Title": "Tomato Soup",
      "Description": "Made using <link=ThingItemCookedTomato><color=green>Cooked Tomato</color></link>s and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link> in a <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link> or <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link>.",
      "PrefabName": "ItemTomatoSoup",
      "PrefabHash": 688734890,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Food",
        "MaxQuantity": 1.0
      }
    },
    {
      "Key": "ThingItemToolBelt",
      "Title": "Tool Belt",
      "Description": "If there's one piece of equipment that embodies <link=Stationeers><color=#0080FFFF>Stationeer</color></link> life above all else, it's the humble toolbelt (Editor's note: a recent <link=ODA><color=#0080FFFF>ODA</color></link> survey of iconic Stationeer equipment also rated the smoking, toxic ruins of an over-pressurized <link=ThingStructureFurnace><color=green>Furnace</color></link> lying amid the charred remains of your latest base very highly).\nDesigned to meet the most strict-ish ODA safety standards, the toolbelt's eight slots hold one thing: tools, and <link=ThingItemCableCoil><color=green>Cable Coil</color></link>. Not to be confused with the <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>.",
      "PrefabName": "ItemToolBelt",
      "PrefabHash": -355127880,
      "SlotInserts": [
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "7"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Belt",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingItemMkIIToolbelt",
      "Title": "Tool Belt MK II",
      "Description": "A large, ten-slot tool belt with two extra generic slots for carrying whatever takes your fancy.",
      "PrefabName": "ItemMkIIToolbelt",
      "PrefabHash": 1467558064,
      "SlotInserts": [
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Tool",
          "SlotType": "Tool",
          "SlotIndex": "9"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "10"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "11"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Belt",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingStructureToolManufactory",
      "Title": "Tool Manufactory",
      "Description": "No mission can be completed without the proper tools. The <link=Norsec><color=#0080FFFF>Norsec</color></link> ThuulDek manufactory can fabricate almost any tool or hand-held device a <link=Stationeer><color=#0080FFFF>Stationeer</color></link> may need to complete their mission, as well as a variety of delightful paints.\nUpgrade the device using a <link=ThingToolPrinterMod><color=green>Tool Printer Mod</color></link> for additional recipes and faster processing speeds.",
      "PrefabName": "StructureToolManufactory",
      "PrefabHash": -465741100,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "Ingot",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReagents><color=orange>Reagents</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRecipeHash><color=orange>RecipeHash</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeCompletionRatio><color=orange>CompletionRatio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": true,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingToolPrinterMod",
      "Title": "Tool Printer Mod",
      "Description": "Apply to an <link=ThingStructureToolManufactory><color=green>Tool Manufactory</color></link> with a <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link> or <link=ThingItemArcWelder><color=green>Arc Welder</color></link> to upgrade for increased processing speed and more recipe options.",
      "PrefabName": "ToolPrinterMod",
      "PrefabHash": 1700018136,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingWeaponTorpedo",
      "Title": "Torpedo",
      "Description": "",
      "PrefabName": "WeaponTorpedo",
      "PrefabHash": -1102977898,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Torpedo",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingStructureTorpedoRack",
      "Title": "Torpedo Rack",
      "Description": "",
      "PrefabName": "StructureTorpedoRack",
      "PrefabHash": 1473807953,
      "SlotInserts": [
        {
          "SlotName": "Torpedo",
          "SlotType": "Torpedo",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Torpedo",
          "SlotType": "Torpedo",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Torpedo",
          "SlotType": "Torpedo",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Torpedo",
          "SlotType": "Torpedo",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Torpedo",
          "SlotType": "Torpedo",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Torpedo",
          "SlotType": "Torpedo",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Torpedo",
          "SlotType": "Torpedo",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Torpedo",
          "SlotType": "Torpedo",
          "SlotIndex": "7"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingToyLuna",
      "Title": "Toy Luna",
      "Description": "",
      "PrefabName": "ToyLuna",
      "PrefabHash": 94730034,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingCartridgeTracker",
      "Title": "Tracker",
      "Description": "",
      "PrefabName": "CartridgeTracker",
      "PrefabHash": 81488783,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Cartridge",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemBeacon",
      "Title": "Tracking Beacon",
      "Description": "",
      "PrefabName": "ItemBeacon",
      "PrefabHash": -869869491,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructureTraderWaypoint",
      "Title": "Trader Waypoint",
      "Description": "",
      "PrefabName": "StructureTraderWaypoint",
      "PrefabHash": 1570931620,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureTransformer",
      "Title": "Transformer (Large)",
      "Description": "The large <link=Norsec><color=#0080FFFF>Norsec</color></link> transformer is a critical component of extended <link=ElectronicPage><color=#0080FFFF>electrical</color></link> networks, controlling the maximum power that will flow down a cable. To prevent overloading, output can be set from 0 to 50,000W. \nNote that transformers operate as data isolators, preventing data flowing into any network beyond it.",
      "PrefabName": "StructureTransformer",
      "PrefabHash": -1423212473,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "Input"
          ],
          [
            "Power",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureTransformerMedium",
      "Title": "Transformer (Medium)",
      "Description": "Transformers control the maximum power that will flow down a sub-network of cables, to prevent overloading <link=ElectronicPage><color=#0080FFFF>electrical</color></link> systems. \nMedium transformers are used in larger setups where more than 5000W is required, with output that can be set to a maximum of 25000W.\nNote that transformers also operate as data isolators, preventing data flowing into any network beyond it.",
      "PrefabName": "StructureTransformerMedium",
      "PrefabHash": -1065725831,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power And Data Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "Input"
          ],
          [
            "PowerAndData",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureTransformerSmall",
      "Title": "Transformer (Small)",
      "Description": "Transformers control the maximum power that will flow down a cable subnetwork, to prevent overloading <link=ElectronicPage><color=#0080FFFF>electrical</color></link> systems. Output on small transformers can be set from 0 to 5000W.\nNote that transformers operate as data isolators, preventing data flowing into any network beyond it.",
      "PrefabName": "StructureTransformerSmall",
      "PrefabHash": -890946730,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Power And Data Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "Input"
          ],
          [
            "Power",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureTransformerMediumReversed",
      "Title": "Transformer Reversed (Medium)",
      "Description": "Transformers control the maximum power that will flow down a sub-network of cables, to prevent overloading <link=ElectronicPage><color=#0080FFFF>electrical</color></link> systems. \nMedium transformers are used in larger setups where more than 5000W is required, with output that can be set to a maximum of 25000W.\nNote that transformers also operate as data isolators, preventing data flowing into any network beyond it.",
      "PrefabName": "StructureTransformerMediumReversed",
      "PrefabHash": 833912764,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power And Data Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "Output"
          ],
          [
            "PowerAndData",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureTransformerSmallReversed",
      "Title": "Transformer Reversed (Small)",
      "Description": "Transformers control the maximum power that will flow down a cable subnetwork, to prevent overloading <link=ElectronicPage><color=#0080FFFF>electrical</color></link> systems. Output on small transformers can be set from 0 to 5000W.\nNote that transformers operate as data isolators, preventing data flowing into any network beyond it.",
      "PrefabName": "StructureTransformerSmallReversed",
      "PrefabHash": 1054059374,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power And Data Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "Output"
          ],
          [
            "PowerAndData",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureRocketTransformerSmall",
      "Title": "Transformer Small (Rocket)",
      "Description": "",
      "PrefabName": "StructureRocketTransformerSmall",
      "PrefabHash": 518925193,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "Input"
          ],
          [
            "Power",
            "Output"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePressurePlateLarge",
      "Title": "Trigger Plate (Large)",
      "Description": "",
      "PrefabName": "StructurePressurePlateLarge",
      "PrefabHash": -2008706143,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePressurePlateMedium",
      "Title": "Trigger Plate (Medium)",
      "Description": "",
      "PrefabName": "StructurePressurePlateMedium",
      "PrefabHash": 1269458680,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePressurePlateSmall",
      "Title": "Trigger Plate (Small)",
      "Description": "",
      "PrefabName": "StructurePressurePlateSmall",
      "PrefabHash": -1536471028,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemTropicalPlant",
      "Title": "Tropical Lily",
      "Description": "An anthurium, evolved in the jungles of South America, which will tolerate higher temperatures than most plants.",
      "PrefabName": "ItemTropicalPlant",
      "PrefabHash": -800947386,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingStructureTurbineGenerator",
      "Title": "Turbine Generator",
      "Description": "",
      "PrefabName": "StructureTurbineGenerator",
      "PrefabHash": 1282191063,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePowerGeneration><color=orange>PowerGeneration</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PowerGeneration": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureTurboVolumePump",
      "Title": "Turbo Volume Pump (Gas)",
      "Description": "Shifts 10 times more gas than a basic <link=ThingStructureVolumePump><color=green>Volume Pump</color></link>, with a mode that can be set to flow in either direction.",
      "PrefabName": "StructureTurboVolumePump",
      "PrefabHash": 1310794736,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Right",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Left",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ],
          [
            "Pipe",
            "Output"
          ],
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidTurboVolumePump",
      "Title": "Turbo Volume Pump (Liquid)",
      "Description": "Shifts 10 times more liquid than a basic <link=ThingStructureVolumePump><color=green>Volume Pump</color></link>, with a mode that can be set to flow in either direction.",
      "PrefabName": "StructureLiquidTurboVolumePump",
      "PrefabHash": -1051805505,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Right",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Left",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChuteUmbilicalMale",
      "Title": "Umbilical (Chute)",
      "Description": "0.Left\n1.Center\n2.Right",
      "PrefabName": "StructureChuteUmbilicalMale",
      "PrefabHash": -958884053,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Left",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Center",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Right",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureGasUmbilicalMale",
      "Title": "Umbilical (Gas)",
      "Description": "0.Left\n1.Center\n2.Right",
      "PrefabName": "StructureGasUmbilicalMale",
      "PrefabHash": -1814939203,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Left",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Center",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Right",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidUmbilicalMale",
      "Title": "Umbilical (Liquid)",
      "Description": "0.Left\n1.Center\n2.Right",
      "PrefabName": "StructureLiquidUmbilicalMale",
      "PrefabHash": -1798420047,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Left",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Center",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Right",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePowerUmbilicalMale",
      "Title": "Umbilical (Power)",
      "Description": "0.Left\n1.Center\n2.Right",
      "PrefabName": "StructurePowerUmbilicalMale",
      "PrefabHash": 1529453938,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Left",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Center",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Right",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Power Input",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChuteUmbilicalFemale",
      "Title": "Umbilical Socket (Chute)",
      "Description": "",
      "PrefabName": "StructureChuteUmbilicalFemale",
      "PrefabHash": -1918892177,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureGasUmbilicalFemale",
      "Title": "Umbilical Socket (Gas)",
      "Description": "",
      "PrefabName": "StructureGasUmbilicalFemale",
      "PrefabHash": -1680477930,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidUmbilicalFemale",
      "Title": "Umbilical Socket (Liquid)",
      "Description": "",
      "PrefabName": "StructureLiquidUmbilicalFemale",
      "PrefabHash": 1734723642,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePowerUmbilicalFemale",
      "Title": "Umbilical Socket (Power)",
      "Description": "",
      "PrefabName": "StructurePowerUmbilicalFemale",
      "PrefabHash": 101488029,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureChuteUmbilicalFemaleSide",
      "Title": "Umbilical Socket Angle (Chute)",
      "Description": "",
      "PrefabName": "StructureChuteUmbilicalFemaleSide",
      "PrefabHash": -659093969,
      "SlotInserts": [
        {
          "SlotName": "Transport Slot",
          "SlotType": "None",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureGasUmbilicalFemaleSide",
      "Title": "Umbilical Socket Angle (Gas)",
      "Description": "",
      "PrefabName": "StructureGasUmbilicalFemaleSide",
      "PrefabHash": -648683847,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLiquidUmbilicalFemaleSide",
      "Title": "Umbilical Socket Angle (Liquid)",
      "Description": "",
      "PrefabName": "StructureLiquidUmbilicalFemaleSide",
      "PrefabHash": 1220870319,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructurePowerUmbilicalFemaleSide",
      "Title": "Umbilical Socket Angle (Power)",
      "Description": "",
      "PrefabName": "StructurePowerUmbilicalFemaleSide",
      "PrefabHash": 1922506192,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Power Output",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "Output"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingUniformCommander",
      "Title": "Uniform Commander",
      "Description": "",
      "PrefabName": "UniformCommander",
      "PrefabHash": -2083426457,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Access Card",
          "SlotType": "AccessCard",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Access Card",
          "SlotType": "AccessCard",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Credit Card",
          "SlotType": "CreditCard",
          "SlotIndex": "4"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Uniform",
        "SortingClass": "Clothing"
      }
    },
    {
      "Key": "ThingStructureUnloader",
      "Title": "Unloader",
      "Description": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> Re:Gurge is a handy unit for unloading any items inserted into it, and feeding them into a chute network. For instance, if you add a full <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>, the Re:Gurge will empty a mining belt of its contents, insert them into the chute network, then insert the mining belt itself. A <link=ThingStructureSorter><color=green>Sorter</color></link> is recommended to reclaim the mining belt.\n\nOutput = 0 exporting the main item\nOutput = 1 exporting items inside and eventually the main item.",
      "PrefabName": "StructureUnloader",
      "PrefabHash": 750118160,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOutput><color=orange>Output</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [
        {
          "LogicName": "Automatic",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "Output": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Chute",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureUprightWindTurbine",
      "Title": "Upright Wind Turbine",
      "Description": "Norsec's basic wind turbine is an easily fabricated, rapidly deployed design that is strong enough to withstand the worst that environments can throw at it. \nWhile the wind turbine is optimized to produce power even on low atmosphere worlds (up to 200W), it performs best in denser environments. Output varies with wind speed, and during storms, may increase dramatically (up to 800W), so be careful to design your power networks with that in mind.",
      "PrefabName": "StructureUprightWindTurbine",
      "PrefabHash": 1622183451,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePowerGeneration><color=orange>PowerGeneration</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PowerGeneration": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureValve",
      "Title": "Valve",
      "Description": "",
      "PrefabName": "StructureValve",
      "PrefabHash": -692036078,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "None"
          ],
          [
            "Pipe",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureVendingMachine",
      "Title": "Vending Machine",
      "Description": "The <link=Xigo><color=#0080FFFF>Xigo-designed</color></link> 'Slot Mate' vending machine allows storage of almost any item, while also operating as a distribution point for working with <link=TradingPage><color=#0080FFFF>Traders</color></link>. You cannot trade without a vending machine, or its more advanced equivalent, the <link=ThingStructureRefrigeratedVendingMachine><color=green>Refrigerated Vending Machine</color></link>. Each vending machine can hold up to 100 stacks.",
      "PrefabName": "StructureVendingMachine",
      "PrefabHash": -443130773,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "None",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Export",
          "SlotType": "None",
          "SlotIndex": "1"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "2"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "3"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "4"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "5"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "6"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "7"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "8"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "9"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "10"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "11"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "12"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "13"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "14"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "15"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "16"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "17"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "18"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "19"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "20"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "21"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "22"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "23"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "24"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "25"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "26"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "27"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "28"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "29"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "30"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "31"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "32"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "33"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "34"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "35"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "36"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "37"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "38"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "39"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "40"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "41"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "42"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "43"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "44"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "45"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "46"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "47"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "48"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "49"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "50"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "51"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "52"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "53"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "54"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "55"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "56"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "57"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "58"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "59"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "60"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "61"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "62"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "63"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "64"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "65"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "66"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "67"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "68"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "69"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "70"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "71"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "72"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "73"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "74"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "75"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "76"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "77"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "78"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "79"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "80"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "81"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "82"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "83"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "84"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "85"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "86"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "87"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "88"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "89"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "90"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "91"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "92"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "93"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "94"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "95"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "96"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "97"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "98"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "99"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "100"
        },
        {
          "SlotName": "Storage",
          "SlotType": "None",
          "SlotIndex": "101"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRequestHash><color=orange>RequestHash</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeExportCount><color=orange>ExportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Chute Output",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {},
          "1": {},
          "2": {},
          "3": {},
          "4": {},
          "5": {},
          "6": {},
          "7": {},
          "8": {},
          "9": {},
          "10": {},
          "11": {},
          "12": {},
          "13": {},
          "14": {},
          "15": {},
          "16": {},
          "17": {},
          "18": {},
          "19": {},
          "20": {},
          "21": {},
          "22": {},
          "23": {},
          "24": {},
          "25": {},
          "26": {},
          "27": {},
          "28": {},
          "29": {},
          "30": {},
          "31": {},
          "32": {},
          "33": {},
          "34": {},
          "35": {},
          "36": {},
          "37": {},
          "38": {},
          "39": {},
          "40": {},
          "41": {},
          "42": {},
          "43": {},
          "44": {},
          "45": {},
          "46": {},
          "47": {},
          "48": {},
          "49": {},
          "50": {},
          "51": {},
          "52": {},
          "53": {},
          "54": {},
          "55": {},
          "56": {},
          "57": {},
          "58": {},
          "59": {},
          "60": {},
          "61": {},
          "62": {},
          "63": {},
          "64": {},
          "65": {},
          "66": {},
          "67": {},
          "68": {},
          "69": {},
          "70": {},
          "71": {},
          "72": {},
          "73": {},
          "74": {},
          "75": {},
          "76": {},
          "77": {},
          "78": {},
          "79": {},
          "80": {},
          "81": {},
          "82": {},
          "83": {},
          "84": {},
          "85": {},
          "86": {},
          "87": {},
          "88": {},
          "89": {},
          "90": {},
          "91": {},
          "92": {},
          "93": {},
          "94": {},
          "95": {},
          "96": {},
          "97": {},
          "98": {},
          "99": {},
          "100": {},
          "101": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Ratio": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RequestHash": "ReadWrite",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Chute",
            "Input"
          ],
          [
            "Chute",
            "Output"
          ],
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureVolumePump",
      "Title": "Volume Pump",
      "Description": "The volume pump pumps pumpable gases. It also separates out pipe networks into separate networks.",
      "PrefabName": "StructureVolumePump",
      "PrefabHash": -321403609,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Output",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "2"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "Output"
          ],
          [
            "Pipe",
            "Input"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWallArchArrow",
      "Title": "Wall (Arch Arrow)",
      "Description": "",
      "PrefabName": "StructureWallArchArrow",
      "PrefabHash": 1649708822,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallArchCornerRound",
      "Title": "Wall (Arch Corner Round)",
      "Description": "",
      "PrefabName": "StructureWallArchCornerRound",
      "PrefabHash": 1794588890,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallArchCornerSquare",
      "Title": "Wall (Arch Corner Square)",
      "Description": "",
      "PrefabName": "StructureWallArchCornerSquare",
      "PrefabHash": -1963016580,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallArchCornerTriangle",
      "Title": "Wall (Arch Corner Triangle)",
      "Description": "",
      "PrefabName": "StructureWallArchCornerTriangle",
      "PrefabHash": 1281911841,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallArchPlating",
      "Title": "Wall (Arch Plating)",
      "Description": "",
      "PrefabName": "StructureWallArchPlating",
      "PrefabHash": 1182510648,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallArchTwoTone",
      "Title": "Wall (Arch Two Tone)",
      "Description": "",
      "PrefabName": "StructureWallArchTwoTone",
      "PrefabHash": 782529714,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallArch",
      "Title": "Wall (Arch)",
      "Description": "",
      "PrefabName": "StructureWallArch",
      "PrefabHash": -858143148,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallFlatCornerRound",
      "Title": "Wall (Flat Corner Round)",
      "Description": "",
      "PrefabName": "StructureWallFlatCornerRound",
      "PrefabHash": 898708250,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallFlatCornerSquare",
      "Title": "Wall (Flat Corner Square)",
      "Description": "",
      "PrefabName": "StructureWallFlatCornerSquare",
      "PrefabHash": 298130111,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallFlatCornerTriangleFlat",
      "Title": "Wall (Flat Corner Triangle Flat)",
      "Description": "",
      "PrefabName": "StructureWallFlatCornerTriangleFlat",
      "PrefabHash": -1161662836,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallFlatCornerTriangle",
      "Title": "Wall (Flat Corner Triangle)",
      "Description": "",
      "PrefabName": "StructureWallFlatCornerTriangle",
      "PrefabHash": 2097419366,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallFlat",
      "Title": "Wall (Flat)",
      "Description": "",
      "PrefabName": "StructureWallFlat",
      "PrefabHash": 1635864154,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallGeometryCorner",
      "Title": "Wall (Geometry Corner)",
      "Description": "",
      "PrefabName": "StructureWallGeometryCorner",
      "PrefabHash": 1979212240,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallGeometryStreight",
      "Title": "Wall (Geometry Straight)",
      "Description": "",
      "PrefabName": "StructureWallGeometryStreight",
      "PrefabHash": 1049735537,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallGeometryTMirrored",
      "Title": "Wall (Geometry T Mirrored)",
      "Description": "",
      "PrefabName": "StructureWallGeometryTMirrored",
      "PrefabHash": -1427845483,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallGeometryT",
      "Title": "Wall (Geometry T)",
      "Description": "",
      "PrefabName": "StructureWallGeometryT",
      "PrefabHash": 1602758612,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallLargePanelArrow",
      "Title": "Wall (Large Panel Arrow)",
      "Description": "",
      "PrefabName": "StructureWallLargePanelArrow",
      "PrefabHash": -776581573,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallLargePanel",
      "Title": "Wall (Large Panel)",
      "Description": "",
      "PrefabName": "StructureWallLargePanel",
      "PrefabHash": 1492930217,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddedArchCorner",
      "Title": "Wall (Padded Arch Corner)",
      "Description": "",
      "PrefabName": "StructureWallPaddedArchCorner",
      "PrefabHash": -1126688298,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddedArchLightFittingTop",
      "Title": "Wall (Padded Arch Light Fitting Top)",
      "Description": "",
      "PrefabName": "StructureWallPaddedArchLightFittingTop",
      "PrefabHash": 1171987947,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddedArchLightsFittings",
      "Title": "Wall (Padded Arch Lights Fittings)",
      "Description": "",
      "PrefabName": "StructureWallPaddedArchLightsFittings",
      "PrefabHash": -1546743960,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddedArch",
      "Title": "Wall (Padded Arch)",
      "Description": "",
      "PrefabName": "StructureWallPaddedArch",
      "PrefabHash": 1590330637,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddedCornerThin",
      "Title": "Wall (Padded Corner Thin)",
      "Description": "",
      "PrefabName": "StructureWallPaddedCornerThin",
      "PrefabHash": 1183203913,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddedCorner",
      "Title": "Wall (Padded Corner)",
      "Description": "",
      "PrefabName": "StructureWallPaddedCorner",
      "PrefabHash": -155945899,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddedNoBorderCorner",
      "Title": "Wall (Padded No Border Corner)",
      "Description": "",
      "PrefabName": "StructureWallPaddedNoBorderCorner",
      "PrefabHash": 179694804,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddedNoBorder",
      "Title": "Wall (Padded No Border)",
      "Description": "",
      "PrefabName": "StructureWallPaddedNoBorder",
      "PrefabHash": 8846501,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddedThinNoBorderCorner",
      "Title": "Wall (Padded Thin No Border Corner)",
      "Description": "",
      "PrefabName": "StructureWallPaddedThinNoBorderCorner",
      "PrefabHash": 1769527556,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddedThinNoBorder",
      "Title": "Wall (Padded Thin No Border)",
      "Description": "",
      "PrefabName": "StructureWallPaddedThinNoBorder",
      "PrefabHash": -1611559100,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddedWindowThin",
      "Title": "Wall (Padded Window Thin)",
      "Description": "",
      "PrefabName": "StructureWallPaddedWindowThin",
      "PrefabHash": -37302931,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddedWindow",
      "Title": "Wall (Padded Window)",
      "Description": "",
      "PrefabName": "StructureWallPaddedWindow",
      "PrefabHash": 2087628940,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddingArchVent",
      "Title": "Wall (Padding Arch Vent)",
      "Description": "",
      "PrefabName": "StructureWallPaddingArchVent",
      "PrefabHash": -1243329828,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddingLightFitting",
      "Title": "Wall (Padding Light Fitting)",
      "Description": "",
      "PrefabName": "StructureWallPaddingLightFitting",
      "PrefabHash": 2024882687,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPaddingThin",
      "Title": "Wall (Padding Thin)",
      "Description": "",
      "PrefabName": "StructureWallPaddingThin",
      "PrefabHash": -1102403554,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPadding",
      "Title": "Wall (Padding)",
      "Description": "",
      "PrefabName": "StructureWallPadding",
      "PrefabHash": 635995024,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallPlating",
      "Title": "Wall (Plating)",
      "Description": "",
      "PrefabName": "StructureWallPlating",
      "PrefabHash": 26167457,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallSmallPanelsAndHatch",
      "Title": "Wall (Small Panels And Hatch)",
      "Description": "",
      "PrefabName": "StructureWallSmallPanelsAndHatch",
      "PrefabHash": 619828719,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallSmallPanelsArrow",
      "Title": "Wall (Small Panels Arrow)",
      "Description": "",
      "PrefabName": "StructureWallSmallPanelsArrow",
      "PrefabHash": -639306697,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallSmallPanelsMonoChrome",
      "Title": "Wall (Small Panels Mono Chrome)",
      "Description": "",
      "PrefabName": "StructureWallSmallPanelsMonoChrome",
      "PrefabHash": 386820253,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallSmallPanelsOpen",
      "Title": "Wall (Small Panels Open)",
      "Description": "",
      "PrefabName": "StructureWallSmallPanelsOpen",
      "PrefabHash": -1407480603,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallSmallPanelsTwoTone",
      "Title": "Wall (Small Panels Two Tone)",
      "Description": "",
      "PrefabName": "StructureWallSmallPanelsTwoTone",
      "PrefabHash": 1709994581,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingStructureWallCooler",
      "Title": "Wall Cooler",
      "Description": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> Freezy Boi wall cooler complements the wall heater, which can only raise the temperature. The wall cooler functions by drawing heat from the surrounding atmosphere and adding that heat into its pipe network.\nIn order to run the wall cooler properly, you will need to connect pipes to the wall cooler and fill the connected pipe network with any type of gas. The gas's heat capacity and volume will determine how fast it reacts to temperature changes.\n\n<size=120%><b>EFFICIENCY</b></size>\nThe higher the difference in temperature between the gas stored in the pipes and the room, the less efficient the wall cooler will be. So to keep the wall cooler running at an acceptable efficiency you will need to get rid of the heat that accumulates in the pipes connected to it. A common practice would be to run the pipes to the outside and use radiators on the outside section of the pipes to get rid of the heat.\nThe less efficient the wall cooler, the less power it consumes. It will consume 1010W at max efficiency. The wall cooler can be controlled by logic chips to run when the temperature hits a certain degree.\n<size=120%><b>ERRORS</b></size>\nIf the wall cooler is flashing an error then it is missing one of the following:\n\n- Pipe connection to the wall cooler.\n- Gas in the connected pipes, or pressure is too low.\n- Atmosphere in the surrounding environment or pressure is too low.\n\nFor more information about how to control temperatures, consult the <link=TemperatureControlPage><color=#0080FFFF>temperature control</color></link> Guides page.",
      "PrefabName": "StructureWallCooler",
      "PrefabHash": -739292323,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "DataDisk",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMaximum><color=orange>Maximum</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeRatio><color=orange>Ratio</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Pipe",
            "None"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWallHeater",
      "Title": "Wall Heater",
      "Description": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> wall heater is a simple device that can be installed on a wall or frame and connected to power. When switched on, it will start heating the surrounding environment. It consumes 1010W of power and can be controlled by logic chips to run when the temperature hits a certain level.",
      "PrefabName": "StructureWallHeater",
      "PrefabHash": 24258244,
      "SlotInserts": [
        {
          "SlotName": "",
          "SlotType": "DataDisk",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWallLight",
      "Title": "Wall Light",
      "Description": "",
      "PrefabName": "StructureWallLight",
      "PrefabHash": -1860064656,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWallLightBattery",
      "Title": "Wall Light (Battery)",
      "Description": "",
      "PrefabName": "StructureWallLightBattery",
      "PrefabHash": -1306415132,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLightLongAngled",
      "Title": "Wall Light (Long Angled)",
      "Description": "",
      "PrefabName": "StructureLightLongAngled",
      "PrefabHash": 1847265835,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLightLongWide",
      "Title": "Wall Light (Long Wide)",
      "Description": "",
      "PrefabName": "StructureLightLongWide",
      "PrefabHash": 555215790,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureLightLong",
      "Title": "Wall Light (Long)",
      "Description": "",
      "PrefabName": "StructureLightLong",
      "PrefabHash": 797794350,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWallVent",
      "Title": "Wall Vent",
      "Description": "Used to mix atmospheres passively between two walls.",
      "PrefabName": "StructureWallVent",
      "PrefabHash": -1177469307,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": []
    },
    {
      "Key": "ThingItemWaterBottle",
      "Title": "Water Bottle",
      "Description": "Delicious and pure H20, refined from local sources as varied as Venusian ice and trans-Solar comets. Empty bottles can be refilled using the <link=ThingStructureWaterBottleFiller><color=green>Water Bottle Filler</color></link>.",
      "PrefabName": "ItemWaterBottle",
      "PrefabHash": 107741229,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "LiquidBottle",
        "SortingClass": "Default",
        "MaxQuantity": 1.5
      }
    },
    {
      "Key": "ThingStructureWaterBottleFiller",
      "Title": "Water Bottle Filler",
      "Description": "",
      "PrefabName": "StructureWaterBottleFiller",
      "PrefabHash": -1178961954,
      "SlotInserts": [
        {
          "SlotName": "Bottle Slot",
          "SlotType": "LiquidBottle",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Bottle Slot",
          "SlotType": "LiquidBottle",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Error": "Read",
          "Activate": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWaterBottleFillerBottom",
      "Title": "Water Bottle Filler Bottom",
      "Description": "",
      "PrefabName": "StructureWaterBottleFillerBottom",
      "PrefabHash": 1433754995,
      "SlotInserts": [
        {
          "SlotName": "Bottle Slot",
          "SlotType": "LiquidBottle",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Bottle Slot",
          "SlotType": "LiquidBottle",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Error": "Read",
          "Activate": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWaterPurifier",
      "Title": "Water Purifier",
      "Description": "Cleans <link=GasPollutedWater><color=#44AD83>Polluted Water</color></link> and outputs <link=GasWater><color=#44AD83>Water</color></link>. The purification process requires <link=ThingItemCharcoal><color=green>Charcoal</color></link> which can be added to the machine via the import bin. The procesing throughput can be improved by increasing the gas pressure of the input pipe relative to the gas pressure of the output pipe.",
      "PrefabName": "StructureWaterPurifier",
      "PrefabHash": 887383294,
      "SlotInserts": [
        {
          "SlotName": "Import",
          "SlotType": "Ore",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeClearMemory><color=orange>ClearMemory</color></link>",
          "LogicAccessTypes": "Write"
        },
        {
          "LogicName": "<link=LogicTypeImportCount><color=orange>ImportCount</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "Pipe Liquid Output",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Chute Input",
          "LogicAccessTypes": "4"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {}
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PipeLiquid",
            "Output"
          ],
          [
            "Power",
            "None"
          ],
          [
            "Chute",
            "Input"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWaterBottleFillerPowered",
      "Title": "Waterbottle Filler",
      "Description": "",
      "PrefabName": "StructureWaterBottleFillerPowered",
      "PrefabHash": -756587791,
      "SlotInserts": [
        {
          "SlotName": "Bottle Slot",
          "SlotType": "LiquidBottle",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Bottle Slot",
          "SlotType": "LiquidBottle",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Pipe Liquid Input",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "Input"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWaterBottleFillerPoweredBottom",
      "Title": "Waterbottle Filler",
      "Description": "",
      "PrefabName": "StructureWaterBottleFillerPoweredBottom",
      "PrefabHash": 1986658780,
      "SlotInserts": [
        {
          "SlotName": "Bottle Slot",
          "SlotType": "LiquidBottle",
          "SlotIndex": "0"
        },
        {
          "SlotName": "Bottle Slot",
          "SlotType": "LiquidBottle",
          "SlotIndex": "1"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePressure><color=orange>Pressure</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeTemperature><color=orange>Temperature</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeVolume><color=orange>Volume</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeSortingClass><color=orange>SortingClass</color></link>",
          "LogicAccessTypes": "0, 1"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0, 1"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "PipeLiquid",
            "None"
          ],
          [
            "PowerAndData",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingWeaponEnergy",
      "Title": "Weapon Energy",
      "Description": "",
      "PrefabName": "WeaponEnergy",
      "PrefabHash": 789494694,
      "SlotInserts": [
        {
          "SlotName": "Battery",
          "SlotType": "Battery",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [
        {
          "LogicName": "<link=LogicSlotTypeOccupied><color=orange>Occupied</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeOccupantHash><color=orange>OccupantHash</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeQuantity><color=orange>Quantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeDamage><color=orange>Damage</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeCharge><color=orange>Charge</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeChargeRatio><color=orange>ChargeRatio</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeClass><color=orange>Class</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeMaxQuantity><color=orange>MaxQuantity</color></link>",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "<link=LogicSlotTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "0"
        }
      ],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "LogicTypes": {
          "On": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "None",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingStructureWeatherStation",
      "Title": "Weather Station",
      "Description": "0.NoStorm\n1.StormIncoming\n2.InStorm",
      "PrefabName": "StructureWeatherStation",
      "PrefabHash": 1997212478,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeActivate><color=orange>Activate</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeLock><color=orange>Lock</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeNextWeatherEventTime><color=orange>NextWeatherEventTime</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "NoStorm",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "StormIncoming",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "InStorm",
          "LogicAccessTypes": "2"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Mode": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "NextWeatherEventTime": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": true,
        "HasOpenState": false,
        "HasOnOffState": true,
        "HasActivateState": true,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemWeldingTorch",
      "Title": "Welding Torch",
      "Description": "Stored in the standard issue <link=Stationeers><color=#0080FFFF>Stationeers</color></link> <link=ThingItemToolBelt><color=green>Tool Belt</color></link>, the Arlite welding torch is used to construct a range of essential structures.\nAn upgraded version of the classic 'Zairo' model first manufactured by <link=ExMin><color=#0080FFFF>ExMin</color></link> for modular space habitat assembly, the Arlite is powered by a single <link=ThingItemGasCanisterFuel><color=green>Canister (Fuel)</color></link> and designed to function equally well in deep space and deep gravity wells.",
      "PrefabName": "ItemWeldingTorch",
      "PrefabHash": -2066892079,
      "SlotInserts": [
        {
          "SlotName": "Gas Canister",
          "SlotType": "GasCanister",
          "SlotIndex": "0"
        }
      ],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemWheat",
      "Title": "Wheat",
      "Description": "A classical symbol of growth and new life, wheat takes a moderate time to grow. Its main use is to create <link=ReagentPage><color=#0080FFFF>flour</color></link> using the <link=ThingApplianceReagentProcessor><color=green>Reagent Processor</color></link>.",
      "PrefabName": "ItemWheat",
      "PrefabHash": -1057658015,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Default",
        "MaxQuantity": 100.0,
        "Ingredient": true,
        "Reagents": {
          "Carbon": 1.0
        }
      }
    },
    {
      "Key": "ThingSeedBag_Wheet",
      "Title": "Wheat Seeds",
      "Description": "Grow some <link=ThingItemWheat><color=green>Wheat</color></link>.",
      "PrefabName": "SeedBag_Wheet",
      "PrefabHash": -654756733,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Food",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingStructureWindTurbine",
      "Title": "Wind Turbine",
      "Description": "The Stationeers wind turbine was first designed by Norsec atmospheric engineers, looking to create a wind-driven power generation system that would operate even on exceedingly low atmosphere worlds. The ultra-light blades respond to exceedingly low atmospheric densities, while being strong enough to function even under huge strain in much more demanding environments.\nWhile the wind turbine is optimized to produce power (up to 500W) even on low atmosphere worlds, it performs best in denser environments. Output varies with wind speed and, during storms, may increase dramatically (up to 10,000W), so be careful to design your power networks with that in mind.",
      "PrefabName": "StructureWindTurbine",
      "PrefabHash": -2082355173,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePowerGeneration><color=orange>PowerGeneration</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "PowerGeneration": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Power",
            "None"
          ],
          [
            "Data",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": false,
        "HasOnOffState": false,
        "HasActivateState": false,
        "HasModeState": false,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingStructureWindowShutter",
      "Title": "Window Shutter",
      "Description": "For those special, private moments, a window that can be closed to prying eyes. \n      \nWhen closed, has the heat transfer characteristics of a basic wall. Requires power, and can be connected to logic systems.",
      "PrefabName": "StructureWindowShutter",
      "PrefabHash": 2056377335,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypePower><color=orange>Power</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeOpen><color=orange>Open</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeError><color=orange>Error</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeSetting><color=orange>Setting</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeOn><color=orange>On</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeRequiredPower><color=orange>RequiredPower</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeIdle><color=orange>Idle</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypePrefabHash><color=orange>PrefabHash</color></link>",
          "LogicAccessTypes": "Read"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Operate",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Logic",
          "LogicAccessTypes": "1"
        }
      ],
      "ConnectionInsert": [
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Connection",
          "LogicAccessTypes": "1"
        }
      ],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read"
        }
      },
      "Device": {
        "ConnectionList": [
          [
            "Data",
            "None"
          ],
          [
            "Power",
            "None"
          ]
        ],
        "HasReagents": false,
        "HasAtmosphere": false,
        "HasLockState": false,
        "HasOpenState": true,
        "HasOnOffState": true,
        "HasActivateState": false,
        "HasModeState": true,
        "HasColorState": false
      }
    },
    {
      "Key": "ThingItemPlantEndothermic_Genepool1",
      "Title": "Winterspawn (Alpha variant)",
      "Description": "<link=Agrizero><color=#0080FFFF>Agrizero's</color></link> Winterspawn atmospheric bio-processor is a recent addition to their catalog of genespliced environmental decorations. Using ambient heat to split <link=GasWater><color=#44AD83>Water</color></link> into <link=GasVolatiles><color=#44AD83>Volatiles</color></link> and <link=GasOxygen><color=#44AD83>Oxygen</color></link>, the Winterspawn cools its surroundings, when supplied with sufficient <link=GasNitrogen><color=#44AD83>Nitrogen</color></link>. The alpha variant has a peak cooling and electrolysis capacity of 90Watts and is most efficient operating in air temperatures of 0 to 40 Degrees Celsius.",
      "PrefabName": "ItemPlantEndothermic_Genepool1",
      "PrefabHash": 851290561,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemPlantEndothermic_Genepool2",
      "Title": "Winterspawn (Beta variant)",
      "Description": "<link=Agrizero><color=#0080FFFF>Agrizero's</color></link> Winterspawn atmospheric bio-processor is a recent addition to their catalog of genespliced environmental decorations. Using ambient heat to split <link=GasWater><color=#44AD83>Water</color></link> into <link=GasVolatiles><color=#44AD83>Volatiles</color></link> and <link=GasOxygen><color=#44AD83>Oxygen</color></link>, the Winterspawn cools its surroundings when supplied with sufficient <link=GasNitrogen><color=#44AD83>Nitrogen</color></link>. The beta variant has a peak cooling and electrolysis capacity of 150Watts and is most efficient operating in air temperatures of 14 to 24 Degrees Celsius.",
      "PrefabName": "ItemPlantEndothermic_Genepool2",
      "PrefabHash": -1414203269,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Plant",
        "SortingClass": "Resources",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWireCutters",
      "Title": "Wire Cutters",
      "Description": "Wirecutters allow you to deconstruct various <link=StructurePage><color=#0080FFFF>structures</color></link>, as well as cross-lay cables when held in your non-active hand, and defuse explosives as needed. Wirecutters are stored in the <link=ThingItemToolBelt><color=green>Tool Belt</color></link>, along with other essential <link=ToolPage><color=#0080FFFF>tools</color></link>.",
      "PrefabName": "ItemWireCutters",
      "PrefabHash": 1535854074,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingItemWirelessBatteryCellExtraLarge",
      "Title": "Wireless Battery Cell Extra Large",
      "Description": "0.Empty\n1.Critical\n2.VeryLow\n3.Low\n4.Medium\n5.High\n6.Full",
      "PrefabName": "ItemWirelessBatteryCellExtraLarge",
      "PrefabHash": -504717121,
      "SlotInserts": [],
      "LogicInsert": [
        {
          "LogicName": "<link=LogicTypeMode><color=orange>Mode</color></link>",
          "LogicAccessTypes": "Read Write"
        },
        {
          "LogicName": "<link=LogicTypeReferenceId><color=orange>ReferenceId</color></link>",
          "LogicAccessTypes": "Read"
        }
      ],
      "LogicSlotInsert": [],
      "ModeInsert": [
        {
          "LogicName": "Empty",
          "LogicAccessTypes": "0"
        },
        {
          "LogicName": "Critical",
          "LogicAccessTypes": "1"
        },
        {
          "LogicName": "VeryLow",
          "LogicAccessTypes": "2"
        },
        {
          "LogicName": "Low",
          "LogicAccessTypes": "3"
        },
        {
          "LogicName": "Medium",
          "LogicAccessTypes": "4"
        },
        {
          "LogicName": "High",
          "LogicAccessTypes": "5"
        },
        {
          "LogicName": "Full",
          "LogicAccessTypes": "6"
        }
      ],
      "ConnectionInsert": [],
      "LogicInfo": {
        "LogicSlotTypes": {},
        "LogicTypes": {
          "Mode": "ReadWrite",
          "ReferenceId": "Read"
        }
      },
      "Item": {
        "SlotClass": "Battery",
        "SortingClass": "Default"
      }
    },
    {
      "Key": "ThingItemWreckageAirConditioner2",
      "Title": "Wreckage Air Conditioner",
      "Description": "",
      "PrefabName": "ItemWreckageAirConditioner2",
      "PrefabHash": 169888054,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageAirConditioner1",
      "Title": "Wreckage Air Conditioner",
      "Description": "",
      "PrefabName": "ItemWreckageAirConditioner1",
      "PrefabHash": -1826023284,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageHydroponicsTray1",
      "Title": "Wreckage Hydroponics Tray",
      "Description": "",
      "PrefabName": "ItemWreckageHydroponicsTray1",
      "PrefabHash": -310178617,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageLargeExtendableRadiator01",
      "Title": "Wreckage Large Extendable Radiator",
      "Description": "",
      "PrefabName": "ItemWreckageLargeExtendableRadiator01",
      "PrefabHash": -997763,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageStructureRTG1",
      "Title": "Wreckage Structure RTG",
      "Description": "",
      "PrefabName": "ItemWreckageStructureRTG1",
      "PrefabHash": 391453348,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageStructureWeatherStation003",
      "Title": "Wreckage Structure Weather Station",
      "Description": "",
      "PrefabName": "ItemWreckageStructureWeatherStation003",
      "PrefabHash": 542009679,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageStructureWeatherStation002",
      "Title": "Wreckage Structure Weather Station",
      "Description": "",
      "PrefabName": "ItemWreckageStructureWeatherStation002",
      "PrefabHash": 1464424921,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageStructureWeatherStation005",
      "Title": "Wreckage Structure Weather Station",
      "Description": "",
      "PrefabName": "ItemWreckageStructureWeatherStation005",
      "PrefabHash": -919745414,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageStructureWeatherStation007",
      "Title": "Wreckage Structure Weather Station",
      "Description": "",
      "PrefabName": "ItemWreckageStructureWeatherStation007",
      "PrefabHash": 656649558,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageStructureWeatherStation001",
      "Title": "Wreckage Structure Weather Station",
      "Description": "",
      "PrefabName": "ItemWreckageStructureWeatherStation001",
      "PrefabHash": -834664349,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageStructureWeatherStation006",
      "Title": "Wreckage Structure Weather Station",
      "Description": "",
      "PrefabName": "ItemWreckageStructureWeatherStation006",
      "PrefabHash": 1344576960,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageStructureWeatherStation004",
      "Title": "Wreckage Structure Weather Station",
      "Description": "",
      "PrefabName": "ItemWreckageStructureWeatherStation004",
      "PrefabHash": -1104478996,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageStructureWeatherStation008",
      "Title": "Wreckage Structure Weather Station",
      "Description": "",
      "PrefabName": "ItemWreckageStructureWeatherStation008",
      "PrefabHash": -1214467897,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageTurbineGenerator1",
      "Title": "Wreckage Turbine Generator",
      "Description": "",
      "PrefabName": "ItemWreckageTurbineGenerator1",
      "PrefabHash": -1662394403,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageTurbineGenerator2",
      "Title": "Wreckage Turbine Generator",
      "Description": "",
      "PrefabName": "ItemWreckageTurbineGenerator2",
      "PrefabHash": 98602599,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageTurbineGenerator3",
      "Title": "Wreckage Turbine Generator",
      "Description": "",
      "PrefabName": "ItemWreckageTurbineGenerator3",
      "PrefabHash": 1927790321,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageWallCooler1",
      "Title": "Wreckage Wall Cooler",
      "Description": "",
      "PrefabName": "ItemWreckageWallCooler1",
      "PrefabHash": -1682930158,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWreckageWallCooler2",
      "Title": "Wreckage Wall Cooler",
      "Description": "",
      "PrefabName": "ItemWreckageWallCooler2",
      "PrefabHash": 45733800,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Wreckage",
        "SortingClass": "Default",
        "MaxQuantity": 10.0
      }
    },
    {
      "Key": "ThingItemWrench",
      "Title": "Wrench",
      "Description": "One of humanity's enduring contributions to the cosmos, the wrench represents the essence of our species. A simple, effective and spiritually barren tool, use it to build and deconstruct a variety of <link=StructurePage><color=#0080FFFF>structures</color></link>",
      "PrefabName": "ItemWrench",
      "PrefabHash": -1886261558,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Tool",
        "SortingClass": "Tools"
      }
    },
    {
      "Key": "ThingCartridgeElectronicReader",
      "Title": "eReader",
      "Description": "",
      "PrefabName": "CartridgeElectronicReader",
      "PrefabHash": -1462180176,
      "SlotInserts": [],
      "LogicInsert": [],
      "LogicSlotInsert": [],
      "ModeInsert": [],
      "ConnectionInsert": [],
      "Item": {
        "SlotClass": "Cartridge",
        "SortingClass": "Default"
      }
    }
  ],
  "reagents": {
    "Alcohol": {
      "Hash": 1565803737,
      "Unit": "ml"
    },
    "Astroloy": {
      "Hash": -1493155787,
      "Unit": "g",
      "Sources": {
        "ItemAstroloyIngot": 1.0
      }
    },
    "Biomass": {
      "Hash": 925270362,
      "Unit": "",
      "Sources": {
        "ItemBiomass": 1.0
      }
    },
    "Carbon": {
      "Hash": 1582746610,
      "Unit": "g",
      "Sources": {
        "HumanSkull": 1.0,
        "ItemCharcoal": 1.0
      }
    },
    "Cobalt": {
      "Hash": 1702246124,
      "Unit": "g",
      "Sources": {
        "ItemCobaltOre": 1.0
      }
    },
    "ColorBlue": {
      "Hash": 557517660,
      "Unit": "g",
      "Sources": {
        "ReagentColorBlue": 10.0
      }
    },
    "ColorGreen": {
      "Hash": 2129955242,
      "Unit": "g",
      "Sources": {
        "ReagentColorGreen": 10.0
      }
    },
    "ColorOrange": {
      "Hash": 1728153015,
      "Unit": "g",
      "Sources": {
        "ReagentColorOrange": 10.0
      }
    },
    "ColorRed": {
      "Hash": 667001276,
      "Unit": "g",
      "Sources": {
        "ReagentColorRed": 10.0
      }
    },
    "ColorYellow": {
      "Hash": -1430202288,
      "Unit": "g",
      "Sources": {
        "ReagentColorYellow": 10.0
      }
    },
    "Constantan": {
      "Hash": 1731241392,
      "Unit": "g",
      "Sources": {
        "ItemConstantanIngot": 1.0
      }
    },
    "Copper": {
      "Hash": -1172078909,
      "Unit": "g",
      "Sources": {
        "ItemCopperIngot": 1.0,
        "ItemCopperOre": 1.0
      }
    },
    "Corn": {
      "Hash": 1550709753,
      "Unit": "",
      "Sources": {
        "ItemCookedCorn": 1.0,
        "ItemCorn": 1.0
      }
    },
    "Egg": {
      "Hash": 1887084450,
      "Unit": "",
      "Sources": {
        "ItemCookedPowderedEggs": 1.0,
        "ItemEgg": 1.0,
        "ItemFertilizedEgg": 1.0
      }
    },
    "Electrum": {
      "Hash": 478264742,
      "Unit": "g",
      "Sources": {
        "ItemElectrumIngot": 1.0
      }
    },
    "Fenoxitone": {
      "Hash": -865687737,
      "Unit": "g",
      "Sources": {
        "ItemFern": 1.0
      }
    },
    "Flour": {
      "Hash": -811006991,
      "Unit": "g",
      "Sources": {
        "ItemFlour": 50.0
      }
    },
    "Gold": {
      "Hash": -409226641,
      "Unit": "g",
      "Sources": {
        "ItemGoldIngot": 1.0,
        "ItemGoldOre": 1.0
      }
    },
    "Hastelloy": {
      "Hash": 2019732679,
      "Unit": "g",
      "Sources": {
        "ItemHastelloyIngot": 1.0
      }
    },
    "Hydrocarbon": {
      "Hash": 2003628602,
      "Unit": "g",
      "Sources": {
        "ItemCoalOre": 1.0,
        "ItemSolidFuel": 1.0
      }
    },
    "Inconel": {
      "Hash": -586072179,
      "Unit": "g",
      "Sources": {
        "ItemInconelIngot": 1.0
      }
    },
    "Invar": {
      "Hash": -626453759,
      "Unit": "g",
      "Sources": {
        "ItemInvarIngot": 1.0
      }
    },
    "Iron": {
      "Hash": -666742878,
      "Unit": "g",
      "Sources": {
        "ItemIronIngot": 1.0,
        "ItemIronOre": 1.0
      }
    },
    "Lead": {
      "Hash": -2002530571,
      "Unit": "g",
      "Sources": {
        "ItemLeadIngot": 1.0,
        "ItemLeadOre": 1.0
      }
    },
    "Milk": {
      "Hash": 471085864,
      "Unit": "ml",
      "Sources": {
        "ItemCookedCondensedMilk": 1.0,
        "ItemMilk": 1.0
      }
    },
    "Mushroom": {
      "Hash": 516242109,
      "Unit": "g",
      "Sources": {
        "ItemCookedMushroom": 1.0,
        "ItemMushroom": 1.0
      }
    },
    "Nickel": {
      "Hash": 556601662,
      "Unit": "g",
      "Sources": {
        "ItemNickelIngot": 1.0,
        "ItemNickelOre": 1.0
      }
    },
    "Oil": {
      "Hash": 1958538866,
      "Unit": "ml",
      "Sources": {
        "ItemSoyOil": 1.0
      }
    },
    "Plastic": {
      "Hash": 791382247,
      "Unit": "g"
    },
    "Potato": {
      "Hash": -1657266385,
      "Unit": "",
      "Sources": {
        "ItemPotato": 1.0,
        "ItemPotatoBaked": 1.0
      }
    },
    "Pumpkin": {
      "Hash": -1250164309,
      "Unit": "",
      "Sources": {
        "ItemCookedPumpkin": 1.0,
        "ItemPumpkin": 1.0
      }
    },
    "Rice": {
      "Hash": 1951286569,
      "Unit": "g",
      "Sources": {
        "ItemCookedRice": 1.0,
        "ItemRice": 1.0
      }
    },
    "SalicylicAcid": {
      "Hash": -2086114347,
      "Unit": "g"
    },
    "Silicon": {
      "Hash": -1195893171,
      "Unit": "g",
      "Sources": {
        "ItemSiliconIngot": 0.1,
        "ItemSiliconOre": 1.0
      }
    },
    "Silver": {
      "Hash": 687283565,
      "Unit": "g",
      "Sources": {
        "ItemSilverIngot": 1.0,
        "ItemSilverOre": 1.0
      }
    },
    "Solder": {
      "Hash": -1206542381,
      "Unit": "g",
      "Sources": {
        "ItemSolderIngot": 1.0
      }
    },
    "Soy": {
      "Hash": 1510471435,
      "Unit": "",
      "Sources": {
        "ItemCookedSoybean": 1.0,
        "ItemSoybean": 1.0
      }
    },
    "Steel": {
      "Hash": 1331613335,
      "Unit": "g",
      "Sources": {
        "ItemEmptyCan": 1.0,
        "ItemSteelIngot": 1.0
      }
    },
    "Stellite": {
      "Hash": -500544800,
      "Unit": "g",
      "Sources": {
        "ItemStelliteIngot": 1.0
      }
    },
    "Tomato": {
      "Hash": 733496620,
      "Unit": "",
      "Sources": {
        "ItemCookedTomato": 1.0,
        "ItemTomato": 1.0
      }
    },
    "Uranium": {
      "Hash": -208860272,
      "Unit": "g",
      "Sources": {
        "ItemUraniumOre": 1.0
      }
    },
    "Waspaloy": {
      "Hash": 1787814293,
      "Unit": "g",
      "Sources": {
        "ItemWaspaloyIngot": 1.0
      }
    },
    "Wheat": {
      "Hash": -686695134,
      "Unit": "",
      "Sources": {
        "ItemWheat": 1.0
      }
    }
  },
  "scriptCommands": {
    "l": {
      "desc": "Loads device LogicType to register by housing index value.",
      "example": "<color=yellow>l</color> <color=#0080FFFF>r?</color> <color=green>d?</color> <color=orange>logicType</color>"
    },
    "s": {
      "desc": "Stores register value to LogicType on device by housing index value.",
      "example": "<color=yellow>s</color> <color=green>d?</color> <color=orange>logicType</color> <color=#0080FFFF>r?</color>"
    },
    "ls": {
      "desc": "Loads slot LogicSlotType on device to register.",
      "example": "<color=yellow>ls</color> <color=#0080FFFF>r?</color> <color=green>d?</color> <color=#20B2AA>slotIndex</color> <color=orange>logicSlotType</color>"
    },
    "lr": {
      "desc": "Loads reagent of device's ReagentMode where a hash of the reagent type to check for. ReagentMode can be either Contents (0), Required (1), Recipe (2). Can use either the word, or the number.",
      "example": "<color=yellow>lr</color> <color=#0080FFFF>r?</color> <color=green>d?</color> <color=orange>reagentMode</color> <color=#20B2AA>int</color>"
    },
    "sb": {
      "desc": "Stores register value to LogicType on all output network devices with provided type hash.",
      "example": "<color=yellow>sb</color> <color=#20B2AA>deviceHash</color> <color=orange>logicType</color> <color=#0080FFFF>r?</color>"
    },
    "lb": {
      "desc": "Loads LogicType from all output network devices with provided type hash using the provide batch mode. Average (0), Sum (1), Minimum (2), Maximum (3). Can use either the word, or the number.",
      "example": "<color=yellow>lb</color> <color=#0080FFFF>r?</color> <color=#20B2AA>deviceHash</color> <color=orange>logicType</color> <color=orange>batchMode</color>"
    },
    "alias": {
      "desc": "Labels register or device reference with name, device references also affect what shows on the screws on the IC base.",
      "example": "<color=yellow>alias</color> <color=white>str</color> <color=#0080FFFF>r?</color><color=#585858FF>|</color><color=green>d?</color>"
    },
    "move": {
      "desc": "Register = provided num or register value.",
      "example": "<color=yellow>move</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "add": {
      "desc": "Register = a + b.",
      "example": "<color=yellow>add</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sub": {
      "desc": "Register = a - b.",
      "example": "<color=yellow>sub</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sdse": {
      "desc": "Register = 1 if device is set, otherwise 0.",
      "example": "<color=yellow>sdse</color> <color=#0080FFFF>r?</color> <color=green>d?</color>"
    },
    "sdns": {
      "desc": "Register = 1 if device is not set, otherwise 0",
      "example": "<color=yellow>sdns</color> <color=#0080FFFF>r?</color> <color=green>d?</color>"
    },
    "slt": {
      "desc": "Register = 1 if a < b, otherwise 0",
      "example": "<color=yellow>slt</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sgt": {
      "desc": "Register = 1 if a > b, otherwise 0",
      "example": "<color=yellow>sgt</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sle": {
      "desc": "Register = 1 if a <= b, otherwise 0",
      "example": "<color=yellow>sle</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sge": {
      "desc": "Register = 1 if a >= b, otherwise 0",
      "example": "<color=yellow>sge</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "seq": {
      "desc": "Register = 1 if a == b, otherwise 0",
      "example": "<color=yellow>seq</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sne": {
      "desc": "Register = 1 if a != b, otherwise 0",
      "example": "<color=yellow>sne</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sap": {
      "desc": "Register = 1 if abs(a - b) <= max(c * max(abs(a), abs(b)), float.epsilon * 8), otherwise 0",
      "example": "<color=yellow>sap</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sna": {
      "desc": "Register = 1 if abs(a - b) > max(c * max(abs(a), abs(b)), float.epsilon * 8), otherwise 0",
      "example": "<color=yellow>sna</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "and": {
      "desc": "Performs a bitwise logical AND operation on the binary representation of two values. Each bit of the result is determined by evaluating the corresponding bits of the input values. If both bits are 1, the resulting bit is set to 1. Otherwise the resulting bit is set to 0.",
      "example": "<color=yellow>and</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "or": {
      "desc": "Performs a bitwise logical OR operation on the binary representation of two values. Each bit of the result is determined by evaluating the corresponding bits of the input values. If either bit is 1, the resulting bit is set to 1. If both bits are 0, the resulting bit is set to 0.",
      "example": "<color=yellow>or</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "xor": {
      "desc": "Performs a bitwise logical XOR (exclusive OR) operation on the binary representation of two values. Each bit of the result is determined by evaluating the corresponding bits of the input values. If the bits are different (one bit is 0 and the other is 1), the resulting bit is set to 1. If the bits are the same (both 0 or both 1), the resulting bit is set to 0.",
      "example": "<color=yellow>xor</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "nor": {
      "desc": "Performs a bitwise logical NOR (NOT OR) operation on the binary representation of two values. Each bit of the result is determined by evaluating the corresponding bits of the input values. If both bits are 0, the resulting bit is set to 1. Otherwise, if at least one bit is 1, the resulting bit is set to 0.",
      "example": "<color=yellow>nor</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "mul": {
      "desc": "Register = a * b",
      "example": "<color=yellow>mul</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "div": {
      "desc": "Register = a / b",
      "example": "<color=yellow>div</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "mod": {
      "desc": "Register = a mod b (note: NOT a % b)",
      "example": "<color=yellow>mod</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "j": {
      "desc": "Jump execution to line a",
      "example": "<color=yellow>j</color> <color=#20B2AA>int</color>"
    },
    "bltz": {
      "desc": "Branch to line b if a < 0",
      "example": "<color=yellow>bltz</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bgez": {
      "desc": "Branch to line b if a >= 0",
      "example": "<color=yellow>bgez</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "blez": {
      "desc": "Branch to line b if a <= 0",
      "example": "<color=yellow>blez</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bgtz": {
      "desc": "Branch to line b if a > 0",
      "example": "<color=yellow>bgtz</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bdse": {
      "desc": "Branch to line a if device d is set",
      "example": "<color=yellow>bdse</color> <color=green>d?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bdns": {
      "desc": "Branch to line a if device d isn't set",
      "example": "<color=yellow>bdns</color> <color=green>d?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "beq": {
      "desc": "Branch to line c if a == b",
      "example": "<color=yellow>beq</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bne": {
      "desc": "Branch to line c if a != b",
      "example": "<color=yellow>bne</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bap": {
      "desc": "Branch to line d if abs(a - b) <= max(c * max(abs(a), abs(b)), float.epsilon * 8)",
      "example": "<color=yellow>bap</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) d(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bna": {
      "desc": "Branch to line d if abs(a - b) > max(c * max(abs(a), abs(b)), float.epsilon * 8)",
      "example": "<color=yellow>bna</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) d(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "jal": {
      "desc": "Jump execution to line a and store next line number in ra",
      "example": "<color=yellow>jal</color> <color=#20B2AA>int</color>"
    },
    "brdse": {
      "desc": "Relative jump to line a if device is set",
      "example": "<color=yellow>brdse</color> <color=green>d?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brdns": {
      "desc": "Relative jump to line a if device is not set",
      "example": "<color=yellow>brdns</color> <color=green>d?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bltzal": {
      "desc": "Branch to line b if a < 0 and store next line number in ra",
      "example": "<color=yellow>bltzal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bgezal": {
      "desc": "Branch to line b if a >= 0 and store next line number in ra",
      "example": "<color=yellow>bgezal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "blezal": {
      "desc": "Branch to line b if a <= 0 and store next line number in ra",
      "example": "<color=yellow>blezal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bgtzal": {
      "desc": "Branch to line b if a > 0 and store next line number in ra",
      "example": "<color=yellow>bgtzal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "beqal": {
      "desc": "Branch to line c if a == b and store next line number in ra",
      "example": "<color=yellow>beqal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bneal": {
      "desc": "Branch to line c if a != b and store next line number in ra",
      "example": "<color=yellow>bneal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "jr": {
      "desc": "Relative jump to line a",
      "example": "<color=yellow>jr</color> <color=#20B2AA>int</color>"
    },
    "bdseal": {
      "desc": "Jump execution to line a and store next line number if device is set",
      "example": "<color=yellow>bdseal</color> <color=green>d?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bdnsal": {
      "desc": "Jump execution to line a and store next line number if device is not set",
      "example": "<color=yellow>bdnsal</color> <color=green>d?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brltz": {
      "desc": "Relative branch to line b if a < 0",
      "example": "<color=yellow>brltz</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brgez": {
      "desc": "Relative branch to line b if a >= 0",
      "example": "<color=yellow>brgez</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brlez": {
      "desc": "Relative branch to line b if a <= 0",
      "example": "<color=yellow>brlez</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brgtz": {
      "desc": "Relative branch to line b if a > 0",
      "example": "<color=yellow>brgtz</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "breq": {
      "desc": "Relative branch to line c if a == b",
      "example": "<color=yellow>breq</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brne": {
      "desc": "Relative branch to line c if a != b",
      "example": "<color=yellow>brne</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brap": {
      "desc": "Relative branch to line d if abs(a - b) <= max(c * max(abs(a), abs(b)), float.epsilon * 8)",
      "example": "<color=yellow>brap</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) d(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brna": {
      "desc": "Relative branch to line d if abs(a - b) > max(c * max(abs(a), abs(b)), float.epsilon * 8)",
      "example": "<color=yellow>brna</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) d(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sqrt": {
      "desc": "Register = square root of a",
      "example": "<color=yellow>sqrt</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "round": {
      "desc": "Register = a rounded to nearest integer",
      "example": "<color=yellow>round</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "trunc": {
      "desc": "Register = a with fractional part removed",
      "example": "<color=yellow>trunc</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "ceil": {
      "desc": "Register = smallest integer greater than a",
      "example": "<color=yellow>ceil</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "floor": {
      "desc": "Register = largest integer less than a",
      "example": "<color=yellow>floor</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "max": {
      "desc": "Register = max of a or b",
      "example": "<color=yellow>max</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "min": {
      "desc": "Register = min of a or b",
      "example": "<color=yellow>min</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "abs": {
      "desc": "Register = the absolute value of a",
      "example": "<color=yellow>abs</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "log": {
      "desc": "Register = log(a)",
      "example": "<color=yellow>log</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "exp": {
      "desc": "Register = exp(a)",
      "example": "<color=yellow>exp</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "rand": {
      "desc": "Register = a random value x with 0 <= x < 1",
      "example": "<color=yellow>rand</color> <color=#0080FFFF>r?</color>"
    },
    "yield": {
      "desc": "Pauses execution for 1 tick",
      "example": "<color=yellow>yield</color>"
    },
    "label": {
      "desc": "DEPRECATED",
      "example": "<color=yellow>label</color> <color=green>d?</color> <color=white>str</color>"
    },
    "peek": {
      "desc": "Register = the value at the top of the stack",
      "example": "<color=yellow>peek</color> <color=#0080FFFF>r?</color>"
    },
    "push": {
      "desc": "Pushes the value of a to the stack at sp and increments sp",
      "example": "<color=yellow>push</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "pop": {
      "desc": "Register = the value at the top of the stack and decrements sp",
      "example": "<color=yellow>pop</color> <color=#0080FFFF>r?</color>"
    },
    "hcf": {
      "desc": "Halt and catch fire",
      "example": "<color=yellow>hcf</color>"
    },
    "select": {
      "desc": "Register = b if a is non-zero, otherwise c",
      "example": "<color=yellow>select</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "blt": {
      "desc": "Branch to line c if a < b",
      "example": "<color=yellow>blt</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bgt": {
      "desc": "Branch to line c if a > b",
      "example": "<color=yellow>bgt</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "ble": {
      "desc": "Branch to line c if a <= b",
      "example": "<color=yellow>ble</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bge": {
      "desc": "Branch to line c if a >= b",
      "example": "<color=yellow>bge</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brlt": {
      "desc": "Relative jump to line c if a < b",
      "example": "<color=yellow>brlt</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brgt": {
      "desc": "relative jump to line c if a > b",
      "example": "<color=yellow>brgt</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brle": {
      "desc": "Relative jump to line c if a <= b",
      "example": "<color=yellow>brle</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brge": {
      "desc": "Relative jump to line c if a >= b",
      "example": "<color=yellow>brge</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bltal": {
      "desc": "Branch to line c if a < b and store next line number in ra",
      "example": "<color=yellow>bltal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bgtal": {
      "desc": "Branch to line c if a > b and store next line number in ra",
      "example": "<color=yellow>bgtal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bleal": {
      "desc": "Branch to line c if a <= b and store next line number in ra",
      "example": "<color=yellow>bleal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bgeal": {
      "desc": "Branch to line c if a >= b and store next line number in ra",
      "example": "<color=yellow>bgeal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bapal": {
      "desc": "Branch to line c if a != b and store next line number in ra",
      "example": "<color=yellow>bapal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) d(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bnaal": {
      "desc": "Branch to line d if abs(a - b) <= max(c * max(abs(a), abs(b)), float.epsilon * 8) and store next line number in ra",
      "example": "<color=yellow>bnaal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) d(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "beqz": {
      "desc": "Branch to line b if a == 0",
      "example": "<color=yellow>beqz</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bnez": {
      "desc": "branch to line b if a != 0",
      "example": "<color=yellow>bnez</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bapz": {
      "desc": "Branch to line c if abs(a) <= float.epsilon * 8",
      "example": "<color=yellow>bapz</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bnaz": {
      "desc": "Branch to line c if abs(a) > float.epsilon * 8",
      "example": "<color=yellow>bnaz</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "breqz": {
      "desc": "Relative branch to line b if a == 0",
      "example": "<color=yellow>breqz</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brnez": {
      "desc": "Relative branch to line b if a != 0",
      "example": "<color=yellow>brnez</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brapz": {
      "desc": "Relative branch to line c if abs(a) <= float.epsilon * 8",
      "example": "<color=yellow>brapz</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brnaz": {
      "desc": "Relative branch to line c if abs(a) > float.epsilon * 8",
      "example": "<color=yellow>brnaz</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "beqzal": {
      "desc": "Branch to line b if a == 0 and store next line number in ra",
      "example": "<color=yellow>beqzal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bnezal": {
      "desc": "Branch to line b if a != 0 and store next line number in ra",
      "example": "<color=yellow>bnezal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bapzal": {
      "desc": "Branch to line c if abs(a) <= float.epsilon * 8",
      "example": "<color=yellow>bapzal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bnazal": {
      "desc": "Branch to line c if abs(a) > float.epsilon * 8",
      "example": "<color=yellow>bnazal</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) c(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sltz": {
      "desc": "Register = 1 if a < 0, otherwise 0",
      "example": "<color=yellow>sltz</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sgtz": {
      "desc": "Register = 1 if a > 0, otherwise 0",
      "example": "<color=yellow>sgtz</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "slez": {
      "desc": "Register = 1 if a <= 0, otherwise 0",
      "example": "<color=yellow>slez</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sgez": {
      "desc": "Register = 1 if a >= 0, otherwise 0",
      "example": "<color=yellow>sgez</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "seqz": {
      "desc": "Register = 1 if a == 0, otherwise 0",
      "example": "<color=yellow>seqz</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "snez": {
      "desc": "Register = 1 if a != 0, otherwise 0",
      "example": "<color=yellow>snez</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sapz": {
      "desc": "Register = 1 if |a| <= float.epsilon * 8, otherwise 0",
      "example": "<color=yellow>sapz</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "snaz": {
      "desc": "Register = 1 if |a| > float.epsilon, otherwise 0",
      "example": "<color=yellow>snaz</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "define": {
      "desc": "Creates a label that will be replaced throughout the program with the provided value.",
      "example": "<color=yellow>define</color> <color=white>str</color> <color=#20B2AA>num</color>"
    },
    "sleep": {
      "desc": "Pauses execution on the IC for a seconds",
      "example": "<color=yellow>sleep</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sin": {
      "desc": "Returns the sine of the specified angle (radians)",
      "example": "<color=yellow>sin</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "asin": {
      "desc": "Returns the angle (radians) whos sine is the specified value",
      "example": "<color=yellow>asin</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "tan": {
      "desc": "Returns the tan of the specified angle (radians) ",
      "example": "<color=yellow>tan</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "atan": {
      "desc": "Returns the angle (radians) whos tan is the specified value",
      "example": "<color=yellow>atan</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "cos": {
      "desc": "Returns the cosine of the specified angle (radians)",
      "example": "<color=yellow>cos</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "acos": {
      "desc": "Returns the cosine of the specified angle (radians)",
      "example": "<color=yellow>acos</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "atan2": {
      "desc": "Returns the angle (radians) whose tangent is the quotient of two specified values: a (y) and b (x)",
      "example": "<color=yellow>atan2</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "brnan": {
      "desc": "Relative branch to line b if a is not a number (NaN)",
      "example": "<color=yellow>brnan</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "bnan": {
      "desc": "Branch to line b if a is not a number (NaN)",
      "example": "<color=yellow>bnan</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "snan": {
      "desc": "Register = 1 if a is NaN, otherwise 0",
      "example": "<color=yellow>snan</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "snanz": {
      "desc": "Register = 0 if a is NaN, otherwise 1",
      "example": "<color=yellow>snanz</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "lbs": {
      "desc": "Loads LogicSlotType from slotIndex from all output network devices with provided type hash using the provide batch mode. Average (0), Sum (1), Minimum (2), Maximum (3). Can use either the word, or the number.",
      "example": "<color=yellow>lbs</color> <color=#0080FFFF>r?</color> <color=#20B2AA>deviceHash</color> <color=#20B2AA>slotIndex</color> <color=orange>logicSlotType</color> <color=orange>batchMode</color>"
    },
    "lbn": {
      "desc": "Loads LogicType from all output network devices with provided type and name hashes using the provide batch mode. Average (0), Sum (1), Minimum (2), Maximum (3). Can use either the word, or the number.",
      "example": "<color=yellow>lbn</color> <color=#0080FFFF>r?</color> <color=#20B2AA>deviceHash</color> <color=#20B2AA>nameHash</color> <color=orange>logicType</color> <color=orange>batchMode</color>"
    },
    "sbn": {
      "desc": "Stores register value to LogicType on all output network devices with provided type hash and name.",
      "example": "<color=yellow>sbn</color> <color=#20B2AA>deviceHash</color> <color=#20B2AA>nameHash</color> <color=orange>logicType</color> <color=#0080FFFF>r?</color>"
    },
    "lbns": {
      "desc": "Loads LogicSlotType from slotIndex from all output network devices with provided type and name hashes using the provide batch mode. Average (0), Sum (1), Minimum (2), Maximum (3). Can use either the word, or the number.",
      "example": "<color=yellow>lbns</color> <color=#0080FFFF>r?</color> <color=#20B2AA>deviceHash</color> <color=#20B2AA>nameHash</color> <color=#20B2AA>slotIndex</color> <color=orange>logicSlotType</color> <color=orange>batchMode</color>"
    },
    "ss": {
      "desc": "Stores register value to device stored in a slot LogicSlotType on device.",
      "example": "<color=yellow>ss</color> <color=green>d?</color> <color=#20B2AA>slotIndex</color> <color=orange>logicSlotType</color> <color=#0080FFFF>r?</color>"
    },
    "sbs": {
      "desc": "Stores register value to LogicSlotType on all output network devices with provided type hash in the provided slot.",
      "example": "<color=yellow>sbs</color> <color=#20B2AA>deviceHash</color> <color=#20B2AA>slotIndex</color> <color=orange>logicSlotType</color> <color=#0080FFFF>r?</color>"
    },
    "srl": {
      "desc": "Performs a bitwise logical right shift operation on the binary representation of a value. It shifts the bits to the right and fills the vacated leftmost bits with zeros",
      "example": "<color=yellow>srl</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sra": {
      "desc": "Performs a bitwise arithmetic right shift operation on the binary representation of a value. It shifts the bits to the right and fills the vacated leftmost bits with a copy of the sign bit (the most significant bit).",
      "example": "<color=yellow>sra</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sll": {
      "desc": "Performs a bitwise logical left shift operation on the binary representation of a value. It shifts the bits to the left and fills the vacated rightmost bits with zeros.",
      "example": "<color=yellow>sll</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "sla": {
      "desc": "Performs a bitwise arithmetic left shift operation on the binary representation of a value. It shifts the bits to the left and fills the vacated rightmost bits with a copy of the sign bit (the most significant bit).",
      "example": "<color=yellow>sla</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) b(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "not": {
      "desc": "Performs a bitwise logical NOT operation flipping each bit of the input value, resulting in a binary complement. If a bit is 1, it becomes 0, and if a bit is 0, it becomes 1.",
      "example": "<color=yellow>not</color> <color=#0080FFFF>r?</color> a(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "ld": {
      "desc": "Loads device LogicType to register by direct ID reference.",
      "example": "<color=yellow>ld</color> <color=#0080FFFF>r?</color> id(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) <color=orange>logicType</color>"
    },
    "sd": {
      "desc": "Stores register value to LogicType on device by direct ID reference.",
      "example": "<color=yellow>sd</color> id(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) <color=orange>logicType</color> <color=#0080FFFF>r?</color>"
    },
    "poke": {
      "desc": "Stores the provided value at the provided address in the stack.",
      "example": "<color=yellow>poke</color> address(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) value(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "getd": {
      "desc": "Seeks directly for the provided device id, attempts to read the stack value at the provided address, and places it in the register.",
      "example": "<color=yellow>getd</color> <color=#0080FFFF>r?</color> id(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) address(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "putd": {
      "desc": "Seeks directly for the provided device id, attempts to write the provided value to the stack at the provided address.",
      "example": "<color=yellow>putd</color> id(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) address(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) value(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "get": {
      "desc": "Using the provided device, attempts to read the stack value at the provided address, and places it in the register.",
      "example": "<color=yellow>get</color> <color=#0080FFFF>r?</color> <color=green>d?</color> address(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "put": {
      "desc": "Using the provided device, attempts to write the provided value to the stack at the provided address.",
      "example": "<color=yellow>put</color> <color=green>d?</color> address(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>) value(<color=#0080FFFF>r?</color><color=#585858FF>|</color><color=#20B2AA>num</color>)"
    },
    "clr": {
      "desc": "Clears the stack memory for the provided device.",
      "example": "<color=yellow>clr</color> <color=green>d?</color>"
    }
  }
}