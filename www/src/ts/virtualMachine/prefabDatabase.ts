export default {
  "prefabs": {
    "AccessCardBlack": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AccessCardBlack",
        "prefab_hash": -1330388999,
        "desc": "",
        "name": "Access Card (Black)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "AccessCard",
        "sorting_class": "Default"
      }
    },
    "AccessCardBlue": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AccessCardBlue",
        "prefab_hash": -1411327657,
        "desc": "",
        "name": "Access Card (Blue)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "AccessCard",
        "sorting_class": "Default"
      }
    },
    "AccessCardBrown": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AccessCardBrown",
        "prefab_hash": 1412428165,
        "desc": "",
        "name": "Access Card (Brown)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "AccessCard",
        "sorting_class": "Default"
      }
    },
    "AccessCardGray": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AccessCardGray",
        "prefab_hash": -1339479035,
        "desc": "",
        "name": "Access Card (Gray)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "AccessCard",
        "sorting_class": "Default"
      }
    },
    "AccessCardGreen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AccessCardGreen",
        "prefab_hash": -374567952,
        "desc": "",
        "name": "Access Card (Green)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "AccessCard",
        "sorting_class": "Default"
      }
    },
    "AccessCardKhaki": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AccessCardKhaki",
        "prefab_hash": 337035771,
        "desc": "",
        "name": "Access Card (Khaki)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "AccessCard",
        "sorting_class": "Default"
      }
    },
    "AccessCardOrange": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AccessCardOrange",
        "prefab_hash": -332896929,
        "desc": "",
        "name": "Access Card (Orange)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "AccessCard",
        "sorting_class": "Default"
      }
    },
    "AccessCardPink": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AccessCardPink",
        "prefab_hash": 431317557,
        "desc": "",
        "name": "Access Card (Pink)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "AccessCard",
        "sorting_class": "Default"
      }
    },
    "AccessCardPurple": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AccessCardPurple",
        "prefab_hash": 459843265,
        "desc": "",
        "name": "Access Card (Purple)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "AccessCard",
        "sorting_class": "Default"
      }
    },
    "AccessCardRed": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AccessCardRed",
        "prefab_hash": -1713748313,
        "desc": "",
        "name": "Access Card (Red)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "AccessCard",
        "sorting_class": "Default"
      }
    },
    "AccessCardWhite": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AccessCardWhite",
        "prefab_hash": 2079959157,
        "desc": "",
        "name": "Access Card (White)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "AccessCard",
        "sorting_class": "Default"
      }
    },
    "AccessCardYellow": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AccessCardYellow",
        "prefab_hash": 568932536,
        "desc": "",
        "name": "Access Card (Yellow)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "AccessCard",
        "sorting_class": "Default"
      }
    },
    "ApplianceChemistryStation": {
      "templateType": "ItemConsumer",
      "prefab": {
        "prefab_name": "ApplianceChemistryStation",
        "prefab_hash": 1365789392,
        "desc": "",
        "name": "Chemistry Station"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Appliance",
        "sorting_class": "Appliances"
      },
      "slots": [
        {
          "name": "Output",
          "typ": "None"
        }
      ],
      "consumer_info": {
        "consumed_resouces": [
          "ItemCharcoal",
          "ItemCobaltOre",
          "ItemFern",
          "ItemSilverIngot",
          "ItemSilverOre",
          "ItemSoyOil"
        ],
        "processed_reagents": []
      }
    },
    "ApplianceDeskLampLeft": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ApplianceDeskLampLeft",
        "prefab_hash": -1683849799,
        "desc": "",
        "name": "Appliance Desk Lamp Left"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Appliance",
        "sorting_class": "Appliances"
      }
    },
    "ApplianceDeskLampRight": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ApplianceDeskLampRight",
        "prefab_hash": 1174360780,
        "desc": "",
        "name": "Appliance Desk Lamp Right"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Appliance",
        "sorting_class": "Appliances"
      }
    },
    "ApplianceMicrowave": {
      "templateType": "ItemConsumer",
      "prefab": {
        "prefab_name": "ApplianceMicrowave",
        "prefab_hash": -1136173965,
        "desc": "While countless 'better' ways of cooking <link=FoodPage><color=#0080FFFF>Food</color></link> have been invented in the last few hundred years, few are as durable or easy to fabricate as the OK-Zoomer microwave. Licensed from <link=Xigo><color=#0080FFFF>Xigo</color></link>, the plans are based on a classic model from the mid-21st century, giving it a charmingly retro feel. But don't worry, it oscillates <link=GasWater><color=#44AD83>Water</color></link> molecules more than adequately. \nJust bolt it to a <link=ThingStructureBench><color=green>Powered Bench</color></link> using a <link=ThingItemWrench><color=green>Wrench</color></link> to power it, follow the recipe, and you're cooking.",
        "name": "Microwave"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Appliance",
        "sorting_class": "Appliances"
      },
      "slots": [
        {
          "name": "Output",
          "typ": "None"
        }
      ],
      "consumer_info": {
        "consumed_resouces": [
          "ItemCorn",
          "ItemEgg",
          "ItemFertilizedEgg",
          "ItemFlour",
          "ItemMilk",
          "ItemMushroom",
          "ItemPotato",
          "ItemPumpkin",
          "ItemRice",
          "ItemSoybean",
          "ItemSoyOil",
          "ItemTomato",
          "ItemSugarCane",
          "ItemCocoaTree",
          "ItemCocoaPowder",
          "ItemSugar"
        ],
        "processed_reagents": []
      }
    },
    "AppliancePackagingMachine": {
      "templateType": "ItemConsumer",
      "prefab": {
        "prefab_name": "AppliancePackagingMachine",
        "prefab_hash": -749191906,
        "desc": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> Cannifier requires <link=ThingItemEmptyCan><color=green>Empty Can</color></link> and cooked <link=OrganicPage><color=#0080FFFF>food</color></link> to create <link=DecayPage><color=#0080FFFF>long-lasting</color></link>, easily stored sustenance. Note that the Cannifier must be bolted to a <link=ThingStructureBench><color=green>Powered Bench</color></link> for power, and only accepts cooked food and tin cans.\n\n<size=120%><b>OPERATION</b></size>\n\n1. Add the correct ingredients to the device via the hopper in the TOP.\n\n2. Close the device using the dropdown handle.\n\n3. Activate the device.\n\n4. Remove canned goods from the outlet in the FRONT.\n\nNote: the Cannifier will flash an error on its activation switch if you attempt to activate it before closing it.\n\n\n      ",
        "name": "Basic Packaging Machine"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Appliance",
        "sorting_class": "Appliances"
      },
      "slots": [
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "consumer_info": {
        "consumed_resouces": [
          "ItemCookedCondensedMilk",
          "ItemCookedCorn",
          "ItemCookedMushroom",
          "ItemCookedPowderedEggs",
          "ItemCookedPumpkin",
          "ItemCookedRice",
          "ItemCookedSoybean",
          "ItemCookedTomato",
          "ItemEmptyCan",
          "ItemMilk",
          "ItemPotatoBaked",
          "ItemSoyOil"
        ],
        "processed_reagents": []
      }
    },
    "AppliancePaintMixer": {
      "templateType": "ItemConsumer",
      "prefab": {
        "prefab_name": "AppliancePaintMixer",
        "prefab_hash": -1339716113,
        "desc": "",
        "name": "Paint Mixer"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Appliance",
        "sorting_class": "Appliances"
      },
      "slots": [
        {
          "name": "Output",
          "typ": "Bottle"
        }
      ],
      "consumer_info": {
        "consumed_resouces": [
          "ItemSoyOil",
          "ReagentColorBlue",
          "ReagentColorGreen",
          "ReagentColorOrange",
          "ReagentColorRed",
          "ReagentColorYellow"
        ],
        "processed_reagents": []
      }
    },
    "AppliancePlantGeneticAnalyzer": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "AppliancePlantGeneticAnalyzer",
        "prefab_hash": -1303038067,
        "desc": "The Genetic Analyzer can be used to process samples from the <link=ThingItemPlantSampler><color=green>Plant Sampler</color></link>. Once processed, the genetic information of the sampled plant can be viewed by clicking on the search button.\n\nIndividual Gene Value Widgets: \nMost gene values will appear as a sliding bar between a minimum value on the left and a maximum value on the right. The actual value of the gene is in the middle of the bar, in orange.\n\nMultiple Gene Value Widgets: \nFor temperature and pressure ranges, four genes appear on the same widget. The orange values underneath the bar are the minimum and maximum thresholds for growth. Outside of this range, the plant will stop growing and eventually die. The blue values underneath the bar are the minimum and maximum thresholds for ideal growth. Inside of this range, the plant will grow at maximum speed. The white values above the bar are the minimum and maximum achievable values for the growth threshold.",
        "name": "Plant Genetic Analyzer"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Appliance",
        "sorting_class": "Appliances"
      },
      "slots": [
        {
          "name": "Input",
          "typ": "Tool"
        }
      ]
    },
    "AppliancePlantGeneticSplicer": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "AppliancePlantGeneticSplicer",
        "prefab_hash": -1094868323,
        "desc": "The Genetic Splicer can be used to copy a single <link=GeneticsPage><color=#0080FFFF>gene</color></link> from one 'source' plant to another 'target' plant of the same type. After copying, the source plant will be destroyed.\n        \nTo begin splicing, place a plant or seed bag in the left slot (source) and place another plant or seed bag of the same type in the right slot (target). You can select a gene using the arrow buttons. Close the sliding door and press the green activate button. Once splicing has begun, the device will be locked until the process has finished (which will take approximately twenty minutes). If you want to cancel splicing you can power off the bench or detach the appliance as a last resort.",
        "name": "Plant Genetic Splicer"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Appliance",
        "sorting_class": "Appliances"
      },
      "slots": [
        {
          "name": "Source Plant",
          "typ": "Plant"
        },
        {
          "name": "Target Plant",
          "typ": "Plant"
        }
      ]
    },
    "AppliancePlantGeneticStabilizer": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "AppliancePlantGeneticStabilizer",
        "prefab_hash": 871432335,
        "desc": "The Genetic Stabilizer can be used to manipulate gene stability on a specific <link=OrganicPage><color=#0080FFFF>Plants</color></link> or <link=OrganicPage><color=#0080FFFF>Seeds</color></link>. It has two modes Stabilize and Destabilize.\nStabilize: Increases all genes stability by 50%.\nDestabilize: Decreases all gene stability by 10% other than a chosen gene which will received decreased stability by 50%.\n      ",
        "name": "Plant Genetic Stabilizer"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Appliance",
        "sorting_class": "Appliances"
      },
      "slots": [
        {
          "name": "Plant",
          "typ": "Plant"
        }
      ]
    },
    "ApplianceReagentProcessor": {
      "templateType": "ItemConsumer",
      "prefab": {
        "prefab_name": "ApplianceReagentProcessor",
        "prefab_hash": 1260918085,
        "desc": "Sitting somewhere between a high powered juicer and an alchemist's alembic, the <link=Xigo><color=#0080FFFF>Xigo</color></link> reagent processor turns certain raw materials and food items into cooking and crafting ingredients. Indispensible in any space kitchen, just bolt it to the bench, and you're ready to go.",
        "name": "Reagent Processor"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Appliance",
        "sorting_class": "Appliances"
      },
      "slots": [
        {
          "name": "Input",
          "typ": "None"
        },
        {
          "name": "Output",
          "typ": "None"
        }
      ],
      "consumer_info": {
        "consumed_resouces": [
          "ItemWheat",
          "ItemSugarCane",
          "ItemCocoaTree",
          "ItemSoybean",
          "ItemFlowerBlue",
          "ItemFlowerGreen",
          "ItemFlowerOrange",
          "ItemFlowerRed",
          "ItemFlowerYellow"
        ],
        "processed_reagents": []
      }
    },
    "ApplianceSeedTray": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ApplianceSeedTray",
        "prefab_hash": 142831994,
        "desc": "The seed tray can hold up to twelve plants or seeds and can be used to facilitate fast experimentation and testing of plant genetics.",
        "name": "Appliance Seed Tray"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Appliance",
        "sorting_class": "Appliances"
      },
      "slots": [
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        }
      ]
    },
    "ApplianceTabletDock": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ApplianceTabletDock",
        "prefab_hash": 1853941363,
        "desc": "",
        "name": "Tablet Dock"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Appliance",
        "sorting_class": "Appliances"
      },
      "slots": [
        {
          "name": "<N:EN:Tablet>",
          "typ": "Tool"
        }
      ]
    },
    "AutolathePrinterMod": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "AutolathePrinterMod",
        "prefab_hash": 221058307,
        "desc": "Apply to an <link=ThingStructureAutolathe><color=green>Autolathe</color></link> with a <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link> or <link=ThingItemArcWelder><color=green>Arc Welder</color></link> to upgrade for increased processing speed and more recipe options.",
        "name": "Autolathe Printer Mod"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "Battery_Wireless_cell": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "Battery_Wireless_cell",
        "prefab_hash": -462415758,
        "desc": "0.Empty\n1.Critical\n2.VeryLow\n3.Low\n4.Medium\n5.High\n6.Full",
        "name": "Battery Wireless Cell"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Battery",
        "sorting_class": "Default"
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Mode": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Empty",
          "1": "Critical",
          "2": "VeryLow",
          "3": "Low",
          "4": "Medium",
          "5": "High",
          "6": "Full"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": []
    },
    "Battery_Wireless_cell_Big": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "Battery_Wireless_cell_Big",
        "prefab_hash": -41519077,
        "desc": "0.Empty\n1.Critical\n2.VeryLow\n3.Low\n4.Medium\n5.High\n6.Full",
        "name": "Battery Wireless Cell (Big)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Battery",
        "sorting_class": "Default"
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Mode": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Empty",
          "1": "Critical",
          "2": "VeryLow",
          "3": "Low",
          "4": "Medium",
          "5": "High",
          "6": "Full"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": []
    },
    "CardboardBox": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "CardboardBox",
        "prefab_hash": -1976947556,
        "desc": "",
        "name": "Cardboard Box"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Storage"
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "CartridgeAccessController": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CartridgeAccessController",
        "prefab_hash": -1634532552,
        "desc": "",
        "name": "Cartridge (Access Controller)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Cartridge",
        "sorting_class": "Default"
      }
    },
    "CartridgeAtmosAnalyser": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CartridgeAtmosAnalyser",
        "prefab_hash": -1550278665,
        "desc": "The Lorenz atmos analyzer is a multi-functional mass-spectrometer designed by <link=ExMin><color=#0080FFFF>ExMin</color></link> for use with the OreCore <link=ThingItemTablet><color=green>Handheld Tablet</color></link>. It displays the pressure, concentration and molar quantity of <link=GasPage><color=#0080FFFF>gas</color></link> in rooms, tanks, or pipe networks.",
        "name": "Atmos Analyzer"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Cartridge",
        "sorting_class": "Default"
      }
    },
    "CartridgeConfiguration": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CartridgeConfiguration",
        "prefab_hash": -932136011,
        "desc": "",
        "name": "Configuration"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Cartridge",
        "sorting_class": "Default"
      }
    },
    "CartridgeElectronicReader": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CartridgeElectronicReader",
        "prefab_hash": -1462180176,
        "desc": "",
        "name": "eReader"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Cartridge",
        "sorting_class": "Default"
      }
    },
    "CartridgeGPS": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CartridgeGPS",
        "prefab_hash": -1957063345,
        "desc": "",
        "name": "GPS"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Cartridge",
        "sorting_class": "Default"
      }
    },
    "CartridgeGuide": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CartridgeGuide",
        "prefab_hash": 872720793,
        "desc": "",
        "name": "Guide"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Cartridge",
        "sorting_class": "Default"
      }
    },
    "CartridgeMedicalAnalyser": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CartridgeMedicalAnalyser",
        "prefab_hash": -1116110181,
        "desc": "When added to the OreCore <link=ThingItemTablet><color=green>Handheld Tablet</color></link>, <link=Asura><color=#0080FFFF>Asura's</color></link>'s ReadyMed medical analyzer reveals the health, or otherwise, of users various organs. Due to a design flaw, older models were notorious for producing quasar-like levels of x-ray radiation. Recent advances in shielding have more than halved the risk to users.",
        "name": "Medical Analyzer"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Cartridge",
        "sorting_class": "Default"
      }
    },
    "CartridgeNetworkAnalyser": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CartridgeNetworkAnalyser",
        "prefab_hash": 1606989119,
        "desc": "A minor masterpiece of micro-electronic engineering, the network analyzer displays the current, voltage and wattage of a cable network, as well as any devices connected to it. Based on a widely-copied <link=Sinotai><color=#0080FFFF>Sinotai</color></link> design, it's used in conjunction with the OreCore <link=ThingItemTablet><color=green>Handheld Tablet</color></link>.",
        "name": "Network Analyzer"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Cartridge",
        "sorting_class": "Default"
      }
    },
    "CartridgeOreScanner": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CartridgeOreScanner",
        "prefab_hash": -1768732546,
        "desc": "When inserted into a <link=ThingItemTablet><color=green>Handheld Tablet</color></link> the scanner will display minerals hidden underground on the tablet.",
        "name": "Ore Scanner"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Cartridge",
        "sorting_class": "Default"
      }
    },
    "CartridgeOreScannerColor": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CartridgeOreScannerColor",
        "prefab_hash": 1738236580,
        "desc": "When inserted into a <link=ThingItemTablet><color=green>Handheld Tablet</color></link> the scanner will display minerals hidden underground in different colors on the tablet.",
        "name": "Ore Scanner (Color)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Cartridge",
        "sorting_class": "Default"
      }
    },
    "CartridgePlantAnalyser": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CartridgePlantAnalyser",
        "prefab_hash": 1101328282,
        "desc": "",
        "name": "Cartridge Plant Analyser"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Cartridge",
        "sorting_class": "Default"
      }
    },
    "CartridgeTracker": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CartridgeTracker",
        "prefab_hash": 81488783,
        "desc": "",
        "name": "Tracker"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Cartridge",
        "sorting_class": "Default"
      }
    },
    "CircuitboardAdvAirlockControl": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CircuitboardAdvAirlockControl",
        "prefab_hash": 1633663176,
        "desc": "",
        "name": "Advanced Airlock"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "CircuitboardAirControl": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CircuitboardAirControl",
        "prefab_hash": 1618019559,
        "desc": "When added to a <link=ThingStructureConsole><color=green>Console</color></link>, air control circuit boards allow you to program an <link=ThingStructureActiveVent><color=green>Active Vent</color></link>. As with small dogs and 83% of people, air control circuits have only three modes: Pressure, Draft and Offline. Pressure mode maintains a 100kPa atmosphere, switching the active vent between inward and outward flow until target pressure is achieved. Draft mode allows you to pair active vents to circulate air. Offline mode deactivates the vent. ",
        "name": "Air Control"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "CircuitboardAirlockControl": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CircuitboardAirlockControl",
        "prefab_hash": 912176135,
        "desc": "Rumored to have been first sketched on a <link=Norsec><color=#0080FFFF>Norsec</color></link> toilet wall by a disgruntled engineer, the Exgress airlock control circuit board’s versatility and ease of fabrication has made it the <link=Stationeers><color=#0080FFFF>Stationeers</color></link> control system of choice for <link=ThingStructureAirlock><color=green>Airlock</color></link> cycling protocols. \n\nTo enter setup mode, insert the board into a <link=ThingStructureConsole><color=green>Console</color></link> along with a data disk. In this mode, you can see all data-accessible objects currently connected to the <link=ThingStructureConsole><color=green>Console</color></link>. Doors, lights, gas sensors and slave consoles can be selected (highlighted green), and will be controlled once the data disk is removed.",
        "name": "Airlock"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "CircuitboardCameraDisplay": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CircuitboardCameraDisplay",
        "prefab_hash": -412104504,
        "desc": "Surveillance is sometimes necessary when building bases in highly hostile environments. The camera display circuit board allows wary Stationeers to turn a <link=ThingStructureConsole><color=green>Console</color></link> into a security display when connected to a <link=ThingStructureCamera><color=green>Camera</color></link>.",
        "name": "Camera Display"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "CircuitboardDoorControl": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CircuitboardDoorControl",
        "prefab_hash": 855694771,
        "desc": "A basic tool of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> base construction, this circuit board provides a way to open and close a <link=ThingStructureCompositeDoor><color=green>Composite Door</color></link>, <link=ThingStructureBlastDoor><color=green>Blast Door</color></link> or <link=ThingStructureGlassDoor><color=green>Glass Door</color></link> remotely, when connected to a <link=ThingStructureConsole><color=green>Console</color></link>. This system can be further linked to <link=ThingStructureMotionSensor><color=green>Motion Sensor</color></link> to create automatic doors.",
        "name": "Door Control"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "CircuitboardGasDisplay": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CircuitboardGasDisplay",
        "prefab_hash": -82343730,
        "desc": "Information is power. Place this circuitboard into a <link=ThingStructureConsole><color=green>Console</color></link> to create a display that shows gas pressure or temperature of any connected tank, storage cannister, <link=ThingItemPipeAnalyizer><color=green>Kit (Pipe Analyzer)</color></link> or <link=ThingItemGasSensor><color=green>Kit (Gas Sensor)</color></link>.",
        "name": "Gas Display"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "CircuitboardGraphDisplay": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CircuitboardGraphDisplay",
        "prefab_hash": 1344368806,
        "desc": "",
        "name": "Graph Display"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "CircuitboardHashDisplay": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CircuitboardHashDisplay",
        "prefab_hash": 1633074601,
        "desc": "",
        "name": "Hash Display"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "CircuitboardModeControl": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CircuitboardModeControl",
        "prefab_hash": -1134148135,
        "desc": "Can't decide which mode you love most? This circuit board allows you to switch any connected device between operation modes.",
        "name": "Mode Control"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "CircuitboardPowerControl": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CircuitboardPowerControl",
        "prefab_hash": -1923778429,
        "desc": "Under distant suns and demanding environments, <link=Stationeers><color=#0080FFFF>Stationeer</color></link> systems need to balance reliability, resilience and versatility. The power control board allows remote enabling and disabling of selected devices, disconnecting manual operation. \n      \nThe circuit board has two modes: 'Link' switches all devices on or off; 'Toggle' switches each device to their alternate state. ",
        "name": "Power Control"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "CircuitboardShipDisplay": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CircuitboardShipDisplay",
        "prefab_hash": -2044446819,
        "desc": "When the original <link=Stationeers><color=#0080FFFF>Stationeer</color></link> Handbook collapsed under its own weight into a singularity, certain information was irretrievably lost. Amongst this mysterious corpus of knowledge is the exact purpose of the ship display board.",
        "name": "Ship Display"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "CircuitboardSolarControl": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "CircuitboardSolarControl",
        "prefab_hash": 2020180320,
        "desc": "Adding a solar control board to a <link=ThingStructureConsole><color=green>Console</color></link> lets you manually control the horizontal and vertical angles of any connected <link=ThingStructureSolarPanel><color=green>Solar Panel</color></link>.",
        "name": "Solar Control"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "CompositeRollCover": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "CompositeRollCover",
        "prefab_hash": 1228794916,
        "desc": "0.Operate\n1.Logic",
        "name": "Composite Roll Cover"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "CrateMkII": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "CrateMkII",
        "prefab_hash": 8709219,
        "desc": "A more heavily reinforced version of the iconic <link=ThingDynamicCrate><color=green>Dynamic Crate</color></link>, the Crate Mk II is resistant to incredibly high pressures and temperatures. Short of disposing of it in a black hole, the Mk II is about as safe as luggage gets.",
        "name": "Crate Mk II"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Storage"
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "DecayedFood": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "DecayedFood",
        "prefab_hash": 1531087544,
        "desc": "When your <link=OrganicPage><color=#0080FFFF>food</color></link> decays, it turns into this. <link=ODA><color=#0080FFFF>ODA</color></link> scientists have attempted to determine the exact constituents of this substance, but it remains evasive and mysterious. Suffice to say, eating it is a bad idea. Research has determined, however, that The exact speed of decay varies individually by:\n\n- TEMPERATURE - Refrigeration will slow decay, but many foods will be damaged by exposure to extreme low pressure, as well as extreme heat. The optimum temperature is 0 kelvin (-272 C).\n\n- FOOD TYPE - Each <link=OrganicPage><color=#0080FFFF>food</color></link> type has its own decay properties. <link=ThingItemTomatoSoup><color=green>Tomato Soup</color></link> lasts a lot longer than a <link=ThingItemTomato><color=green>Tomato</color></link>, for instance.\n\n- PRESSURE - Food decays faster when the pressure drops below 1 atmosphere (101kPa). Decay happens exponentially more quickly as the atmosphere approaches a perfect vacuum. There is no effect from higher pressures. \n\n- ATMOSPHERE - Different gases can slow and accelerate the decay process. The process will take account of respective gas ratios in mixed atmospheres in calculating the decay modifier. The following rates apply across all foods:\n\n> <link=GasOxygen><color=#44AD83>Oxygen</color></link> x 1.3\n> <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> x 0.6\n> <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> x 0.8\n> <link=GasVolatiles><color=#44AD83>Volatiles</color></link> x 1\n> <link=GasPollutant><color=#44AD83>Pollutant</color></link> x 3\n> <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> x 1.5\n> <link=GasSteam><color=#44AD83>Steam</color></link> x 2\n> Vacuum (see PRESSURE above)\n\n",
        "name": "Decayed Food"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 25,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "DeviceLfoVolume": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "DeviceLfoVolume",
        "prefab_hash": -1844430312,
        "desc": "The low frequency oscillator (or LFO) makes everything sound dark, twisted and crunchy by altering the shape of the waves output by a <link=ThingLogicStepSequencer8><color=green>Logic Step Sequencer</color></link>.\n      \nTo set up an LFO:\n\n1. Place the LFO unit\n2. Set the LFO output to a <link=ThingPassiveSpeaker><color=green>Passive Speaker</color></link>\n2. Set a sequencers' output to LFO - so the sequencer's signal runs through the LFO to a speaker.\n3. Place a <link=ThingStopWatch><color=green>Stop Watch</color></link> or use an existing one, then use a <link=ThingStructureLogicWriter><color=green>Logic Writer</color></link> to write it to the LFO.\n4. Use another logic writer to write the BPM to the LFO.\n5. You are ready. This is the future. You're in space. Make it sound cool.\n\nFor more info, check out the <link=MusicPage><color=#0080FFFF>music page</color></link>.",
        "name": "Low frequency oscillator"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "Time": "ReadWrite",
          "Bpm": "ReadWrite",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Whole Note",
          "1": "Half Note",
          "2": "Quarter Note",
          "3": "Eighth Note",
          "4": "Sixteenth Note"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Input"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "DeviceStepUnit": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "DeviceStepUnit",
        "prefab_hash": 1762696475,
        "desc": "0.C-2\n1.C#-2\n2.D-2\n3.D#-2\n4.E-2\n5.F-2\n6.F#-2\n7.G-2\n8.G#-2\n9.A-2\n10.A#-2\n11.B-2\n12.C-1\n13.C#-1\n14.D-1\n15.D#-1\n16.E-1\n17.F-1\n18.F#-1\n19.G-1\n20.G#-1\n21.A-1\n22.A#-1\n23.B-1\n24.C0\n25.C#0\n26.D0\n27.D#0\n28.E0\n29.F0\n30.F#0\n31.G0\n32.G#0\n33.A0\n34.A#0\n35.B0\n36.C1\n37.C#1\n38.D1\n39.D#1\n40.E1\n41.F1\n42.F#1\n43.G1\n44.G#1\n45.A1\n46.A#1\n47.B1\n48.C2\n49.C#2\n50.D2\n51.D#2\n52.E2\n53.F2\n54.F#2\n55.G2\n56.G#2\n57.A2\n58.A#2\n59.B2\n60.C3\n61.C#3\n62.D3\n63.D#3\n64.E3\n65.F3\n66.F#3\n67.G3\n68.G#3\n69.A3\n70.A#3\n71.B3\n72.C4\n73.C#4\n74.D4\n75.D#4\n76.E4\n77.F4\n78.F#4\n79.G4\n80.G#4\n81.A4\n82.A#4\n83.B4\n84.C5\n85.C#5\n86.D5\n87.D#5\n88.E5\n89.F5\n90.F#5\n91.G5 \n92.G#5\n93.A5\n94.A#5\n95.B5\n96.C6\n97.C#6\n98.D6\n99.D#6\n100.E6\n101.F6\n102.F#6\n103.G6\n104.G#6\n105.A6\n106.A#6\n107.B6\n108.C7\n109.C#7\n110.D7\n111.D#7\n112.E7\n113.F7\n114.F#7\n115.G7\n116.G#7\n117.A7\n118.A#7\n119.B7\n120.C8\n121.C#8\n122.D8\n123.D#8\n124.E8\n125.F8\n126.F#8\n127.G8",
        "name": "Device Step Unit"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Volume": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "C-2",
          "1": "C#-2",
          "2": "D-2",
          "3": "D#-2",
          "4": "E-2",
          "5": "F-2",
          "6": "F#-2",
          "7": "G-2",
          "8": "G#-2",
          "9": "A-2",
          "10": "A#-2",
          "11": "B-2",
          "12": "C-1",
          "13": "C#-1",
          "14": "D-1",
          "15": "D#-1",
          "16": "E-1",
          "17": "F-1",
          "18": "F#-1",
          "19": "G-1",
          "20": "G#-1",
          "21": "A-1",
          "22": "A#-1",
          "23": "B-1",
          "24": "C0",
          "25": "C#0",
          "26": "D0",
          "27": "D#0",
          "28": "E0",
          "29": "F0",
          "30": "F#0",
          "31": "G0",
          "32": "G#0",
          "33": "A0",
          "34": "A#0",
          "35": "B0",
          "36": "C1",
          "37": "C#1",
          "38": "D1",
          "39": "D#1",
          "40": "E1",
          "41": "F1",
          "42": "F#1",
          "43": "G1",
          "44": "G#1",
          "45": "A1",
          "46": "A#1",
          "47": "B1",
          "48": "C2",
          "49": "C#2",
          "50": "D2",
          "51": "D#2",
          "52": "E2",
          "53": "F2",
          "54": "F#2",
          "55": "G2",
          "56": "G#2",
          "57": "A2",
          "58": "A#2",
          "59": "B2",
          "60": "C3",
          "61": "C#3",
          "62": "D3",
          "63": "D#3",
          "64": "E3",
          "65": "F3",
          "66": "F#3",
          "67": "G3",
          "68": "G#3",
          "69": "A3",
          "70": "A#3",
          "71": "B3",
          "72": "C4",
          "73": "C#4",
          "74": "D4",
          "75": "D#4",
          "76": "E4",
          "77": "F4",
          "78": "F#4",
          "79": "G4",
          "80": "G#4",
          "81": "A4",
          "82": "A#4",
          "83": "B4",
          "84": "C5",
          "85": "C#5",
          "86": "D5",
          "87": "D#5",
          "88": "E5",
          "89": "F5",
          "90": "F#5",
          "91": "G5 ",
          "92": "G#5",
          "93": "A5",
          "94": "A#5",
          "95": "B5",
          "96": "C6",
          "97": "C#6",
          "98": "D6",
          "99": "D#6",
          "100": "E6",
          "101": "F6",
          "102": "F#6",
          "103": "G6",
          "104": "G#6",
          "105": "A6",
          "106": "A#6",
          "107": "B6",
          "108": "C7",
          "109": "C#7",
          "110": "D7",
          "111": "D#7",
          "112": "E7",
          "113": "F7",
          "114": "F#7",
          "115": "G7",
          "116": "G#7",
          "117": "A7",
          "118": "A#7",
          "119": "B7",
          "120": "C8",
          "121": "C#8",
          "122": "D8",
          "123": "D#8",
          "124": "E8",
          "125": "F8",
          "126": "F#8",
          "127": "G8"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Input"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "DynamicAirConditioner": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicAirConditioner",
        "prefab_hash": 519913639,
        "desc": "The <link=Sinotai><color=#0080FFFF>Sinotai</color></link>-designed Huxi portable air conditioner cools by drawing heat from the atmosphere and storing it, or adding heat to the atmosphere from its internal tank. With a max internal pressure of 8106kPa, its capacity is relatively limited, physics being clear on this subject. To extend its temperature storage ability, bolt the Huxi to a <link=ThingStructureTankConnector><color=green>Tank Connector</color></link>, then connect it to a pipe network supplying hot or cold <link=GasPage><color=#0080FFFF>gases</color></link>.",
        "name": "Portable Air Conditioner"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "DynamicCrate": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicCrate",
        "prefab_hash": 1941079206,
        "desc": "The humble dynamic crate has become a symbol of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> invention and independence. With twelve slots and handles at either end for ease of carriage, it's both standard issue and critical kit for cadets and Commanders alike.",
        "name": "Dynamic Crate"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Storage"
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "DynamicGPR": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "DynamicGPR",
        "prefab_hash": -2085885850,
        "desc": "<N:EN:DynamicGPR>",
        "name": "<N:EN:DynamicGPR>"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "DynamicGasCanisterAir": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasCanisterAir",
        "prefab_hash": -1713611165,
        "desc": "Portable gas tanks do one thing: store gas. But there's lots you can do with them. To refill the tank, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link>, then connect it to a pipe network. Try to avoid pushing it above 10 MPa, or bad things happen. Once it's full, you can refill a <link=ThingItemGasCanisterOxygen><color=green>Canister (Oxygen)</color></link> by attaching it to the tank's striped section. Or you could vent the tank's variable flow rate valve into a room and create an atmosphere. They also attach to rovers and rockets. Alternatively, kick it over and practice barrel rolling. The possibilities are endless.",
        "name": "Portable Gas Tank (Air)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.025,
        "radiation_factor": 0.025
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "None"
        }
      ]
    },
    "DynamicGasCanisterCarbonDioxide": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasCanisterCarbonDioxide",
        "prefab_hash": -322413931,
        "desc": "Portable gas tanks do one thing: store gas. To refill the tank, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link>, then connect it to a pipe network. Try to avoid pushing it above 10 MPa, or ... boom. Once it's full, you can refill a <link=ThingItemGasCanisterCarbonDioxide><color=green>Canister (CO2)</color></link> by attaching it to the tank's striped section. Or you could vent the tank's variable flow rate valve into a room and create an atmosphere ... of sorts.",
        "name": "Portable Gas Tank (CO2)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.025,
        "radiation_factor": 0.025
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "None"
        }
      ]
    },
    "DynamicGasCanisterEmpty": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasCanisterEmpty",
        "prefab_hash": -1741267161,
        "desc": "Portable gas tanks store gas. To refill one, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link>, then connect it to a pipe network. Try to avoid pushing it above 10 MPa, or bad things happen. Once it's full, you can refill a <link=ThingItemGasCanisterEmpty><color=green>Canister</color></link> by attaching it to the tank's striped section. Or you could vent the tank's variable flow rate valve into a room and create an atmosphere.",
        "name": "Portable Gas Tank"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.025,
        "radiation_factor": 0.025
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "None"
        }
      ]
    },
    "DynamicGasCanisterFuel": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasCanisterFuel",
        "prefab_hash": -817051527,
        "desc": "Portable tanks store gas. They're good at it. If you need to refill a tank, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link>, then connect it to a pipe network. Try to avoid pushing it above 10 MPa, or things get messy. You can refill a <link=ThingItemGasCanisterFuel><color=green>Canister (Fuel)</color></link> by attaching it to the tank's striped section. Or you could use a <link=ThingItemWrench><color=green>Wrench</color></link> to attach it to a rover or rocket for later. It's really up to you.",
        "name": "Portable Gas Tank (Fuel)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.025,
        "radiation_factor": 0.025
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "None"
        }
      ]
    },
    "DynamicGasCanisterNitrogen": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasCanisterNitrogen",
        "prefab_hash": 121951301,
        "desc": "Portable tanks store gas. If you need to refill a tank, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link> using a <link=ThingItemWrench><color=green>Wrench</color></link>, then connect it to a pipe network. Try to avoid pushing it above 10 MPa, or you'll end up with <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> in places you weren't expecting. You can refill a <link=ThingItemGasCanisterNitrogen><color=green>Canister (Nitrogen)</color></link> by attaching it to the tank's striped section. Or you could use a <link=ThingItemWrench><color=green>Wrench</color></link> to attach it to a rover or rocket for later.",
        "name": "Portable Gas Tank (Nitrogen)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.025,
        "radiation_factor": 0.025
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "None"
        }
      ]
    },
    "DynamicGasCanisterNitrousOxide": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasCanisterNitrousOxide",
        "prefab_hash": 30727200,
        "desc": "",
        "name": "Portable Gas Tank (Nitrous Oxide)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.025,
        "radiation_factor": 0.025
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "None"
        }
      ]
    },
    "DynamicGasCanisterOxygen": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasCanisterOxygen",
        "prefab_hash": 1360925836,
        "desc": "Portable tanks store gas. If you need to refill a tank, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link> using a <link=ThingItemWrench><color=green>Wrench</color></link>, then connect it to a pipe network. Try to avoid pushing it above 10 MPa, or you'll be picking tank shards out of your face. You can refill a <link=ThingItemGasCanisterOxygen><color=green>Canister (Oxygen)</color></link> by attaching it to the tank's striped section. Or you could vent it into a sealed room to create an atmosphere. Or even paint it pink, call it Steve and fill that sad space in your heart.",
        "name": "Portable Gas Tank (Oxygen)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.025,
        "radiation_factor": 0.025
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "None"
        }
      ]
    },
    "DynamicGasCanisterPollutants": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasCanisterPollutants",
        "prefab_hash": 396065382,
        "desc": "",
        "name": "Portable Gas Tank (Pollutants)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.025,
        "radiation_factor": 0.025
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "None"
        }
      ]
    },
    "DynamicGasCanisterRocketFuel": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasCanisterRocketFuel",
        "prefab_hash": -8883951,
        "desc": "",
        "name": "Dynamic Gas Canister Rocket Fuel"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.025,
        "radiation_factor": 0.025
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "None"
        }
      ]
    },
    "DynamicGasCanisterVolatiles": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasCanisterVolatiles",
        "prefab_hash": 108086870,
        "desc": "Portable tanks store gas. To refill one, bolt it to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link> using a <link=ThingItemWrench><color=green>Wrench</color></link>, then connect it to a pipe network. Don't fill it above 10 MPa, unless you're the sort who loves complicated, flammable emergencies. You can refill a <link=ThingItemGasCanisterVolatiles><color=green>Canister (Volatiles)</color></link> by attaching it to the tank's striped section. Or you could use a <link=ThingItemWrench><color=green>Wrench</color></link> to attach to a rocket and show it around the Solar System.",
        "name": "Portable Gas Tank (Volatiles)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.025,
        "radiation_factor": 0.025
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "None"
        }
      ]
    },
    "DynamicGasCanisterWater": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasCanisterWater",
        "prefab_hash": 197293625,
        "desc": "This portable tank stores liquid, and liquid only. You just have to fill it up. To do this, bolt one to a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link> using a <link=ThingItemWrench><color=green>Wrench</color></link>, then connect it to <link=ThingStructurePipeLiquidStraight><color=green>Liquid Pipe (Straight)</color></link> to supply liquid to a network. \nTry to keep pressure under 10 MPa, or you'll end up wet, hurt and sorry, without any of the fun.\nYou can refill a <link=ThingItemGasCanisterWater><color=green>Liquid Canister (Water)</color></link> by attaching it to the tank's striped section. Or you could use a <link=ThingItemWrench><color=green>Wrench</color></link> to attach it to a rocket and take it somewhere distant and dry, then feel good about yourself.",
        "name": "Portable Liquid Tank (Water)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.025,
        "radiation_factor": 0.025
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "LiquidCanister"
        }
      ]
    },
    "DynamicGasTankAdvanced": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasTankAdvanced",
        "prefab_hash": -386375420,
        "desc": "0.Mode0\n1.Mode1",
        "name": "Gas Tank Mk II"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "None"
        }
      ]
    },
    "DynamicGasTankAdvancedOxygen": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGasTankAdvancedOxygen",
        "prefab_hash": -1264455519,
        "desc": "0.Mode0\n1.Mode1",
        "name": "Portable Gas Tank Mk II (Oxygen)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "None"
        }
      ]
    },
    "DynamicGenerator": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicGenerator",
        "prefab_hash": -82087220,
        "desc": "Every <link=Stationeers><color=#0080FFFF>Stationeer's</color></link> best friend, the portable generator gets you up and running, fast. Fill it with a <link=ThingItemGasCanisterFuel><color=green>Canister (Fuel)</color></link> to power up and charge a <link=ThingItemBatteryCell><color=green>Battery Cell (Small)</color></link>, or attach it to a <link=ThingStructurePowerConnector><color=green>Power Connector</color></link> to link it into your electrical network. It's pressure driven, so functions more efficiently at lower temperatures, and REALLY efficiently if supercooled. Perfecting your fuel mix also makes a big difference.",
        "name": "Portable Generator"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "GasCanister"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "DynamicHydroponics": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicHydroponics",
        "prefab_hash": 587726607,
        "desc": "",
        "name": "Portable Hydroponics"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "slots": [
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Liquid Canister",
          "typ": "LiquidCanister"
        },
        {
          "name": "Liquid Canister",
          "typ": "Plant"
        },
        {
          "name": "Liquid Canister",
          "typ": "Plant"
        },
        {
          "name": "Liquid Canister",
          "typ": "Plant"
        },
        {
          "name": "Liquid Canister",
          "typ": "Plant"
        }
      ]
    },
    "DynamicLight": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "DynamicLight",
        "prefab_hash": -21970188,
        "desc": "Philippe Starck might not applaud, but this battery-powered light source undarkens the corners when illumination's lacking. Powered by any battery, it's a 'no-frills' <link=Xigo><color=#0080FFFF>Xigo</color></link> design that can be cheaply fabricated with the minimum of fuss. Unless you like fuss. In which case, fuss all you like.",
        "name": "Portable Light"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "DynamicLiquidCanisterEmpty": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicLiquidCanisterEmpty",
        "prefab_hash": -1939209112,
        "desc": "This portable tank stores liquid, and liquid only. You can bolt one to a <link=ThingItemTankConnectorLiquid><color=green>Kit (Liquid Tank Connector)</color></link> using a <link=ThingItemWrench><color=green>Wrench</color></link>, then connect it to a pipe network to refill it. You can refill a <link=ThingItemGasCanisterWater><color=green>Liquid Canister (Water)</color></link> by attaching it to the tank's striped section. Or you could use a <link=ThingItemWrench><color=green>Wrench</color></link> to attach it to a rocket and take it somewhere distant and dry, then feel good about yourself.",
        "name": "Portable Liquid Tank"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.025,
        "radiation_factor": 0.025
      },
      "slots": [
        {
          "name": "Liquid Canister",
          "typ": "LiquidCanister"
        }
      ]
    },
    "DynamicMKIILiquidCanisterEmpty": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicMKIILiquidCanisterEmpty",
        "prefab_hash": 2130739600,
        "desc": "An empty, insulated liquid <link=SlotGasCanister><color=orange>Gas Canister</color></link>.",
        "name": "Portable Liquid Tank Mk II"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "slots": [
        {
          "name": "Liquid Canister",
          "typ": "LiquidCanister"
        }
      ]
    },
    "DynamicMKIILiquidCanisterWater": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicMKIILiquidCanisterWater",
        "prefab_hash": -319510386,
        "desc": "An insulated version of the <link=ThingDynamicMKIILiquidCanisterWater><color=green>Portable Liquid Tank Mk II (Water)</color></link>, for storing liquids without them gaining or losing temperature.",
        "name": "Portable Liquid Tank Mk II (Water)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "slots": [
        {
          "name": "Liquid Canister",
          "typ": "LiquidCanister"
        }
      ]
    },
    "DynamicScrubber": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "DynamicScrubber",
        "prefab_hash": 755048589,
        "desc": "A portable scrubber does just what it sounds like: removes specific substances from the air. For instance, attaching a <link=ThingItemGasFilterCarbonDioxide><color=green>Filter (Carbon Dioxide)</color></link> will pull <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> from the surrounding atmosphere. Note that the scrubber has room for one battery and two filters, which will double its operating speed. Neat. When it reaches an internal pressure of 8106kPA, an error signal will flash on the switch, indicating it needs to be emptied. Either vent it directly, or attach it to a pipe network via a <link=ThingItemTankConnector><color=green>Kit (Tank Connector)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Portable Air Scrubber"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Gas Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Gas Filter",
          "typ": "GasFilter"
        }
      ]
    },
    "DynamicSkeleton": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "DynamicSkeleton",
        "prefab_hash": 106953348,
        "desc": "",
        "name": "Skeleton"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ElectronicPrinterMod": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ElectronicPrinterMod",
        "prefab_hash": -311170652,
        "desc": "Apply to an <link=ThingStructureElectronicsPrinter><color=green>Electronics Printer</color></link> with a <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link> or <link=ThingItemArcWelder><color=green>Arc Welder</color></link> to upgrade for increased processing speed and more recipe options.",
        "name": "Electronic Printer Mod"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ElevatorCarrage": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ElevatorCarrage",
        "prefab_hash": -110788403,
        "desc": "",
        "name": "Elevator"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "EntityChick": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "EntityChick",
        "prefab_hash": 1730165908,
        "desc": "Once a chick is hatched, it gets hungry. It will eat soybeans, corn, and wheat, and lay eggs. Some will be fertilized, producing further chickens. Some will not.",
        "name": "Entity Chick"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "slots": [
        {
          "name": "Brain",
          "typ": "Organ"
        }
      ]
    },
    "EntityChickenBrown": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "EntityChickenBrown",
        "prefab_hash": 334097180,
        "desc": "Like so many of its brethren, this is a chicken. A brown one. It will eat soybeans, corn, and wheat, and lay eggs. Some will be fertilized, producing further chickens. Some will not.",
        "name": "Entity Chicken Brown"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "slots": [
        {
          "name": "Brain",
          "typ": "Organ"
        }
      ]
    },
    "EntityChickenWhite": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "EntityChickenWhite",
        "prefab_hash": 1010807532,
        "desc": "It's a chicken, as white as moondust. It will eat soybeans, corn, and wheat, and lay eggs. Some will be fertilized, producing further chickens. Some will not.",
        "name": "Entity Chicken White"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "slots": [
        {
          "name": "Brain",
          "typ": "Organ"
        }
      ]
    },
    "EntityRoosterBlack": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "EntityRoosterBlack",
        "prefab_hash": 966959649,
        "desc": "This is a rooster. It is black. There is dignity in this.",
        "name": "Entity Rooster Black"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "slots": [
        {
          "name": "Brain",
          "typ": "Organ"
        }
      ]
    },
    "EntityRoosterBrown": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "EntityRoosterBrown",
        "prefab_hash": -583103395,
        "desc": "The common brown rooster. Don't let it hear you say that.",
        "name": "Entity Rooster Brown"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "slots": [
        {
          "name": "Brain",
          "typ": "Organ"
        }
      ]
    },
    "Fertilizer": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "Fertilizer",
        "prefab_hash": 1517856652,
        "desc": "Fertilizer alters plant growth processes, and is created by the basic composter and the <link=ThingStructureAdvancedComposter><color=green>Advanced Composter</color></link> using <link=OrganicPage><color=#0080FFFF>organic</color></link> matter.\nFertilizer's affects depend on its ingredients:\n\n- <link=OrganicPage><color=#0080FFFF>Food</color></link> increases PLANT YIELD up to two times\n- <link=ThingDecayedFood><color=green>Decayed Food</color></link> increases plant GROWTH SPEED up to two times\n- <link=ThingItemBiomass><color=green>Biomass</color></link> increases the NUMBER OF GROWTH CYCLES the fertilizer lasts for\n\nThe effect of these ingredients depends on their respective proportions in the composter when processing is activated. ",
        "name": "Fertilizer"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Default"
      }
    },
    "FireArmSMG": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "FireArmSMG",
        "prefab_hash": -86315541,
        "desc": "0.Single\n1.Auto",
        "name": "Fire Arm SMG"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Tools"
      },
      "slots": [
        {
          "name": "",
          "typ": "Magazine"
        }
      ]
    },
    "Flag_ODA_10m": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Flag_ODA_10m",
        "prefab_hash": 1845441951,
        "desc": "",
        "name": "Flag (ODA 10m)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Flag_ODA_4m": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Flag_ODA_4m",
        "prefab_hash": 1159126354,
        "desc": "",
        "name": "Flag (ODA 4m)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Flag_ODA_6m": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Flag_ODA_6m",
        "prefab_hash": 1998634960,
        "desc": "",
        "name": "Flag (ODA 6m)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Flag_ODA_8m": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Flag_ODA_8m",
        "prefab_hash": -375156130,
        "desc": "",
        "name": "Flag (ODA 8m)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "FlareGun": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "FlareGun",
        "prefab_hash": 118685786,
        "desc": "",
        "name": "Flare Gun"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "slots": [
        {
          "name": "Magazine",
          "typ": "Flare"
        },
        {
          "name": "<N:EN:Chamber>",
          "typ": "Blocked"
        }
      ]
    },
    "H2Combustor": {
      "templateType": "StructureCircuitHolder",
      "prefab": {
        "prefab_name": "H2Combustor",
        "prefab_hash": 1840108251,
        "desc": "Adapted slightly from its original <link=Recurso><color=#0080FFFF>Recurso</color></link> design, the <link=GasVolatiles><color=#44AD83>Volatiles</color></link> Combustor does exactly what its name suggests - it burns a mixture of volatiles and <link=GasOxygen><color=#44AD83>Oxygen</color></link> to create water. Extremely useful in hot or arid environments, users need to be aware that the combustor outputs considerable waste heat. The device is also less than perfectly efficient, resulting in the autoignition of volatiles in the chamber, and the production of waste gases which must be dealt with.",
        "name": "H2 Combustor"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "PressureInput": "Read",
          "TemperatureInput": "Read",
          "RatioOxygenInput": "Read",
          "RatioCarbonDioxideInput": "Read",
          "RatioNitrogenInput": "Read",
          "RatioPollutantInput": "Read",
          "RatioVolatilesInput": "Read",
          "RatioWaterInput": "Read",
          "RatioNitrousOxideInput": "Read",
          "TotalMolesInput": "Read",
          "PressureOutput": "Read",
          "TemperatureOutput": "Read",
          "RatioOxygenOutput": "Read",
          "RatioCarbonDioxideOutput": "Read",
          "RatioNitrogenOutput": "Read",
          "RatioPollutantOutput": "Read",
          "RatioVolatilesOutput": "Read",
          "RatioWaterOutput": "Read",
          "RatioNitrousOxideOutput": "Read",
          "TotalMolesOutput": "Read",
          "CombustionInput": "Read",
          "CombustionOutput": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidNitrogenInput": "Read",
          "RatioLiquidNitrogenOutput": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidOxygenInput": "Read",
          "RatioLiquidOxygenOutput": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioLiquidVolatilesInput": "Read",
          "RatioLiquidVolatilesOutput": "Read",
          "RatioSteam": "Read",
          "RatioSteamInput": "Read",
          "RatioSteamOutput": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidCarbonDioxideInput": "Read",
          "RatioLiquidCarbonDioxideOutput": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidPollutantInput": "Read",
          "RatioLiquidPollutantOutput": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "RatioLiquidNitrousOxideInput": "Read",
          "RatioLiquidNitrousOxideOutput": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Idle",
          "1": "Active"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": true
      },
      "slots": [
        {
          "name": "Programmable Chip",
          "typ": "ProgrammableChip"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "device_pins_length": 2,
        "has_activate_state": true,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "Handgun": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "Handgun",
        "prefab_hash": 247238062,
        "desc": "",
        "name": "Handgun"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Tools"
      },
      "slots": [
        {
          "name": "Magazine",
          "typ": "Magazine"
        }
      ]
    },
    "HandgunMagazine": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "HandgunMagazine",
        "prefab_hash": 1254383185,
        "desc": "",
        "name": "Handgun Magazine"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Magazine",
        "sorting_class": "Default"
      }
    },
    "HumanSkull": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "HumanSkull",
        "prefab_hash": -857713709,
        "desc": "",
        "name": "Human Skull"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ImGuiCircuitboardAirlockControl": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ImGuiCircuitboardAirlockControl",
        "prefab_hash": -73796547,
        "desc": "",
        "name": "Airlock (Experimental)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Circuitboard",
        "sorting_class": "Default"
      }
    },
    "ItemActiveVent": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemActiveVent",
        "prefab_hash": -842048328,
        "desc": "When constructed, this kit places an <link=ThingStructureActiveVent><color=green>Active Vent</color></link> on any support structure.",
        "name": "Kit (Active Vent)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemAdhesiveInsulation": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemAdhesiveInsulation",
        "prefab_hash": 1871048978,
        "desc": "",
        "name": "Adhesive Insulation"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 20,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemAdvancedTablet": {
      "templateType": "ItemCircuitHolder",
      "prefab": {
        "prefab_name": "ItemAdvancedTablet",
        "prefab_hash": 1722785341,
        "desc": "The advanced <link=Xigo><color=#0080FFFF>Xigo</color></link> Padi 2 tablet is an improved version of the basic <link=ThingItemTablet><color=green>Handheld Tablet</color></link>, boasting two <link=CartridgePage><color=#0080FFFF>cartridge</color></link> slots. The Padi 2 accepts <link=ThingCartridgeAtmosAnalyser><color=green>Atmos Analyzer</color></link>, <link=ThingCartridgeTracker><color=green>Tracker</color></link>, <link=ThingCartridgeMedicalAnalyser><color=green>Medical Analyzer</color></link>, <link=ThingCartridgeOreScanner><color=green>Ore Scanner</color></link>, <link=ThingCartridgeElectronicReader><color=green>eReader</color></link>, and various other cartridges.\n\t  \n\t  With a <link=ThingItemIntegratedCircuit10><color=green>Integrated Circuit (IC10)</color></link> in the <link=SlotProgrammableChip><color=orange>Programmable Chip</color></link>, you can access variable slots on the carrying human using the device numbers (d0, d1, etc...), so long as the item can be access via logic, such as the <link=ThingItemHardSuit><color=green>Hardsuit</color></link>.Connects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
        "name": "Advanced Tablet"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "On": "ReadWrite",
          "Volume": "ReadWrite",
          "SoundAlert": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Mode0",
          "1": "Mode1"
        },
        "transmission_receiver": false,
        "wireless_logic": true,
        "circuit_holder": true
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Cartridge",
          "typ": "Cartridge"
        },
        {
          "name": "Cartridge1",
          "typ": "Cartridge"
        },
        {
          "name": "Programmable Chip",
          "typ": "ProgrammableChip"
        }
      ]
    },
    "ItemAlienMushroom": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemAlienMushroom",
        "prefab_hash": 176446172,
        "desc": "",
        "name": "Alien Mushroom"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Default"
      }
    },
    "ItemAmmoBox": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemAmmoBox",
        "prefab_hash": -9559091,
        "desc": "",
        "name": "Ammo Box"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemAngleGrinder": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemAngleGrinder",
        "prefab_hash": 201215010,
        "desc": "Angles-be-gone with the trusty angle grinder.",
        "name": "Angle Grinder"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemArcWelder": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemArcWelder",
        "prefab_hash": 1385062886,
        "desc": "",
        "name": "Arc Welder"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemAreaPowerControl": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemAreaPowerControl",
        "prefab_hash": 1757673317,
        "desc": "This kit places a <link=ThingStructureAreaPowerControl><color=green>Area Power Control</color></link> (APC) on any support structure. The APC kit has two options, selecting which direction you would like the APC power to flow.",
        "name": "Kit (Power Controller)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemAstroloyIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemAstroloyIngot",
        "prefab_hash": 412924554,
        "desc": "Due to the original Stationeer manual collapsing into a singularity, Astroloy recipes have been warped by spacetime contortions. The correct Astroloy recipe, as memorialized for all time in a series of charming plastic icons, is 1.0 Copper, 1.0 Cobalt, and 2.0 Steel.",
        "name": "Ingot (Astroloy)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Astroloy": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemAstroloySheets": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemAstroloySheets",
        "prefab_hash": -1662476145,
        "desc": "",
        "name": "Astroloy Sheets"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemAuthoringTool": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemAuthoringTool",
        "prefab_hash": 789015045,
        "desc": "",
        "name": "Authoring Tool"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemAuthoringToolRocketNetwork": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemAuthoringToolRocketNetwork",
        "prefab_hash": -1731627004,
        "desc": "<N:EN:ItemAuthoringToolRocketNetwork>",
        "name": "<N:EN:ItemAuthoringToolRocketNetwork>"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemBasketBall": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemBasketBall",
        "prefab_hash": -1262580790,
        "desc": "",
        "name": "Basket Ball"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemBatteryCell": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemBatteryCell",
        "prefab_hash": 700133157,
        "desc": "Harnessing a design pioneered in the early 21st century, the small battery cell is the <link=Stationeers><color=#0080FFFF>Stationeer's</color></link> basic unit of portable electrical power. While it lacks the charge of a <link=ThingItemBatteryCellLarge><color=green>Battery Cell (Large)</color></link> or <link=ThingItemBatteryCellNuclear><color=green>Battery Cell (Nuclear)</color></link>, it has the humble advantage of being fabricated from basic resources.\n\n<size=120%><b>POWER OUTPUT</b></size>\nThe small cell stores up to 36000 watts of power.",
        "name": "Battery Cell (Small)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Battery",
        "sorting_class": "Default"
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Mode": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Empty",
          "1": "Critical",
          "2": "VeryLow",
          "3": "Low",
          "4": "Medium",
          "5": "High",
          "6": "Full"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": []
    },
    "ItemBatteryCellLarge": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemBatteryCellLarge",
        "prefab_hash": -459827268,
        "desc": "First mass-produced by <link=Xigo><color=#0080FFFF>Xigo</color></link> in 2155 on the basis of a unattributed prototype, the classic silicon anode solid-state design extends its optimum temperature range.\n\n<size=120%><b>POWER OUTPUT</b></size>\nThe large power cell can discharge 288kW of power. \n",
        "name": "Battery Cell (Large)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Battery",
        "sorting_class": "Default"
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Mode": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Empty",
          "1": "Critical",
          "2": "VeryLow",
          "3": "Low",
          "4": "Medium",
          "5": "High",
          "6": "Full"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": []
    },
    "ItemBatteryCellNuclear": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemBatteryCellNuclear",
        "prefab_hash": 544617306,
        "desc": "Illegal on Earth since the Chengdu Event, Norsec nuclear power cells found a new and drastically less safety-conscious market offworld.\n\n<size=120%><b>POWER OUTPUT</b></size>\nPushing the power-weight balance to its limits, the 'nuke' has a 2.3 megawatt charge (2304000W), reflecting its reliance on exotic <link=IngotPage><color=#0080FFFF>superalloys</color></link>.",
        "name": "Battery Cell (Nuclear)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Battery",
        "sorting_class": "Default"
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Mode": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Empty",
          "1": "Critical",
          "2": "VeryLow",
          "3": "Low",
          "4": "Medium",
          "5": "High",
          "6": "Full"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": []
    },
    "ItemBatteryCharger": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemBatteryCharger",
        "prefab_hash": -1866880307,
        "desc": "This kit produces a 5-slot <link=ThingItemBatteryCharger><color=green>Kit (Battery Charger)</color></link>.",
        "name": "Kit (Battery Charger)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemBatteryChargerSmall": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemBatteryChargerSmall",
        "prefab_hash": 1008295833,
        "desc": "",
        "name": "Battery Charger Small"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemBeacon": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemBeacon",
        "prefab_hash": -869869491,
        "desc": "",
        "name": "Tracking Beacon"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemBiomass": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemBiomass",
        "prefab_hash": -831480639,
        "desc": "Diced organic material that is returned when food and organic matter is passed through the <link=ThingStructureRecycler><color=green>Recycler</color></link> and <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link>. Can be burned in a <link=ThingStructureFurnace><color=green>Furnace</color></link> into <link=ThingItemCharcoal><color=green>Charcoal</color></link> for use in the <link=ThingStructureSolidFuelGenerator><color=green>Generator (Solid Fuel)</color></link>.",
        "name": "Biomass"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 100,
        "reagents": {
          "Biomass": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Resources"
      }
    },
    "ItemBreadLoaf": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemBreadLoaf",
        "prefab_hash": 893514943,
        "desc": "",
        "name": "Bread Loaf"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCableAnalyser": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCableAnalyser",
        "prefab_hash": -1792787349,
        "desc": "",
        "name": "Kit (Cable Analyzer)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemCableCoil": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCableCoil",
        "prefab_hash": -466050668,
        "desc": "Bodily metaphors are tired and anthropocentric, but it was Frida Stuppen, the first <link=ODA><color=#0080FFFF>ODA</color></link> Administrator, who said, 'Let the cabling be as the nerve and the vessel, transmitting power and data alike through systems we forge among the stars.' Later commentators suggested that she was simply putting a romantic gloss on a piece of dubious economy. Whatever the case, standard cabling is where any <link=Stationeers><color=#0080FFFF>Stationeer's</color></link> network begins. \nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
        "name": "Cable Coil"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Tool",
        "sorting_class": "Resources"
      }
    },
    "ItemCableCoilHeavy": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCableCoilHeavy",
        "prefab_hash": 2060134443,
        "desc": "Use heavy cable coil for power systems with large draws. Unlike <link=ThingStructureCableCoil><color=green><N:EN:StructureCableCoil></color></link>, which can only safely conduct 5kW, heavy cables can transmit up to 100kW.",
        "name": "Cable Coil (Heavy)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Tool",
        "sorting_class": "Resources"
      }
    },
    "ItemCableFuse": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCableFuse",
        "prefab_hash": 195442047,
        "desc": "",
        "name": "Kit (Cable Fuses)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemCannedCondensedMilk": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCannedCondensedMilk",
        "prefab_hash": -2104175091,
        "desc": "Made in an <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link> or <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link>, using <link=ThingItemCookedCondensedMilk><color=green>Condensed Milk</color></link> and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link>, canned condensed milk is fairly high in nutrition, and does not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
        "name": "Canned Condensed Milk"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCannedEdamame": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCannedEdamame",
        "prefab_hash": -999714082,
        "desc": "Made in an <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link> or <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link>, using <link=ThingItemCookedSoybean><color=green>Cooked Soybean</color></link> and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link>, canned edamame beans are fairly high in nutrition, and do not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
        "name": "Canned Edamame"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCannedMushroom": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCannedMushroom",
        "prefab_hash": -1344601965,
        "desc": "Made in an <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link> or <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link>, using <link=ThingItemCookedMushroom><color=green>Cooked Mushroom</color></link>  and a <link=ThingItemEmptyCan><color=green>Empty Can</color></link>, delicious mushroom soup is fairly high in nutrition, and does not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
        "name": "Canned Mushroom"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCannedPowderedEggs": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCannedPowderedEggs",
        "prefab_hash": 1161510063,
        "desc": "Made in an <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link> or <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link>, using <link=ThingItemCookedPowderedEggs><color=green>Powdered Eggs</color></link>  and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link>, canned powdered eggs are an exciting, dynamic food that's fairly high in nutrition, and does not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
        "name": "Canned Powdered Eggs"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCannedRicePudding": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCannedRicePudding",
        "prefab_hash": -1185552595,
        "desc": "Made in an <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link> or <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link>, using <link=ThingItemCookedRice><color=green>Cooked Rice</color></link> and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link>, canned rice pudding is a sweet treat, fairly high in nutrition, and does not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
        "name": "Canned Rice Pudding"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCerealBar": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCerealBar",
        "prefab_hash": 791746840,
        "desc": "Sustains, without decay. If only all our relationships were so well balanced.",
        "name": "Cereal Bar"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCharcoal": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCharcoal",
        "prefab_hash": 252561409,
        "desc": "Charcoal is a lightweight, black carbon residue produced by heating <link=ThingItemBiomass><color=green>Biomass</color></link> in a <link=ThingStructureArcFurnace><color=green>Arc Furnace</color></link>. It contains less energy potential than <link=ThingItemCoalOre><color=green>Ore (Coal)</color></link>, but can be used as a basic fuel source. Charcoal can also be substituted for coal in <link=IngotPage><color=#0080FFFF>alloy</color></link> recipes.",
        "name": "Charcoal"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 200,
        "reagents": {
          "Carbon": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemChemLightBlue": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemChemLightBlue",
        "prefab_hash": -772542081,
        "desc": "A safe and slightly rave-some source of blue light. Snap to activate.",
        "name": "Chem Light (Blue)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemChemLightGreen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemChemLightGreen",
        "prefab_hash": -597479390,
        "desc": "Enliven the dreariest, airless rock with this glowy green light. Snap to activate.",
        "name": "Chem Light (Green)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemChemLightRed": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemChemLightRed",
        "prefab_hash": -525810132,
        "desc": "A red glowstick. Snap to activate. Then reach for the lasers.",
        "name": "Chem Light (Red)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemChemLightWhite": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemChemLightWhite",
        "prefab_hash": 1312166823,
        "desc": "Snap the glowstick to activate a pale radiance that keeps the darkness at bay.",
        "name": "Chem Light (White)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemChemLightYellow": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemChemLightYellow",
        "prefab_hash": 1224819963,
        "desc": "Dispel the darkness with this yellow glowstick.",
        "name": "Chem Light (Yellow)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemChocolateBar": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemChocolateBar",
        "prefab_hash": 234601764,
        "desc": "",
        "name": "Chocolate Bar"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemChocolateCake": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemChocolateCake",
        "prefab_hash": -261575861,
        "desc": "",
        "name": "Chocolate Cake"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemChocolateCerealBar": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemChocolateCerealBar",
        "prefab_hash": 860793245,
        "desc": "",
        "name": "Chocolate Cereal Bar"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCoalOre": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCoalOre",
        "prefab_hash": 1724793494,
        "desc": "Humanity wouldn't have got to space without humble, combustible coal. Burn it in a <link=ThingSolidFuelGenerator><color=green><N:EN:SolidFuelGenerator></color></link>, smelt it in the <link=ThingStructureFurnace><color=green>Furnace</color></link> to create <link=AlloysPage><color=#0080FFFF>alloys</color></link>, or use it in the <link=ThingApplianceReagentProcessor><color=green>Reagent Processor</color></link> to make  <link=ThingItemSprayCanBlack><color=green>Spray Paint (Black)</color></link>.",
        "name": "Ore (Coal)"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 50,
        "reagents": {
          "Hydrocarbon": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemCobaltOre": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCobaltOre",
        "prefab_hash": -983091249,
        "desc": "Cobalt is a chemical element with the symbol \"Co\" and is typically found in only small deposits. Cobalt is a rare substance, but used create the <link=ThingItemHealPill><color=green>Heal Pill</color></link> and several  <link=IngotPage><color=#0080FFFF>alloys</color></link>.",
        "name": "Ore (Cobalt)"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 50,
        "reagents": {
          "Cobalt": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemCocoaPowder": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCocoaPowder",
        "prefab_hash": 457286516,
        "desc": "",
        "name": "Cocoa Powder"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 20,
        "reagents": {
          "Cocoa": 1.0
        },
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemCocoaTree": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCocoaTree",
        "prefab_hash": 680051921,
        "desc": "",
        "name": "Cocoa"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 20,
        "reagents": {
          "Cocoa": 1.0
        },
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemCoffeeMug": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCoffeeMug",
        "prefab_hash": 1800622698,
        "desc": "",
        "name": "Coffee Mug"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemConstantanIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemConstantanIngot",
        "prefab_hash": 1058547521,
        "desc": "",
        "name": "Ingot (Constantan)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Constantan": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemCookedCondensedMilk": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCookedCondensedMilk",
        "prefab_hash": 1715917521,
        "desc": "A high-nutrient cooked food, which can be canned.",
        "name": "Condensed Milk"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 10,
        "reagents": {
          "Milk": 100.0
        },
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCookedCorn": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCookedCorn",
        "prefab_hash": 1344773148,
        "desc": "A high-nutrient cooked food, which can be canned.",
        "name": "Cooked Corn"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 10,
        "reagents": {
          "Corn": 1.0
        },
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCookedMushroom": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCookedMushroom",
        "prefab_hash": -1076892658,
        "desc": "A high-nutrient cooked food, which can be canned.",
        "name": "Cooked Mushroom"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 10,
        "reagents": {
          "Mushroom": 1.0
        },
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCookedPowderedEggs": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCookedPowderedEggs",
        "prefab_hash": -1712264413,
        "desc": "A high-nutrient cooked food, which can be canned.",
        "name": "Powdered Eggs"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 10,
        "reagents": {
          "Egg": 1.0
        },
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCookedPumpkin": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCookedPumpkin",
        "prefab_hash": 1849281546,
        "desc": "A high-nutrient cooked food, which can be canned.",
        "name": "Cooked Pumpkin"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 10,
        "reagents": {
          "Pumpkin": 1.0
        },
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCookedRice": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCookedRice",
        "prefab_hash": 2013539020,
        "desc": "A high-nutrient cooked food, which can be canned.",
        "name": "Cooked Rice"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 10,
        "reagents": {
          "Rice": 1.0
        },
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCookedSoybean": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCookedSoybean",
        "prefab_hash": 1353449022,
        "desc": "A high-nutrient cooked food, which can be canned.",
        "name": "Cooked Soybean"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 10,
        "reagents": {
          "Soy": 5.0
        },
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCookedTomato": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCookedTomato",
        "prefab_hash": -709086714,
        "desc": "A high-nutrient cooked food, which can be canned.",
        "name": "Cooked Tomato"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 10,
        "reagents": {
          "Tomato": 1.0
        },
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCopperIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCopperIngot",
        "prefab_hash": -404336834,
        "desc": "Copper ingots are created by smelting <link=ThingItemCopperOre><color=green>Ore (Copper)</color></link> in the <link=ThingStructureFurnace><color=green>Furnace</color></link> and <link=ThingStructureArcFurnace><color=green>Arc Furnace</color></link>, and used to create a variety of items.",
        "name": "Ingot (Copper)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Copper": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemCopperOre": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCopperOre",
        "prefab_hash": -707307845,
        "desc": "Copper is a chemical element with the symbol \"Cu\". This common and highly conductive material is found on most astronomical bodies and is used in a variety of manufacturing processes including electronic components, alloys, and wires.",
        "name": "Ore (Copper)"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 50,
        "reagents": {
          "Copper": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemCorn": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCorn",
        "prefab_hash": 258339687,
        "desc": "A long growth time staple crop. Its low requirement for darkness allows for accelerated growing if provided with extra light.",
        "name": "Corn"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 20,
        "reagents": {
          "Corn": 1.0
        },
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemCornSoup": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCornSoup",
        "prefab_hash": 545034114,
        "desc": "Made using <link=ThingItemCookedCorn><color=green>Cooked Corn</color></link> and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link> in a <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link> or <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link>. Faily high in nutrition, canned food does not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
        "name": "Corn Soup"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemCreditCard": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCreditCard",
        "prefab_hash": -1756772618,
        "desc": "",
        "name": "Credit Card"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100000,
        "slot_class": "CreditCard",
        "sorting_class": "Tools"
      }
    },
    "ItemCropHay": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCropHay",
        "prefab_hash": 215486157,
        "desc": "",
        "name": "Hay"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemCrowbar": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemCrowbar",
        "prefab_hash": 856108234,
        "desc": "<link=Recurso><color=#0080FFFF>Recurso's</color></link> entry-level crowbar is useful in a variety of everyday <link=Stationeers><color=#0080FFFF>Stationeer</color></link> settings, from opening <link=ThingStructureAreaPowerControl><color=green>Area Power Control</color></link>s and unpowered <link=ThingStructureAirlock><color=green>Airlock</color></link>s, to splatting pan-dimensional headcrabs, should the need arise.",
        "name": "Crowbar"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemDataDisk": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemDataDisk",
        "prefab_hash": 1005843700,
        "desc": "",
        "name": "Data Disk"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "DataDisk",
        "sorting_class": "Default"
      }
    },
    "ItemDirtCanister": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemDirtCanister",
        "prefab_hash": 902565329,
        "desc": "A container the will fill with Dirt when using a <link=ThingItemMiningDrill><color=green>Mining Drill</color></link> when placed inside a <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>. You can then use this <link=SlotDirtCanister><color=orange>Dirt Canister</color></link> with the <link=ThingItemTerrainManipulator><color=green>Terrain Manipulator</color></link> to adjust the terrain to suit your needs.",
        "name": "Dirt Canister"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Ore",
        "sorting_class": "Default"
      }
    },
    "ItemDirtyOre": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemDirtyOre",
        "prefab_hash": -1234745580,
        "desc": "Ore mined from bedrock via the <link=ThingStructureDeepMiner><color=green>Deep Miner</color></link> which then can be used in the <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link>, or <link=ThingStructureCombustionCentrifuge><color=green>Combustion Centrifuge</color></link>. Once processed, it produces ore in a ratio similar to the average found on the planet's surface. ",
        "name": "Dirty Ore"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "None",
        "sorting_class": "Ores"
      }
    },
    "ItemDisposableBatteryCharger": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemDisposableBatteryCharger",
        "prefab_hash": -2124435700,
        "desc": "Consumable battery the recharges your suit battery. If used on a HEM-Droid it will recharge the HEM-Droids internal battery.",
        "name": "Disposable Battery Charger"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemDrill": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemDrill",
        "prefab_hash": 2009673399,
        "desc": "The <link=ExMin><color=#0080FFFF>ExMin</color></link> Off-whirled Hand Drill has been a companion to <link=Stationeers><color=#0080FFFF>Stationeers</color></link> for decades. Essential for assembling and deconstructing various items and structures, regardless of gravity, pressure or temperature.",
        "name": "Hand Drill"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemDuctTape": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemDuctTape",
        "prefab_hash": -1943134693,
        "desc": "In the distant past, one of Earth's great champions taught a generation of 'Fix-It People' that duct tape was the answer to any problem. <link=Stationeers><color=#0080FFFF>Stationeers</color></link> have demonstrated that this is truth holds strong, so long as the problem is a damaged <link=ThingItemEvaSuit><color=green>Eva Suit</color></link>, <link=ThingItemJetpackBasic><color=green>Jetpack Basic</color></link>, <link=ThingItemSpaceHelmet><color=green>Space Helmet</color></link>, or even a <link=ThingStructureSolarPanel><color=green>Solar Panel</color></link>.\nTo use on yourself: put duct tape in your active hand, hold RIGHT MOUSE BUTTON to automatically repair damage.",
        "name": "Duct Tape"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemDynamicAirCon": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemDynamicAirCon",
        "prefab_hash": 1072914031,
        "desc": "",
        "name": "Kit (Portable Air Conditioner)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemDynamicScrubber": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemDynamicScrubber",
        "prefab_hash": -971920158,
        "desc": "",
        "name": "Kit (Portable Scrubber)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemEggCarton": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemEggCarton",
        "prefab_hash": -524289310,
        "desc": "Within, eggs reside in mysterious, marmoreal silence.",
        "name": "Egg Carton"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Storage"
      },
      "slots": [
        {
          "name": "",
          "typ": "Egg"
        },
        {
          "name": "",
          "typ": "Egg"
        },
        {
          "name": "",
          "typ": "Egg"
        },
        {
          "name": "",
          "typ": "Egg"
        },
        {
          "name": "",
          "typ": "Egg"
        },
        {
          "name": "",
          "typ": "Egg"
        }
      ]
    },
    "ItemElectronicParts": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemElectronicParts",
        "prefab_hash": 731250882,
        "desc": "",
        "name": "Electronic Parts"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 20,
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemElectrumIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemElectrumIngot",
        "prefab_hash": 502280180,
        "desc": "",
        "name": "Ingot (Electrum)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Electrum": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemEmergencyAngleGrinder": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemEmergencyAngleGrinder",
        "prefab_hash": -351438780,
        "desc": "",
        "name": "Emergency Angle Grinder"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemEmergencyArcWelder": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemEmergencyArcWelder",
        "prefab_hash": -1056029600,
        "desc": "",
        "name": "Emergency Arc Welder"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemEmergencyCrowbar": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemEmergencyCrowbar",
        "prefab_hash": 976699731,
        "desc": "",
        "name": "Emergency Crowbar"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemEmergencyDrill": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemEmergencyDrill",
        "prefab_hash": -2052458905,
        "desc": "",
        "name": "Emergency Drill"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemEmergencyEvaSuit": {
      "templateType": "ItemSuit",
      "prefab": {
        "prefab_name": "ItemEmergencyEvaSuit",
        "prefab_hash": 1791306431,
        "desc": "",
        "name": "Emergency Eva Suit"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Suit",
        "sorting_class": "Clothing"
      },
      "thermal_info": {
        "convection_factor": 0.2,
        "radiation_factor": 0.2
      },
      "internal_atmo_info": {
        "volume": 10.0
      },
      "slots": [
        {
          "name": "Air Tank",
          "typ": "GasCanister"
        },
        {
          "name": "Waste Tank",
          "typ": "GasCanister"
        },
        {
          "name": "Life Support",
          "typ": "Battery"
        },
        {
          "name": "Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Filter",
          "typ": "GasFilter"
        }
      ],
      "suit_info": {
        "hygine_reduction_multiplier": 1.0,
        "waste_max_pressure": 4053.0
      }
    },
    "ItemEmergencyPickaxe": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemEmergencyPickaxe",
        "prefab_hash": -1061510408,
        "desc": "",
        "name": "Emergency Pickaxe"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemEmergencyScrewdriver": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemEmergencyScrewdriver",
        "prefab_hash": 266099983,
        "desc": "",
        "name": "Emergency Screwdriver"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemEmergencySpaceHelmet": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemEmergencySpaceHelmet",
        "prefab_hash": 205916793,
        "desc": "",
        "name": "Emergency Space Helmet"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Helmet",
        "sorting_class": "Clothing"
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "internal_atmo_info": {
        "volume": 3.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "TotalMoles": "Read",
          "Volume": "ReadWrite",
          "RatioNitrousOxide": "Read",
          "Combustion": "Read",
          "Flush": "Write",
          "SoundAlert": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": []
    },
    "ItemEmergencyToolBelt": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemEmergencyToolBelt",
        "prefab_hash": 1661941301,
        "desc": "",
        "name": "Emergency Tool Belt"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Belt",
        "sorting_class": "Clothing"
      },
      "slots": [
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        }
      ]
    },
    "ItemEmergencyWireCutters": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemEmergencyWireCutters",
        "prefab_hash": 2102803952,
        "desc": "",
        "name": "Emergency Wire Cutters"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemEmergencyWrench": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemEmergencyWrench",
        "prefab_hash": 162553030,
        "desc": "",
        "name": "Emergency Wrench"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemEmptyCan": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemEmptyCan",
        "prefab_hash": 1013818348,
        "desc": "Used for making soups when combined with food in the <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link> or <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link>. Fairly high in nutrition, canned food does not <link=DecayPage><color=#0080FFFF>decay</color></link>.",
        "name": "Empty Can"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 10,
        "reagents": {
          "Steel": 1.0
        },
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemEvaSuit": {
      "templateType": "ItemSuit",
      "prefab": {
        "prefab_name": "ItemEvaSuit",
        "prefab_hash": 1677018918,
        "desc": "The EVA suit is the basic suit <link=Stationeers><color=#0080FFFF>Stationeers</color></link> need to survive in the inhospitable environment of space. For more information on EVA suits, consult the <link=EVAPage><color=#0080FFFF>EVA suit</color></link> guide.",
        "name": "Eva Suit"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Suit",
        "sorting_class": "Clothing"
      },
      "thermal_info": {
        "convection_factor": 0.2,
        "radiation_factor": 0.2
      },
      "internal_atmo_info": {
        "volume": 10.0
      },
      "slots": [
        {
          "name": "Air Tank",
          "typ": "GasCanister"
        },
        {
          "name": "Waste Tank",
          "typ": "GasCanister"
        },
        {
          "name": "Life Support",
          "typ": "Battery"
        },
        {
          "name": "Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Filter",
          "typ": "GasFilter"
        }
      ],
      "suit_info": {
        "hygine_reduction_multiplier": 1.0,
        "waste_max_pressure": 4053.0
      }
    },
    "ItemExplosive": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemExplosive",
        "prefab_hash": 235361649,
        "desc": "",
        "name": "Remote Explosive"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemFern": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFern",
        "prefab_hash": 892110467,
        "desc": "There was a time, when Stationeers had to make <link=ThingReagentFenoxitone><color=green>Fenoxitone Powder</color></link> using the <link=ThingApplianceReagentProcessor><color=green>Reagent Processor</color></link>. Recent advances in technology allow you to use equivalent quantities of fern directly in recipes.",
        "name": "Fern"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 100,
        "reagents": {
          "Fenoxitone": 1.0
        },
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemFertilizedEgg": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFertilizedEgg",
        "prefab_hash": -383972371,
        "desc": "To hatch it requires an incubation temperature of between 35 and 45 degrees Celsius and will hatch into a <link=ThingNpcChick><color=green>Chick</color></link>. If the egg is exposed to tepratures below 10 degrees it will no longer be viable.",
        "name": "Egg"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 1,
        "reagents": {
          "Egg": 1.0
        },
        "slot_class": "Egg",
        "sorting_class": "Resources"
      }
    },
    "ItemFilterFern": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFilterFern",
        "prefab_hash": 266654416,
        "desc": "A fern adapted by <link=Agrizero><color=#0080FFFF>Agrizero</color></link>to process a much greater volume of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> into <link=GasOxygen><color=#44AD83>Oxygen</color></link> than an average plant.",
        "name": "Darga Fern"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemFlagSmall": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFlagSmall",
        "prefab_hash": 2011191088,
        "desc": "",
        "name": "Kit (Small Flag)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemFlashingLight": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFlashingLight",
        "prefab_hash": -2107840748,
        "desc": "",
        "name": "Kit (Flashing Light)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemFlashlight": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemFlashlight",
        "prefab_hash": -838472102,
        "desc": "A flashlight with a narrow and wide beam options.",
        "name": "Flashlight"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Low Power",
          "1": "High Power"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemFlour": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFlour",
        "prefab_hash": -665995854,
        "desc": "Pulverized <link=ThingItemWheat><color=green>Wheat</color></link>, a key ingredient in many foods created by the <link=ThingApplianceMicrowave><color=green>Microwave</color></link> and the <link=ThingItemKitAutomatedOven><color=green>Kit (Automated Oven)</color></link>.",
        "name": "Flour"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Flour": 50.0
        },
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemFlowerBlue": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFlowerBlue",
        "prefab_hash": -1573623434,
        "desc": "",
        "name": "Flower (Blue)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemFlowerGreen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFlowerGreen",
        "prefab_hash": -1513337058,
        "desc": "",
        "name": "Flower (Green)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemFlowerOrange": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFlowerOrange",
        "prefab_hash": -1411986716,
        "desc": "",
        "name": "Flower (Orange)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemFlowerRed": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFlowerRed",
        "prefab_hash": -81376085,
        "desc": "",
        "name": "Flower (Red)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemFlowerYellow": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFlowerYellow",
        "prefab_hash": 1712822019,
        "desc": "",
        "name": "Flower (Yellow)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemFrenchFries": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFrenchFries",
        "prefab_hash": -57608687,
        "desc": "Because space would suck without 'em.",
        "name": "Canned French Fries"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemFries": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemFries",
        "prefab_hash": 1371786091,
        "desc": "",
        "name": "French Fries"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemGasCanisterCarbonDioxide": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasCanisterCarbonDioxide",
        "prefab_hash": -767685874,
        "desc": "",
        "name": "Canister (CO2)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "GasCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "internal_atmo_info": {
        "volume": 64.0
      }
    },
    "ItemGasCanisterEmpty": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasCanisterEmpty",
        "prefab_hash": 42280099,
        "desc": "",
        "name": "Canister"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "GasCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "internal_atmo_info": {
        "volume": 64.0
      }
    },
    "ItemGasCanisterFuel": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasCanisterFuel",
        "prefab_hash": -1014695176,
        "desc": "",
        "name": "Canister (Fuel)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "GasCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "internal_atmo_info": {
        "volume": 64.0
      }
    },
    "ItemGasCanisterNitrogen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasCanisterNitrogen",
        "prefab_hash": 2145068424,
        "desc": "",
        "name": "Canister (Nitrogen)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "GasCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "internal_atmo_info": {
        "volume": 64.0
      }
    },
    "ItemGasCanisterNitrousOxide": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasCanisterNitrousOxide",
        "prefab_hash": -1712153401,
        "desc": "",
        "name": "Gas Canister (Sleeping)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "GasCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "internal_atmo_info": {
        "volume": 64.0
      }
    },
    "ItemGasCanisterOxygen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasCanisterOxygen",
        "prefab_hash": -1152261938,
        "desc": "",
        "name": "Canister (Oxygen)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "GasCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "internal_atmo_info": {
        "volume": 64.0
      }
    },
    "ItemGasCanisterPollutants": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasCanisterPollutants",
        "prefab_hash": -1552586384,
        "desc": "",
        "name": "Canister (Pollutants)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "GasCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "internal_atmo_info": {
        "volume": 64.0
      }
    },
    "ItemGasCanisterSmart": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasCanisterSmart",
        "prefab_hash": -668314371,
        "desc": "0.Mode0\n1.Mode1",
        "name": "Gas Canister (Smart)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "GasCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "internal_atmo_info": {
        "volume": 64.0
      }
    },
    "ItemGasCanisterVolatiles": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasCanisterVolatiles",
        "prefab_hash": -472094806,
        "desc": "",
        "name": "Canister (Volatiles)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "GasCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "internal_atmo_info": {
        "volume": 64.0
      }
    },
    "ItemGasCanisterWater": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasCanisterWater",
        "prefab_hash": -1854861891,
        "desc": "",
        "name": "Liquid Canister (Water)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "LiquidCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "internal_atmo_info": {
        "volume": 12.1
      }
    },
    "ItemGasFilterCarbonDioxide": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterCarbonDioxide",
        "prefab_hash": 1635000764,
        "desc": "Given humanity's obsession with exhaling <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link>, all <link=Stationeers><color=#0080FFFF>Stationeers</color></link> are issued two basic <link=Sinotai><color=#0080FFFF>Sinotai</color></link> <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> <link=SlotGasFilter><color=orange>Gas Filter</color></link> as part of their standard deployment kit (SDK). These filters allow passage of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> into the suit's waste <link=ThingItemGasCanisterEmpty><color=green>Canister</color></link>, but are also critical components of the <link=ThingDynamicScrubber><color=green>Portable Air Scrubber</color></link> and the <link=ThingStructureFiltration><color=green>Filtration</color></link>. The <link=ThingItemGasFilterCarbonDioxideM><color=green>Medium Filter (Carbon Dioxide)</color></link> and <link=ThingItemGasFilterCarbonDioxideL><color=green>Heavy Filter (Carbon Dioxide)</color></link> are also available.",
        "name": "Filter (Carbon Dioxide)"
      },
      "item": {
        "consumable": false,
        "filter_type": "CarbonDioxide",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterCarbonDioxideInfinite": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterCarbonDioxideInfinite",
        "prefab_hash": -185568964,
        "desc": "A filter that selectively targets Carbon Dioxide. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
        "name": "Catalytic Filter (Carbon Dioxide)"
      },
      "item": {
        "consumable": false,
        "filter_type": "CarbonDioxide",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterCarbonDioxideL": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterCarbonDioxideL",
        "prefab_hash": 1876847024,
        "desc": "",
        "name": "Heavy Filter (Carbon Dioxide)"
      },
      "item": {
        "consumable": false,
        "filter_type": "CarbonDioxide",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterCarbonDioxideM": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterCarbonDioxideM",
        "prefab_hash": 416897318,
        "desc": "",
        "name": "Medium Filter (Carbon Dioxide)"
      },
      "item": {
        "consumable": false,
        "filter_type": "CarbonDioxide",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterNitrogen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterNitrogen",
        "prefab_hash": 632853248,
        "desc": "Filters are used to capture various gases, which can be disposed of or used elsewhere. <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> is a byproduct of smelting various ores, notably <link=ThingItemNitrice><color=green>Ice (Nitrice)</color></link>, which may be combined with <link=GasOxygen><color=#44AD83>Oxygen</color></link> to make a breathable - and considerably less flammable - atmosphere.",
        "name": "Filter (Nitrogen)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Nitrogen",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterNitrogenInfinite": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterNitrogenInfinite",
        "prefab_hash": 152751131,
        "desc": "A filter that selectively targets Nitrogen. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
        "name": "Catalytic Filter (Nitrogen)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Nitrogen",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterNitrogenL": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterNitrogenL",
        "prefab_hash": -1387439451,
        "desc": "",
        "name": "Heavy Filter (Nitrogen)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Nitrogen",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterNitrogenM": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterNitrogenM",
        "prefab_hash": -632657357,
        "desc": "",
        "name": "Medium Filter (Nitrogen)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Nitrogen",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterNitrousOxide": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterNitrousOxide",
        "prefab_hash": -1247674305,
        "desc": "",
        "name": "Filter (Nitrous Oxide)"
      },
      "item": {
        "consumable": false,
        "filter_type": "NitrousOxide",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterNitrousOxideInfinite": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterNitrousOxideInfinite",
        "prefab_hash": -123934842,
        "desc": "A filter that selectively targets Nitrous Oxide. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
        "name": "Catalytic Filter (Nitrous Oxide)"
      },
      "item": {
        "consumable": false,
        "filter_type": "NitrousOxide",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterNitrousOxideL": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterNitrousOxideL",
        "prefab_hash": 465267979,
        "desc": "",
        "name": "Heavy Filter (Nitrous Oxide)"
      },
      "item": {
        "consumable": false,
        "filter_type": "NitrousOxide",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterNitrousOxideM": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterNitrousOxideM",
        "prefab_hash": 1824284061,
        "desc": "",
        "name": "Medium Filter (Nitrous Oxide)"
      },
      "item": {
        "consumable": false,
        "filter_type": "NitrousOxide",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterOxygen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterOxygen",
        "prefab_hash": -721824748,
        "desc": "<link=Sinotai><color=#0080FFFF>Sinotai</color></link> have cornered the market in filter design. Their trademarked templates are simple to print and highly efficient at capturing various gases, which can be disposed of or used elsewhere. <link=GasOxygen><color=#44AD83>Oxygen</color></link> is a common byproduct of smelting various ores, but must be filtered of such impurities as <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> using this filter and various devices, such as the <link=ThingItemDynamicScrubber><color=green>Kit (Portable Scrubber)</color></link>.",
        "name": "Filter (Oxygen)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Oxygen",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterOxygenInfinite": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterOxygenInfinite",
        "prefab_hash": -1055451111,
        "desc": "A filter that selectively targets Oxygen. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
        "name": "Catalytic Filter (Oxygen)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Oxygen",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterOxygenL": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterOxygenL",
        "prefab_hash": -1217998945,
        "desc": "",
        "name": "Heavy Filter (Oxygen)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Oxygen",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterOxygenM": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterOxygenM",
        "prefab_hash": -1067319543,
        "desc": "",
        "name": "Medium Filter (Oxygen)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Oxygen",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterPollutants": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterPollutants",
        "prefab_hash": 1915566057,
        "desc": "Filters are used to capture various gases, such as waste emissions from a <link=ThingStructureFurnace><color=green>Furnace</color></link> or <link=ThingStructureArcFurnace><color=green>Arc Furnace</color></link>. Adding <link=Sinotai><color=#0080FFFF>Sinotai</color></link>-designed <link=GasPollutant><color=#44AD83>Pollutant</color></link> filters to a <link=ThingItemDynamicScrubber><color=green>Kit (Portable Scrubber)</color></link> allows you to isolate this gas, then add it to a pipe network and employ its excellent coolant properties in a <link=ThingStructureWallCooler><color=green>Wall Cooler</color></link>. Try not to inhale.",
        "name": "Filter (Pollutant)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Pollutant",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterPollutantsInfinite": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterPollutantsInfinite",
        "prefab_hash": -503738105,
        "desc": "A filter that selectively targets Pollutants. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
        "name": "Catalytic Filter (Pollutants)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Pollutant",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterPollutantsL": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterPollutantsL",
        "prefab_hash": 1959564765,
        "desc": "",
        "name": "Heavy Filter (Pollutants)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Pollutant",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterPollutantsM": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterPollutantsM",
        "prefab_hash": 63677771,
        "desc": "",
        "name": "Medium Filter (Pollutants)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Pollutant",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterVolatiles": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterVolatiles",
        "prefab_hash": 15011598,
        "desc": "Filters are used to capture various gases, which can be disposed of or used elsewhere. <link=GasVolatiles><color=#44AD83>Volatiles</color></link> are created by exposing <link=ThingItemVolatiles><color=green>Ice (Volatiles)</color></link> to heat. The product can then be collected and combined with <link=GasOxygen><color=#44AD83>Oxygen</color></link> to create fuel, or used within a <link=ThingStructureFurnace><color=green>Furnace</color></link> to smelt ores and create <link=IngotPage><color=#0080FFFF>alloys</color></link>.",
        "name": "Filter (Volatiles)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Volatiles",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterVolatilesInfinite": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterVolatilesInfinite",
        "prefab_hash": -1916176068,
        "desc": "A filter that selectively targets <link=GasVolatiles><color=#44AD83>Volatiles</color></link>. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
        "name": "Catalytic Filter (Volatiles)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Volatiles",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterVolatilesL": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterVolatilesL",
        "prefab_hash": 1255156286,
        "desc": "",
        "name": "Heavy Filter (Volatiles)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Volatiles",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterVolatilesM": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterVolatilesM",
        "prefab_hash": 1037507240,
        "desc": "",
        "name": "Medium Filter (Volatiles)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Volatiles",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterWater": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterWater",
        "prefab_hash": -1993197973,
        "desc": "<link=Sinotai><color=#0080FFFF>Sinotai</color></link> filters are used to capture various gases, which can be disposed of, or used elsewhere. <link=GasWater><color=#44AD83>Water</color></link> can be collected by filtering smelted <link=ThingItemIce><color=green>Ice (Water)</color></link>",
        "name": "Filter (Water)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Steam",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterWaterInfinite": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterWaterInfinite",
        "prefab_hash": -1678456554,
        "desc": "A filter that selectively targets Water. It uses internal pressure differentials to regenerate a unique phase change catalyst, giving it an unlimited lifecycle.",
        "name": "Catalytic Filter (Water)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Steam",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterWaterL": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterWaterL",
        "prefab_hash": 2004969680,
        "desc": "",
        "name": "Heavy Filter (Water)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Steam",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasFilterWaterM": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasFilterWaterM",
        "prefab_hash": 8804422,
        "desc": "",
        "name": "Medium Filter (Water)"
      },
      "item": {
        "consumable": false,
        "filter_type": "Steam",
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "GasFilter",
        "sorting_class": "Resources"
      }
    },
    "ItemGasSensor": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasSensor",
        "prefab_hash": 1717593480,
        "desc": "",
        "name": "Kit (Gas Sensor)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemGasTankStorage": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGasTankStorage",
        "prefab_hash": -2113012215,
        "desc": "This kit produces a <link=ThingItemGasTankStorage><color=green>Kit (Canister Storage)</color></link> for refilling a <link=ThingItemGasCanisterEmpty><color=green>Canister</color></link>.",
        "name": "Kit (Canister Storage)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemGlassSheets": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGlassSheets",
        "prefab_hash": 1588896491,
        "desc": "A fundamental construction component, glass sheets are created from <link=ReagentSilicon><color=#B566FF>Silicon</color></link>. Fabricated on the <link=ThingStructureAutolathe><color=green>Autolathe</color></link>, they are used to make {THING:StructureSolarPanel;Solar Panels}, <link=ThingStructureAirlock;Airlocks><color=green><N:EN:StructureAirlock;Airlocks></color></link> and many other structures.",
        "name": "Glass Sheets"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemGlasses": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGlasses",
        "prefab_hash": -1068925231,
        "desc": "",
        "name": "Glasses"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Glasses",
        "sorting_class": "Clothing"
      }
    },
    "ItemGoldIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGoldIngot",
        "prefab_hash": 226410516,
        "desc": "There is an enduring paradox at the heart of the <link=Stationeers><color=#0080FFFF>Stationeers</color></link> project: An initiative conceived as 'cut-price space exploration' uses <link=ReagentGold><color=#B566FF>Gold</color></link> as a fundamental ingredient in fabricating so much of its equipment and materiel. ",
        "name": "Ingot (Gold)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Gold": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemGoldOre": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGoldOre",
        "prefab_hash": -1348105509,
        "desc": "Surprisingly common throughout the Solar System, <link=ReagentGold><color=#B566FF>Gold</color></link> is thought to originate in the heart of supernovas, gathering as dust in the early stages of solar formation, then incorporating into the slowly accreting planetary bodies. Now a prized element in <link=Stationeers><color=#0080FFFF>Stationeer</color></link> construction, <link=ReagentGold><color=#B566FF>Gold</color></link> is valued not for its beauty, but its reliability: inert, durable, conductive and highly stable, gold's strength is that it does nothing.",
        "name": "Ore (Gold)"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 50,
        "reagents": {
          "Gold": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemGrenade": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemGrenade",
        "prefab_hash": 1544275894,
        "desc": "Invented by the Romans, who threw Greek Fire at their enemies in ceramic jars, the word 'grenade' is derived from the Old French word for 'pomegranate', as many modern grenades resemble this round, many-seeded fruit. Also like many grenades before it, this one goes boom and breaks stuff.",
        "name": "Hand Grenade"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemHEMDroidRepairKit": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemHEMDroidRepairKit",
        "prefab_hash": 470636008,
        "desc": "Repairs damaged HEM-Droids to full health.",
        "name": "HEMDroid Repair Kit"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemHardBackpack": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemHardBackpack",
        "prefab_hash": 374891127,
        "desc": "This backpack can be useful when you are working inside and don't need to fly around.",
        "name": "Hardsuit Backpack"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Back",
        "sorting_class": "Clothing"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "ItemHardJetpack": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemHardJetpack",
        "prefab_hash": -412551656,
        "desc": "The <link=Norsec><color=#0080FFFF>Norsec</color></link> jetpack isn't 'technically' a jetpack at all, it's a gas thruster. It can be powered by any gas, so long as the internal pressure of the <link=AtmosphericsPage><color=#0080FFFF>canister</color></link> is higher than the ambient external pressure. If the external pressure is greater, the spacepack will not function. Adjusting the thrust value alters your rate of acceleration, while activating the stablizer causes the spacepack to hover when a given height is reached.\nThe hardsuit jetpack is capable of much higher speeds than the <link=ThingItemJetpackBasic><color=green>Jetpack Basic</color></link> - up to 15m/s. Indispensable for building, mining and general movement, it has fourteen storage slots.\nUSE: 'J' to activate; 'space' to fly up; 'left ctrl' to descend; and 'WASD' to move.",
        "name": "Hardsuit Jetpack"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Back",
        "sorting_class": "Clothing"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Propellant",
          "typ": "GasCanister"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "ItemHardMiningBackPack": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemHardMiningBackPack",
        "prefab_hash": 900366130,
        "desc": "",
        "name": "Hard Mining Backpack"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Back",
        "sorting_class": "Clothing"
      },
      "slots": [
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        }
      ]
    },
    "ItemHardSuit": {
      "templateType": "ItemSuitCircuitHolder",
      "prefab": {
        "prefab_name": "ItemHardSuit",
        "prefab_hash": -1758310454,
        "desc": "Connects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
        "name": "Hardsuit"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Suit",
        "sorting_class": "Clothing"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "internal_atmo_info": {
        "volume": 10.0
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "PressureExternal": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "TotalMoles": "Read",
          "Volume": "ReadWrite",
          "PressureSetting": "ReadWrite",
          "TemperatureSetting": "ReadWrite",
          "TemperatureExternal": "Read",
          "Filtration": "ReadWrite",
          "AirRelease": "ReadWrite",
          "PositionX": "Read",
          "PositionY": "Read",
          "PositionZ": "Read",
          "VelocityMagnitude": "Read",
          "VelocityRelativeX": "Read",
          "VelocityRelativeY": "Read",
          "VelocityRelativeZ": "Read",
          "RatioNitrousOxide": "Read",
          "Combustion": "Read",
          "SoundAlert": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "ForwardX": "Read",
          "ForwardY": "Read",
          "ForwardZ": "Read",
          "Orientation": "Read",
          "VelocityX": "Read",
          "VelocityY": "Read",
          "VelocityZ": "Read",
          "EntityState": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": true,
        "circuit_holder": true
      },
      "slots": [
        {
          "name": "Air Tank",
          "typ": "GasCanister"
        },
        {
          "name": "Waste Tank",
          "typ": "GasCanister"
        },
        {
          "name": "Life Support",
          "typ": "Battery"
        },
        {
          "name": "Programmable Chip",
          "typ": "ProgrammableChip"
        },
        {
          "name": "Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Filter",
          "typ": "GasFilter"
        }
      ],
      "suit_info": {
        "hygine_reduction_multiplier": 1.5,
        "waste_max_pressure": 4053.0
      },
      "memory": {
        "memory_access": "ReadWrite",
        "memory_size": 0
      }
    },
    "ItemHardsuitHelmet": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemHardsuitHelmet",
        "prefab_hash": -84573099,
        "desc": "The Hardsuit Helmet is similar to the <link=ThingItemSpaceHelmet><color=green>Space Helmet</color></link>, but can withstand higher temperatures and pressures. It's perfect for enduring harsh environments like Venus and Vulcan.",
        "name": "Hardsuit Helmet"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Helmet",
        "sorting_class": "Clothing"
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "internal_atmo_info": {
        "volume": 3.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "TotalMoles": "Read",
          "Volume": "ReadWrite",
          "RatioNitrousOxide": "Read",
          "Combustion": "Read",
          "Flush": "Write",
          "SoundAlert": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": []
    },
    "ItemHastelloyIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemHastelloyIngot",
        "prefab_hash": 1579842814,
        "desc": "",
        "name": "Ingot (Hastelloy)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Hastelloy": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemHat": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemHat",
        "prefab_hash": 299189339,
        "desc": "As the name suggests, this is a hat.",
        "name": "Hat"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Helmet",
        "sorting_class": "Clothing"
      }
    },
    "ItemHighVolumeGasCanisterEmpty": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemHighVolumeGasCanisterEmpty",
        "prefab_hash": 998653377,
        "desc": "",
        "name": "High Volume Gas Canister"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "GasCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "internal_atmo_info": {
        "volume": 83.0
      }
    },
    "ItemHorticultureBelt": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemHorticultureBelt",
        "prefab_hash": -1117581553,
        "desc": "",
        "name": "Horticulture Belt"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Belt",
        "sorting_class": "Clothing"
      },
      "slots": [
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        }
      ]
    },
    "ItemHydroponicTray": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemHydroponicTray",
        "prefab_hash": -1193543727,
        "desc": "This kits creates a <link=ThingStructureHydroponicsTray><color=green>Hydroponics Tray</color></link> for growing various plants.",
        "name": "Kit (Hydroponic Tray)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemIce": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemIce",
        "prefab_hash": 1217489948,
        "desc": "Water ice can be found on most planets in the Solar System, though not all worlds visited by <link=Stationeers><color=#0080FFFF>Stationeers</color></link> possess this resource. Highly sensitive to temperature, ice will begin to melt as soon as it is mined, unless kept in the <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>. When melting, ice produces a mixture of <link=GasSteam><color=#44AD83>Steam</color></link> and <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> gas.",
        "name": "Ice (Water)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemIgniter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemIgniter",
        "prefab_hash": 890106742,
        "desc": "This kit creates an <link=ThingItemIgniter><color=green>Kit (Igniter)</color></link> unit.",
        "name": "Kit (Igniter)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemInconelIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemInconelIngot",
        "prefab_hash": -787796599,
        "desc": "",
        "name": "Ingot (Inconel)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Inconel": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemInsulation": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemInsulation",
        "prefab_hash": 897176943,
        "desc": "Mysterious in the extreme, the function of this item is lost to the ages.",
        "name": "Insulation"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemIntegratedCircuit10": {
      "templateType": "ItemLogicMemory",
      "prefab": {
        "prefab_name": "ItemIntegratedCircuit10",
        "prefab_hash": -744098481,
        "desc": "",
        "name": "Integrated Circuit (IC10)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "ProgrammableChip",
        "sorting_class": "Default"
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "LineNumber": "Read",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "memory": {
        "memory_access": "ReadWrite",
        "memory_size": 512
      }
    },
    "ItemInvarIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemInvarIngot",
        "prefab_hash": -297990285,
        "desc": "",
        "name": "Ingot (Invar)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Invar": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemIronFrames": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemIronFrames",
        "prefab_hash": 1225836666,
        "desc": "",
        "name": "Iron Frames"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 30,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemIronIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemIronIngot",
        "prefab_hash": -1301215609,
        "desc": "The most basic unit of construction available to <link=Stationeers><color=#0080FFFF>Stationeer</color></link>-kind, iron ingots are created by smelting <link=ThingItemIronOre><color=green>Ore (Iron)</color></link> in the <link=ThingStructureFurnace><color=green>Furnace</color></link> and <link=ThingStructureArcFurnace><color=green>Arc Furnace</color></link>, and used to create a variety of items.",
        "name": "Ingot (Iron)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Iron": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemIronOre": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemIronOre",
        "prefab_hash": 1758427767,
        "desc": "Abundant throughout the Solar System, iron is the <link=OrePage><color=#0080FFFF>ore</color></link> most commonly used by <link=Stationeers><color=#0080FFFF>Stationeers</color></link> constructing offworld bases. It can be smelted into both <link=ThingItemIronIngot><color=green>Ingot (Iron)</color></link>s and <link=ThingItemSteelIngot><color=green>Ingot (Steel)</color></link>s.",
        "name": "Ore (Iron)"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 50,
        "reagents": {
          "Iron": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemIronSheets": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemIronSheets",
        "prefab_hash": -487378546,
        "desc": "",
        "name": "Iron Sheets"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemJetpackBasic": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemJetpackBasic",
        "prefab_hash": 1969189000,
        "desc": "The basic <link=CHAC><color=#0080FFFF>CHAC</color></link> jetpack isn't 'technically' a jetpack, it's a gas thruster. It can be powered by any gas, so long as the internal pressure of the <link=AtmosphericsPage><color=#0080FFFF>canister</color></link> is higher than the ambient external pressure. If the external pressure is greater, the spacepack will not function.\nIndispensable for building, mining and general movement, it has ten storage slots and lets <link=Stationeers><color=#0080FFFF>Stationeers</color></link> fly at 3m/s, compared to the more powerful <link=ThingItemHardJetpack><color=green>Hardsuit Jetpack</color></link>. Adjusting the thrust value alters your rate of acceleration, while activating the stabilizer causes the spacepack to hover when a given height is reached.\nUSE: 'J' to activate; 'space' to fly up; 'left ctrl' to descend; and 'WASD' to move.",
        "name": "Jetpack Basic"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Back",
        "sorting_class": "Clothing"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Propellant",
          "typ": "GasCanister"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "ItemKitAIMeE": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitAIMeE",
        "prefab_hash": 496830914,
        "desc": "",
        "name": "Kit (AIMeE)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitAccessBridge": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitAccessBridge",
        "prefab_hash": 513258369,
        "desc": "",
        "name": "Kit (Access Bridge)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitAdvancedComposter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitAdvancedComposter",
        "prefab_hash": -1431998347,
        "desc": "",
        "name": "Kit (Advanced Composter)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitAdvancedFurnace": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitAdvancedFurnace",
        "prefab_hash": -616758353,
        "desc": "",
        "name": "Kit (Advanced Furnace)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitAdvancedPackagingMachine": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitAdvancedPackagingMachine",
        "prefab_hash": -598545233,
        "desc": "",
        "name": "Kit (Advanced Packaging Machine)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitAirlock": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitAirlock",
        "prefab_hash": 964043875,
        "desc": "",
        "name": "Kit (Airlock)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitAirlockGate": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitAirlockGate",
        "prefab_hash": 682546947,
        "desc": "",
        "name": "Kit (Hangar Door)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitArcFurnace": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitArcFurnace",
        "prefab_hash": -98995857,
        "desc": "",
        "name": "Kit (Arc Furnace)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitAtmospherics": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitAtmospherics",
        "prefab_hash": 1222286371,
        "desc": "",
        "name": "Kit (Atmospherics)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitAutoMinerSmall": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitAutoMinerSmall",
        "prefab_hash": 1668815415,
        "desc": "",
        "name": "Kit (Autominer Small)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitAutolathe": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitAutolathe",
        "prefab_hash": -1753893214,
        "desc": "",
        "name": "Kit (Autolathe)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitAutomatedOven": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitAutomatedOven",
        "prefab_hash": -1931958659,
        "desc": "",
        "name": "Kit (Automated Oven)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitBasket": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitBasket",
        "prefab_hash": 148305004,
        "desc": "",
        "name": "Kit (Basket)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitBattery": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitBattery",
        "prefab_hash": 1406656973,
        "desc": "",
        "name": "Kit (Battery)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitBatteryLarge": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitBatteryLarge",
        "prefab_hash": -21225041,
        "desc": "",
        "name": "Kit (Battery Large)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitBeacon": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitBeacon",
        "prefab_hash": 249073136,
        "desc": "",
        "name": "Kit (Beacon)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitBeds": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitBeds",
        "prefab_hash": -1241256797,
        "desc": "",
        "name": "Kit (Beds)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitBlastDoor": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitBlastDoor",
        "prefab_hash": -1755116240,
        "desc": "",
        "name": "Kit (Blast Door)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitCentrifuge": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitCentrifuge",
        "prefab_hash": 578182956,
        "desc": "",
        "name": "Kit (Centrifuge)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitChairs": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitChairs",
        "prefab_hash": -1394008073,
        "desc": "",
        "name": "Kit (Chairs)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitChute": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitChute",
        "prefab_hash": 1025254665,
        "desc": "",
        "name": "Kit (Basic Chutes)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitChuteUmbilical": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitChuteUmbilical",
        "prefab_hash": -876560854,
        "desc": "",
        "name": "Kit (Chute Umbilical)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitCompositeCladding": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitCompositeCladding",
        "prefab_hash": -1470820996,
        "desc": "",
        "name": "Kit (Cladding)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitCompositeFloorGrating": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitCompositeFloorGrating",
        "prefab_hash": 1182412869,
        "desc": "",
        "name": "Kit (Floor Grating)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitComputer": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitComputer",
        "prefab_hash": 1990225489,
        "desc": "",
        "name": "Kit (Computer)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitConsole": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitConsole",
        "prefab_hash": -1241851179,
        "desc": "",
        "name": "Kit (Consoles)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitCrate": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitCrate",
        "prefab_hash": 429365598,
        "desc": "",
        "name": "Kit (Crate)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitCrateMkII": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitCrateMkII",
        "prefab_hash": -1585956426,
        "desc": "",
        "name": "Kit (Crate Mk II)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitCrateMount": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitCrateMount",
        "prefab_hash": -551612946,
        "desc": "",
        "name": "Kit (Container Mount)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitCryoTube": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitCryoTube",
        "prefab_hash": -545234195,
        "desc": "",
        "name": "Kit (Cryo Tube)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitDeepMiner": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitDeepMiner",
        "prefab_hash": -1935075707,
        "desc": "",
        "name": "Kit (Deep Miner)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitDockingPort": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitDockingPort",
        "prefab_hash": 77421200,
        "desc": "",
        "name": "Kit (Docking Port)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitDoor": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitDoor",
        "prefab_hash": 168615924,
        "desc": "",
        "name": "Kit (Door)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitDrinkingFountain": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitDrinkingFountain",
        "prefab_hash": -1743663875,
        "desc": "",
        "name": "Kit (Drinking Fountain)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitDynamicCanister": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitDynamicCanister",
        "prefab_hash": -1061945368,
        "desc": "",
        "name": "Kit (Portable Gas Tank)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitDynamicGasTankAdvanced": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitDynamicGasTankAdvanced",
        "prefab_hash": 1533501495,
        "desc": "",
        "name": "Kit (Portable Gas Tank Mk II)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitDynamicGenerator": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitDynamicGenerator",
        "prefab_hash": -732720413,
        "desc": "",
        "name": "Kit (Portable Generator)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitDynamicHydroponics": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitDynamicHydroponics",
        "prefab_hash": -1861154222,
        "desc": "",
        "name": "Kit (Portable Hydroponics)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitDynamicLiquidCanister": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitDynamicLiquidCanister",
        "prefab_hash": 375541286,
        "desc": "",
        "name": "Kit (Portable Liquid Tank)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitDynamicMKIILiquidCanister": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitDynamicMKIILiquidCanister",
        "prefab_hash": -638019974,
        "desc": "",
        "name": "Kit (Portable Liquid Tank Mk II)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitElectricUmbilical": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitElectricUmbilical",
        "prefab_hash": 1603046970,
        "desc": "",
        "name": "Kit (Power Umbilical)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitElectronicsPrinter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitElectronicsPrinter",
        "prefab_hash": -1181922382,
        "desc": "",
        "name": "Kit (Electronics Printer)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitElevator": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitElevator",
        "prefab_hash": -945806652,
        "desc": "",
        "name": "Kit (Elevator)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitEngineLarge": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitEngineLarge",
        "prefab_hash": 755302726,
        "desc": "",
        "name": "Kit (Engine Large)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitEngineMedium": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitEngineMedium",
        "prefab_hash": 1969312177,
        "desc": "",
        "name": "Kit (Engine Medium)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitEngineSmall": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitEngineSmall",
        "prefab_hash": 19645163,
        "desc": "",
        "name": "Kit (Engine Small)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitEvaporationChamber": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitEvaporationChamber",
        "prefab_hash": 1587787610,
        "desc": "",
        "name": "Kit (Phase Change Device)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitFlagODA": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitFlagODA",
        "prefab_hash": 1701764190,
        "desc": "",
        "name": "Kit (ODA Flag)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitFridgeBig": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitFridgeBig",
        "prefab_hash": -1168199498,
        "desc": "",
        "name": "Kit (Fridge Large)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitFridgeSmall": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitFridgeSmall",
        "prefab_hash": 1661226524,
        "desc": "",
        "name": "Kit (Fridge Small)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitFurnace": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitFurnace",
        "prefab_hash": -806743925,
        "desc": "",
        "name": "Kit (Furnace)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitFurniture": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitFurniture",
        "prefab_hash": 1162905029,
        "desc": "",
        "name": "Kit (Furniture)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitFuselage": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitFuselage",
        "prefab_hash": -366262681,
        "desc": "",
        "name": "Kit (Fuselage)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitGasGenerator": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitGasGenerator",
        "prefab_hash": 377745425,
        "desc": "",
        "name": "Kit (Gas Fuel Generator)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitGasUmbilical": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitGasUmbilical",
        "prefab_hash": -1867280568,
        "desc": "",
        "name": "Kit (Gas Umbilical)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitGovernedGasRocketEngine": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitGovernedGasRocketEngine",
        "prefab_hash": 206848766,
        "desc": "",
        "name": "Kit (Pumped Gas Rocket Engine)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitGroundTelescope": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitGroundTelescope",
        "prefab_hash": -2140672772,
        "desc": "",
        "name": "Kit (Telescope)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitGrowLight": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitGrowLight",
        "prefab_hash": 341030083,
        "desc": "",
        "name": "Kit (Grow Light)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitHarvie": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitHarvie",
        "prefab_hash": -1022693454,
        "desc": "",
        "name": "Kit (Harvie)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitHeatExchanger": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitHeatExchanger",
        "prefab_hash": -1710540039,
        "desc": "",
        "name": "Kit Heat Exchanger"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitHorizontalAutoMiner": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitHorizontalAutoMiner",
        "prefab_hash": 844391171,
        "desc": "",
        "name": "Kit (OGRE)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitHydraulicPipeBender": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitHydraulicPipeBender",
        "prefab_hash": -2098556089,
        "desc": "",
        "name": "Kit (Hydraulic Pipe Bender)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitHydroponicAutomated": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitHydroponicAutomated",
        "prefab_hash": -927931558,
        "desc": "",
        "name": "Kit (Automated Hydroponics)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitHydroponicStation": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitHydroponicStation",
        "prefab_hash": 2057179799,
        "desc": "",
        "name": "Kit (Hydroponic Station)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitIceCrusher": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitIceCrusher",
        "prefab_hash": 288111533,
        "desc": "",
        "name": "Kit (Ice Crusher)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitInsulatedLiquidPipe": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitInsulatedLiquidPipe",
        "prefab_hash": 2067655311,
        "desc": "",
        "name": "Kit (Insulated Liquid Pipe)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 20,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitInsulatedPipe": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitInsulatedPipe",
        "prefab_hash": 452636699,
        "desc": "",
        "name": "Kit (Insulated Pipe)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 20,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitInsulatedPipeUtility": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitInsulatedPipeUtility",
        "prefab_hash": -27284803,
        "desc": "",
        "name": "Kit (Insulated Pipe Utility Gas)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitInsulatedPipeUtilityLiquid": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitInsulatedPipeUtilityLiquid",
        "prefab_hash": -1831558953,
        "desc": "",
        "name": "Kit (Insulated Pipe Utility Liquid)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitInteriorDoors": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitInteriorDoors",
        "prefab_hash": 1935945891,
        "desc": "",
        "name": "Kit (Interior Doors)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLadder": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLadder",
        "prefab_hash": 489494578,
        "desc": "",
        "name": "Kit (Ladder)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLandingPadAtmos": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLandingPadAtmos",
        "prefab_hash": 1817007843,
        "desc": "",
        "name": "Kit (Landing Pad Atmospherics)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLandingPadBasic": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLandingPadBasic",
        "prefab_hash": 293581318,
        "desc": "",
        "name": "Kit (Landing Pad Basic)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLandingPadWaypoint": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLandingPadWaypoint",
        "prefab_hash": -1267511065,
        "desc": "",
        "name": "Kit (Landing Pad Runway)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLargeDirectHeatExchanger": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLargeDirectHeatExchanger",
        "prefab_hash": 450164077,
        "desc": "",
        "name": "Kit (Large Direct Heat Exchanger)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLargeExtendableRadiator": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLargeExtendableRadiator",
        "prefab_hash": 847430620,
        "desc": "",
        "name": "Kit (Large Extendable Radiator)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLargeSatelliteDish": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLargeSatelliteDish",
        "prefab_hash": -2039971217,
        "desc": "",
        "name": "Kit (Large Satellite Dish)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLaunchMount": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLaunchMount",
        "prefab_hash": -1854167549,
        "desc": "",
        "name": "Kit (Launch Mount)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLaunchTower": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLaunchTower",
        "prefab_hash": -174523552,
        "desc": "",
        "name": "Kit (Rocket Launch Tower)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLiquidRegulator": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLiquidRegulator",
        "prefab_hash": 1951126161,
        "desc": "",
        "name": "Kit (Liquid Regulator)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLiquidTank": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLiquidTank",
        "prefab_hash": -799849305,
        "desc": "",
        "name": "Kit (Liquid Tank)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLiquidTankInsulated": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLiquidTankInsulated",
        "prefab_hash": 617773453,
        "desc": "",
        "name": "Kit (Insulated Liquid Tank)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLiquidTurboVolumePump": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLiquidTurboVolumePump",
        "prefab_hash": -1805020897,
        "desc": "",
        "name": "Kit (Turbo Volume Pump - Liquid)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLiquidUmbilical": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLiquidUmbilical",
        "prefab_hash": 1571996765,
        "desc": "",
        "name": "Kit (Liquid Umbilical)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLocker": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLocker",
        "prefab_hash": 882301399,
        "desc": "",
        "name": "Kit (Locker)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLogicCircuit": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLogicCircuit",
        "prefab_hash": 1512322581,
        "desc": "",
        "name": "Kit (IC Housing)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLogicInputOutput": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLogicInputOutput",
        "prefab_hash": 1997293610,
        "desc": "",
        "name": "Kit (Logic I/O)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLogicMemory": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLogicMemory",
        "prefab_hash": -2098214189,
        "desc": "",
        "name": "Kit (Logic Memory)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLogicProcessor": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLogicProcessor",
        "prefab_hash": 220644373,
        "desc": "",
        "name": "Kit (Logic Processor)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLogicSwitch": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLogicSwitch",
        "prefab_hash": 124499454,
        "desc": "",
        "name": "Kit (Logic Switch)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitLogicTransmitter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitLogicTransmitter",
        "prefab_hash": 1005397063,
        "desc": "",
        "name": "Kit (Logic Transmitter)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitMotherShipCore": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitMotherShipCore",
        "prefab_hash": -344968335,
        "desc": "",
        "name": "Kit (Mothership)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitMusicMachines": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitMusicMachines",
        "prefab_hash": -2038889137,
        "desc": "",
        "name": "Kit (Music Machines)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPassiveLargeRadiatorGas": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPassiveLargeRadiatorGas",
        "prefab_hash": -1752768283,
        "desc": "",
        "name": "Kit (Medium Radiator)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitPassiveLargeRadiatorLiquid": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPassiveLargeRadiatorLiquid",
        "prefab_hash": 1453961898,
        "desc": "",
        "name": "Kit (Medium Radiator Liquid)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPassthroughHeatExchanger": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPassthroughHeatExchanger",
        "prefab_hash": 636112787,
        "desc": "",
        "name": "Kit (CounterFlow Heat Exchanger)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPictureFrame": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPictureFrame",
        "prefab_hash": -2062364768,
        "desc": "",
        "name": "Kit Picture Frame"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPipe": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPipe",
        "prefab_hash": -1619793705,
        "desc": "",
        "name": "Kit (Pipe)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 20,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPipeLiquid": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPipeLiquid",
        "prefab_hash": -1166461357,
        "desc": "",
        "name": "Kit (Liquid Pipe)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 20,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPipeOrgan": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPipeOrgan",
        "prefab_hash": -827125300,
        "desc": "",
        "name": "Kit (Pipe Organ)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPipeRadiator": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPipeRadiator",
        "prefab_hash": 920411066,
        "desc": "",
        "name": "Kit (Pipe Radiator)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitPipeRadiatorLiquid": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPipeRadiatorLiquid",
        "prefab_hash": -1697302609,
        "desc": "",
        "name": "Kit (Pipe Radiator Liquid)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitPipeUtility": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPipeUtility",
        "prefab_hash": 1934508338,
        "desc": "",
        "name": "Kit (Pipe Utility Gas)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPipeUtilityLiquid": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPipeUtilityLiquid",
        "prefab_hash": 595478589,
        "desc": "",
        "name": "Kit (Pipe Utility Liquid)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPlanter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPlanter",
        "prefab_hash": 119096484,
        "desc": "",
        "name": "Kit (Planter)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPortablesConnector": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPortablesConnector",
        "prefab_hash": 1041148999,
        "desc": "",
        "name": "Kit (Portables Connector)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPowerTransmitter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPowerTransmitter",
        "prefab_hash": 291368213,
        "desc": "",
        "name": "Kit (Power Transmitter)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPowerTransmitterOmni": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPowerTransmitterOmni",
        "prefab_hash": -831211676,
        "desc": "",
        "name": "Kit (Power Transmitter Omni)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPoweredVent": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPoweredVent",
        "prefab_hash": 2015439334,
        "desc": "",
        "name": "Kit (Powered Vent)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPressureFedGasEngine": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPressureFedGasEngine",
        "prefab_hash": -121514007,
        "desc": "",
        "name": "Kit (Pressure Fed Gas Engine)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPressureFedLiquidEngine": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPressureFedLiquidEngine",
        "prefab_hash": -99091572,
        "desc": "",
        "name": "Kit (Pressure Fed Liquid Engine)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPressurePlate": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPressurePlate",
        "prefab_hash": 123504691,
        "desc": "",
        "name": "Kit (Trigger Plate)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitPumpedLiquidEngine": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitPumpedLiquidEngine",
        "prefab_hash": 1921918951,
        "desc": "",
        "name": "Kit (Pumped Liquid Engine)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRailing": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRailing",
        "prefab_hash": 750176282,
        "desc": "",
        "name": "Kit (Railing)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRecycler": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRecycler",
        "prefab_hash": 849148192,
        "desc": "",
        "name": "Kit (Recycler)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRegulator": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRegulator",
        "prefab_hash": 1181371795,
        "desc": "",
        "name": "Kit (Pressure Regulator)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitReinforcedWindows": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitReinforcedWindows",
        "prefab_hash": 1459985302,
        "desc": "",
        "name": "Kit (Reinforced Windows)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitResearchMachine": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitResearchMachine",
        "prefab_hash": 724776762,
        "desc": "",
        "name": "Kit Research Machine"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitRespawnPointWallMounted": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRespawnPointWallMounted",
        "prefab_hash": 1574688481,
        "desc": "",
        "name": "Kit (Respawn)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRocketAvionics": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRocketAvionics",
        "prefab_hash": 1396305045,
        "desc": "",
        "name": "Kit (Avionics)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRocketBattery": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRocketBattery",
        "prefab_hash": -314072139,
        "desc": "",
        "name": "Kit (Rocket Battery)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRocketCargoStorage": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRocketCargoStorage",
        "prefab_hash": 479850239,
        "desc": "",
        "name": "Kit (Rocket Cargo Storage)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRocketCelestialTracker": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRocketCelestialTracker",
        "prefab_hash": -303008602,
        "desc": "",
        "name": "Kit (Rocket Celestial Tracker)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRocketCircuitHousing": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRocketCircuitHousing",
        "prefab_hash": 721251202,
        "desc": "",
        "name": "Kit (Rocket Circuit Housing)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRocketDatalink": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRocketDatalink",
        "prefab_hash": -1256996603,
        "desc": "",
        "name": "Kit (Rocket Datalink)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRocketGasFuelTank": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRocketGasFuelTank",
        "prefab_hash": -1629347579,
        "desc": "",
        "name": "Kit (Rocket Gas Fuel Tank)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRocketLiquidFuelTank": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRocketLiquidFuelTank",
        "prefab_hash": 2032027950,
        "desc": "",
        "name": "Kit (Rocket Liquid Fuel Tank)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRocketManufactory": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRocketManufactory",
        "prefab_hash": -636127860,
        "desc": "",
        "name": "Kit (Rocket Manufactory)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRocketMiner": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRocketMiner",
        "prefab_hash": -867969909,
        "desc": "",
        "name": "Kit (Rocket Miner)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRocketScanner": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRocketScanner",
        "prefab_hash": 1753647154,
        "desc": "",
        "name": "Kit (Rocket Scanner)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRocketTransformerSmall": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRocketTransformerSmall",
        "prefab_hash": -932335800,
        "desc": "",
        "name": "Kit (Transformer Small (Rocket))"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRoverFrame": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRoverFrame",
        "prefab_hash": 1827215803,
        "desc": "",
        "name": "Kit (Rover Frame)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitRoverMKI": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitRoverMKI",
        "prefab_hash": 197243872,
        "desc": "",
        "name": "Kit (Rover Mk I)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSDBHopper": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSDBHopper",
        "prefab_hash": 323957548,
        "desc": "",
        "name": "Kit (SDB Hopper)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSatelliteDish": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSatelliteDish",
        "prefab_hash": 178422810,
        "desc": "",
        "name": "Kit (Medium Satellite Dish)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSecurityPrinter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSecurityPrinter",
        "prefab_hash": 578078533,
        "desc": "",
        "name": "Kit (Security Printer)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSensor": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSensor",
        "prefab_hash": -1776897113,
        "desc": "",
        "name": "Kit (Sensors)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitShower": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitShower",
        "prefab_hash": 735858725,
        "desc": "",
        "name": "Kit (Shower)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSign": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSign",
        "prefab_hash": 529996327,
        "desc": "",
        "name": "Kit (Sign)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSleeper": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSleeper",
        "prefab_hash": 326752036,
        "desc": "",
        "name": "Kit (Sleeper)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSmallDirectHeatExchanger": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSmallDirectHeatExchanger",
        "prefab_hash": -1332682164,
        "desc": "",
        "name": "Kit (Small Direct Heat Exchanger)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitSmallSatelliteDish": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSmallSatelliteDish",
        "prefab_hash": 1960952220,
        "desc": "",
        "name": "Kit (Small Satellite Dish)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSolarPanel": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSolarPanel",
        "prefab_hash": -1924492105,
        "desc": "",
        "name": "Kit (Solar Panel)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSolarPanelBasic": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSolarPanelBasic",
        "prefab_hash": 844961456,
        "desc": "",
        "name": "Kit (Solar Panel Basic)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitSolarPanelBasicReinforced": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSolarPanelBasicReinforced",
        "prefab_hash": -528695432,
        "desc": "",
        "name": "Kit (Solar Panel Basic Heavy)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitSolarPanelReinforced": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSolarPanelReinforced",
        "prefab_hash": -364868685,
        "desc": "",
        "name": "Kit (Solar Panel Heavy)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSolidGenerator": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSolidGenerator",
        "prefab_hash": 1293995736,
        "desc": "",
        "name": "Kit (Solid Generator)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSorter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSorter",
        "prefab_hash": 969522478,
        "desc": "",
        "name": "Kit (Sorter)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSpeaker": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSpeaker",
        "prefab_hash": -126038526,
        "desc": "",
        "name": "Kit (Speaker)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitStacker": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitStacker",
        "prefab_hash": 1013244511,
        "desc": "",
        "name": "Kit (Stacker)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitStairs": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitStairs",
        "prefab_hash": 170878959,
        "desc": "",
        "name": "Kit (Stairs)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitStairwell": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitStairwell",
        "prefab_hash": -1868555784,
        "desc": "",
        "name": "Kit (Stairwell)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitStandardChute": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitStandardChute",
        "prefab_hash": 2133035682,
        "desc": "",
        "name": "Kit (Powered Chutes)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitStirlingEngine": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitStirlingEngine",
        "prefab_hash": -1821571150,
        "desc": "",
        "name": "Kit (Stirling Engine)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitSuitStorage": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitSuitStorage",
        "prefab_hash": 1088892825,
        "desc": "",
        "name": "Kit (Suit Storage)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitTables": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitTables",
        "prefab_hash": -1361598922,
        "desc": "",
        "name": "Kit (Tables)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitTank": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitTank",
        "prefab_hash": 771439840,
        "desc": "",
        "name": "Kit (Tank)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitTankInsulated": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitTankInsulated",
        "prefab_hash": 1021053608,
        "desc": "",
        "name": "Kit (Tank Insulated)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitToolManufactory": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitToolManufactory",
        "prefab_hash": 529137748,
        "desc": "",
        "name": "Kit (Tool Manufactory)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitTransformer": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitTransformer",
        "prefab_hash": -453039435,
        "desc": "",
        "name": "Kit (Transformer Large)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitTransformerSmall": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitTransformerSmall",
        "prefab_hash": 665194284,
        "desc": "",
        "name": "Kit (Transformer Small)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitTurbineGenerator": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitTurbineGenerator",
        "prefab_hash": -1590715731,
        "desc": "",
        "name": "Kit (Turbine Generator)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitTurboVolumePump": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitTurboVolumePump",
        "prefab_hash": -1248429712,
        "desc": "",
        "name": "Kit (Turbo Volume Pump - Gas)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitUprightWindTurbine": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitUprightWindTurbine",
        "prefab_hash": -1798044015,
        "desc": "",
        "name": "Kit (Upright Wind Turbine)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitVendingMachine": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitVendingMachine",
        "prefab_hash": -2038384332,
        "desc": "",
        "name": "Kit (Vending Machine)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitVendingMachineRefrigerated": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitVendingMachineRefrigerated",
        "prefab_hash": -1867508561,
        "desc": "",
        "name": "Kit (Vending Machine Refrigerated)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitWall": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitWall",
        "prefab_hash": -1826855889,
        "desc": "",
        "name": "Kit (Wall)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 30,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitWallArch": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitWallArch",
        "prefab_hash": 1625214531,
        "desc": "",
        "name": "Kit (Arched Wall)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 30,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitWallFlat": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitWallFlat",
        "prefab_hash": -846838195,
        "desc": "",
        "name": "Kit (Flat Wall)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 30,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitWallGeometry": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitWallGeometry",
        "prefab_hash": -784733231,
        "desc": "",
        "name": "Kit (Geometric Wall)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 30,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitWallIron": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitWallIron",
        "prefab_hash": -524546923,
        "desc": "",
        "name": "Kit (Iron Wall)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 30,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitWallPadded": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitWallPadded",
        "prefab_hash": -821868990,
        "desc": "",
        "name": "Kit (Padded Wall)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 30,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitWaterBottleFiller": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitWaterBottleFiller",
        "prefab_hash": 159886536,
        "desc": "",
        "name": "Kit (Water Bottle Filler)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitWaterPurifier": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitWaterPurifier",
        "prefab_hash": 611181283,
        "desc": "",
        "name": "Kit (Water Purifier)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitWeatherStation": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitWeatherStation",
        "prefab_hash": 337505889,
        "desc": "",
        "name": "Kit (Weather Station)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemKitWindTurbine": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitWindTurbine",
        "prefab_hash": -868916503,
        "desc": "",
        "name": "Kit (Wind Turbine)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemKitWindowShutter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemKitWindowShutter",
        "prefab_hash": 1779979754,
        "desc": "",
        "name": "Kit (Window Shutter)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemLabeller": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemLabeller",
        "prefab_hash": -743968726,
        "desc": "A labeller lets you set names and values on a variety of devices and structures, including <link=ThingStructureConsole><color=green>Console</color></link> and <link=LogicPage><color=#0080FFFF>Logic</color></link>.",
        "name": "Labeller"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemLaptop": {
      "templateType": "ItemCircuitHolder",
      "prefab": {
        "prefab_name": "ItemLaptop",
        "prefab_hash": 141535121,
        "desc": "The Laptop functions as a portable IC editor. To operate the Laptop it must be powered with a battery, have a <link=ThingMotherboardProgrammableChip><color=green>IC Editor Motherboard</color></link> in the motherboard slot, and an <link=ThingItemIntegratedCircuit10><color=green>Integrated Circuit (IC10)</color></link> in the Programmable Chip Slot.\n\nYou must place the laptop down to interact with the onsreen UI.\n        \nConnects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
        "name": "Laptop"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "PressureExternal": "Read",
          "On": "ReadWrite",
          "TemperatureExternal": "Read",
          "PositionX": "Read",
          "PositionY": "Read",
          "PositionZ": "Read",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": true,
        "circuit_holder": true
      },
      "slots": [
        {
          "name": "Programmable Chip",
          "typ": "ProgrammableChip"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Motherboard",
          "typ": "Motherboard"
        }
      ]
    },
    "ItemLeadIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemLeadIngot",
        "prefab_hash": 2134647745,
        "desc": "",
        "name": "Ingot (Lead)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Lead": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemLeadOre": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemLeadOre",
        "prefab_hash": -190236170,
        "desc": "Lead is a chemical element with the symbol \"Pb\". It is a dense, heavy metal with a low melting point. Lead is a used to make a variety of things such as <link=IngotPage><color=#0080FFFF>alloys</color></link> like <link=ThingItemSolderIngot><color=green>Ingot (Solder)</color></link> and munitions.",
        "name": "Ore (Lead)"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 50,
        "reagents": {
          "Lead": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemLightSword": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemLightSword",
        "prefab_hash": 1949076595,
        "desc": "A charming, if useless, pseudo-weapon. (Creative only.)",
        "name": "Light Sword"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemLiquidCanisterEmpty": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemLiquidCanisterEmpty",
        "prefab_hash": -185207387,
        "desc": "",
        "name": "Liquid Canister"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "LiquidCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.05
      },
      "internal_atmo_info": {
        "volume": 12.1
      }
    },
    "ItemLiquidCanisterSmart": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemLiquidCanisterSmart",
        "prefab_hash": 777684475,
        "desc": "0.Mode0\n1.Mode1",
        "name": "Liquid Canister (Smart)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "LiquidCanister",
        "sorting_class": "Atmospherics"
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "internal_atmo_info": {
        "volume": 18.1
      }
    },
    "ItemLiquidDrain": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemLiquidDrain",
        "prefab_hash": 2036225202,
        "desc": "",
        "name": "Kit (Liquid Drain)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemLiquidPipeAnalyzer": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemLiquidPipeAnalyzer",
        "prefab_hash": 226055671,
        "desc": "",
        "name": "Kit (Liquid Pipe Analyzer)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemLiquidPipeHeater": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemLiquidPipeHeater",
        "prefab_hash": -248475032,
        "desc": "Creates a <link=ThingStructureLiquidPipeHeater><color=green>Pipe Heater (Liquid)</color></link>.",
        "name": "Pipe Heater Kit (Liquid)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemLiquidPipeValve": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemLiquidPipeValve",
        "prefab_hash": -2126113312,
        "desc": "This kit creates a <link=ThingStructureLiquidValve><color=green>Liquid Valve</color></link>.",
        "name": "Kit (Liquid Pipe Valve)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemLiquidPipeVolumePump": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemLiquidPipeVolumePump",
        "prefab_hash": -2106280569,
        "desc": "",
        "name": "Kit (Liquid Volume Pump)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemLiquidTankStorage": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemLiquidTankStorage",
        "prefab_hash": 2037427578,
        "desc": "This kit produces a <link=ThingItemLiquidTankStorage><color=green>Kit (Liquid Canister Storage)</color></link> for refilling a <link=ThingItemLiquidCanisterEmpty><color=green>Liquid Canister</color></link>.",
        "name": "Kit (Liquid Canister Storage)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemMKIIAngleGrinder": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemMKIIAngleGrinder",
        "prefab_hash": 240174650,
        "desc": "Angles-be-gone with the trusty angle grinder. The MK II is more resistant to temperature and pressure.",
        "name": "Mk II Angle Grinder"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemMKIIArcWelder": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemMKIIArcWelder",
        "prefab_hash": -2061979347,
        "desc": "",
        "name": "Mk II Arc Welder"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemMKIICrowbar": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemMKIICrowbar",
        "prefab_hash": 1440775434,
        "desc": "<link=Recurso><color=#0080FFFF>Recurso's</color></link> entry-level crowbar is useful in a variety of everyday <link=Stationeers><color=#0080FFFF>Stationeer</color></link> settings, from opening <link=ThingStructureAreaPowerControl><color=green>Area Power Control</color></link>s and unpowered <link=ThingStructureAirlock><color=green>Airlock</color></link>s, to splatting pan-dimensional headcrabs, should the need arise. The MK II is more resistant to temperature and pressure.",
        "name": "Mk II Crowbar"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemMKIIDrill": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemMKIIDrill",
        "prefab_hash": 324791548,
        "desc": "The <link=ExMin><color=#0080FFFF>ExMin</color></link> Off-whirled Hand Drill has been a companion to <link=Stationeers><color=#0080FFFF>Stationeers</color></link> for decades. Essential for assembling and deconstructing various items and structures, regardless of gravity, pressure or temperature.",
        "name": "Mk II Drill"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Activate": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemMKIIDuctTape": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemMKIIDuctTape",
        "prefab_hash": 388774906,
        "desc": "In the distant past, one of Earth's great champions taught a generation of 'Fix-It People' that duct tape was the answer to any problem. <link=Stationeers><color=#0080FFFF>Stationeers</color></link> have demonstrated that this is truth holds strong, so long as the problem is a damaged <link=ThingItemEvaSuit><color=green>Eva Suit</color></link>, <link=ThingItemJetpackBasic><color=green>Jetpack Basic</color></link>, <link=ThingItemSpaceHelmet><color=green>Space Helmet</color></link>, or even a <link=ThingStructureSolarPanel><color=green>Solar Panel</color></link>.\nTo use on yourself: put duct tape in your active hand, hold RIGHT MOUSE BUTTON to automatically repair damage.",
        "name": "Mk II Duct Tape"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemMKIIMiningDrill": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemMKIIMiningDrill",
        "prefab_hash": -1875271296,
        "desc": "The handheld 'Topo' tri-cone rotary mining drill was made for one thing: quick digging. Modeled on a classic <link=Recurso><color=#0080FFFF>Recurso</color></link> zero-g design, it functions equally well in vacuum and atmosphere, with cemented carbide bits to increase resilience and bearing life, and reduce spalling. As Jenk Murtons once said, 'The Topo don't stopo.' The MK II is more resistant to temperature and pressure.",
        "name": "Mk II Mining Drill"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Default",
          "1": "Flatten"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemMKIIScrewdriver": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemMKIIScrewdriver",
        "prefab_hash": -2015613246,
        "desc": "This standard issue frictional adherence adjustor is a top of the line, bi-rotational model with a columnated uni-grip. It's definitely not just a screwdriver. Use it for construction and deconstruction of certain kits, and setting values on <link=LogicUnitPage><color=#0080FFFF>logic</color></link> units. The MK II is more resistant to temperature and pressure.",
        "name": "Mk II Screwdriver"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemMKIIWireCutters": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemMKIIWireCutters",
        "prefab_hash": -178893251,
        "desc": "Wirecutters allow you to deconstruct various <link=StructurePage><color=#0080FFFF>structures</color></link>, as well as cross-lay cables when held in your non-active hand, and defuse explosives as needed. Wirecutters are stored in the <link=ThingItemToolBelt><color=green>Tool Belt</color></link>, along with other essential <link=ToolPage><color=#0080FFFF>tools</color></link>.",
        "name": "Mk II Wire Cutters"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemMKIIWrench": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemMKIIWrench",
        "prefab_hash": 1862001680,
        "desc": "One of humanity's enduring contributions to the cosmos, the wrench represents the essence of our species. A simple, effective and spiritually barren tool, use it to build and deconstruct a variety of <link=StructurePage><color=#0080FFFF>structures</color></link> The MK II is more resistant to temperature and pressure.",
        "name": "Mk II Wrench"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemMarineBodyArmor": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemMarineBodyArmor",
        "prefab_hash": 1399098998,
        "desc": "",
        "name": "Marine Armor"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Suit",
        "sorting_class": "Clothing"
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "ItemMarineHelmet": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemMarineHelmet",
        "prefab_hash": 1073631646,
        "desc": "",
        "name": "Marine Helmet"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Helmet",
        "sorting_class": "Clothing"
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemMilk": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemMilk",
        "prefab_hash": 1327248310,
        "desc": "Full disclosure, it's not actually 'milk', but an <link=Agrizero><color=#0080FFFF>Agrizero-invented</color></link> synthesis of 5ml <link=ThingItemSoyOil><color=green>Soy Oil</color></link> and 5g <link=ThingItemFern><color=green>Fern</color></link>, delicately blended in the <link=ThingApplianceChemistryStation><color=green>Chemistry Station</color></link>. Surprisingly filling, it can be used as an ingredient to cook other <link=FoodPage><color=#0080FFFF>food</color></link> in the <link=ThingApplianceMicrowave><color=green>Microwave</color></link> or <link=ThingStructureAutomatedOven><color=green>Automated Oven</color></link>. Think, <link=ThingItemMuffin><color=green>Muffin</color></link>.",
        "name": "Milk"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 100,
        "reagents": {
          "Milk": 1.0
        },
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemMiningBackPack": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemMiningBackPack",
        "prefab_hash": -1650383245,
        "desc": "",
        "name": "Mining Backpack"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Back",
        "sorting_class": "Clothing"
      },
      "slots": [
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        }
      ]
    },
    "ItemMiningBelt": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemMiningBelt",
        "prefab_hash": -676435305,
        "desc": "Originally developed by <link=Recurso><color=#0080FFFF>Recurso Espaciais</color></link> for asteroid mining, the <link=Stationeers><color=#0080FFFF>Stationeer's</color></link> mining belt has room for two <link=ToolPage><color=#0080FFFF>tools</color></link> and eight <link=OrePage><color=#0080FFFF>ore</color></link> stacks. While wearing the belt, <link=OrePage><color=#0080FFFF>ore</color></link> is automatically stored there when mined. Volatile and temperature-dependent remain stable in the environmentally controlled unit.",
        "name": "Mining Belt"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Belt",
        "sorting_class": "Clothing"
      },
      "slots": [
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        }
      ]
    },
    "ItemMiningBeltMKII": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemMiningBeltMKII",
        "prefab_hash": 1470787934,
        "desc": "A larger and more capacious mining belt, the Mk II is similar to the <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>, but has 13 slots instead of the basic 8, to increase the length of your mining trips. It also has space for two tools. ",
        "name": "Mining Belt MK II"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Belt",
        "sorting_class": "Clothing"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        }
      ]
    },
    "ItemMiningCharge": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemMiningCharge",
        "prefab_hash": 15829510,
        "desc": "A low cost, high yield explosive with a 10 second timer.",
        "name": "Mining Charge"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemMiningDrill": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemMiningDrill",
        "prefab_hash": 1055173191,
        "desc": "The handheld 'Topo' tri-cone rotary mining drill was made for one thing: quick digging. Modeled on a classic <link=Recurso><color=#0080FFFF>Recurso</color></link> zero-g design, it functions equally well in vacuum and atmosphere, with cemented carbide bits to increase resilience and bearing life, and reduce spalling. As Jenk Murtons once said, 'The Topo don't stopo.'",
        "name": "Mining Drill"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Default",
          "1": "Flatten"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemMiningDrillHeavy": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemMiningDrillHeavy",
        "prefab_hash": -1663349918,
        "desc": "Sometimes mining trips require something a little bigger to bring home the goods. This scaled up version of the <link=Recurso><color=#0080FFFF>Recurso</color></link> 'Topo' design <link=ThingItemMiningDrill><color=green>Mining Drill</color></link> can literally move mountains. The heavy mining drill will remove more ground and mine <link=OrePage><color=#0080FFFF>ore</color></link> more quickly than the standard mining drill. The heavy mining drill is also resilient to temperature and pressure. So no matter what planet or extreme weather conditions may be present, the Recurso heavy mining drill will get the job done.",
        "name": "Mining Drill (Heavy)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Default",
          "1": "Flatten"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemMiningDrillPneumatic": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemMiningDrillPneumatic",
        "prefab_hash": 1258187304,
        "desc": "0.Default\n1.Flatten",
        "name": "Pneumatic Mining Drill"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "GasCanister"
        }
      ]
    },
    "ItemMkIIToolbelt": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemMkIIToolbelt",
        "prefab_hash": 1467558064,
        "desc": "A large, ten-slot tool belt with two extra generic slots for carrying whatever takes your fancy.",
        "name": "Tool Belt MK II"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Belt",
        "sorting_class": "Clothing"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "ItemMuffin": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemMuffin",
        "prefab_hash": -1864982322,
        "desc": "A delicious, semi-healthful snack, nothing comforts a <link=Stationeers><color=#0080FFFF>Stationeer</color></link> 800 million kilometers from home like a hand-made muffin.",
        "name": "Muffin"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemMushroom": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemMushroom",
        "prefab_hash": 2044798572,
        "desc": "A tasty food item. Unlike normal plants, it consumes <link=GasOxygen><color=#44AD83>Oxygen</color></link> and outputs <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link>. Mushrooms will only mature at a moderate rate in darkness, and prolonged light will kill it.",
        "name": "Mushroom"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 20,
        "reagents": {
          "Mushroom": 1.0
        },
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemNVG": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemNVG",
        "prefab_hash": 982514123,
        "desc": "",
        "name": "Night Vision Goggles"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Glasses",
        "sorting_class": "Clothing"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemNickelIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemNickelIngot",
        "prefab_hash": -1406385572,
        "desc": "",
        "name": "Ingot (Nickel)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Nickel": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemNickelOre": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemNickelOre",
        "prefab_hash": 1830218956,
        "desc": "Nickel is a chemical element with the symbol \"Ni\" and is a rare metal commonly used as a plating to prevent corrosion. Sought after by many <link=Stationeers><color=#0080FFFF>Stationeers</color></link>, Nickel is also commonly used to create several <link=IngotPage><color=#0080FFFF>alloys</color></link>.",
        "name": "Ore (Nickel)"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 50,
        "reagents": {
          "Nickel": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemNitrice": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemNitrice",
        "prefab_hash": -1499471529,
        "desc": "Nitrice is the nickname given to solid <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> Ice, and found on many planets and moons in the Solar System. Given the inert nature of the <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> it produces, the ice is useful when making breathable atmospheres with low flammability.\n\nHighly sensitive to temperature, nitrice will begin to melt as soon as it is mined, unless the temperature is below zero, or it is stored in the <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>, <link=ThingItemMiningBeltAdvanced><color=green>Mining Belt MK II</color></link> or devices like the <link=ThingStructureIceCrusher><color=green>Ice Crusher</color></link> or <link=ThingStructureFridgeSmall><color=green>Fridge Small</color></link>.",
        "name": "Ice (Nitrice)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemOxite": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemOxite",
        "prefab_hash": -1805394113,
        "desc": "Oxite ice is largely composed of frozen <link=GasOxygen><color=#44AD83>Oxygen</color></link>, and found on many planets in the Solar System. Highly valuable and sought after, not all planets a <link=Stationeers><color=#0080FFFF>Stationeer</color></link> visits will have some. \n\nHighly sensitive to temperature, oxite will begin to melt as soon as it is mined, unless the temperature is below zero, or it is stored in the <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>, <link=ThingItemMiningBeltAdvanced><color=green>Mining Belt MK II</color></link> or devices like the <link=ThingStructureIceCrusher><color=green>Ice Crusher</color></link> or <link=ThingStructureFridgeSmall><color=green>Fridge Small</color></link>. When melting, oxite produces a mixture of <link=GasOxygen><color=#44AD83>Oxygen</color></link> and <link=GasNitrogen><color=#44AD83>Nitrogen</color></link>.",
        "name": "Ice (Oxite)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPassiveVent": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPassiveVent",
        "prefab_hash": 238631271,
        "desc": "This kit creates a <link=ThingItemPassiveVent><color=green>Passive Vent</color></link> among other variants.",
        "name": "Passive Vent"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPassiveVentInsulated": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPassiveVentInsulated",
        "prefab_hash": -1397583760,
        "desc": "",
        "name": "Kit (Insulated Passive Vent)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPeaceLily": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPeaceLily",
        "prefab_hash": 2042955224,
        "desc": "A fetching lily with greater resistance to cold temperatures.",
        "name": "Peace Lily"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemPickaxe": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPickaxe",
        "prefab_hash": -913649823,
        "desc": "When the sun sets and the <link=ThingItemMiningDrill><color=green>Mining Drill</color></link> runs dead, its batteries drained and your <link=ThingStructureSolarPanel><color=green>Solar Panel</color></link> cold and lifeless, the <link=ThingStructureAutolathe><color=green>Autolathe</color></link> empty, the way forward unclear, one thing holds back the endless night of defeat: the trusty pickaxe.",
        "name": "Pickaxe"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemPillHeal": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPillHeal",
        "prefab_hash": 1118069417,
        "desc": "Three centuries of pharmaceutical technology compressed into one small, easy to ingest pill: the Heal Pill, aka the Proton Pill, aka Mr Happy contains active enzymes, therapeutic proteins, modified microbial strains, and mammalian cell line analogues in a single-dose boost of high purity, efficacy, and potency that potentiates a swift parasympathetic immune response.",
        "name": "Pill (Medical)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemPillStun": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPillStun",
        "prefab_hash": 418958601,
        "desc": "Through rarely publicized, the existence of this pill is an open secret. For use when all else has failed, the Sayonara Suppository immobilizes and rapidly ends the average <link=Stationeers><color=#0080FFFF>Stationeer</color></link>. The delivery mode ensures that if a Stationeer chooses to take this pill, they really have to want it.",
        "name": "Pill (Paralysis)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemPipeAnalyizer": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPipeAnalyizer",
        "prefab_hash": -767597887,
        "desc": "This kit creates a <link=ThingStructurePipeAnalysizer><color=green>Pipe Analyzer</color></link>.",
        "name": "Kit (Pipe Analyzer)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPipeCowl": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPipeCowl",
        "prefab_hash": -38898376,
        "desc": "This creates a <link=ThingItemPipeCowl><color=green>Pipe Cowl</color></link> that can be placed on the end of pipes to expose them to the world atmospheres.",
        "name": "Pipe Cowl"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 20,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPipeDigitalValve": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPipeDigitalValve",
        "prefab_hash": -1532448832,
        "desc": "This kit creates a <link=ThingStructureDigitalValve><color=green>Digital Valve</color></link>.",
        "name": "Kit (Digital Valve)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPipeGasMixer": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPipeGasMixer",
        "prefab_hash": -1134459463,
        "desc": "This kit creates a <link=ThingStructureGasMixer><color=green>Gas Mixer</color></link>.",
        "name": "Kit (Gas Mixer)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPipeHeater": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPipeHeater",
        "prefab_hash": -1751627006,
        "desc": "Creates a <link=ThingStructurePipeHeater><color=green>Pipe Heater (Gas)</color></link>.",
        "name": "Pipe Heater Kit (Gas)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemPipeIgniter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPipeIgniter",
        "prefab_hash": 1366030599,
        "desc": "",
        "name": "Kit (Pipe Igniter)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPipeLabel": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPipeLabel",
        "prefab_hash": 391769637,
        "desc": "This kit creates a <link=ThingStructurePipeLabel><color=green>Pipe Label</color></link>.",
        "name": "Kit (Pipe Label)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 20,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPipeLiquidRadiator": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPipeLiquidRadiator",
        "prefab_hash": -906521320,
        "desc": "This kit creates a <link=ThingStructureLiquidPipeRadiator><color=green>Liquid Pipe Convection Radiator</color></link>.",
        "name": "Kit (Liquid Radiator)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPipeMeter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPipeMeter",
        "prefab_hash": 1207939683,
        "desc": "This kit creates a <link=ThingStructurePipeMeter><color=green>Pipe Meter</color></link>.",
        "name": "Kit (Pipe Meter)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPipeRadiator": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPipeRadiator",
        "prefab_hash": -1796655088,
        "desc": "This kit creates a <link=ThingStructurePipeRadiator><color=green>Pipe Convection Radiator</color></link>.",
        "name": "Kit (Radiator)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPipeValve": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPipeValve",
        "prefab_hash": 799323450,
        "desc": "This kit creates a <link=ThingStructureValve><color=green>Valve</color></link>.",
        "name": "Kit (Pipe Valve)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemPipeVolumePump": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPipeVolumePump",
        "prefab_hash": -1766301997,
        "desc": "This kit creates a <link=ThingStructureVolumePump><color=green>Volume Pump</color></link>.",
        "name": "Kit (Volume Pump)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPlainCake": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPlainCake",
        "prefab_hash": -1108244510,
        "desc": "",
        "name": "Cake"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemPlantEndothermic_Creative": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPlantEndothermic_Creative",
        "prefab_hash": -1159179557,
        "desc": "",
        "name": "Endothermic Plant Creative"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemPlantEndothermic_Genepool1": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPlantEndothermic_Genepool1",
        "prefab_hash": 851290561,
        "desc": "<link=Agrizero><color=#0080FFFF>Agrizero's</color></link> Winterspawn atmospheric bio-processor is a recent addition to their catalog of genespliced environmental decorations. Using ambient heat to split <link=GasWater><color=#44AD83>Water</color></link> into <link=GasVolatiles><color=#44AD83>Volatiles</color></link> and <link=GasOxygen><color=#44AD83>Oxygen</color></link>, the Winterspawn cools its surroundings, when supplied with sufficient <link=GasNitrogen><color=#44AD83>Nitrogen</color></link>. The alpha variant has a peak cooling and electrolysis capacity of 90Watts and is most efficient operating in air temperatures of 0 to 40 Degrees Celsius.",
        "name": "Winterspawn (Alpha variant)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemPlantEndothermic_Genepool2": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPlantEndothermic_Genepool2",
        "prefab_hash": -1414203269,
        "desc": "<link=Agrizero><color=#0080FFFF>Agrizero's</color></link> Winterspawn atmospheric bio-processor is a recent addition to their catalog of genespliced environmental decorations. Using ambient heat to split <link=GasWater><color=#44AD83>Water</color></link> into <link=GasVolatiles><color=#44AD83>Volatiles</color></link> and <link=GasOxygen><color=#44AD83>Oxygen</color></link>, the Winterspawn cools its surroundings when supplied with sufficient <link=GasNitrogen><color=#44AD83>Nitrogen</color></link>. The beta variant has a peak cooling and electrolysis capacity of 150Watts and is most efficient operating in air temperatures of 14 to 24 Degrees Celsius.",
        "name": "Winterspawn (Beta variant)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemPlantSampler": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemPlantSampler",
        "prefab_hash": 173023800,
        "desc": "The Plant Sampler allows you to take a <link=GeneticsPage><color=#0080FFFF>gene</color></link> sample of a growing plant. The sampler can then be placed in the <link=ThingAppliancePlantGeneticAnalyzer><color=green>Plant Genetic Analyzer</color></link> to attain and interpret the results.",
        "name": "Plant Sampler"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Mode0",
          "1": "Mode1"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemPlantSwitchGrass": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPlantSwitchGrass",
        "prefab_hash": -532672323,
        "desc": "",
        "name": "Switch Grass"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Default"
      }
    },
    "ItemPlantThermogenic_Creative": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPlantThermogenic_Creative",
        "prefab_hash": -1208890208,
        "desc": "",
        "name": "Thermogenic Plant Creative"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemPlantThermogenic_Genepool1": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPlantThermogenic_Genepool1",
        "prefab_hash": -177792789,
        "desc": "The <link=Agrizero><color=#0080FFFF>Agrizero's</color></link>-created Hades Flower is the result of as dubious experiment to combine the allure of tropical plants with the comfort and homeliness of a heat pump. The plant breathes a 1:3 mix of <link=GasVolatiles><color=#44AD83>Volatiles</color></link> and <link=GasOxygen><color=#44AD83>Oxygen</color></link>, and exhales heated <link=GasPollutant><color=#44AD83>Pollutant</color></link>.",
        "name": "Hades Flower (Alpha strain)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemPlantThermogenic_Genepool2": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPlantThermogenic_Genepool2",
        "prefab_hash": 1819167057,
        "desc": "The <link=Agrizero><color=#0080FFFF>Agrizero's</color></link>-created Hades Flower is the result of as dubious experiment to combine the allure of tropical plants with the comfort and homeliness of a heat pump. The plant breathes a 1:3 mix of <link=GasVolatiles><color=#44AD83>Volatiles</color></link> and <link=GasOxygen><color=#44AD83>Oxygen</color></link>, and exhales heated <link=GasPollutant><color=#44AD83>Pollutant</color></link>. The beta strain is notably more efficient than the earlier, more experimental alpha variant.",
        "name": "Hades Flower (Beta strain)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemPlasticSheets": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPlasticSheets",
        "prefab_hash": 662053345,
        "desc": "",
        "name": "Plastic Sheets"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemPotato": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPotato",
        "prefab_hash": 1929046963,
        "desc": " Potatoes are a simple, fast growing crop that can keep Stationeers alive in emergencies.",
        "name": "Potato"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 20,
        "reagents": {
          "Potato": 1.0
        },
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemPotatoBaked": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPotatoBaked",
        "prefab_hash": -2111886401,
        "desc": "",
        "name": "Baked Potato"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 1,
        "reagents": {
          "Potato": 1.0
        },
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemPowerConnector": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPowerConnector",
        "prefab_hash": 839924019,
        "desc": "This kit creates a <link=ThingStructurePowerConnector><color=green>Power Connector</color></link>.",
        "name": "Kit (Power Connector)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemPumpkin": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPumpkin",
        "prefab_hash": 1277828144,
        "desc": "Pumpkins are a perennial plant, with both a long growth time, and a long time between harvests.  Its low requirement for darkness allows for accelerated growing if provided with extra light.",
        "name": "Pumpkin"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 20,
        "reagents": {
          "Pumpkin": 1.0
        },
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemPumpkinPie": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPumpkinPie",
        "prefab_hash": 62768076,
        "desc": "",
        "name": "Pumpkin Pie"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemPumpkinSoup": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPumpkinSoup",
        "prefab_hash": 1277979876,
        "desc": "Made using <link=ThingItemCookedPumpkin><color=green>Cooked Pumpkin</color></link> and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link> in a <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link> or <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link>. Fairly high in nutrition, canned food does not <link=DecayPage><color=#0080FFFF>decay</color></link>",
        "name": "Pumpkin Soup"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemPureIce": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIce",
        "prefab_hash": -1616308158,
        "desc": "A frozen chunk of pure <link=GasWater><color=#44AD83>Water</color></link>",
        "name": "Pure Ice Water"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceCarbonDioxide": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceCarbonDioxide",
        "prefab_hash": -1251009404,
        "desc": "A frozen chunk of pure <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link>",
        "name": "Pure Ice Carbon Dioxide"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceHydrogen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceHydrogen",
        "prefab_hash": 944530361,
        "desc": "A frozen chunk of pure <link=GasHydrogen><color=#44AD83>Hydrogen</color></link>",
        "name": "Pure Ice Hydrogen"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceLiquidCarbonDioxide": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceLiquidCarbonDioxide",
        "prefab_hash": -1715945725,
        "desc": "A frozen chunk of pure <link=GasLiquidCarbonDioxide><color=#44AD83>Liquid Carbon Dioxide</color></link>",
        "name": "Pure Ice Liquid Carbon Dioxide"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceLiquidHydrogen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceLiquidHydrogen",
        "prefab_hash": -1044933269,
        "desc": "A frozen chunk of pure <link=GasLiquidHydrogen><color=#44AD83>Liquid Hydrogen</color></link>",
        "name": "Pure Ice Liquid Hydrogen"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceLiquidNitrogen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceLiquidNitrogen",
        "prefab_hash": 1674576569,
        "desc": "A frozen chunk of pure <link=GasLiquidNitrogen><color=#44AD83>Liquid Nitrogen</color></link>",
        "name": "Pure Ice Liquid Nitrogen"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceLiquidNitrous": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceLiquidNitrous",
        "prefab_hash": 1428477399,
        "desc": "A frozen chunk of pure <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link>",
        "name": "Pure Ice Liquid Nitrous"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceLiquidOxygen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceLiquidOxygen",
        "prefab_hash": 541621589,
        "desc": "A frozen chunk of pure <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link>",
        "name": "Pure Ice Liquid Oxygen"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceLiquidPollutant": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceLiquidPollutant",
        "prefab_hash": -1748926678,
        "desc": "A frozen chunk of pure <link=GasLiquidPollutant><color=#44AD83>Liquid Pollutant</color></link>",
        "name": "Pure Ice Liquid Pollutant"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceLiquidVolatiles": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceLiquidVolatiles",
        "prefab_hash": -1306628937,
        "desc": "A frozen chunk of pure <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link>",
        "name": "Pure Ice Liquid Volatiles"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceNitrogen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceNitrogen",
        "prefab_hash": -1708395413,
        "desc": "A frozen chunk of pure <link=GasNitrogen><color=#44AD83>Nitrogen</color></link>",
        "name": "Pure Ice Nitrogen"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceNitrous": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceNitrous",
        "prefab_hash": 386754635,
        "desc": "A frozen chunk of pure <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link>",
        "name": "Pure Ice NitrousOxide"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceOxygen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceOxygen",
        "prefab_hash": -1150448260,
        "desc": "A frozen chunk of pure <link=GasOxygen><color=#44AD83>Oxygen</color></link>",
        "name": "Pure Ice Oxygen"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIcePollutant": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIcePollutant",
        "prefab_hash": -1755356,
        "desc": "A frozen chunk of pure <link=GasPollutant><color=#44AD83>Pollutant</color></link>",
        "name": "Pure Ice Pollutant"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIcePollutedWater": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIcePollutedWater",
        "prefab_hash": -2073202179,
        "desc": "A frozen chunk of <link=GasPollutedWater><color=#44AD83>Polluted Water</color></link>",
        "name": "Pure Ice Polluted Water"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceSteam": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceSteam",
        "prefab_hash": -874791066,
        "desc": "A frozen chunk of pure <link=GasSteam><color=#44AD83>Steam</color></link>",
        "name": "Pure Ice Steam"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemPureIceVolatiles": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemPureIceVolatiles",
        "prefab_hash": -633723719,
        "desc": "A frozen chunk of pure <link=GasVolatiles><color=#44AD83>Volatiles</color></link>",
        "name": "Pure Ice Volatiles"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemRTG": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemRTG",
        "prefab_hash": 495305053,
        "desc": "This kit creates that miracle of modern science, a <link=ThingItemRTG><color=green>Kit (Creative RTG)</color></link>.",
        "name": "Kit (Creative RTG)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemRTGSurvival": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemRTGSurvival",
        "prefab_hash": 1817645803,
        "desc": "This kit creates a <link=ThingItemRTGSurvival><color=green>Kit (RTG)</color></link>.",
        "name": "Kit (RTG)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemReagentMix": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemReagentMix",
        "prefab_hash": -1641500434,
        "desc": "Reagent mix is pure potential. A slurry of undifferentiated <link=OrePage><color=#0080FFFF>ores</color></link>, it is output by the <link=ThingStructureRecycler><color=green>Recycler</color></link> and can be fed into the <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link> to separate and recover the individual materials. Reagent mix is also output by the <link=ThingStructureFurnace><color=green>Furnace</color></link> when the current contents are ejected without smelting a specific ingot.",
        "name": "Reagent Mix"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemRemoteDetonator": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemRemoteDetonator",
        "prefab_hash": 678483886,
        "desc": "",
        "name": "Remote Detonator"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemReusableFireExtinguisher": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemReusableFireExtinguisher",
        "prefab_hash": -1773192190,
        "desc": "Requires a canister filled with any inert liquid to opperate.",
        "name": "Fire Extinguisher (Reusable)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "slots": [
        {
          "name": "Liquid  Canister",
          "typ": "LiquidCanister"
        }
      ]
    },
    "ItemRice": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemRice",
        "prefab_hash": 658916791,
        "desc": "Rice grows at a moderate rate as long as its supplied with plenty of water.  Being more dependant on water, rice plants can easily die during periods of drought.",
        "name": "Rice"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 50,
        "reagents": {
          "Rice": 1.0
        },
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemRoadFlare": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemRoadFlare",
        "prefab_hash": 871811564,
        "desc": "Designed to burn anywhere in the Solar System, the EZC magnesium fusee supplies its own oxygen to fuel combustion, and dispel the eternal night of space.",
        "name": "Road Flare"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 20,
        "slot_class": "Flare",
        "sorting_class": "Default"
      }
    },
    "ItemRocketMiningDrillHead": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemRocketMiningDrillHead",
        "prefab_hash": 2109945337,
        "desc": "Replaceable drill head for <link=ThingStructureRocketMiner><color=green>Rocket Miner</color></link>",
        "name": "Mining-Drill Head (Basic)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "DrillHead",
        "sorting_class": "Default"
      }
    },
    "ItemRocketMiningDrillHeadDurable": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemRocketMiningDrillHeadDurable",
        "prefab_hash": 1530764483,
        "desc": "",
        "name": "Mining-Drill Head (Durable)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "DrillHead",
        "sorting_class": "Default"
      }
    },
    "ItemRocketMiningDrillHeadHighSpeedIce": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemRocketMiningDrillHeadHighSpeedIce",
        "prefab_hash": 653461728,
        "desc": "",
        "name": "Mining-Drill Head (High Speed Ice)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "DrillHead",
        "sorting_class": "Default"
      }
    },
    "ItemRocketMiningDrillHeadHighSpeedMineral": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemRocketMiningDrillHeadHighSpeedMineral",
        "prefab_hash": 1440678625,
        "desc": "",
        "name": "Mining-Drill Head (High Speed Mineral)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "DrillHead",
        "sorting_class": "Default"
      }
    },
    "ItemRocketMiningDrillHeadIce": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemRocketMiningDrillHeadIce",
        "prefab_hash": -380904592,
        "desc": "",
        "name": "Mining-Drill Head (Ice)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "DrillHead",
        "sorting_class": "Default"
      }
    },
    "ItemRocketMiningDrillHeadLongTerm": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemRocketMiningDrillHeadLongTerm",
        "prefab_hash": -684020753,
        "desc": "",
        "name": "Mining-Drill Head (Long Term)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "DrillHead",
        "sorting_class": "Default"
      }
    },
    "ItemRocketMiningDrillHeadMineral": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemRocketMiningDrillHeadMineral",
        "prefab_hash": 1083675581,
        "desc": "",
        "name": "Mining-Drill Head (Mineral)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "DrillHead",
        "sorting_class": "Default"
      }
    },
    "ItemRocketScanningHead": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemRocketScanningHead",
        "prefab_hash": -1198702771,
        "desc": "",
        "name": "Rocket Scanner Head"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "ScanningHead",
        "sorting_class": "Default"
      }
    },
    "ItemScanner": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemScanner",
        "prefab_hash": 1661270830,
        "desc": "A mysterious piece of technology, rumored to have Zrillian origins.",
        "name": "Handheld Scanner"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemScrewdriver": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemScrewdriver",
        "prefab_hash": 687940869,
        "desc": "This standard issue frictional adherence adjustor is a top of the line, bi-rotational model with a columnated uni-grip. It's definitely not just a screwdriver. Use it for construction and deconstruction of certain kits, and setting values on <link=LogicUnitPage><color=#0080FFFF>logic</color></link> units.",
        "name": "Screwdriver"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemSecurityCamera": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSecurityCamera",
        "prefab_hash": -1981101032,
        "desc": "Security cameras can be paired with a <link=ThingStructureMotionSensor><color=green>Motion Sensor</color></link>, then connected to a <link=ThingStructureConsole><color=green>Console</color></link> fitted with a <link=ThingCircuitboardCameraDisplay><color=green>Camera Display</color></link> for that 'always watched' feeling.",
        "name": "Security Camera"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemSensorLenses": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemSensorLenses",
        "prefab_hash": -1176140051,
        "desc": "These <link=Norsec><color=#0080FFFF>Norsec</color></link> glasses might not be the most fashionable thing, but when a <link=ThingItemSensorProcessingUnitOreScanner><color=green>Sensor Processing Unit (Ore Scanner)</color></link> is inserted, Stationeers can use these handy glasses to x-ray the ground and find ores that are hidden beneath the surface.",
        "name": "Sensor Lenses"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Glasses",
        "sorting_class": "Clothing"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Sensor Processing Unit",
          "typ": "SensorProcessingUnit"
        }
      ]
    },
    "ItemSensorProcessingUnitCelestialScanner": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSensorProcessingUnitCelestialScanner",
        "prefab_hash": -1154200014,
        "desc": "",
        "name": "Sensor Processing Unit (Celestial Scanner)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "SensorProcessingUnit",
        "sorting_class": "Default"
      }
    },
    "ItemSensorProcessingUnitMesonScanner": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSensorProcessingUnitMesonScanner",
        "prefab_hash": -1730464583,
        "desc": "The T-Ray Scanner Sensor Processing Unit can be inserted into the <link=ThingItemSensorLenses><color=green>Sensor Lenses</color></link> to show an overlay of pipes and cables. This can be useful when building behind walls or other structures.",
        "name": "Sensor Processing Unit (T-Ray Scanner)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "SensorProcessingUnit",
        "sorting_class": "Default"
      }
    },
    "ItemSensorProcessingUnitOreScanner": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSensorProcessingUnitOreScanner",
        "prefab_hash": -1219128491,
        "desc": "The Sensor Processing unit can be inserted into <link=ThingItemSensorLenses><color=green>Sensor Lenses</color></link> to reveal underground minerals in a HUD.",
        "name": "Sensor Processing Unit (Ore Scanner)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "SensorProcessingUnit",
        "sorting_class": "Default"
      }
    },
    "ItemSiliconIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSiliconIngot",
        "prefab_hash": -290196476,
        "desc": "",
        "name": "Ingot (Silicon)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Silicon": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemSiliconOre": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSiliconOre",
        "prefab_hash": 1103972403,
        "desc": "Silicon is a chemical element with the symbol \"Si\" and is one of the most useful elements to <link=Stationeers><color=#0080FFFF>Stationeers</color></link>. Readily available throughout the universe, silicon is used in a range of <link=IngotPage><color=#0080FFFF>alloys</color></link>, glass, plastics and various electronic components a Stationeer may  need to complete their mission.",
        "name": "Ore (Silicon)"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 50,
        "reagents": {
          "Silicon": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemSilverIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSilverIngot",
        "prefab_hash": -929742000,
        "desc": "",
        "name": "Ingot (Silver)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Silver": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemSilverOre": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSilverOre",
        "prefab_hash": -916518678,
        "desc": "Silver is a chemical element with the symbol \"Ag\". Valued by many <link=Stationeers><color=#0080FFFF>Stationeers</color></link> for its attractive luster and sheen, it is also used in a variety of <link=ElectronicPage><color=#0080FFFF>electronics</color></link> components and <link=IngotPage><color=#0080FFFF>alloys</color></link>.",
        "name": "Ore (Silver)"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 50,
        "reagents": {
          "Silver": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemSolderIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSolderIngot",
        "prefab_hash": -82508479,
        "desc": "",
        "name": "Ingot (Solder)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Solder": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemSolidFuel": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSolidFuel",
        "prefab_hash": -365253871,
        "desc": "",
        "name": "Solid Fuel (Hydrocarbon)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Hydrocarbon": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Resources"
      }
    },
    "ItemSoundCartridgeBass": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSoundCartridgeBass",
        "prefab_hash": -1883441704,
        "desc": "",
        "name": "Sound Cartridge Bass"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "SoundCartridge",
        "sorting_class": "Default"
      }
    },
    "ItemSoundCartridgeDrums": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSoundCartridgeDrums",
        "prefab_hash": -1901500508,
        "desc": "",
        "name": "Sound Cartridge Drums"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "SoundCartridge",
        "sorting_class": "Default"
      }
    },
    "ItemSoundCartridgeLeads": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSoundCartridgeLeads",
        "prefab_hash": -1174735962,
        "desc": "",
        "name": "Sound Cartridge Leads"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "SoundCartridge",
        "sorting_class": "Default"
      }
    },
    "ItemSoundCartridgeSynth": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSoundCartridgeSynth",
        "prefab_hash": -1971419310,
        "desc": "",
        "name": "Sound Cartridge Synth"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "SoundCartridge",
        "sorting_class": "Default"
      }
    },
    "ItemSoyOil": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSoyOil",
        "prefab_hash": 1387403148,
        "desc": "",
        "name": "Soy Oil"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 100,
        "reagents": {
          "Oil": 1.0
        },
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemSoybean": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSoybean",
        "prefab_hash": 1924673028,
        "desc": " Soybeans grow at a moderate rate, but require atmospheric <link=GasNitrogen><color=#44AD83>Nitrogen</color></link> to grow.  Its main use is to create <link=ThingItemSoyOil><color=green>Soy Oil</color></link>",
        "name": "Soybean"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 100,
        "reagents": {
          "Soy": 1.0
        },
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemSpaceCleaner": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSpaceCleaner",
        "prefab_hash": -1737666461,
        "desc": "There was a time when humanity really wanted to keep space clean. That time has passed.",
        "name": "Space Cleaner"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ItemSpaceHelmet": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemSpaceHelmet",
        "prefab_hash": 714830451,
        "desc": "The basic space helmet insulates <link=Stationeers><color=#0080FFFF>Stationeers</color></link> against everything from hard vacuum to weird cooking smells. Providing a pressure-controlled, breathable atmosphere, it comes with a built-in light powered by your <link=ThingItemEvaSuit><color=green>Eva Suit</color></link> <link=ThingItemBatteryCell><color=green>Battery Cell (Small)</color></link>.\nIt also incorporates a lock/unlock feature to avoid accidental opening, as well as a flush function to expel and replace the internal atmosphere. If damaged, use <link=ThingItemDuctTape><color=green>Duct Tape</color></link> to fix it, or paint it any color you like using the <link=ThingAppliancePaintMixer><color=green>Paint Mixer</color></link>.",
        "name": "Space Helmet"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Helmet",
        "sorting_class": "Clothing"
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "internal_atmo_info": {
        "volume": 3.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "TotalMoles": "Read",
          "Volume": "ReadWrite",
          "RatioNitrousOxide": "Read",
          "Combustion": "Read",
          "Flush": "Write",
          "SoundAlert": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": []
    },
    "ItemSpaceIce": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSpaceIce",
        "prefab_hash": 675686937,
        "desc": "",
        "name": "Space Ice"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemSpaceOre": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSpaceOre",
        "prefab_hash": 2131916219,
        "desc": "Ore mined from asteroids via the <link=ThingStructureRocketMiner><color=green>Rocket Miner</color></link> which then must be processed in the <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link>, or <link=ThingStructureCombustionCentrifuge><color=green>Combustion Centrifuge</color></link> to produce smeltable ores.",
        "name": "Dirty Ore"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 100,
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemSpacepack": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemSpacepack",
        "prefab_hash": -1260618380,
        "desc": "The basic <link=CHAC><color=#0080FFFF>CHAC</color></link> spacepack isn't 'technically' a jetpack, it's a gas thruster. It can be powered by any gas, so long as the internal pressure of the <link=AtmosphericsPage><color=#0080FFFF>canister</color></link> is higher than the ambient external pressure. If the external pressure is greater, the spacepack will not function.\nIndispensable for building, mining and general movement, it has ten storage slots and lets <link=Stationeers><color=#0080FFFF>Stationeers</color></link> fly at 3m/s, compared to the more powerful <link=ThingItemJetpackBasic><color=green>Jetpack Basic</color></link> or <link=ThingItemHardJetpack><color=green>Hardsuit Jetpack</color></link>. Adjusting the thrust value alters your rate of acceleration, while activating the stablizer causes the spacepack to hover when a given height is reached.\nUSE: 'J' to activate; 'space' to fly up; 'left ctrl' to descend; and 'WASD' to move.",
        "name": "Spacepack"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Back",
        "sorting_class": "Clothing"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Propellant",
          "typ": "GasCanister"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "ItemSprayCanBlack": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSprayCanBlack",
        "prefab_hash": -688107795,
        "desc": "Go classic, clandestine or just plain Gothic with black paint, which can be applied to most items. Each can has 20 uses.",
        "name": "Spray Paint (Black)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Bottle",
        "sorting_class": "Default"
      }
    },
    "ItemSprayCanBlue": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSprayCanBlue",
        "prefab_hash": -498464883,
        "desc": "What kind of a color is blue? The kind of of color that says, 'Hey, what about me?'",
        "name": "Spray Paint (Blue)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Bottle",
        "sorting_class": "Default"
      }
    },
    "ItemSprayCanBrown": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSprayCanBrown",
        "prefab_hash": 845176977,
        "desc": "In more artistic <link=Stationeers><color=#0080FFFF>Stationeers</color></link> circles, the absence of brown is often lamented, but seldom changed.",
        "name": "Spray Paint (Brown)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Bottle",
        "sorting_class": "Default"
      }
    },
    "ItemSprayCanGreen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSprayCanGreen",
        "prefab_hash": -1880941852,
        "desc": "Green is the color of life, and longing. Paradoxically, it's also the color of envy, and tolerance. It denotes sickness, youth, and wealth. But really, it's just what light does at around 500 billionths of a meter.",
        "name": "Spray Paint (Green)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Bottle",
        "sorting_class": "Default"
      }
    },
    "ItemSprayCanGrey": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSprayCanGrey",
        "prefab_hash": -1645266981,
        "desc": "Arguably the most popular color in the universe, grey was invented so designers had something to do.",
        "name": "Spray Paint (Grey)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Bottle",
        "sorting_class": "Default"
      }
    },
    "ItemSprayCanKhaki": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSprayCanKhaki",
        "prefab_hash": 1918456047,
        "desc": "Not so much a single color, as a category of boredom, khaki is the pigmentation equivalent of a mild depressive episode.",
        "name": "Spray Paint (Khaki)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Bottle",
        "sorting_class": "Default"
      }
    },
    "ItemSprayCanOrange": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSprayCanOrange",
        "prefab_hash": -158007629,
        "desc": "Orange is fun, but also suggestive of hazards. Sitting proudly in the middle of the visual spectrum, it has nothing to prove.",
        "name": "Spray Paint (Orange)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Bottle",
        "sorting_class": "Default"
      }
    },
    "ItemSprayCanPink": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSprayCanPink",
        "prefab_hash": 1344257263,
        "desc": "With the invention of enduring chemical dyes, the 20th century bestowed associations with innocence and tenderness upon this pale tint of red. Yet classically, it was the color of seduction and eroticism. Things change.",
        "name": "Spray Paint (Pink)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Bottle",
        "sorting_class": "Default"
      }
    },
    "ItemSprayCanPurple": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSprayCanPurple",
        "prefab_hash": 30686509,
        "desc": "Purple is a curious color. You need to be careful with purple. It can be very good, or go horribly, horribly wrong.",
        "name": "Spray Paint (Purple)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Bottle",
        "sorting_class": "Default"
      }
    },
    "ItemSprayCanRed": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSprayCanRed",
        "prefab_hash": 1514393921,
        "desc": "The king of colors, red is perhaps the defining tone of the universe. Linked to blood, royalty, fire and damnation, it is the chromatic expression of power.",
        "name": "Spray Paint (Red)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Bottle",
        "sorting_class": "Default"
      }
    },
    "ItemSprayCanWhite": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSprayCanWhite",
        "prefab_hash": 498481505,
        "desc": "White looks clean, sharp and nice. But <link=Stationeers><color=#0080FFFF>Stationeering</color></link> can be a dirty job. White tends to scuff.",
        "name": "Spray Paint (White)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Bottle",
        "sorting_class": "Default"
      }
    },
    "ItemSprayCanYellow": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSprayCanYellow",
        "prefab_hash": 995468116,
        "desc": "A caricature of light itself, yellow lacks the self-confidence of red, or the swagger of purple. It's less fun than orange, but less emotionally limp than khaki. It's hard to know when yellow is appropriate, but it persists as a primary color regardless. Suggesting that yellow gonna yellow, no matter what anyone thinks.",
        "name": "Spray Paint (Yellow)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Bottle",
        "sorting_class": "Default"
      }
    },
    "ItemSprayGun": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemSprayGun",
        "prefab_hash": 1289723966,
        "desc": "Use with Spray cans in the <link=SlotSprayCan><color=orange>Spray Can</color></link> to paint structures, cables and pipes. Much more efficient and faster than doing it with individual spray cans.",
        "name": "Spray Gun"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "slots": [
        {
          "name": "Spray Can",
          "typ": "Bottle"
        }
      ]
    },
    "ItemSteelFrames": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSteelFrames",
        "prefab_hash": -1448105779,
        "desc": "An advanced and stronger version of <link=ThingItemIronFrames><color=green>Iron Frames</color></link>, steel frames are placed by right-clicking. To complete construction, use <link=ThingItemSteelSheets><color=green>Steel Sheets</color></link> and a <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link> in your active hand.",
        "name": "Steel Frames"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 30,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemSteelIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSteelIngot",
        "prefab_hash": -654790771,
        "desc": "Steel ingots are a metal alloy, crafted in a <link=ThingStructureFurnace><color=green>Furnace</color></link> by smelting <link=ThingItemIronOre><color=green>Ore (Iron)</color></link> and <link=ThingItemCoalOre><color=green>Ore (Coal)</color></link> at a ratio of 3:1.\nIt may not be elegant, but <link=ThingItemOxite><color=green>Ice (Oxite)</color></link> and <link=ThingItemVolatiles><color=green>Ice (Volatiles)</color></link> can be combined at a ratio of 1:2 in a furnace to create the necessary gas mixture for smelting.",
        "name": "Ingot (Steel)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Steel": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemSteelSheets": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSteelSheets",
        "prefab_hash": 38555961,
        "desc": "An advanced building material, <link=ThingItemSteelIngot><color=green>Ingot (Steel)</color></link> sheets are used when constructing a <link=ThingStructureFrame><color=green>Steel Frame</color></link> and several other <link=StructuresPage><color=#0080FFFF>wall</color></link> types.",
        "name": "Steel Sheets"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemStelliteGlassSheets": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemStelliteGlassSheets",
        "prefab_hash": -2038663432,
        "desc": "A stronger glass substitute.",
        "name": "Stellite Glass Sheets"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemStelliteIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemStelliteIngot",
        "prefab_hash": -1897868623,
        "desc": "",
        "name": "Ingot (Stellite)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Stellite": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemSugar": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSugar",
        "prefab_hash": 2111910840,
        "desc": "",
        "name": "Sugar"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Sugar": 10.0
        },
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ItemSugarCane": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSugarCane",
        "prefab_hash": -1335056202,
        "desc": "",
        "name": "Sugarcane"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 100,
        "reagents": {
          "Sugar": 1.0
        },
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemSuitModCryogenicUpgrade": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemSuitModCryogenicUpgrade",
        "prefab_hash": -1274308304,
        "desc": "Enables suits with basic cooling functionality to work with cryogenic liquid.",
        "name": "Cryogenic Suit Upgrade"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "SuitMod",
        "sorting_class": "Default"
      }
    },
    "ItemTablet": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemTablet",
        "prefab_hash": -229808600,
        "desc": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> handheld 'Padi' tablet is an all-purpose data platform, provided as standard issue to all <link=Stationeers><color=#0080FFFF>Stationeers</color></link>. A dynamic multi-tool that accepts a range of <link=CartridgePage><color=#0080FFFF>cartridges</color></link>, the Padi becomes an <link=ThingCartridgeAtmosAnalyser><color=green>Atmos Analyzer</color></link> or <link=ThingCartridgeTracker><color=green>Tracker</color></link>, <link=ThingCartridgeMedicalAnalyser><color=green>Medical Analyzer</color></link>, <link=ThingCartridgeOreScanner><color=green>Ore Scanner</color></link>, <link=ThingCartridgeElectronicReader><color=green>eReader</color></link>, and various other functions.",
        "name": "Handheld Tablet"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Cartridge",
          "typ": "Cartridge"
        }
      ]
    },
    "ItemTerrainManipulator": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemTerrainManipulator",
        "prefab_hash": 111280987,
        "desc": "0.Mode0\n1.Mode1",
        "name": "Terrain Manipulator"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Default"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Mode0",
          "1": "Mode1"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Dirt Canister",
          "typ": "Ore"
        }
      ]
    },
    "ItemTomato": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemTomato",
        "prefab_hash": -998592080,
        "desc": "Tomato plants are perennial, and will produce multiple harvests without needing to be replanted. Once the plant is mature, it will fruit at a moderate pace.",
        "name": "Tomato"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 20,
        "reagents": {
          "Tomato": 1.0
        },
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemTomatoSoup": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemTomatoSoup",
        "prefab_hash": 688734890,
        "desc": "Made using <link=ThingItemCookedTomato><color=green>Cooked Tomato</color></link>s and an <link=ThingItemEmptyCan><color=green>Empty Can</color></link> in a <link=ThingAppliancePackagingMachine><color=green>Basic Packaging Machine</color></link> or <link=ThingStructureAdvancedPackagingMachine><color=green>Advanced Packaging Machine</color></link>.",
        "name": "Tomato Soup"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Food"
      }
    },
    "ItemToolBelt": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemToolBelt",
        "prefab_hash": -355127880,
        "desc": "If there's one piece of equipment that embodies <link=Stationeers><color=#0080FFFF>Stationeer</color></link> life above all else, it's the humble toolbelt (Editor's note: a recent <link=ODA><color=#0080FFFF>ODA</color></link> survey of iconic Stationeer equipment also rated the smoking, toxic ruins of an over-pressurized <link=ThingStructureFurnace><color=green>Furnace</color></link> lying amid the charred remains of your latest base very highly).\nDesigned to meet the most strict-ish ODA safety standards, the toolbelt's eight slots hold one thing: tools, and <link=ThingItemCableCoil><color=green>Cable Coil</color></link>. Not to be confused with the <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>.",
        "name": "Tool Belt"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Belt",
        "sorting_class": "Clothing"
      },
      "slots": [
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        },
        {
          "name": "Tool",
          "typ": "Tool"
        }
      ]
    },
    "ItemTropicalPlant": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemTropicalPlant",
        "prefab_hash": -800947386,
        "desc": "An anthurium, evolved in the jungles of South America, which will tolerate higher temperatures than most plants.",
        "name": "Tropical Lily"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Resources"
      }
    },
    "ItemUraniumOre": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemUraniumOre",
        "prefab_hash": -1516581844,
        "desc": "In 1934, Enrico Fermi noticed that bombarding uranium with neutrons produced a burst of beta rays, and a new material. This process was named 'nuclear fission', and resulted in cheap energy, the Cold War, and countless thousand deaths. While reasonably common throughout the Solar System, <link=Stationeers><color=#0080FFFF>Stationeers</color></link> are wary of the material.",
        "name": "Ore (Uranium)"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 50,
        "reagents": {
          "Uranium": 1.0
        },
        "slot_class": "Ore",
        "sorting_class": "Ores"
      }
    },
    "ItemVolatiles": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemVolatiles",
        "prefab_hash": 1253102035,
        "desc": "An extremely reactive ice with numerous hydrocarbons trapped inside. For simplicity's sake, these are often displayed as H2 by devices like the <link=ThingCartridgeAtmosAnalyser><color=green>Atmos Analyzer</color></link>.\n      \n<link=GasVolatiles><color=#44AD83>Volatiles</color></link> combust in a 2:1 ratio with <link=GasOxygen><color=#44AD83>Oxygen</color></link>, creating <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> and pollutants. However when catalysed via devices such as the <link=ThingH2Combustor><color=green>H2 Combustor</color></link> in the presence of <link=GasOxygen><color=#44AD83>Oxygen</color></link>, they produce\n        <link=GasSteam><color=#44AD83>Steam</color></link> and heat with a modicum of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> and <link=GasPollutant><color=#44AD83>Pollutant</color></link> due to the autoignition of the volatiles in the chamber. Along with <link=GasOxygen><color=#44AD83>Oxygen</color></link>, volatiles gas is also the major component of fuel for such devices as the <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link>.\n",
        "name": "Ice (Volatiles)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 50,
        "slot_class": "Ore",
        "sorting_class": "Ices"
      }
    },
    "ItemWallCooler": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWallCooler",
        "prefab_hash": -1567752627,
        "desc": "This kit creates a <link=ThingStructureWallCooler><color=green>Wall Cooler</color></link>.",
        "name": "Kit (Wall Cooler)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemWallHeater": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWallHeater",
        "prefab_hash": 1880134612,
        "desc": "This kit creates a <link=ThingItemWallHeater><color=green>Kit (Wall Heater)</color></link>.",
        "name": "Kit (Wall Heater)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemWallLight": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWallLight",
        "prefab_hash": 1108423476,
        "desc": "This kit creates any one of ten <link=ThingItemWallLight><color=green>Kit (Lights)</color></link> variants.",
        "name": "Kit (Lights)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemWaspaloyIngot": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWaspaloyIngot",
        "prefab_hash": 156348098,
        "desc": "",
        "name": "Ingot (Waspaloy)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 500,
        "reagents": {
          "Waspaloy": 1.0
        },
        "slot_class": "Ingot",
        "sorting_class": "Resources"
      }
    },
    "ItemWaterBottle": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWaterBottle",
        "prefab_hash": 107741229,
        "desc": "Delicious and pure H20, refined from local sources as varied as Venusian ice and trans-Solar comets. Empty bottles can be refilled using the <link=ThingStructureWaterBottleFiller><color=green>Water Bottle Filler</color></link>.",
        "name": "Water Bottle"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "LiquidBottle",
        "sorting_class": "Default"
      }
    },
    "ItemWaterPipeDigitalValve": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWaterPipeDigitalValve",
        "prefab_hash": 309693520,
        "desc": "",
        "name": "Kit (Liquid Digital Valve)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemWaterPipeMeter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWaterPipeMeter",
        "prefab_hash": -90898877,
        "desc": "",
        "name": "Kit (Liquid Pipe Meter)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemWaterWallCooler": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWaterWallCooler",
        "prefab_hash": -1721846327,
        "desc": "",
        "name": "Kit (Liquid Wall Cooler)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 5,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "ItemWearLamp": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemWearLamp",
        "prefab_hash": -598730959,
        "desc": "",
        "name": "Headlamp"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Helmet",
        "sorting_class": "Clothing"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "ItemWeldingTorch": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "ItemWeldingTorch",
        "prefab_hash": -2066892079,
        "desc": "Stored in the standard issue <link=Stationeers><color=#0080FFFF>Stationeers</color></link> <link=ThingItemToolBelt><color=green>Tool Belt</color></link>, the Arlite welding torch is used to construct a range of essential structures.\nAn upgraded version of the classic 'Zairo' model first manufactured by <link=ExMin><color=#0080FFFF>ExMin</color></link> for modular space habitat assembly, the Arlite is powered by a single <link=ThingItemGasCanisterFuel><color=green>Canister (Fuel)</color></link> and designed to function equally well in deep space and deep gravity wells.",
        "name": "Welding Torch"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      },
      "thermal_info": {
        "convection_factor": 0.5,
        "radiation_factor": 0.5
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "GasCanister"
        }
      ]
    },
    "ItemWheat": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWheat",
        "prefab_hash": -1057658015,
        "desc": "A classical symbol of growth and new life, wheat takes a moderate time to grow. Its main use is to create <link=ReagentPage><color=#0080FFFF>flour</color></link> using the <link=ThingApplianceReagentProcessor><color=green>Reagent Processor</color></link>.",
        "name": "Wheat"
      },
      "item": {
        "consumable": false,
        "ingredient": true,
        "max_quantity": 100,
        "reagents": {
          "Carbon": 1.0
        },
        "slot_class": "Plant",
        "sorting_class": "Default"
      }
    },
    "ItemWireCutters": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWireCutters",
        "prefab_hash": 1535854074,
        "desc": "Wirecutters allow you to deconstruct various <link=StructurePage><color=#0080FFFF>structures</color></link>, as well as cross-lay cables when held in your non-active hand, and defuse explosives as needed. Wirecutters are stored in the <link=ThingItemToolBelt><color=green>Tool Belt</color></link>, along with other essential <link=ToolPage><color=#0080FFFF>tools</color></link>.",
        "name": "Wire Cutters"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "ItemWirelessBatteryCellExtraLarge": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "ItemWirelessBatteryCellExtraLarge",
        "prefab_hash": -504717121,
        "desc": "0.Empty\n1.Critical\n2.VeryLow\n3.Low\n4.Medium\n5.High\n6.Full",
        "name": "Wireless Battery Cell Extra Large"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Battery",
        "sorting_class": "Default"
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Mode": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Empty",
          "1": "Critical",
          "2": "VeryLow",
          "3": "Low",
          "4": "Medium",
          "5": "High",
          "6": "Full"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": []
    },
    "ItemWreckageAirConditioner1": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageAirConditioner1",
        "prefab_hash": -1826023284,
        "desc": "",
        "name": "Wreckage Air Conditioner"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageAirConditioner2": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageAirConditioner2",
        "prefab_hash": 169888054,
        "desc": "",
        "name": "Wreckage Air Conditioner"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageHydroponicsTray1": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageHydroponicsTray1",
        "prefab_hash": -310178617,
        "desc": "",
        "name": "Wreckage Hydroponics Tray"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageLargeExtendableRadiator01": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageLargeExtendableRadiator01",
        "prefab_hash": -997763,
        "desc": "",
        "name": "Wreckage Large Extendable Radiator"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageStructureRTG1": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageStructureRTG1",
        "prefab_hash": 391453348,
        "desc": "",
        "name": "Wreckage Structure RTG"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageStructureWeatherStation001": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageStructureWeatherStation001",
        "prefab_hash": -834664349,
        "desc": "",
        "name": "Wreckage Structure Weather Station"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageStructureWeatherStation002": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageStructureWeatherStation002",
        "prefab_hash": 1464424921,
        "desc": "",
        "name": "Wreckage Structure Weather Station"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageStructureWeatherStation003": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageStructureWeatherStation003",
        "prefab_hash": 542009679,
        "desc": "",
        "name": "Wreckage Structure Weather Station"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageStructureWeatherStation004": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageStructureWeatherStation004",
        "prefab_hash": -1104478996,
        "desc": "",
        "name": "Wreckage Structure Weather Station"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageStructureWeatherStation005": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageStructureWeatherStation005",
        "prefab_hash": -919745414,
        "desc": "",
        "name": "Wreckage Structure Weather Station"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageStructureWeatherStation006": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageStructureWeatherStation006",
        "prefab_hash": 1344576960,
        "desc": "",
        "name": "Wreckage Structure Weather Station"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageStructureWeatherStation007": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageStructureWeatherStation007",
        "prefab_hash": 656649558,
        "desc": "",
        "name": "Wreckage Structure Weather Station"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageStructureWeatherStation008": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageStructureWeatherStation008",
        "prefab_hash": -1214467897,
        "desc": "",
        "name": "Wreckage Structure Weather Station"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageTurbineGenerator1": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageTurbineGenerator1",
        "prefab_hash": -1662394403,
        "desc": "",
        "name": "Wreckage Turbine Generator"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageTurbineGenerator2": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageTurbineGenerator2",
        "prefab_hash": 98602599,
        "desc": "",
        "name": "Wreckage Turbine Generator"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageTurbineGenerator3": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageTurbineGenerator3",
        "prefab_hash": 1927790321,
        "desc": "",
        "name": "Wreckage Turbine Generator"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageWallCooler1": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageWallCooler1",
        "prefab_hash": -1682930158,
        "desc": "",
        "name": "Wreckage Wall Cooler"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWreckageWallCooler2": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWreckageWallCooler2",
        "prefab_hash": 45733800,
        "desc": "",
        "name": "Wreckage Wall Cooler"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Wreckage",
        "sorting_class": "Default"
      }
    },
    "ItemWrench": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ItemWrench",
        "prefab_hash": -1886261558,
        "desc": "One of humanity's enduring contributions to the cosmos, the wrench represents the essence of our species. A simple, effective and spiritually barren tool, use it to build and deconstruct a variety of <link=StructurePage><color=#0080FFFF>structures</color></link>",
        "name": "Wrench"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Tool",
        "sorting_class": "Tools"
      }
    },
    "KitSDBSilo": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "KitSDBSilo",
        "prefab_hash": 1932952652,
        "desc": "This kit creates a <link=ThingStructureSDBSilo><color=green>SDB Silo</color></link>.",
        "name": "Kit (SDB Silo)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "KitStructureCombustionCentrifuge": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "KitStructureCombustionCentrifuge",
        "prefab_hash": 231903234,
        "desc": "",
        "name": "Kit (Combustion Centrifuge)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Kits"
      }
    },
    "KitchenTableShort": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "KitchenTableShort",
        "prefab_hash": -1427415566,
        "desc": "",
        "name": "Kitchen Table (Short)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "KitchenTableSimpleShort": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "KitchenTableSimpleShort",
        "prefab_hash": -78099334,
        "desc": "",
        "name": "Kitchen Table (Simple Short)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "KitchenTableSimpleTall": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "KitchenTableSimpleTall",
        "prefab_hash": -1068629349,
        "desc": "",
        "name": "Kitchen Table (Simple Tall)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "KitchenTableTall": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "KitchenTableTall",
        "prefab_hash": -1386237782,
        "desc": "",
        "name": "Kitchen Table (Tall)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Lander": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "Lander",
        "prefab_hash": 1605130615,
        "desc": "",
        "name": "Lander"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "Entity",
          "typ": "Entity"
        }
      ]
    },
    "Landingpad_2x2CenterPiece01": {
      "templateType": "StructureLogic",
      "prefab": {
        "prefab_name": "Landingpad_2x2CenterPiece01",
        "prefab_hash": -1295222317,
        "desc": "Recommended for larger traders. This allows for the creation of 4x4 and 6x6 landing areas with symetrical doors",
        "name": "Landingpad 2x2 Center Piece"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {},
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": []
    },
    "Landingpad_BlankPiece": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Landingpad_BlankPiece",
        "prefab_hash": 912453390,
        "desc": "",
        "name": "Landingpad"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Landingpad_CenterPiece01": {
      "templateType": "StructureLogic",
      "prefab": {
        "prefab_name": "Landingpad_CenterPiece01",
        "prefab_hash": 1070143159,
        "desc": "The target point where the trader shuttle will land. Requires a clear view of the sky.",
        "name": "Landingpad Center"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {},
        "modes": {
          "0": "None",
          "1": "NoContact",
          "2": "Moving",
          "3": "Holding",
          "4": "Landed"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": []
    },
    "Landingpad_CrossPiece": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Landingpad_CrossPiece",
        "prefab_hash": 1101296153,
        "desc": "Extends the size of the landing pad area. A basic trader shuttle requires a 3x3 clear landing area.",
        "name": "Landingpad Cross"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Landingpad_DataConnectionPiece": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "Landingpad_DataConnectionPiece",
        "prefab_hash": -2066405918,
        "desc": "Provides power to the landing pad. The data port must be connected to the data port of a computer with a communications motherboard for a trader to be called in to land.",
        "name": "Landingpad Data And Power"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Vertical": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "ContactTypeId": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "None",
          "1": "NoContact",
          "2": "Moving",
          "3": "Holding",
          "4": "Landed"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "Landingpad_DiagonalPiece01": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Landingpad_DiagonalPiece01",
        "prefab_hash": 977899131,
        "desc": "Extends the size of the landing pad area. A basic trader shuttle requires a 3x3 clear landing area.",
        "name": "Landingpad Diagonal"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Landingpad_GasConnectorInwardPiece": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "Landingpad_GasConnectorInwardPiece",
        "prefab_hash": 817945707,
        "desc": "",
        "name": "Landingpad Gas Input"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "Landingpad_GasConnectorOutwardPiece": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "Landingpad_GasConnectorOutwardPiece",
        "prefab_hash": -1100218307,
        "desc": "Pumps gas purchased from a trader out of the landing pad. You can increase the landing pad's gas storage capacity by adding more <link=ThingLandingpad_GasCylinderTankPiece><color=green>Landingpad Gas Storage</color></link> to the landing pad.",
        "name": "Landingpad Gas Output"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "Landingpad_GasCylinderTankPiece": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Landingpad_GasCylinderTankPiece",
        "prefab_hash": 170818567,
        "desc": "Increases the volume of the landing pads gas storage capacity. This volume is used for buying and selling gas to traders.",
        "name": "Landingpad Gas Storage"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Landingpad_LiquidConnectorInwardPiece": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "Landingpad_LiquidConnectorInwardPiece",
        "prefab_hash": -1216167727,
        "desc": "",
        "name": "Landingpad Liquid Input"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "Landingpad_LiquidConnectorOutwardPiece": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "Landingpad_LiquidConnectorOutwardPiece",
        "prefab_hash": -1788929869,
        "desc": "Pumps liquid purchased from a trader out of the landing pad. You can increase the landing pad's liquid storage capacity by adding more <link=ThingLandingpad_GasCylinderTankPiece><color=green>Landingpad Gas Storage</color></link> to the landing pad.",
        "name": "Landingpad Liquid Output"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "Landingpad_StraightPiece01": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Landingpad_StraightPiece01",
        "prefab_hash": -976273247,
        "desc": "Extends the size of the landing pad area. A basic trader shuttle requires a 3x3 clear landing area.",
        "name": "Landingpad Straight"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Landingpad_TaxiPieceCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Landingpad_TaxiPieceCorner",
        "prefab_hash": -1872345847,
        "desc": "",
        "name": "Landingpad Taxi Corner"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Landingpad_TaxiPieceHold": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Landingpad_TaxiPieceHold",
        "prefab_hash": 146051619,
        "desc": "",
        "name": "Landingpad Taxi Hold"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Landingpad_TaxiPieceStraight": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Landingpad_TaxiPieceStraight",
        "prefab_hash": -1477941080,
        "desc": "",
        "name": "Landingpad Taxi Straight"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Landingpad_ThreshholdPiece": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "Landingpad_ThreshholdPiece",
        "prefab_hash": -1514298582,
        "desc": "",
        "name": "Landingpad Threshhold"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "LandingPad",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "LogicStepSequencer8": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "LogicStepSequencer8",
        "prefab_hash": 1531272458,
        "desc": "The <link=ODA><color=#0080FFFF>ODA</color></link> does not approve of soundtracks or other distractions.\nAs such, <link=Stationeers><color=#0080FFFF>Stationeers</color></link> have had to create their own musical accompaniment to the demanding labor of building and maintaining off-world infrastructure.\nCentral to this pastime is the step sequencer, which allows Stationeers to sequence short musical patterns or loops. \n\n<size=120%><b>DIY MUSIC - GETTING STARTED</b></size>\n\n1: Connect 8 <link=ThingDeviceStepUnit><color=green>Device Step Unit</color></link>s to your step sequencer via the data port on the left hand side.\n\n2: Label each step unit, then assign step units 1 through 8 on the step sequencer using the screwdriver.\n\n3: Select the output speaker (eg <link=ThingPassiveSpeaker><color=green>Passive Speaker</color></link>) where the sequencer will play the sounds. This needs to be connected to the logic network on the right hand side of the sequencer.\n\n4: Place a <link=ThingStopWatch><color=green>Stop Watch</color></link> and use a <link=ThingStructureLogicReader><color=green>Logic Reader</color></link> and <link=ThingStructureLogicWriter><color=green>Logic Writer</color></link> to write the time to the time variable on the sequencer.\n\n5: Set the BPM on the sequencer using a <link=ThingStructureLogicDial><color=green>Dial</color></link> and a <link=ThingStructureLogicWriter><color=green>Logic Writer</color></link> to write to the sequencer's BPM variable. A higher bpm will play the sequence faster. \n\n6: Insert a sound cartridge of your choosing and select which variant of sound you wish to play by pushing the arrow buttons located above and below the sound cartridge slot.\n\n7: Choose the pitch of the sounds to play by setting the dial on each of your 8 step units to the desired note. With drums, each note is a different drum sounds. You can trial your sounds by pushing the activate button on each step unit (with the sequencer inactive).\n\n8: Get freaky with the <link=ThingDeviceLfoVolume><color=green>Low frequency oscillator</color></link>.\n\n9: Finally, activate the sequencer, Vibeoneer.",
        "name": "Logic Step Sequencer"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "Time": "ReadWrite",
          "Bpm": "ReadWrite",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Whole Note",
          "1": "Half Note",
          "2": "Quarter Note",
          "3": "Eighth Note",
          "4": "Sixteenth Note"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Sound Cartridge",
          "typ": "SoundCartridge"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Input"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "Meteorite": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "Meteorite",
        "prefab_hash": -99064335,
        "desc": "",
        "name": "Meteorite"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "MonsterEgg": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "MonsterEgg",
        "prefab_hash": -1667675295,
        "desc": "<N:EN:MonsterEgg>",
        "name": "<N:EN:MonsterEgg>"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "MotherboardComms": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "MotherboardComms",
        "prefab_hash": -337075633,
        "desc": "When placed in a <link=ThingStructureComputer><color=green>Computer</color></link> and connected to a <link=ThingLandingpad_DataConnectionPiece><color=green>Landingpad Data And Power</color></link>, a <link=ThingStructureSatelliteDish><color=green>Medium Satellite Dish</color></link>, and a <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link> allows Stationeers to trade with suppliers. Adjust the horizontal and vertical attributes of the <link=ThingStructureSatelliteDish><color=green>Medium Satellite Dish</color></link> either directly or through logic. You need a communications signal of 95% or above to establish reliable communications with a trader. A minimum of a 3x3 clear pad area with a <link=ThingLandingpad_CenterPiece01><color=green>Landingpad Center</color></link> at the center is required for a trader to land.",
        "name": "Communications Motherboard"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Motherboard",
        "sorting_class": "Default"
      }
    },
    "MotherboardLogic": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "MotherboardLogic",
        "prefab_hash": 502555944,
        "desc": "Motherboards are connected to <link=ThingStructureComputer><color=green>Computer</color></link>s to perform various technical functions.\nThe <link=Norsec><color=#0080FFFF>Norsec-designed</color></link> K-cops logic motherboard allows <link=Stationeers><color=#0080FFFF>Stationeers</color></link> to set variables and actions on specific <link=LogicUnitPage><color=#0080FFFF>logic</color></link>-controlled items.",
        "name": "Logic Motherboard"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Motherboard",
        "sorting_class": "Default"
      }
    },
    "MotherboardMissionControl": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "MotherboardMissionControl",
        "prefab_hash": -127121474,
        "desc": "<N:EN:MotherboardMissionControl>",
        "name": "<N:EN:MotherboardMissionControl>"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Motherboard",
        "sorting_class": "Default"
      }
    },
    "MotherboardProgrammableChip": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "MotherboardProgrammableChip",
        "prefab_hash": -161107071,
        "desc": "When placed in a <link=ThingStructureComputer><color=green>Computer</color></link>, the IC Editor allows players to write and edit IC code, which can then be uploaded to a <link=ThingItemIntegratedCircuit10><color=green>Integrated Circuit (IC10)</color></link> if housed in an <link=ThingStructureCircuitHousing><color=green>IC Housing</color></link>.",
        "name": "IC Editor Motherboard"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Motherboard",
        "sorting_class": "Default"
      }
    },
    "MotherboardRockets": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "MotherboardRockets",
        "prefab_hash": -806986392,
        "desc": "",
        "name": "Rocket Control Motherboard"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Motherboard",
        "sorting_class": "Default"
      }
    },
    "MotherboardSorter": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "MotherboardSorter",
        "prefab_hash": -1908268220,
        "desc": "Motherboards are connected to <link=ThingStructureComputer><color=green>Computer</color></link>s to perform various technical functions.\nThe <link=Norsec><color=#0080FFFF>Norsec-designed</color></link> K-cops 10-10 sorter motherboard permits <link=Stationeers><color=#0080FFFF>Stationeers</color></link> to control which items a <link=ThingStructureSorter><color=green>Sorter</color></link> does, and does not, permit to pass.",
        "name": "Sorter Motherboard"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Motherboard",
        "sorting_class": "Default"
      }
    },
    "MothershipCore": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "MothershipCore",
        "prefab_hash": -1930442922,
        "desc": "A relic of from an earlier era of space ambition, <link=Sinotai><color=#0080FFFF>Sinotai's</color></link> mothership cores formed the central element of a generation's space-going creations. While Sinotai's pivot to smaller, modular craft upset some purists, motherships continue to be built and maintained by dedicated enthusiasts.",
        "name": "Mothership Core"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "NpcChick": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "NpcChick",
        "prefab_hash": 155856647,
        "desc": "",
        "name": "Chick"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "slots": [
        {
          "name": "Brain",
          "typ": "Organ"
        },
        {
          "name": "Lungs",
          "typ": "Organ"
        }
      ]
    },
    "NpcChicken": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "NpcChicken",
        "prefab_hash": 399074198,
        "desc": "",
        "name": "Chicken"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "slots": [
        {
          "name": "Brain",
          "typ": "Organ"
        },
        {
          "name": "Lungs",
          "typ": "Organ"
        }
      ]
    },
    "PassiveSpeaker": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "PassiveSpeaker",
        "prefab_hash": 248893646,
        "desc": "",
        "name": "Passive Speaker"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Volume": "ReadWrite",
          "PrefabHash": "ReadWrite",
          "SoundAlert": "ReadWrite",
          "ReferenceId": "ReadWrite",
          "NameHash": "ReadWrite"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "PipeBenderMod": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "PipeBenderMod",
        "prefab_hash": 443947415,
        "desc": "Apply to an <link=ThingStructureHydraulicPipeBender><color=green>Hydraulic Pipe Bender</color></link> with a <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link> or <link=ThingItemArcWelder><color=green>Arc Welder</color></link> to upgrade for increased processing speed and more recipe options.",
        "name": "Pipe Bender Mod"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "PortableComposter": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "PortableComposter",
        "prefab_hash": -1958705204,
        "desc": "A simple composting device, the basic composter creates <link=ThingFertilizer><color=green>Fertilizer</color></link> out of organic matter. It accepts <link=OrganicPage><color=#0080FFFF>food</color></link>, <link=ThingDecayedFood><color=green>Decayed Food</color></link> or <link=ThingItemBiomass><color=green>Biomass</color></link>. It requires a full <link=ThingItemLiquidCanisterEmpty><color=green>Liquid Canister</color></link> and a battery to operate, accelerating the natural composting process.\nWhen processing, it releases nitrogen and volatiles, as well a small amount of heat.\n\n<size=120%><b>Compost composition</b></size>\nFertilizer is produced at a 1:3 ratio of fertilizer to ingredients. The fertilizer's effects on plants will vary depending on the respective proportions of its ingredients.\n\n- <link=OrganicPage><color=#0080FFFF>food</color></link> increases PLANT YIELD up to two times\n- <link=ThingDecayedFood><color=green>Decayed Food</color></link> increases plant GROWTH SPEED up to two times\n- <link=ThingItemBiomass><color=green>Biomass</color></link> increases the NUMBER OF GROWTH CYCLES the fertilizer lasts for",
        "name": "Portable Composter"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "Battery"
        },
        {
          "name": "Liquid Canister",
          "typ": "LiquidCanister"
        }
      ]
    },
    "PortableSolarPanel": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "PortableSolarPanel",
        "prefab_hash": 2043318949,
        "desc": "",
        "name": "Portable Solar Panel"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Open": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "RailingElegant01": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "RailingElegant01",
        "prefab_hash": 399661231,
        "desc": "",
        "name": "Railing Elegant (Type 1)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "RailingElegant02": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "RailingElegant02",
        "prefab_hash": -1898247915,
        "desc": "",
        "name": "Railing Elegant (Type 2)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "RailingIndustrial02": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "RailingIndustrial02",
        "prefab_hash": -2072792175,
        "desc": "",
        "name": "Railing Industrial (Type 2)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "ReagentColorBlue": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ReagentColorBlue",
        "prefab_hash": 980054869,
        "desc": "",
        "name": "Color Dye (Blue)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 100,
        "reagents": {
          "ColorBlue": 10.0
        },
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ReagentColorGreen": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ReagentColorGreen",
        "prefab_hash": 120807542,
        "desc": "",
        "name": "Color Dye (Green)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 100,
        "reagents": {
          "ColorGreen": 10.0
        },
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ReagentColorOrange": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ReagentColorOrange",
        "prefab_hash": -400696159,
        "desc": "",
        "name": "Color Dye (Orange)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 100,
        "reagents": {
          "ColorOrange": 10.0
        },
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ReagentColorRed": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ReagentColorRed",
        "prefab_hash": 1998377961,
        "desc": "",
        "name": "Color Dye (Red)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 100,
        "reagents": {
          "ColorRed": 10.0
        },
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "ReagentColorYellow": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ReagentColorYellow",
        "prefab_hash": 635208006,
        "desc": "",
        "name": "Color Dye (Yellow)"
      },
      "item": {
        "consumable": true,
        "ingredient": true,
        "max_quantity": 100,
        "reagents": {
          "ColorYellow": 10.0
        },
        "slot_class": "None",
        "sorting_class": "Resources"
      }
    },
    "RespawnPoint": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "RespawnPoint",
        "prefab_hash": -788672929,
        "desc": "Place a respawn point to set a player entry point to your base when loading in, or returning from the dead.",
        "name": "Respawn Point"
      },
      "structure": {
        "small_grid": true
      }
    },
    "RespawnPointWallMounted": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "RespawnPointWallMounted",
        "prefab_hash": -491247370,
        "desc": "",
        "name": "Respawn Point (Mounted)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "Robot": {
      "templateType": "ItemCircuitHolder",
      "prefab": {
        "prefab_name": "Robot",
        "prefab_hash": 434786784,
        "desc": "Designed by - presumably drunk - <link=Norsec><color=#0080FFFF>Norsec</color></link> roboticists, AIMeE (or Automated Independent Mechanical Entity) can be a <link=Stationeers><color=#0080FFFF>Stationeer's</color></link> best friend, or tiresome nemesis, or both several times in the same day. \n      \nIntended to unearth and retrieve ores automatically, the unit requires basic programming knowledge to operate, and <link=ThingMotherboardProgrammableChip><color=green>IC Editor Motherboard</color></link>.\n\nAIMEe has 7 modes:\n\nRobotMode.None = 0 = Do nothing\nRobotMode.None = 1 = Follow nearest player\nRobotMode.None = 2 = Move to target in straight line\nRobotMode.None = 3 = Wander around looking for ores in 15 co-ords radius\nRobotMode.None = 4 = Unload in chute input or chute bin within 3 meters / 1.5 large grids\nRobotMode.None = 5 = Path(find) to target\nRobotMode.None = 6 = Automatic assigned state, shows when storage slots are fullConnects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
        "name": "AIMeE Bot"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "PressureExternal": "Read",
          "On": "ReadWrite",
          "TemperatureExternal": "Read",
          "PositionX": "Read",
          "PositionY": "Read",
          "PositionZ": "Read",
          "VelocityMagnitude": "Read",
          "VelocityRelativeX": "Read",
          "VelocityRelativeY": "Read",
          "VelocityRelativeZ": "Read",
          "TargetX": "Write",
          "TargetY": "Write",
          "TargetZ": "Write",
          "MineablesInVicinity": "Read",
          "MineablesInQueue": "Read",
          "ReferenceId": "Read",
          "ForwardX": "Read",
          "ForwardY": "Read",
          "ForwardZ": "Read",
          "Orientation": "Read",
          "VelocityX": "Read",
          "VelocityY": "Read",
          "VelocityZ": "Read"
        },
        "modes": {
          "0": "None",
          "1": "Follow",
          "2": "MoveToTarget",
          "3": "Roam",
          "4": "Unload",
          "5": "PathToTarget",
          "6": "StorageFull"
        },
        "transmission_receiver": false,
        "wireless_logic": true,
        "circuit_holder": true
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Programmable Chip",
          "typ": "ProgrammableChip"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        },
        {
          "name": "Ore",
          "typ": "Ore"
        }
      ]
    },
    "RoverCargo": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "RoverCargo",
        "prefab_hash": 350726273,
        "desc": "Connects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
        "name": "Rover (Cargo)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.01,
        "radiation_factor": 0.01
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "FilterType": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "15": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": true,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Entity",
          "typ": "Entity"
        },
        {
          "name": "Entity",
          "typ": "Entity"
        },
        {
          "name": "Gas Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Gas Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Gas Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Gas Canister",
          "typ": "GasCanister"
        },
        {
          "name": "Gas Canister",
          "typ": "GasCanister"
        },
        {
          "name": "Gas Canister",
          "typ": "GasCanister"
        },
        {
          "name": "Gas Canister",
          "typ": "GasCanister"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Container Slot",
          "typ": "None"
        },
        {
          "name": "Container Slot",
          "typ": "None"
        },
        {
          "name": "<N:EN:GasTank>",
          "typ": "None"
        },
        {
          "name": "<N:EN:GasTank>",
          "typ": "None"
        }
      ]
    },
    "Rover_MkI": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "Rover_MkI",
        "prefab_hash": -2049946335,
        "desc": "A distant cousin of the jeep, the Mk I {<link=Sinotai><color=#0080FFFF>Sinotai</color></link> electric rover is one of the most simple and durable light vehicles in the known universe. Able to carry two passengers and cargo such as the <link=ThingDynamicGasCanisterAir><color=green>Portable Gas Tank (Air)</color></link> or <link=ThingCrate><color=green><N:EN:Crate></color></link>, it is powered by up to three batteries, accepting everything including <link=ThingItemBatteryCellNuclear><color=green>Battery Cell (Nuclear)</color></link>.\nA quad-array of hub-mounted electric engines propels the reinforced aluminium frame over most terrain and modest obstacles. While the Mk I is designed for stability in low-horizontality circumstances, if it rolls, try using your <link=ThingItemCrowbar><color=green>Crowbar</color></link> to put it right way up.Connects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
        "name": "Rover MkI"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": true,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Entity",
          "typ": "Entity"
        },
        {
          "name": "Entity",
          "typ": "Entity"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "<N:EN:ContainerConnection>",
          "typ": "None"
        },
        {
          "name": "<N:EN:ContainerConnection>",
          "typ": "None"
        },
        {
          "name": "<N:EN:GasTankConnection>",
          "typ": "None"
        },
        {
          "name": "<N:EN:GasTankConnection>",
          "typ": "None"
        },
        {
          "name": "<N:EN:GasTankConnection>",
          "typ": "None"
        },
        {
          "name": "<N:EN:GasTankConnection>",
          "typ": "None"
        }
      ]
    },
    "Rover_MkI_build_states": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "Rover_MkI_build_states",
        "prefab_hash": 861674123,
        "desc": "",
        "name": "Rover MKI"
      },
      "structure": {
        "small_grid": false
      }
    },
    "SMGMagazine": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SMGMagazine",
        "prefab_hash": -256607540,
        "desc": "",
        "name": "SMG Magazine"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Magazine",
        "sorting_class": "Default"
      }
    },
    "SeedBag_Cocoa": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SeedBag_Cocoa",
        "prefab_hash": 1139887531,
        "desc": "",
        "name": "Cocoa Seeds"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Food"
      }
    },
    "SeedBag_Corn": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SeedBag_Corn",
        "prefab_hash": -1290755415,
        "desc": "Grow a <link=ThingItemCorn><color=green>Corn</color></link>.",
        "name": "Corn Seeds"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Food"
      }
    },
    "SeedBag_Fern": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SeedBag_Fern",
        "prefab_hash": -1990600883,
        "desc": "Grow a <link=ThingItemFern><color=green>Fern</color></link>.",
        "name": "Fern Seeds"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Food"
      }
    },
    "SeedBag_Mushroom": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SeedBag_Mushroom",
        "prefab_hash": 311593418,
        "desc": "Grow a <link=ThingItemMushroom><color=green>Mushroom</color></link>.",
        "name": "Mushroom Seeds"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Food"
      }
    },
    "SeedBag_Potato": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SeedBag_Potato",
        "prefab_hash": 1005571172,
        "desc": "Grow a <link=ThingItemPotato><color=green>Potato</color></link>.",
        "name": "Potato Seeds"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Food"
      }
    },
    "SeedBag_Pumpkin": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SeedBag_Pumpkin",
        "prefab_hash": 1423199840,
        "desc": "Grow a <link=ThingItemPumpkin><color=green>Pumpkin</color></link>.",
        "name": "Pumpkin Seeds"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Food"
      }
    },
    "SeedBag_Rice": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SeedBag_Rice",
        "prefab_hash": -1691151239,
        "desc": "Grow some <link=ThingItemRice><color=green>Rice</color></link>.",
        "name": "Rice Seeds"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Food"
      }
    },
    "SeedBag_Soybean": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SeedBag_Soybean",
        "prefab_hash": 1783004244,
        "desc": "Grow some <link=ThingItemSoybean><color=green>Soybean</color></link>.",
        "name": "Soybean Seeds"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Food"
      }
    },
    "SeedBag_SugarCane": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SeedBag_SugarCane",
        "prefab_hash": -1884103228,
        "desc": "",
        "name": "Sugarcane Seeds"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Food"
      }
    },
    "SeedBag_Switchgrass": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SeedBag_Switchgrass",
        "prefab_hash": 488360169,
        "desc": "",
        "name": "Switchgrass Seed"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Food"
      }
    },
    "SeedBag_Tomato": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SeedBag_Tomato",
        "prefab_hash": -1922066841,
        "desc": "Grow a <link=ThingItemTomato><color=green>Tomato</color></link>.",
        "name": "Tomato Seeds"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Food"
      }
    },
    "SeedBag_Wheet": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "SeedBag_Wheet",
        "prefab_hash": -654756733,
        "desc": "Grow some <link=ThingItemWheat><color=green>Wheat</color></link>.",
        "name": "Wheat Seeds"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 10,
        "slot_class": "Plant",
        "sorting_class": "Food"
      }
    },
    "SpaceShuttle": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "SpaceShuttle",
        "prefab_hash": -1991297271,
        "desc": "An antiquated <link=Sinotai><color=#0080FFFF>Sinotai</color></link> transport craft, long since decommissioned.",
        "name": "Space Shuttle"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      },
      "slots": [
        {
          "name": "Captain's Seat",
          "typ": "Entity"
        },
        {
          "name": "Passenger Seat Left",
          "typ": "Entity"
        },
        {
          "name": "Passenger Seat Right",
          "typ": "Entity"
        }
      ]
    },
    "StopWatch": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StopWatch",
        "prefab_hash": -1527229051,
        "desc": "",
        "name": "Stop Watch"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "Time": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Input"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureAccessBridge": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureAccessBridge",
        "prefab_hash": 1298920475,
        "desc": "Extendable bridge that spans three grids",
        "name": "Access Bridge"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureActiveVent": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureActiveVent",
        "prefab_hash": -1129453144,
        "desc": "The active vent is a powered device for maintaining <link=GasPage><color=#0080FFFF>gas</color></link> pressure by pumping gas into (or out of) a pipe network. The vent has two modes: 'Outward' sets it to pump gas into a space until pressure is reached; 'Inward' sets it to pump gas out until pressure is reached. The pressure parameter can be set on a connected <link=ThingStructureConsole><color=green>Console</color></link>. Default pressure is 101kPa for Outward; 0kPa for Inward ...",
        "name": "Active Vent"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "PressureExternal": "ReadWrite",
          "PressureInternal": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Outward",
          "1": "Inward"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "DataDisk"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureAdvancedComposter": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureAdvancedComposter",
        "prefab_hash": 446212963,
        "desc": "The advanced composter creates <link=ThingFertilizer><color=green>Fertilizer</color></link> out of organic matter. It accepts <link=OrganicPage><color=#0080FFFF>food</color></link>, <link=ThingDecayedFood><color=green>Decayed Food</color></link> or <link=ThingItemBiomass><color=green>Biomass</color></link>. It requires <link=GasWater><color=#44AD83>Water</color></link> and power to operate, accelerating the natural composting process.\nWhen processing, it releases nitrogen and volatiles, as well a small amount of heat. \n\n<size=120%><b>Compost composition</b></size>\nFertilizer is produced at a 1:3 ratio of fertilizer to ingredients. The fertilizer's effects on plants will vary depending on the respective proportions of its ingredients.\n\n- <link=OrganicPage><color=#0080FFFF>Food</color></link> increases PLANT YIELD up to two times\n- <link=ThingDecayedFood><color=green>Decayed Food</color></link> increases plant GROWTH SPEED up to two times\n- <link=ThingItemBiomass><color=green>Biomass</color></link> increases the NUMBER OF GROWTH CYCLES the fertilizer lasts for up to five times\n",
        "name": "Advanced Composter"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Mode0",
          "1": "Mode1"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureAdvancedFurnace": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureAdvancedFurnace",
        "prefab_hash": 545937711,
        "desc": "The advanced furnace comes with integrated inlet and outlet pumps for controlling the unit's internal pressure.",
        "name": "Advanced Furnace"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Reagents": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "SettingInput": "ReadWrite",
          "SettingOutput": "ReadWrite",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Mode0",
          "1": "Mode1"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output2"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": true
      }
    },
    "StructureAdvancedPackagingMachine": {
      "templateType": "StructureLogicDeviceConsumerMemory",
      "prefab": {
        "prefab_name": "StructureAdvancedPackagingMachine",
        "prefab_hash": -463037670,
        "desc": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> Advanced Cannifier Multi-Plus Pro is an automateable packaging machine that uses <link=ThingItemEmptyCan><color=green>Empty Can</color></link>s and cooked <link=OrganicPage><color=#0080FFFF>food</color></link> to create canned sustenance that does not decay. Note that the ACMPP only accepts cooked food and tin cans.",
        "name": "Advanced Packaging Machine"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": true
      },
      "consumer_info": {
        "consumed_resouces": [
          "ItemCookedCondensedMilk",
          "ItemCookedCorn",
          "ItemCookedMushroom",
          "ItemCookedPowderedEggs",
          "ItemCookedPumpkin",
          "ItemCookedRice",
          "ItemCookedSoybean",
          "ItemCookedTomato",
          "ItemEmptyCan",
          "ItemMilk",
          "ItemPotatoBaked",
          "ItemSoyOil"
        ],
        "processed_reagents": []
      },
      "fabricator_info": {
        "tier": "Undefined",
        "recipes": {
          "ItemCannedCondensedMilk": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Milk": 200.0,
              "Steel": 1.0
            }
          },
          "ItemCannedEdamame": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Oil": 1.0,
              "Soy": 15.0,
              "Steel": 1.0
            }
          },
          "ItemCannedMushroom": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Mushroom": 8.0,
              "Oil": 1.0,
              "Steel": 1.0
            }
          },
          "ItemCannedPowderedEggs": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Egg": 5.0,
              "Oil": 1.0,
              "Steel": 1.0
            }
          },
          "ItemCannedRicePudding": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Oil": 1.0,
              "Rice": 5.0,
              "Steel": 1.0
            }
          },
          "ItemCornSoup": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Corn": 5.0,
              "Oil": 1.0,
              "Steel": 1.0
            }
          },
          "ItemFrenchFries": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Oil": 1.0,
              "Potato": 1.0,
              "Steel": 1.0
            }
          },
          "ItemPumpkinSoup": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Oil": 1.0,
              "Pumpkin": 5.0,
              "Steel": 1.0
            }
          },
          "ItemTomatoSoup": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Oil": 1.0,
              "Steel": 1.0,
              "Tomato": 5.0
            }
          }
        }
      },
      "memory": {
        "instructions": {
          "DeviceSetLock": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>LOCK_STATE</color>                   | <color=orange>BOOL_8</color>     |\r\n| <color=grey>16-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>48</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | LOCK_STATE                   | BOOL_8     |\r\n| 16-63    | UNUSED                       | 48         |",
            "typ": "PrinterInstruction",
            "value": 6,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "LOCK_STATE",
                "typ": "Bool8"
              },
              {
                "range": [
                  16,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 48
                }
              }
            ]
          },
          "EjectAllReagents": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 8,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          },
          "EjectReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-39     | REAGENT_HASH                 | INT_32     |\r\n| 40-63    | UNUSED                       | 24         |",
            "typ": "PrinterInstruction",
            "value": 7,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  39
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  40,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 24
                }
              }
            ]
          },
          "ExecuteRecipe": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY</color>                     | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>PREFAB_HASH</color>                  | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY                     | BYTE_8     |\r\n| 16-47    | PREFAB_HASH                  | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 2,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "PREFAB_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "JumpIfNextInvalid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 4,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "JumpToAddress": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 5,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "MissingRecipeReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 54 TO 62</color>                     |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY_CEIL</color>                | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 54 TO 62                     |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY_CEIL                | BYTE_8     |\r\n| 16-47    | REAGENT_HASH                 | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 9,
            "valid": [
              54,
              62
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY_CEIL",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "StackPointer": {
            "description": "| <color=grey>VALID ONLY AT ADDRESS 63</color>                             |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>INDEX</color>                        | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESS 63                             |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | INDEX                        | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 1,
            "valid": [
              63,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "INDEX",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "WaitUntilNextValid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 3,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          }
        },
        "memory_access": "ReadWrite",
        "memory_size": 64
      }
    },
    "StructureAirConditioner": {
      "templateType": "StructureCircuitHolder",
      "prefab": {
        "prefab_name": "StructureAirConditioner",
        "prefab_hash": -2087593337,
        "desc": "Built using the <link=ThingItemKitAtmospherics><color=green>Kit (Atmospherics)</color></link>, the <link=ExMin><color=#0080FFFF>ExMin-designed</color></link> air conditioner is used to raise or lower input gas temperature.\n\t  \nThe unit has three pipe connections: input, output, and waste. Gas fed into the input will be heated or cooled to reach the target temperature, while the opposite will happen to gas on the waste network.\n\nMultiple Efficiency Multipliers can effect the amount of energy the Air Conditioner uses, and these can be view on the unit's green Information Panel. As the temperature difference between input and waste increases, the Temperature Differential Efficiency Multiplier will decrease. If input or waste temperature is extremely hot or cold, the Operational Temperature Efficiency will decrease. If the input or waste pipe has approach low pressures, the Pressure Efficiency will decrease.\n\n<link=ThingStructurePipeRadiator><color=green>Pipe Convection Radiator</color></link>s may be useful in bringing extreme pipe temperatures back towards normal world temperatures. \n  \nFor more information on using the air conditioner, consult the <link=TemperatureControlPage><color=#0080FFFF>temperature control</color></link> Guides page.",
        "name": "Air Conditioner"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "PressureInput": "Read",
          "TemperatureInput": "Read",
          "RatioOxygenInput": "Read",
          "RatioCarbonDioxideInput": "Read",
          "RatioNitrogenInput": "Read",
          "RatioPollutantInput": "Read",
          "RatioVolatilesInput": "Read",
          "RatioWaterInput": "Read",
          "RatioNitrousOxideInput": "Read",
          "TotalMolesInput": "Read",
          "PressureOutput": "Read",
          "TemperatureOutput": "Read",
          "RatioOxygenOutput": "Read",
          "RatioCarbonDioxideOutput": "Read",
          "RatioNitrogenOutput": "Read",
          "RatioPollutantOutput": "Read",
          "RatioVolatilesOutput": "Read",
          "RatioWaterOutput": "Read",
          "RatioNitrousOxideOutput": "Read",
          "TotalMolesOutput": "Read",
          "PressureOutput2": "Read",
          "TemperatureOutput2": "Read",
          "RatioOxygenOutput2": "Read",
          "RatioCarbonDioxideOutput2": "Read",
          "RatioNitrogenOutput2": "Read",
          "RatioPollutantOutput2": "Read",
          "RatioVolatilesOutput2": "Read",
          "RatioWaterOutput2": "Read",
          "RatioNitrousOxideOutput2": "Read",
          "TotalMolesOutput2": "Read",
          "CombustionInput": "Read",
          "CombustionOutput": "Read",
          "CombustionOutput2": "Read",
          "OperationalTemperatureEfficiency": "Read",
          "TemperatureDifferentialEfficiency": "Read",
          "PressureEfficiency": "Read",
          "RatioLiquidNitrogenInput": "Read",
          "RatioLiquidNitrogenOutput": "Read",
          "RatioLiquidNitrogenOutput2": "Read",
          "RatioLiquidOxygenInput": "Read",
          "RatioLiquidOxygenOutput": "Read",
          "RatioLiquidOxygenOutput2": "Read",
          "RatioLiquidVolatilesInput": "Read",
          "RatioLiquidVolatilesOutput": "Read",
          "RatioLiquidVolatilesOutput2": "Read",
          "RatioSteamInput": "Read",
          "RatioSteamOutput": "Read",
          "RatioSteamOutput2": "Read",
          "RatioLiquidCarbonDioxideInput": "Read",
          "RatioLiquidCarbonDioxideOutput": "Read",
          "RatioLiquidCarbonDioxideOutput2": "Read",
          "RatioLiquidPollutantInput": "Read",
          "RatioLiquidPollutantOutput": "Read",
          "RatioLiquidPollutantOutput2": "Read",
          "RatioLiquidNitrousOxideInput": "Read",
          "RatioLiquidNitrousOxideOutput": "Read",
          "RatioLiquidNitrousOxideOutput2": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Idle",
          "1": "Active"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": true
      },
      "slots": [
        {
          "name": "Programmable Chip",
          "typ": "ProgrammableChip"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Pipe",
            "role": "Waste"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "device_pins_length": 2,
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureAirlock": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureAirlock",
        "prefab_hash": -2105052344,
        "desc": "The standard airlock is a powered portal that forms the main component of an airlock chamber. As long as the airlock is not locked, it can be manually opened using a crowbar.",
        "name": "Airlock"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureAirlockGate": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureAirlockGate",
        "prefab_hash": 1736080881,
        "desc": "1 x 1 modular door piece for building hangar doors.",
        "name": "Small Hangar Door"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureAngledBench": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureAngledBench",
        "prefab_hash": 1811979158,
        "desc": "",
        "name": "Bench (Angled)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Seat",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureArcFurnace": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureArcFurnace",
        "prefab_hash": -247344692,
        "desc": "The simplest smelting system available to the average <link=Stationeers><color=#0080FFFF>Stationeer</color></link>, <link=Recurso><color=#0080FFFF>Recurso's</color></link> arc furnace was forged itself in the depths of the Solar System to help explorational geologists determine the purity of potential asteroidal mining targets.\nCo-opted by the <link=ODA><color=#0080FFFF>ODA</color></link>, it now provides Stationeers with a way to produce pure ingots of various resources.\nThe smelting process also releases a range of by product <link=GasPage><color=#0080FFFF>gases</color></link>, principally <link=GasNitrogen><color=#44AD83>Nitrogen</color></link>, <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link>, <link=GasVolatiles><color=#44AD83>Volatiles</color></link> and <link=GasOxygen><color=#44AD83>Oxygen</color></link> in differing ratios. These can be recaptured from the atmosphere by filtering, but also make the arc furnace a risk in closed environments. \nUnlike the more advanced <link=ThingStructureFurnace><color=green>Furnace</color></link>, the arc furnace cannot create <link=IngotPage><color=#0080FFFF>alloys</color></link>.",
        "name": "Arc Furnace"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "RecipeHash": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "Ore"
        },
        {
          "name": "Export",
          "typ": "Ingot"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": true
      }
    },
    "StructureAreaPowerControl": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureAreaPowerControl",
        "prefab_hash": 1999523701,
        "desc": "An Area Power Control (APC) has three main functions: \nIts primary purpose is to regulate power flow, ensuring uninterrupted performance from devices and machinery, especially those with a fluctuating draw. \nAPCs also create sub-networks, as no devices on the far side of an APC are visible on the main network.\nLastly, an APC charges batteries, which can provide backup power to the sub-network in the case of an outage. Note that an APC requires a battery to stabilize power draw. It also has two variants, each allowing power to flow in one direction only.",
        "name": "Area Power Control"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Charge": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Idle",
          "1": "Discharged",
          "2": "Discharging",
          "3": "Charging",
          "4": "Charged"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Data Disk",
          "typ": "DataDisk"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureAreaPowerControlReversed": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureAreaPowerControlReversed",
        "prefab_hash": -1032513487,
        "desc": "An Area Power Control (APC) has three main functions. \nIts primary purpose is to regulate power flow, ensuring uninterrupted performance from devices and machinery, especially those with a fluctuating draw. \nAPCs also create sub-networks, as no devices on the far side of an APC are visible on the main network. \nLastly, an APC charges batteries, which can provide backup power to the sub-network in the case of an outage. Note that an APC requires a battery to stabilize power draw. It also has two variants, each allowing power to flow in one direction only.",
        "name": "Area Power Control"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Charge": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Idle",
          "1": "Discharged",
          "2": "Discharging",
          "3": "Charging",
          "4": "Charged"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Data Disk",
          "typ": "DataDisk"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureAutoMinerSmall": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureAutoMinerSmall",
        "prefab_hash": 7274344,
        "desc": "The <link=Recurso><color=#0080FFFF>Recurso</color></link> SquareDig autominer is a structure that when built will mine a vertical 2x2 shaft until it hits bedrock. The autominer can be connected to a chute system, and is controllable by a logic network. Note that the autominer outputs more <link=OrePage><color=#0080FFFF>ore</color></link> than a conventional <link=ThingItemMiningDrill><color=green>Mining Drill</color></link> over the same area.",
        "name": "Autominer (Small)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureAutolathe": {
      "templateType": "StructureLogicDeviceConsumerMemory",
      "prefab": {
        "prefab_name": "StructureAutolathe",
        "prefab_hash": 336213101,
        "desc": "The foundation of most <link=Stationeers><color=#0080FFFF>Stationeer</color></link> fabrication systems, the <link=ExMin><color=#0080FFFF>ExMin</color></link> autolathe is a multi-axis molecular compositional system. Its complexity demands considerable time to assemble, but it remains an indispensable creation tool. Upgrade the device using a <link=ThingAutolathePrinterMod><color=green>Autolathe Printer Mod</color></link> for additional recipes and faster processing speeds.\n\t  ",
        "name": "Autolathe"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "Ingot"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": true
      },
      "consumer_info": {
        "consumed_resouces": [
          "ItemAstroloyIngot",
          "ItemConstantanIngot",
          "ItemCopperIngot",
          "ItemElectrumIngot",
          "ItemGoldIngot",
          "ItemHastelloyIngot",
          "ItemInconelIngot",
          "ItemInvarIngot",
          "ItemIronIngot",
          "ItemLeadIngot",
          "ItemNickelIngot",
          "ItemSiliconIngot",
          "ItemSilverIngot",
          "ItemSolderIngot",
          "ItemSolidFuel",
          "ItemSteelIngot",
          "ItemStelliteIngot",
          "ItemWaspaloyIngot",
          "ItemWasteIngot"
        ],
        "processed_reagents": []
      },
      "fabricator_info": {
        "tier": "Undefined",
        "recipes": {
          "CardboardBox": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 120.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 2.0
            }
          },
          "ItemCableCoil": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Copper": 0.5
            }
          },
          "ItemCoffeeMug": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 70.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemEggCarton": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 2.0
            }
          },
          "ItemEmptyCan": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 70.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 1.0
            }
          },
          "ItemEvaSuit": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Iron": 5.0
            }
          },
          "ItemGlassSheets": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 2.0
            }
          },
          "ItemIronFrames": {
            "tier": "TierOne",
            "time": 4.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 4.0
            }
          },
          "ItemIronSheets": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemKitAccessBridge": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 15000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Solder": 2.0,
              "Steel": 10.0
            }
          },
          "ItemKitArcFurnace": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Iron": 20.0
            }
          },
          "ItemKitAutolathe": {
            "tier": "TierOne",
            "time": 180.0,
            "energy": 36000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Gold": 2.0,
              "Iron": 20.0
            }
          },
          "ItemKitBeds": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Iron": 20.0
            }
          },
          "ItemKitBlastDoor": {
            "tier": "TierTwo",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 3.0,
              "Steel": 15.0
            }
          },
          "ItemKitCentrifuge": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 18000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Iron": 20.0
            }
          },
          "ItemKitChairs": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Iron": 20.0
            }
          },
          "ItemKitChute": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 3.0
            }
          },
          "ItemKitCompositeCladding": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemKitCompositeFloorGrating": {
            "tier": "TierOne",
            "time": 3.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemKitCrate": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 10.0
            }
          },
          "ItemKitCrateMkII": {
            "tier": "TierTwo",
            "time": 10.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Gold": 5.0,
              "Iron": 10.0
            }
          },
          "ItemKitCrateMount": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 10.0
            }
          },
          "ItemKitDeepMiner": {
            "tier": "TierTwo",
            "time": 180.0,
            "energy": 72000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Constantan": 5.0,
              "Electrum": 5.0,
              "Invar": 10.0,
              "Steel": 50.0
            }
          },
          "ItemKitDoor": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 3.0,
              "Iron": 7.0
            }
          },
          "ItemKitElectronicsPrinter": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 12000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Gold": 2.0,
              "Iron": 20.0
            }
          },
          "ItemKitFlagODA": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 8.0
            }
          },
          "ItemKitFurnace": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 12000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 10.0,
              "Iron": 30.0
            }
          },
          "ItemKitFurniture": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Iron": 20.0
            }
          },
          "ItemKitHydraulicPipeBender": {
            "tier": "TierOne",
            "time": 180.0,
            "energy": 18000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Gold": 2.0,
              "Iron": 20.0
            }
          },
          "ItemKitInteriorDoors": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 3.0,
              "Iron": 5.0
            }
          },
          "ItemKitLadder": {
            "tier": "TierOne",
            "time": 3.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 2.0
            }
          },
          "ItemKitLocker": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemKitPipe": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 0.5
            }
          },
          "ItemKitRailing": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemKitRecycler": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 12000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 10.0,
              "Iron": 20.0
            }
          },
          "ItemKitReinforcedWindows": {
            "tier": "TierOne",
            "time": 7.0,
            "energy": 700.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 2.0
            }
          },
          "ItemKitRespawnPointWallMounted": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 1.0,
              "Iron": 3.0
            }
          },
          "ItemKitRocketManufactory": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 12000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Gold": 2.0,
              "Iron": 20.0
            }
          },
          "ItemKitSDBHopper": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 700.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 15.0
            }
          },
          "ItemKitSecurityPrinter": {
            "tier": "TierOne",
            "time": 180.0,
            "energy": 36000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 20.0,
              "Gold": 20.0,
              "Steel": 20.0
            }
          },
          "ItemKitSign": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 3.0
            }
          },
          "ItemKitSorter": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 1.0,
              "Iron": 10.0
            }
          },
          "ItemKitStacker": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Iron": 10.0
            }
          },
          "ItemKitStairs": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 15.0
            }
          },
          "ItemKitStairwell": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 15.0
            }
          },
          "ItemKitStandardChute": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Constantan": 2.0,
              "Electrum": 2.0,
              "Iron": 3.0
            }
          },
          "ItemKitTables": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Iron": 20.0
            }
          },
          "ItemKitToolManufactory": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 24000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 10.0,
              "Iron": 20.0
            }
          },
          "ItemKitWall": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 1.0
            }
          },
          "ItemKitWallArch": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 1.0
            }
          },
          "ItemKitWallFlat": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 1.0
            }
          },
          "ItemKitWallGeometry": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 1.0
            }
          },
          "ItemKitWallIron": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemKitWallPadded": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 1.0
            }
          },
          "ItemKitWindowShutter": {
            "tier": "TierOne",
            "time": 7.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Iron": 1.0,
              "Steel": 2.0
            }
          },
          "ItemPlasticSheets": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 0.5
            }
          },
          "ItemSpaceHelmet": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0
            }
          },
          "ItemSteelFrames": {
            "tier": "TierOne",
            "time": 7.0,
            "energy": 800.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 2.0
            }
          },
          "ItemSteelSheets": {
            "tier": "TierOne",
            "time": 3.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 0.5
            }
          },
          "ItemStelliteGlassSheets": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Silicon": 2.0,
              "Stellite": 1.0
            }
          },
          "ItemWallLight": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Iron": 1.0,
              "Silicon": 1.0
            }
          },
          "KitSDBSilo": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 24000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Gold": 20.0,
              "Steel": 15.0
            }
          },
          "KitStructureCombustionCentrifuge": {
            "tier": "TierTwo",
            "time": 120.0,
            "energy": 24000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Constantan": 5.0,
              "Invar": 10.0,
              "Steel": 20.0
            }
          }
        }
      },
      "memory": {
        "instructions": {
          "DeviceSetLock": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>LOCK_STATE</color>                   | <color=orange>BOOL_8</color>     |\r\n| <color=grey>16-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>48</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | LOCK_STATE                   | BOOL_8     |\r\n| 16-63    | UNUSED                       | 48         |",
            "typ": "PrinterInstruction",
            "value": 6,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "LOCK_STATE",
                "typ": "Bool8"
              },
              {
                "range": [
                  16,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 48
                }
              }
            ]
          },
          "EjectAllReagents": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 8,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          },
          "EjectReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-39     | REAGENT_HASH                 | INT_32     |\r\n| 40-63    | UNUSED                       | 24         |",
            "typ": "PrinterInstruction",
            "value": 7,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  39
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  40,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 24
                }
              }
            ]
          },
          "ExecuteRecipe": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY</color>                     | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>PREFAB_HASH</color>                  | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY                     | BYTE_8     |\r\n| 16-47    | PREFAB_HASH                  | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 2,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "PREFAB_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "JumpIfNextInvalid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 4,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "JumpToAddress": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 5,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "MissingRecipeReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 54 TO 62</color>                     |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY_CEIL</color>                | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 54 TO 62                     |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY_CEIL                | BYTE_8     |\r\n| 16-47    | REAGENT_HASH                 | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 9,
            "valid": [
              54,
              62
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY_CEIL",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "StackPointer": {
            "description": "| <color=grey>VALID ONLY AT ADDRESS 63</color>                             |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>INDEX</color>                        | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESS 63                             |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | INDEX                        | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 1,
            "valid": [
              63,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "INDEX",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "WaitUntilNextValid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 3,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          }
        },
        "memory_access": "ReadWrite",
        "memory_size": 64
      }
    },
    "StructureAutomatedOven": {
      "templateType": "StructureLogicDeviceConsumerMemory",
      "prefab": {
        "prefab_name": "StructureAutomatedOven",
        "prefab_hash": -1672404896,
        "desc": "",
        "name": "Automated Oven"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": true
      },
      "consumer_info": {
        "consumed_resouces": [
          "ItemCorn",
          "ItemEgg",
          "ItemFertilizedEgg",
          "ItemFlour",
          "ItemMilk",
          "ItemMushroom",
          "ItemPotato",
          "ItemPumpkin",
          "ItemRice",
          "ItemSoybean",
          "ItemSoyOil",
          "ItemTomato",
          "ItemSugarCane",
          "ItemCocoaTree",
          "ItemCocoaPowder",
          "ItemSugar"
        ],
        "processed_reagents": []
      },
      "fabricator_info": {
        "tier": "TierOne",
        "recipes": {
          "ItemBreadLoaf": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Flour": 200.0,
              "Oil": 5.0
            }
          },
          "ItemCerealBar": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Flour": 50.0
            }
          },
          "ItemChocolateBar": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Cocoa": 2.0,
              "Sugar": 10.0
            }
          },
          "ItemChocolateCake": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 5,
            "reagents": {
              "Cocoa": 2.0,
              "Egg": 1.0,
              "Flour": 50.0,
              "Milk": 5.0,
              "Sugar": 50.0
            }
          },
          "ItemChocolateCerealBar": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Cocoa": 1.0,
              "Flour": 50.0
            }
          },
          "ItemCookedCondensedMilk": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Milk": 100.0
            }
          },
          "ItemCookedCorn": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Corn": 1.0
            }
          },
          "ItemCookedMushroom": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Mushroom": 1.0
            }
          },
          "ItemCookedPowderedEggs": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Egg": 4.0
            }
          },
          "ItemCookedPumpkin": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Pumpkin": 1.0
            }
          },
          "ItemCookedRice": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Rice": 3.0
            }
          },
          "ItemCookedSoybean": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Soy": 5.0
            }
          },
          "ItemCookedTomato": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Tomato": 1.0
            }
          },
          "ItemFries": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Oil": 5.0,
              "Potato": 1.0
            }
          },
          "ItemMuffin": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Egg": 1.0,
              "Flour": 50.0,
              "Milk": 10.0
            }
          },
          "ItemPlainCake": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Egg": 1.0,
              "Flour": 50.0,
              "Milk": 5.0,
              "Sugar": 50.0
            }
          },
          "ItemPotatoBaked": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Potato": 1.0
            }
          },
          "ItemPumpkinPie": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 0.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Egg": 1.0,
              "Flour": 100.0,
              "Milk": 10.0,
              "Pumpkin": 10.0
            }
          }
        }
      },
      "memory": {
        "instructions": {
          "DeviceSetLock": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>LOCK_STATE</color>                   | <color=orange>BOOL_8</color>     |\r\n| <color=grey>16-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>48</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | LOCK_STATE                   | BOOL_8     |\r\n| 16-63    | UNUSED                       | 48         |",
            "typ": "PrinterInstruction",
            "value": 6,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "LOCK_STATE",
                "typ": "Bool8"
              },
              {
                "range": [
                  16,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 48
                }
              }
            ]
          },
          "EjectAllReagents": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 8,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          },
          "EjectReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-39     | REAGENT_HASH                 | INT_32     |\r\n| 40-63    | UNUSED                       | 24         |",
            "typ": "PrinterInstruction",
            "value": 7,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  39
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  40,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 24
                }
              }
            ]
          },
          "ExecuteRecipe": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY</color>                     | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>PREFAB_HASH</color>                  | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY                     | BYTE_8     |\r\n| 16-47    | PREFAB_HASH                  | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 2,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "PREFAB_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "JumpIfNextInvalid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 4,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "JumpToAddress": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 5,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "MissingRecipeReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 54 TO 62</color>                     |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY_CEIL</color>                | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 54 TO 62                     |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY_CEIL                | BYTE_8     |\r\n| 16-47    | REAGENT_HASH                 | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 9,
            "valid": [
              54,
              62
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY_CEIL",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "StackPointer": {
            "description": "| <color=grey>VALID ONLY AT ADDRESS 63</color>                             |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>INDEX</color>                        | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESS 63                             |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | INDEX                        | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 1,
            "valid": [
              63,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "INDEX",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "WaitUntilNextValid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 3,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          }
        },
        "memory_access": "ReadWrite",
        "memory_size": 64
      }
    },
    "StructureBackLiquidPressureRegulator": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBackLiquidPressureRegulator",
        "prefab_hash": 2099900163,
        "desc": "Regulates the volume ratio of liquid in the input Liquid pipe. This is expressed as percentage where 100 is totally full and 0 is empty.",
        "name": "Liquid Back Volume Regulator"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBackPressureRegulator": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBackPressureRegulator",
        "prefab_hash": -1149857558,
        "desc": "Unlike the <link=ThingStructurePressureRegulator><color=green>Pressure Regulator</color></link>, which closes when the input exceeds a given pressure, the back pressure regulator opens when input pressure reaches a given value.",
        "name": "Back Pressure Regulator"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBasketHoop": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBasketHoop",
        "prefab_hash": -1613497288,
        "desc": "",
        "name": "Basket Hoop"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBattery": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBattery",
        "prefab_hash": -400115994,
        "desc": "Providing large-scale, reliable power storage, the <link=Sinotai><color=#0080FFFF>Sinotai</color></link> 'Dianzi' station battery is the heart of most <link=Stationeers><color=#0080FFFF>Stationeer</color></link> bases. \nThere are a variety of cautions to the design of electrical systems using batteries, and every experienced Stationeer has a story to tell, hence the Stationeer adage: 'Dianzi cooks, but it also frys.' \n<size=120%><b>POWER OUTPUT</b></size>\nAble to store up to 3600000W of power, there are no practical limits to its throughput, hence it is wise to use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>. Seasoned electrical engineers will also laugh in the face of those who fail to separate out their power generation networks using an <link=ThingStructureAreaPowerControl><color=green>Area Power Control</color></link> and <link=ThingStructureTransformer><color=green>Transformer (Large)</color></link>.",
        "name": "Station Battery"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Charge": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Empty",
          "1": "Critical",
          "2": "VeryLow",
          "3": "Low",
          "4": "Medium",
          "5": "High",
          "6": "Full"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBatteryCharger": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBatteryCharger",
        "prefab_hash": 1945930022,
        "desc": "The 5-slot <link=Xigo><color=#0080FFFF>Xigo</color></link> battery charger fits the <link=ThingItemBatteryCell><color=green>Battery Cell (Small)</color></link>, <link=ThingItemBatteryCellLarge><color=green>Battery Cell (Large)</color></link> and <link=ThingItemBatteryCellNuclear><color=green>Battery Cell (Nuclear)</color></link>, providing up to 500W to any connected cell. Note: the older design means this device has minor power draw (10W) even when not charging.",
        "name": "Battery Cell Charger"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBatteryChargerSmall": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBatteryChargerSmall",
        "prefab_hash": -761772413,
        "desc": "",
        "name": "Battery Charger Small"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        },
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBatteryLarge": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBatteryLarge",
        "prefab_hash": -1388288459,
        "desc": "Providing even better large-scale, reliable power storage than the {THING;StructureBattery}, the <link=Sinotai><color=#0080FFFF>Sinotai</color></link> 'Da Dianchi' large station battery is the heart of most <link=Stationeers><color=#0080FFFF>Stationeer</color></link> bases. \nThere are a variety of cautions to the design of electrical systems using batteries, and every experienced Stationeer has a story to tell, hence the Stationeer adage: 'Dianzi cooks, but it also frys.' \n<size=120%><b>POWER OUTPUT</b></size>\nAble to store up to 9000001 watts of power, there are no practical limits to its throughput, hence it is wise to use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>. Seasoned electrical engineers will also laugh in the face of those who fail to separate out their power generation networks using an <link=ThingStructureAreaPowerControl><color=green>Area Power Control</color></link> and <link=ThingStructureTransformer><color=green>Transformer (Large)</color></link>. ",
        "name": "Station Battery (Large)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Charge": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Empty",
          "1": "Critical",
          "2": "VeryLow",
          "3": "Low",
          "4": "Medium",
          "5": "High",
          "6": "Full"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBatteryMedium": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBatteryMedium",
        "prefab_hash": -1125305264,
        "desc": "0.Empty\n1.Critical\n2.VeryLow\n3.Low\n4.Medium\n5.High\n6.Full",
        "name": "Battery (Medium)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "Read",
          "Charge": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Empty",
          "1": "Critical",
          "2": "VeryLow",
          "3": "Low",
          "4": "Medium",
          "5": "High",
          "6": "Full"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBatterySmall": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBatterySmall",
        "prefab_hash": -2123455080,
        "desc": "0.Empty\n1.Critical\n2.VeryLow\n3.Low\n4.Medium\n5.High\n6.Full",
        "name": "Auxiliary Rocket Battery "
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "Read",
          "Charge": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Empty",
          "1": "Critical",
          "2": "VeryLow",
          "3": "Low",
          "4": "Medium",
          "5": "High",
          "6": "Full"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBeacon": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBeacon",
        "prefab_hash": -188177083,
        "desc": "",
        "name": "Beacon"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Color": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": true,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBench": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBench",
        "prefab_hash": -2042448192,
        "desc": "When it's time to sit, nothing supports you like a bench. This bench is powered, so you can use appliances like the <link=ThingApplianceMicrowave><color=green>Microwave</color></link>.",
        "name": "Powered Bench"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Appliance 1",
          "typ": "Appliance"
        },
        {
          "name": "Appliance 2",
          "typ": "Appliance"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBench1": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBench1",
        "prefab_hash": 406745009,
        "desc": "",
        "name": "Bench (Counter Style)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Appliance 1",
          "typ": "Appliance"
        },
        {
          "name": "Appliance 2",
          "typ": "Appliance"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBench2": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBench2",
        "prefab_hash": -2127086069,
        "desc": "",
        "name": "Bench (High Tech Style)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Appliance 1",
          "typ": "Appliance"
        },
        {
          "name": "Appliance 2",
          "typ": "Appliance"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBench3": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBench3",
        "prefab_hash": -164622691,
        "desc": "",
        "name": "Bench (Frame Style)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Appliance 1",
          "typ": "Appliance"
        },
        {
          "name": "Appliance 2",
          "typ": "Appliance"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBench4": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBench4",
        "prefab_hash": 1750375230,
        "desc": "",
        "name": "Bench (Workbench Style)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "On": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Appliance 1",
          "typ": "Appliance"
        },
        {
          "name": "Appliance 2",
          "typ": "Appliance"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBlastDoor": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBlastDoor",
        "prefab_hash": 337416191,
        "desc": "Airtight and almost undamageable, the original 'Millmar' series of blast door was designed by off-world mining giant <link=Recurso><color=#0080FFFF>Recurso</color></link> to protect asteroid-mining facilities from nuclear-incident-level explosive decompression.\nShort of a pocket-sized singularity blinking into the local space-time frame, there is effectively no limit to the pressure these blast doors can contain - ideal for constructing airlocks in pressure-sensitive environments.",
        "name": "Blast Door"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureBlockBed": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureBlockBed",
        "prefab_hash": 697908419,
        "desc": "Description coming.",
        "name": "Block Bed"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Bed",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureBlocker": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureBlocker",
        "prefab_hash": 378084505,
        "desc": "",
        "name": "Blocker"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCableAnalysizer": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCableAnalysizer",
        "prefab_hash": 1036015121,
        "desc": "",
        "name": "Cable Analyzer"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "PowerRequired": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureCableCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableCorner",
        "prefab_hash": -889269388,
        "desc": "Carrying power and data alike, cable coil has come to symbolize the innovation, independence and flexibility of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> life - so essential, the <link=ODA><color=#0080FFFF>ODA</color></link> designated it an official <link=ToolPage><color=#0080FFFF>'tool'</color></link> during the 3rd Decannual Stationeer Solar Conference.\nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
        "name": "Cable (Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableCorner3": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableCorner3",
        "prefab_hash": 980469101,
        "desc": "Carrying power and data alike, cable coil has come to symbolize the innovation, independence and flexibility of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> life - so essential, the <link=ODA><color=#0080FFFF>ODA</color></link> designated it an official <link=ToolPage><color=#0080FFFF>'tool'</color></link> during the 3rd Decannual Stationeer Solar Conference.\nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
        "name": "Cable (3-Way Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableCorner3Burnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableCorner3Burnt",
        "prefab_hash": 318437449,
        "desc": "",
        "name": "Burnt Cable (3-Way Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableCorner3HBurnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableCorner3HBurnt",
        "prefab_hash": 2393826,
        "desc": "<N:EN:StructureCableCorner3HBurnt>",
        "name": "<N:EN:StructureCableCorner3HBurnt>"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableCorner4": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableCorner4",
        "prefab_hash": -1542172466,
        "desc": "",
        "name": "Cable (4-Way Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableCorner4Burnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableCorner4Burnt",
        "prefab_hash": 268421361,
        "desc": "",
        "name": "Burnt Cable (4-Way Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableCorner4HBurnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableCorner4HBurnt",
        "prefab_hash": -981223316,
        "desc": "",
        "name": "Burnt Heavy Cable (4-Way Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableCornerBurnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableCornerBurnt",
        "prefab_hash": -177220914,
        "desc": "",
        "name": "Burnt Cable (Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableCornerH": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableCornerH",
        "prefab_hash": -39359015,
        "desc": "",
        "name": "Heavy Cable (Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableCornerH3": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableCornerH3",
        "prefab_hash": -1843379322,
        "desc": "",
        "name": "Heavy Cable (3-Way Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableCornerH4": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableCornerH4",
        "prefab_hash": 205837861,
        "desc": "",
        "name": "Heavy Cable (4-Way Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableCornerHBurnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableCornerHBurnt",
        "prefab_hash": 1931412811,
        "desc": "",
        "name": "Burnt Cable (Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableFuse100k": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCableFuse100k",
        "prefab_hash": 281380789,
        "desc": "",
        "name": "Fuse (100kW)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureCableFuse1k": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCableFuse1k",
        "prefab_hash": -1103727120,
        "desc": "",
        "name": "Fuse (1kW)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureCableFuse50k": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCableFuse50k",
        "prefab_hash": -349716617,
        "desc": "",
        "name": "Fuse (50kW)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureCableFuse5k": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCableFuse5k",
        "prefab_hash": -631590668,
        "desc": "",
        "name": "Fuse (5kW)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureCableJunction": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunction",
        "prefab_hash": -175342021,
        "desc": "Carrying power and data alike, cable coil has come to symbolize the innovation, independence and flexibility of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> life - so much so, the <link=ODA><color=#0080FFFF>ODA</color></link> designated it an official <link=ToolPage><color=#0080FFFF>'tool'</color></link> during the 3rd Decannual Stationeer Solar Conference.\nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
        "name": "Cable (Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunction4": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunction4",
        "prefab_hash": 1112047202,
        "desc": "Carrying power and data alike, cable coil has come to symbolize the innovation, independence and flexibility of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> life - so much so, the <link=ODA><color=#0080FFFF>ODA</color></link> designated it an official <link=ToolPage><color=#0080FFFF>'tool'</color></link> during the 3rd Decannual Stationeer Solar Conference.\nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
        "name": "Cable (4-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunction4Burnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunction4Burnt",
        "prefab_hash": -1756896811,
        "desc": "",
        "name": "Burnt Cable (4-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunction4HBurnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunction4HBurnt",
        "prefab_hash": -115809132,
        "desc": "",
        "name": "Burnt Cable (4-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunction5": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunction5",
        "prefab_hash": 894390004,
        "desc": "",
        "name": "Cable (5-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunction5Burnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunction5Burnt",
        "prefab_hash": 1545286256,
        "desc": "",
        "name": "Burnt Cable (5-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunction6": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunction6",
        "prefab_hash": -1404690610,
        "desc": "Carrying power and data alike, cable coil has come to symbolize the innovation, independence and flexibility of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> duty - so much so, the <link=ODA><color=#0080FFFF>ODA</color></link> designated it an official <link=ToolPage><color=#0080FFFF>'tool'</color></link> during the 3rd Decannual Stationeer Solar Conference.\nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
        "name": "Cable (6-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunction6Burnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunction6Burnt",
        "prefab_hash": -628145954,
        "desc": "",
        "name": "Burnt Cable (6-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunction6HBurnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunction6HBurnt",
        "prefab_hash": 1854404029,
        "desc": "",
        "name": "Burnt Cable (6-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunctionBurnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunctionBurnt",
        "prefab_hash": -1620686196,
        "desc": "",
        "name": "Burnt Cable (Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunctionH": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunctionH",
        "prefab_hash": 469451637,
        "desc": "",
        "name": "Heavy Cable (3-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunctionH4": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunctionH4",
        "prefab_hash": -742234680,
        "desc": "",
        "name": "Heavy Cable (4-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunctionH5": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunctionH5",
        "prefab_hash": -1530571426,
        "desc": "",
        "name": "Heavy Cable (5-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunctionH5Burnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunctionH5Burnt",
        "prefab_hash": 1701593300,
        "desc": "",
        "name": "Burnt Heavy Cable (5-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunctionH6": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunctionH6",
        "prefab_hash": 1036780772,
        "desc": "",
        "name": "Heavy Cable (6-Way Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableJunctionHBurnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableJunctionHBurnt",
        "prefab_hash": -341365649,
        "desc": "",
        "name": "Burnt Cable (Junction)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableStraight": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableStraight",
        "prefab_hash": 605357050,
        "desc": "Carrying power and data alike, cable coil has come to symbolize the innovation, independence and flexibility of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> life - so much so, the <link=ODA><color=#0080FFFF>ODA</color></link> designated it an official <link=ToolPage><color=#0080FFFF>'tool'</color></link>.\nNormal coil has a maximum wattage of 5kW. For higher-current applications, use <link=ThingItemCableCoilHeavy><color=green>Cable Coil (Heavy)</color></link>.",
        "name": "Cable (Straight)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableStraightBurnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableStraightBurnt",
        "prefab_hash": -1196981113,
        "desc": "",
        "name": "Burnt Cable (Straight)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableStraightH": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableStraightH",
        "prefab_hash": -146200530,
        "desc": "",
        "name": "Heavy Cable (Straight)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCableStraightHBurnt": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCableStraightHBurnt",
        "prefab_hash": 2085762089,
        "desc": "",
        "name": "Burnt Cable (Straight)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureCamera": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCamera",
        "prefab_hash": -342072665,
        "desc": "Nothing says 'I care' like a security camera that's been linked a <link=ThingStructureMotionSensor><color=green>Motion Sensor</color></link> and a <link=ThingStructureConsole><color=green>Console</color></link> fitted with a <link=ThingCircuitboardCameraDisplay><color=green>Camera Display</color></link>.\nBe there, even when you're not.",
        "name": "Camera"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Mode": "ReadWrite",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Mode0",
          "1": "Mode1"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureCapsuleTankGas": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCapsuleTankGas",
        "prefab_hash": -1385712131,
        "desc": "",
        "name": "Gas Capsule Tank Small"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.002
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureCapsuleTankLiquid": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCapsuleTankLiquid",
        "prefab_hash": 1415396263,
        "desc": "",
        "name": "Liquid Capsule Tank Small"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.002
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureCargoStorageMedium": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCargoStorageMedium",
        "prefab_hash": 1151864003,
        "desc": "",
        "name": "Cargo Storage (Medium)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {},
          "2": {},
          "3": {},
          "4": {},
          "5": {},
          "6": {},
          "7": {},
          "8": {},
          "9": {},
          "10": {},
          "11": {},
          "12": {},
          "13": {},
          "14": {},
          "15": {},
          "16": {},
          "17": {},
          "18": {},
          "19": {},
          "20": {},
          "21": {},
          "22": {},
          "23": {},
          "24": {},
          "25": {},
          "26": {},
          "27": {},
          "28": {},
          "29": {},
          "30": {},
          "31": {},
          "32": {},
          "33": {},
          "34": {},
          "35": {},
          "36": {},
          "37": {},
          "38": {},
          "39": {},
          "40": {},
          "41": {},
          "42": {},
          "43": {},
          "44": {},
          "45": {},
          "46": {},
          "47": {},
          "48": {},
          "49": {},
          "50": {},
          "51": {},
          "52": {},
          "53": {},
          "54": {},
          "55": {},
          "56": {},
          "57": {},
          "58": {},
          "59": {},
          "60": {},
          "61": {},
          "62": {},
          "63": {},
          "64": {},
          "65": {},
          "66": {},
          "67": {},
          "68": {},
          "69": {},
          "70": {},
          "71": {},
          "72": {},
          "73": {},
          "74": {},
          "75": {},
          "76": {},
          "77": {},
          "78": {},
          "79": {},
          "80": {},
          "81": {},
          "82": {},
          "83": {},
          "84": {},
          "85": {},
          "86": {},
          "87": {},
          "88": {},
          "89": {},
          "90": {},
          "91": {},
          "92": {},
          "93": {},
          "94": {},
          "95": {},
          "96": {},
          "97": {},
          "98": {},
          "99": {},
          "100": {},
          "101": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Ratio": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Chute",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureCargoStorageSmall": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCargoStorageSmall",
        "prefab_hash": -1493672123,
        "desc": "",
        "name": "Cargo Storage (Small)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "15": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "16": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "17": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "18": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "19": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "20": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "21": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "22": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "23": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "24": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "25": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "26": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "27": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "28": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "29": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "30": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "31": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "32": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "33": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "34": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "35": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "36": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "37": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "38": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "39": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "40": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "41": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "42": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "43": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "44": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "45": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "46": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "47": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "48": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "49": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "50": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "51": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Ratio": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Chute",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureCentrifuge": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCentrifuge",
        "prefab_hash": 690945935,
        "desc": "If a <link=ThingStructureRecycler><color=green>Recycler</color></link> or unbalanced <link=ThingStructureFurnace><color=green>Furnace</color></link> outputs <link=ReagentPage><color=#0080FFFF>reagent</color></link> mixture rather than the desired <link=IngotPage><color=#0080FFFF>ingots</color></link>, a centrifuge allows you to reclaim the raw <link=OrePage><color=#0080FFFF>ore</color></link>. \n        It also refines <link=ThingItemDirtyOre><color=green>Dirty Ore</color></link> produced from the <link=ThingStructureDeepMiner><color=green>Deep Miner</color></link> and <link=ThingItemSpaceOre><color=green>Dirty Ore</color></link> produced from the <link=ThingStructureRocketMiner><color=green>Rocket Miner</color></link>. \n        Its bigger brother <link=ThingStructureCombustionCentrifuge><color=green>Combustion Centrifuge</color></link> can be used to process items significantly faster. Items processed by the centrifuge will be de-gassed. \n        If openned while powered on, the centrifuge will enter an errored state and reduce its rpm to 0 and then export any items.",
        "name": "Centrifuge"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": true
      }
    },
    "StructureChair": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChair",
        "prefab_hash": 1167659360,
        "desc": "One of the universe's many chairs, optimized for bipeds with somewhere between zero and two upper limbs.",
        "name": "Chair"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Seat",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChairBacklessDouble": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChairBacklessDouble",
        "prefab_hash": 1944858936,
        "desc": "",
        "name": "Chair (Backless Double)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Seat",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChairBacklessSingle": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChairBacklessSingle",
        "prefab_hash": 1672275150,
        "desc": "",
        "name": "Chair (Backless Single)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Seat",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChairBoothCornerLeft": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChairBoothCornerLeft",
        "prefab_hash": -367720198,
        "desc": "",
        "name": "Chair (Booth Corner Left)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Seat",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChairBoothMiddle": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChairBoothMiddle",
        "prefab_hash": 1640720378,
        "desc": "",
        "name": "Chair (Booth Middle)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Seat",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChairRectangleDouble": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChairRectangleDouble",
        "prefab_hash": -1152812099,
        "desc": "",
        "name": "Chair (Rectangle Double)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Seat",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChairRectangleSingle": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChairRectangleSingle",
        "prefab_hash": -1425428917,
        "desc": "",
        "name": "Chair (Rectangle Single)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Seat",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChairThickDouble": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChairThickDouble",
        "prefab_hash": -1245724402,
        "desc": "",
        "name": "Chair (Thick Double)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Seat",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChairThickSingle": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChairThickSingle",
        "prefab_hash": -1510009608,
        "desc": "",
        "name": "Chair (Thick Single)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Seat",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChuteBin": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChuteBin",
        "prefab_hash": -850484480,
        "desc": "The <link=Stationeers><color=#0080FFFF>Stationeer's</color></link> goal is to make off-world survival less of a struggle for themselves, and those who will follow in their footsteps.\nLike most <link=Recurso><color=#0080FFFF>Recurso</color></link>-designed systems, chute bins are simple and robust powered items, allowing items to be manually passed into chute networks by pulling a lever. They can also be programmed with <link=LogicUnitPage><color=#0080FFFF>logic</color></link> to operate automatically, although full automation requires the use items such as a <link=ThingStructureSDBHopper><color=green>SDB Hopper</color></link>.",
        "name": "Chute Bin"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Input",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureChuteCorner": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureChuteCorner",
        "prefab_hash": 1360330136,
        "desc": "Chutes act as pipes for items. Use them to connect various <link=ImportExportPage><color=#0080FFFF>import/export</color></link> equipment together such as the <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link> and printers like the <link=ThingStructureAutolathe><color=green>Autolathe</color></link>.\nThe aim for any <link=Stationeers><color=#0080FFFF>Stationeer</color></link> is to make off-world survival less of a struggle for themselves, and those who will follow in their footsteps.\nChute corners are fundamental components of chute networks, which allow the transport of items between machines with <link=ImportExportPage><color=#0080FFFF>import/export</color></link> slots, such as the <link=ThingStructureFurnace><color=green>Furnace</color></link> and other automatable structures.",
        "name": "Chute (Corner)"
      },
      "structure": {
        "small_grid": true
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ]
    },
    "StructureChuteDigitalFlipFlopSplitterLeft": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChuteDigitalFlipFlopSplitterLeft",
        "prefab_hash": -810874728,
        "desc": "The digital flip flop will toggle between two outputs using a specified ratio (n:1). For example, setting the dial to 2 would allow two items to pass through the primary output before flipping to the secondary output.",
        "name": "Chute Digital Flip Flop Splitter Left"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Setting": "ReadWrite",
          "Quantity": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "SettingOutput": "ReadWrite",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Mode0",
          "1": "Mode1"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Chute",
            "role": "Output2"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChuteDigitalFlipFlopSplitterRight": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChuteDigitalFlipFlopSplitterRight",
        "prefab_hash": 163728359,
        "desc": "The digital flip flop will toggle between two outputs using a specified ratio (n:1). For example, setting the dial to 2 would allow two items to pass through the primary output before flipping to the secondary output.",
        "name": "Chute Digital Flip Flop Splitter Right"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Setting": "ReadWrite",
          "Quantity": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "SettingOutput": "ReadWrite",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Mode0",
          "1": "Mode1"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Chute",
            "role": "Output2"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChuteDigitalValveLeft": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChuteDigitalValveLeft",
        "prefab_hash": 648608238,
        "desc": "The Digital Chute Valve will stop the flow of materials when set to closed and when set to open, will act like a straight chute. The valve will automatically close after a certain number of items have passed through. This threshold can be set using the dial.",
        "name": "Chute Digital Valve Left"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Quantity": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureChuteDigitalValveRight": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChuteDigitalValveRight",
        "prefab_hash": -1337091041,
        "desc": "The Digital Chute Valve will stop the flow of materials when set to closed and when set to open, will act like a straight chute. The valve will automatically close after a certain number of items have passed through. This threshold can be set using the dial.",
        "name": "Chute Digital Valve Right"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Quantity": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureChuteFlipFlopSplitter": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureChuteFlipFlopSplitter",
        "prefab_hash": -1446854725,
        "desc": "A chute that toggles between two outputs",
        "name": "Chute Flip Flop Splitter"
      },
      "structure": {
        "small_grid": true
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ]
    },
    "StructureChuteInlet": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChuteInlet",
        "prefab_hash": -1469588766,
        "desc": "The aim for any <link=Stationeers><color=#0080FFFF>Stationeer</color></link> is to make off-world survival less of a struggle for themselves, and those who will follow in their footsteps.\nThe chute inlet is an aperture by which items can be introduced to <link=ImportExportPage><color=#0080FFFF>import/export</color></link> networks. Note that its origins in zero-gravity mining means chute inlets are unpowered and permanently open, rather than interactable, allowing objects to be thrown in. They can be connected to <link=LogicUnitPage><color=#0080FFFF>logic</color></link> systems to monitor throughput.",
        "name": "Chute Inlet"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Lock": "ReadWrite",
          "ClearMemory": "Write",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChuteJunction": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureChuteJunction",
        "prefab_hash": -611232514,
        "desc": "The aim for any <link=Stationeers><color=#0080FFFF>Stationeer</color></link> is to make off-world survival less of a struggle for themselves, and those who will follow in their footsteps.\nChute junctions are fundamental components of chute networks, allowing merging or splitting of these networks. When combined with a programmed <link=ThingStructureSorter><color=green>Sorter</color></link>, items can be sent down different paths to various machines with <link=ImportExportPage><color=#0080FFFF>import/export</color></link> slots.",
        "name": "Chute (Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ]
    },
    "StructureChuteOutlet": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChuteOutlet",
        "prefab_hash": -1022714809,
        "desc": "The aim for any <link=Stationeers><color=#0080FFFF>Stationeer</color></link> is to make off-world survival less of a struggle for themselves, and those who will follow in their footsteps.\nThe chute outlet is an aperture for exiting items from <link=ImportExportPage><color=#0080FFFF>import/export</color></link> networks. Note that the outlet's origins in zero-gravity mining means they are permanently open, rather than interactable, but can be connected to <link=LogicUnitPage><color=#0080FFFF>logic</color></link> systems to monitor throughput.",
        "name": "Chute Outlet"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Lock": "ReadWrite",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChuteOverflow": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureChuteOverflow",
        "prefab_hash": 225377225,
        "desc": "The overflow chute will direct materials to its overflow port when the thing connected to its default port is already occupied.",
        "name": "Chute Overflow"
      },
      "structure": {
        "small_grid": true
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ]
    },
    "StructureChuteStraight": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureChuteStraight",
        "prefab_hash": 168307007,
        "desc": "Chutes act as pipes for items. Use them to connect various <link=ImportExportPage><color=#0080FFFF>import/export</color></link> equipment together such as the <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link> and printers like the <link=ThingStructureAutolathe><color=green>Autolathe</color></link>.\nThe aim for any <link=Stationeers><color=#0080FFFF>Stationeer</color></link> is to make off-world survival less of a struggle for themselves, and those who will follow in their footsteps.\nChutes are fundamental components of chute networks, which allow the transport of items between any machine or device with an <link=ImportExportPage><color=#0080FFFF>import/export</color></link> slot.",
        "name": "Chute (Straight)"
      },
      "structure": {
        "small_grid": true
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ]
    },
    "StructureChuteUmbilicalFemale": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChuteUmbilicalFemale",
        "prefab_hash": -1918892177,
        "desc": "",
        "name": "Umbilical Socket (Chute)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChuteUmbilicalFemaleSide": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChuteUmbilicalFemaleSide",
        "prefab_hash": -659093969,
        "desc": "",
        "name": "Umbilical Socket Angle (Chute)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureChuteUmbilicalMale": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureChuteUmbilicalMale",
        "prefab_hash": -958884053,
        "desc": "0.Left\n1.Center\n2.Right",
        "name": "Umbilical (Chute)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Left",
          "1": "Center",
          "2": "Right"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureChuteValve": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureChuteValve",
        "prefab_hash": 434875271,
        "desc": "The Chute Valve will stop the flow of materials when set to closed and when set to open, will act like a straight chute.",
        "name": "Chute Valve"
      },
      "structure": {
        "small_grid": true
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ]
    },
    "StructureChuteWindow": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureChuteWindow",
        "prefab_hash": -607241919,
        "desc": "Chute's with windows let you see what's passing through your <link=ImportExportPage><color=#0080FFFF>import/export</color></link> network. But be warned, they are not insulated as other chutes are. Ices will melt.",
        "name": "Chute (Window)"
      },
      "structure": {
        "small_grid": true
      },
      "slots": [
        {
          "name": "Transport Slot",
          "typ": "None"
        }
      ]
    },
    "StructureCircuitHousing": {
      "templateType": "StructureCircuitHolder",
      "prefab": {
        "prefab_name": "StructureCircuitHousing",
        "prefab_hash": -128473777,
        "desc": "",
        "name": "IC Housing"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "LineNumber": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "LineNumber": "ReadWrite",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": true
      },
      "slots": [
        {
          "name": "Programmable Chip",
          "typ": "ProgrammableChip"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "device_pins_length": 6,
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureCombustionCentrifuge": {
      "templateType": "StructureCircuitHolder",
      "prefab": {
        "prefab_name": "StructureCombustionCentrifuge",
        "prefab_hash": 1238905683,
        "desc": "The Combustion Centrifuge is a gas powered version of the <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link>. If a <link=ThingStructureRecycler><color=green>Recycler</color></link> or unbalanced <link=ThingStructureFurnace><color=green>Furnace</color></link> outputs <link=ReagentPage><color=#0080FFFF>reagent</color></link> mixture rather than the desired <link=IngotPage><color=#0080FFFF>ingots</color></link>, a centrifuge allows you to reclaim the raw <link=OrePage><color=#0080FFFF>ore</color></link>.\n        It also refines <link=ThingItemDirtyOre><color=green>Dirty Ore</color></link> produced from the <link=ThingStructureDeepMiner><color=green>Deep Miner</color></link> and <link=ThingItemSpaceOre><color=green>Dirty Ore</color></link> produced from the <link=ThingStructureRocketMiner><color=green>Rocket Miner</color></link>. A combustible fuel mix should be supplied to the gas input, and waste gasses should be vented from the output. \n        The machine's RPMs must be controlled via the throttle and combustion limiter levers. If the Combustion Centrifuge gains, or loses, RPMs too fast it will experience stress, and eventually grind to a halt.  Higher RPMs directly result in faster processing speeds. \n        The throttle lever controls the amount of fuel being pulled into the machine, increasing the temperature inside the engine, and leading to an increase in RPM. The limiter lever influences the speed of the combustion, and how much uncombusted gas is in the exhaust. \n        Ejecting ore from the Combustion Centrifuge while it is at high RPMs will result in additional stress build up.  If turned off while not stressed, the machine will automatically start to brake, and reduce RPMs in a controlled manner.\n\t  ",
        "name": "Combustion Centrifuge"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.001,
        "radiation_factor": 0.001
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {},
          "2": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "PressureInput": "Read",
          "TemperatureInput": "Read",
          "RatioOxygenInput": "Read",
          "RatioCarbonDioxideInput": "Read",
          "RatioNitrogenInput": "Read",
          "RatioPollutantInput": "Read",
          "RatioVolatilesInput": "Read",
          "RatioWaterInput": "Read",
          "RatioNitrousOxideInput": "Read",
          "TotalMolesInput": "Read",
          "PressureOutput": "Read",
          "TemperatureOutput": "Read",
          "RatioOxygenOutput": "Read",
          "RatioCarbonDioxideOutput": "Read",
          "RatioNitrogenOutput": "Read",
          "RatioPollutantOutput": "Read",
          "RatioVolatilesOutput": "Read",
          "RatioWaterOutput": "Read",
          "RatioNitrousOxideOutput": "Read",
          "TotalMolesOutput": "Read",
          "CombustionInput": "Read",
          "CombustionOutput": "Read",
          "CombustionLimiter": "ReadWrite",
          "Throttle": "ReadWrite",
          "Rpm": "Read",
          "Stress": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidNitrogenInput": "Read",
          "RatioLiquidNitrogenOutput": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidOxygenInput": "Read",
          "RatioLiquidOxygenOutput": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioLiquidVolatilesInput": "Read",
          "RatioLiquidVolatilesOutput": "Read",
          "RatioSteam": "Read",
          "RatioSteamInput": "Read",
          "RatioSteamOutput": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidCarbonDioxideInput": "Read",
          "RatioLiquidCarbonDioxideOutput": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidPollutantInput": "Read",
          "RatioLiquidPollutantOutput": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "RatioLiquidNitrousOxideInput": "Read",
          "RatioLiquidNitrousOxideOutput": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": true
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        },
        {
          "name": "Programmable Chip",
          "typ": "ProgrammableChip"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          }
        ],
        "device_pins_length": 2,
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": true
      }
    },
    "StructureCompositeCladdingAngled": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingAngled",
        "prefab_hash": -1513030150,
        "desc": "",
        "name": "Composite Cladding (Angled)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingAngledCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingAngledCorner",
        "prefab_hash": -69685069,
        "desc": "",
        "name": "Composite Cladding (Angled Corner)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingAngledCornerInner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingAngledCornerInner",
        "prefab_hash": -1841871763,
        "desc": "",
        "name": "Composite Cladding (Angled Corner Inner)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingAngledCornerInnerLong": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingAngledCornerInnerLong",
        "prefab_hash": -1417912632,
        "desc": "",
        "name": "Composite Cladding (Angled Corner Inner Long)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingAngledCornerInnerLongL": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingAngledCornerInnerLongL",
        "prefab_hash": 947705066,
        "desc": "",
        "name": "Composite Cladding (Angled Corner Inner Long L)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingAngledCornerInnerLongR": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingAngledCornerInnerLongR",
        "prefab_hash": -1032590967,
        "desc": "",
        "name": "Composite Cladding (Angled Corner Inner Long R)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingAngledCornerLong": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingAngledCornerLong",
        "prefab_hash": 850558385,
        "desc": "",
        "name": "Composite Cladding (Long Angled Corner)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingAngledCornerLongR": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingAngledCornerLongR",
        "prefab_hash": -348918222,
        "desc": "",
        "name": "Composite Cladding (Long Angled Mirrored Corner)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingAngledLong": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingAngledLong",
        "prefab_hash": -387546514,
        "desc": "",
        "name": "Composite Cladding (Long Angled)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingCylindrical": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingCylindrical",
        "prefab_hash": 212919006,
        "desc": "",
        "name": "Composite Cladding (Cylindrical)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingCylindricalPanel": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingCylindricalPanel",
        "prefab_hash": 1077151132,
        "desc": "",
        "name": "Composite Cladding (Cylindrical Panel)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingPanel": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingPanel",
        "prefab_hash": 1997436771,
        "desc": "",
        "name": "Composite Cladding (Panel)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingRounded": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingRounded",
        "prefab_hash": -259357734,
        "desc": "",
        "name": "Composite Cladding (Rounded)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingRoundedCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingRoundedCorner",
        "prefab_hash": 1951525046,
        "desc": "",
        "name": "Composite Cladding (Rounded Corner)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingRoundedCornerInner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingRoundedCornerInner",
        "prefab_hash": 110184667,
        "desc": "",
        "name": "Composite Cladding (Rounded Corner Inner)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingSpherical": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingSpherical",
        "prefab_hash": 139107321,
        "desc": "",
        "name": "Composite Cladding (Spherical)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingSphericalCap": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingSphericalCap",
        "prefab_hash": 534213209,
        "desc": "",
        "name": "Composite Cladding (Spherical Cap)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeCladdingSphericalCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeCladdingSphericalCorner",
        "prefab_hash": 1751355139,
        "desc": "",
        "name": "Composite Cladding (Spherical Corner)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeDoor": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCompositeDoor",
        "prefab_hash": -793837322,
        "desc": "<link=Recurso><color=#0080FFFF>Recurso's</color></link> composite doors are rated to 300kPa, which is more than sufficient for most purposes they were designed for. However, steep pressure differentials are not your friend.",
        "name": "Composite Door"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureCompositeFloorGrating": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeFloorGrating",
        "prefab_hash": 324868581,
        "desc": "While aesthetics rank low on the ladder of <link=Stationeers><color=#0080FFFF>Stationeer</color></link> concerns, composite gratings allow the concealment of unsightly cables on floors, walls and ceilings.",
        "name": "Composite Floor Grating"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeFloorGrating2": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeFloorGrating2",
        "prefab_hash": -895027741,
        "desc": "",
        "name": "Composite Floor Grating  (Type 2)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeFloorGrating3": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeFloorGrating3",
        "prefab_hash": -1113471627,
        "desc": "",
        "name": "Composite Floor Grating  (Type 3)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeFloorGrating4": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeFloorGrating4",
        "prefab_hash": 600133846,
        "desc": "",
        "name": "Composite Floor Grating  (Type 4)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeFloorGratingOpen": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeFloorGratingOpen",
        "prefab_hash": 2109695912,
        "desc": "",
        "name": "Composite Floor Grating Open"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeFloorGratingOpenRotated": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeFloorGratingOpenRotated",
        "prefab_hash": 882307910,
        "desc": "",
        "name": "Composite Floor Grating Open Rotated"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeWall": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeWall",
        "prefab_hash": 1237302061,
        "desc": "Air-tight and resistant to extreme temperatures, composite walls favor form over function, coming in a range of slightly different, functionally identical varieties.",
        "name": "Composite Wall (Type 1)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeWall02": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeWall02",
        "prefab_hash": 718343384,
        "desc": "",
        "name": "Composite Wall (Type 2)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeWall03": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeWall03",
        "prefab_hash": 1574321230,
        "desc": "",
        "name": "Composite Wall (Type 3)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeWall04": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeWall04",
        "prefab_hash": -1011701267,
        "desc": "",
        "name": "Composite Wall (Type 4)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeWindow": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeWindow",
        "prefab_hash": -2060571986,
        "desc": "Air-tight and resistant to extreme temperatures, composite walls come in several charming, near identical varieties - reflecting their designer's focus on form over function.",
        "name": "Composite Window"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureCompositeWindowIron": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureCompositeWindowIron",
        "prefab_hash": -688284639,
        "desc": "",
        "name": "Iron Window"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureComputer": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureComputer",
        "prefab_hash": -626563514,
        "desc": "In some ways a relic, the 'Chonk R1' was designed by severely conflicted <link=Norsec><color=#0080FFFF>Norsec</color></link> technicians, who needed a unit that could operate with a wide range of <link=LogicUnitPage><color=#0080FFFF>motherboards</color></link>, while also enduring the worst a new Cadet could throw at it.\nThe result is a machine described by some as 'the only PC likely to survive our collision with a black hole', while other, less appreciative users regard it as sharing most of its technological DNA with a cheese grater.\nCompatible motherboards:\n- <link=ThingMotherboardLogic><color=green>Logic Motherboard</color></link>\n- <link=ThingMotherboardManufacturing><color=green>Manufacturing Motherboard</color></link>\n- <link=ThingMotherboardSorter><color=green>Sorter Motherboard</color></link>\n- <link=ThingMotherboardComms><color=green>Communications Motherboard</color></link>\n- <link=ThingMotherboardProgrammableChip><color=green>IC Editor Motherboard</color></link>",
        "name": "Computer"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {},
          "2": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Data Disk",
          "typ": "DataDisk"
        },
        {
          "name": "Data Disk",
          "typ": "DataDisk"
        },
        {
          "name": "Motherboard",
          "typ": "Motherboard"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureCondensationChamber": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCondensationChamber",
        "prefab_hash": 1420719315,
        "desc": "A device for safely condensing gasses into liquids. Liquids and Gasses will both exist safely inside the device. The Chamber will pressurise using its in-built pressure regulator to the target set by the setting wheel.\n        The secondary gas input on the left is a heat-exchanger input and allows for heat exchange between the secondary input pipe and the internal atmosphere of the Condensation Chamber.\n        Paired with <link=ThingStructureEvaporationChamber><color=green>Evaporation Chamber</color></link> Stationeers can exploit the phase change properties of gases to build a DIY air conditioner.",
        "name": "Condensation Chamber"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.001,
        "radiation_factor": 0.000050000002
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input2"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureCondensationValve": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCondensationValve",
        "prefab_hash": -965741795,
        "desc": "Allows for the removal of any liquids from a gas pipe into a liquid pipe. Only allows liquids to pass in one direction.",
        "name": "Condensation Valve"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Output"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureConsole": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureConsole",
        "prefab_hash": 235638270,
        "desc": "This <link=Norsec><color=#0080FFFF>Norsec-designed</color></link> control box manages devices such as the <link=ThingStructureActiveVent><color=green>Active Vent</color></link>, <link=ThingStructurePassiveVent><color=green>Passive Vent</color></link>, <link=ThingStructureGasSensor><color=green>Gas Sensor</color></link> and <link=ThingStructureCompositeDoor><color=green>Composite Door</color></link>, depending on which <link=LogicPage><color=#0080FFFF>circuitboard</color></link> is inserted into the unit. It has a shared data/power port.\nA completed console displays all devices connected to the current power network. Any devices not related to the installed circuitboard will be greyed-out and inoperable. Consoles are locked once a <link=ThingItemDataDisk><color=green>Data Disk</color></link> is removed.",
        "name": "Console"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Circuit Board",
          "typ": "Circuitboard"
        },
        {
          "name": "Data Disk",
          "typ": "DataDisk"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureConsoleDual": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureConsoleDual",
        "prefab_hash": -722284333,
        "desc": "This <link=Norsec><color=#0080FFFF>Norsec-designed</color></link> control box manages devices such as the <link=ThingStructureActiveVent><color=green>Active Vent</color></link>, <link=ThingStructureGasSensor><color=green>Gas Sensor</color></link>, <link=ThingStructureCompositeDoor><color=green>Composite Door</color></link> and others, depending on which <link=LogicPage><color=#0080FFFF>circuitboard</color></link> is inserted into the unit. It has separate data and power ports.\nA completed console displays all devices connected to the current power network. Any devices not related to the installed circuitboard will be greyed-out and inoperable. Consoles are locked once a <link=ThingItemDataDisk><color=green>Data Disk</color></link> is removed.",
        "name": "Console Dual"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Circuit Board",
          "typ": "Circuitboard"
        },
        {
          "name": "Data Disk",
          "typ": "DataDisk"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureConsoleLED1x2": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureConsoleLED1x2",
        "prefab_hash": -53151617,
        "desc": "0.Default\n1.Percent\n2.Power",
        "name": "LED Display (Medium)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Color": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Default",
          "1": "Percent",
          "2": "Power"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": true,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureConsoleLED1x3": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureConsoleLED1x3",
        "prefab_hash": -1949054743,
        "desc": "0.Default\n1.Percent\n2.Power",
        "name": "LED Display (Large)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Color": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Default",
          "1": "Percent",
          "2": "Power"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": true,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureConsoleLED5": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureConsoleLED5",
        "prefab_hash": -815193061,
        "desc": "0.Default\n1.Percent\n2.Power",
        "name": "LED Display (Small)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Color": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Default",
          "1": "Percent",
          "2": "Power"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": true,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureConsoleMonitor": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureConsoleMonitor",
        "prefab_hash": 801677497,
        "desc": "This <link=Norsec><color=#0080FFFF>Norsec-designed</color></link> control box manages devices such as the <link=ThingStructureActiveVent><color=green>Active Vent</color></link>, <link=ThingStructurePassiveVent><color=green>Passive Vent</color></link>, <link=ThingStructureGasSensor><color=green>Gas Sensor</color></link>, <link=ThingItemSecurityCamera><color=green>Security Camera</color></link> and <link=ThingStructureCompositeDoor><color=green>Composite Door</color></link>, depending on which <link=LogicPage><color=#0080FFFF>circuitboard</color></link> is inserted into the unit. It has a shared data/power port, and a charming sloped interface.\nA completed console displays all devices connected to the current power network. Any devices not related to the installed circuitboard will be greyed-out and inoperable. Consoles are locked once a <link=ThingItemDataDisk><color=green>Data Disk</color></link> is removed.",
        "name": "Console Monitor"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Circuit Board",
          "typ": "Circuitboard"
        },
        {
          "name": "Data Disk",
          "typ": "DataDisk"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureControlChair": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureControlChair",
        "prefab_hash": -1961153710,
        "desc": "Once, these chairs were the heart of space-going behemoths. Now, they're items of nostalgia built only by a handful of Stationeers with a sense of history. In other words, kitsch.",
        "name": "Control Chair"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "PositionX": "Read",
          "PositionY": "Read",
          "PositionZ": "Read",
          "VelocityMagnitude": "Read",
          "VelocityRelativeX": "Read",
          "VelocityRelativeY": "Read",
          "VelocityRelativeZ": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Mode0",
          "1": "Mode1"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Entity",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureCornerLocker": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCornerLocker",
        "prefab_hash": -1968255729,
        "desc": "",
        "name": "Corner Locker"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureCrateMount": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureCrateMount",
        "prefab_hash": -733500083,
        "desc": "",
        "name": "Container Mount"
      },
      "structure": {
        "small_grid": true
      },
      "slots": [
        {
          "name": "Container Slot",
          "typ": "None"
        }
      ]
    },
    "StructureCryoTube": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCryoTube",
        "prefab_hash": 1938254586,
        "desc": "The exact operation of the Longsleep cryotube remains a commercial secret, with <link=Norsec><color=#0080FFFF>Norsec</color></link> merely licensing the design. Able to regenerate organ damage when supplied with power and an atmosphere, the Longsleep is a minor miracle of modern medical technology.",
        "name": "CryoTube"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Bed",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureCryoTubeHorizontal": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCryoTubeHorizontal",
        "prefab_hash": 1443059329,
        "desc": "The horizontal variant of the cryo tube. Will heal players and organs as well as revive dead players when provided with an atmosphere of Nitrogen below -150C.",
        "name": "Cryo Tube Horizontal"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.005,
        "radiation_factor": 0.005
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Player",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureCryoTubeVertical": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureCryoTubeVertical",
        "prefab_hash": -1381321828,
        "desc": "The vertical variant of the cryo tube. Will heal players and organs as well as revive dead players when provided with an atmosphere of Nitrogen below -150C.",
        "name": "Cryo Tube Vertical"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.005,
        "radiation_factor": 0.005
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Player",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureDaylightSensor": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureDaylightSensor",
        "prefab_hash": 1076425094,
        "desc": "Daylight sensors provide data on whether the current region of your base is in sunlight, and report the exact solar angle. Note that the orientation of the sensor alters the reported solar angle, while <link=LogicPage><color=#0080FFFF>Logic</color></link> systems can be used to offset it.",
        "name": "Daylight Sensor"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Mode": "ReadWrite",
          "Activate": "ReadWrite",
          "Horizontal": "Read",
          "Vertical": "Read",
          "SolarAngle": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "SolarIrradiance": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Default",
          "1": "Horizontal",
          "2": "Vertical"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureDeepMiner": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureDeepMiner",
        "prefab_hash": 265720906,
        "desc": "Drills through terrain until it hits bedrock. Once inside bedrock <link=ThingItemDirtyOre><color=green>Dirty Ore</color></link> is produced roughly every 90s",
        "name": "Deep Miner"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureDigitalValve": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureDigitalValve",
        "prefab_hash": -1280984102,
        "desc": "The digital valve allows <link=Stationeers><color=#0080FFFF>Stationeers</color></link> to create <link=LogicPage><color=#0080FFFF>logic-controlled</color></link> valves and pipe networks.",
        "name": "Digital Valve"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureDiode": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureDiode",
        "prefab_hash": 1944485013,
        "desc": "",
        "name": "LED"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Color": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": true,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureDiodeSlide": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureDiodeSlide",
        "prefab_hash": 576516101,
        "desc": "",
        "name": "Diode Slide"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureDockPortSide": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureDockPortSide",
        "prefab_hash": -137465079,
        "desc": "",
        "name": "Dock (Port Side)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureDrinkingFountain": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureDrinkingFountain",
        "prefab_hash": 1968371847,
        "desc": "<N:EN:StructureDrinkingFountain>",
        "name": "<N:EN:StructureDrinkingFountain>"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureElectrolyzer": {
      "templateType": "StructureCircuitHolder",
      "prefab": {
        "prefab_name": "StructureElectrolyzer",
        "prefab_hash": -1668992663,
        "desc": "The <link=Norsec><color=#0080FFFF>Norsec-designed</color></link> Electrolyzer splits <link=GasWater><color=#44AD83>Water</color></link> into hydrogen and <link=GasOxygen><color=#44AD83>Oxygen</color></link>. Employing unknown proprietary technology, the device uses water's latent heat as the energy to drive the electrosis process. If there is a downside to this near-miraculous fission, it's that the device is limited by the quantity of power available, which is used to maintain the temperature output. In other words, the machine works best with hot gas.",
        "name": "Electrolyzer"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "PressureInput": "Read",
          "TemperatureInput": "Read",
          "RatioOxygenInput": "Read",
          "RatioCarbonDioxideInput": "Read",
          "RatioNitrogenInput": "Read",
          "RatioPollutantInput": "Read",
          "RatioVolatilesInput": "Read",
          "RatioWaterInput": "Read",
          "RatioNitrousOxideInput": "Read",
          "TotalMolesInput": "Read",
          "PressureOutput": "Read",
          "TemperatureOutput": "Read",
          "RatioOxygenOutput": "Read",
          "RatioCarbonDioxideOutput": "Read",
          "RatioNitrogenOutput": "Read",
          "RatioPollutantOutput": "Read",
          "RatioVolatilesOutput": "Read",
          "RatioWaterOutput": "Read",
          "RatioNitrousOxideOutput": "Read",
          "TotalMolesOutput": "Read",
          "CombustionInput": "Read",
          "CombustionOutput": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidNitrogenInput": "Read",
          "RatioLiquidNitrogenOutput": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidOxygenInput": "Read",
          "RatioLiquidOxygenOutput": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioLiquidVolatilesInput": "Read",
          "RatioLiquidVolatilesOutput": "Read",
          "RatioSteam": "Read",
          "RatioSteamInput": "Read",
          "RatioSteamOutput": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidCarbonDioxideInput": "Read",
          "RatioLiquidCarbonDioxideOutput": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidPollutantInput": "Read",
          "RatioLiquidPollutantOutput": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "RatioLiquidNitrousOxideInput": "Read",
          "RatioLiquidNitrousOxideOutput": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Idle",
          "1": "Active"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": true
      },
      "slots": [
        {
          "name": "Programmable Chip",
          "typ": "ProgrammableChip"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "device_pins_length": 2,
        "has_activate_state": true,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureElectronicsPrinter": {
      "templateType": "StructureLogicDeviceConsumerMemory",
      "prefab": {
        "prefab_name": "StructureElectronicsPrinter",
        "prefab_hash": 1307165496,
        "desc": "The electronic printer will create any <link=ElectronicPage><color=#0080FFFF>electronic</color></link> part you need. From circuit boards and electronic devices to solar panels. The choice is yours. Upgrade the device using a <link=ThingElectronicPrinterMod><color=green>Electronic Printer Mod</color></link> for additional recipes and faster processing speeds.",
        "name": "Electronics Printer"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "Ingot"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": true
      },
      "consumer_info": {
        "consumed_resouces": [
          "ItemAstroloyIngot",
          "ItemConstantanIngot",
          "ItemCopperIngot",
          "ItemElectrumIngot",
          "ItemGoldIngot",
          "ItemHastelloyIngot",
          "ItemInconelIngot",
          "ItemInvarIngot",
          "ItemIronIngot",
          "ItemLeadIngot",
          "ItemNickelIngot",
          "ItemSiliconIngot",
          "ItemSilverIngot",
          "ItemSolderIngot",
          "ItemSolidFuel",
          "ItemSteelIngot",
          "ItemStelliteIngot",
          "ItemWaspaloyIngot",
          "ItemWasteIngot"
        ],
        "processed_reagents": []
      },
      "fabricator_info": {
        "tier": "Undefined",
        "recipes": {
          "ApplianceChemistryStation": {
            "tier": "TierOne",
            "time": 45.0,
            "energy": 1500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 1.0,
              "Steel": 5.0
            }
          },
          "ApplianceDeskLampLeft": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Iron": 2.0,
              "Silicon": 1.0
            }
          },
          "ApplianceDeskLampRight": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Iron": 2.0,
              "Silicon": 1.0
            }
          },
          "ApplianceMicrowave": {
            "tier": "TierOne",
            "time": 45.0,
            "energy": 1500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 1.0,
              "Iron": 5.0
            }
          },
          "AppliancePackagingMachine": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 1.0,
              "Iron": 10.0
            }
          },
          "AppliancePaintMixer": {
            "tier": "TierOne",
            "time": 45.0,
            "energy": 1500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 1.0,
              "Steel": 5.0
            }
          },
          "AppliancePlantGeneticAnalyzer": {
            "tier": "TierOne",
            "time": 45.0,
            "energy": 4500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 1.0,
              "Steel": 5.0
            }
          },
          "AppliancePlantGeneticSplicer": {
            "tier": "TierOne",
            "time": 50.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Inconel": 10.0,
              "Stellite": 20.0
            }
          },
          "AppliancePlantGeneticStabilizer": {
            "tier": "TierOne",
            "time": 50.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Inconel": 10.0,
              "Stellite": 20.0
            }
          },
          "ApplianceReagentProcessor": {
            "tier": "TierOne",
            "time": 45.0,
            "energy": 1500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 1.0,
              "Iron": 5.0
            }
          },
          "ApplianceTabletDock": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 750.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 2.0,
              "Gold": 1.0,
              "Iron": 5.0,
              "Silicon": 1.0
            }
          },
          "AutolathePrinterMod": {
            "tier": "TierTwo",
            "time": 180.0,
            "energy": 72000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Constantan": 8.0,
              "Electrum": 8.0,
              "Solder": 8.0,
              "Steel": 35.0
            }
          },
          "Battery_Wireless_cell": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 10000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Gold": 2.0,
              "Iron": 2.0
            }
          },
          "Battery_Wireless_cell_Big": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 20000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 15.0,
              "Gold": 5.0,
              "Steel": 5.0
            }
          },
          "CartridgeAtmosAnalyser": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "CartridgeConfiguration": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "CartridgeElectronicReader": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "CartridgeGPS": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "CartridgeMedicalAnalyser": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "CartridgeNetworkAnalyser": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "CartridgeOreScanner": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "CartridgeOreScannerColor": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Constantan": 5.0,
              "Electrum": 5.0,
              "Invar": 5.0,
              "Silicon": 5.0
            }
          },
          "CartridgePlantAnalyser": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "CartridgeTracker": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "CircuitboardAdvAirlockControl": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "CircuitboardAirControl": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0
            }
          },
          "CircuitboardAirlockControl": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "CircuitboardDoorControl": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0
            }
          },
          "CircuitboardGasDisplay": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "CircuitboardGraphDisplay": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0
            }
          },
          "CircuitboardHashDisplay": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0
            }
          },
          "CircuitboardModeControl": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0
            }
          },
          "CircuitboardPowerControl": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0
            }
          },
          "CircuitboardShipDisplay": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0
            }
          },
          "CircuitboardSolarControl": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0
            }
          },
          "DynamicLight": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Iron": 5.0
            }
          },
          "ElectronicPrinterMod": {
            "tier": "TierOne",
            "time": 180.0,
            "energy": 72000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Constantan": 8.0,
              "Electrum": 8.0,
              "Solder": 8.0,
              "Steel": 35.0
            }
          },
          "ItemAdvancedTablet": {
            "tier": "TierTwo",
            "time": 60.0,
            "energy": 12000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 6,
            "reagents": {
              "Copper": 5.5,
              "Electrum": 1.0,
              "Gold": 12.0,
              "Iron": 3.0,
              "Solder": 5.0,
              "Steel": 2.0
            }
          },
          "ItemAreaPowerControl": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Iron": 5.0,
              "Solder": 3.0
            }
          },
          "ItemBatteryCell": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 2.0,
              "Iron": 2.0
            }
          },
          "ItemBatteryCellLarge": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 20000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Gold": 5.0,
              "Steel": 5.0
            }
          },
          "ItemBatteryCellNuclear": {
            "tier": "TierTwo",
            "time": 180.0,
            "energy": 360000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Astroloy": 10.0,
              "Inconel": 5.0,
              "Steel": 5.0
            }
          },
          "ItemBatteryCharger": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 10.0
            }
          },
          "ItemBatteryChargerSmall": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 250.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0,
              "Iron": 5.0
            }
          },
          "ItemCableAnalyser": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Iron": 1.0,
              "Silicon": 2.0
            }
          },
          "ItemCableCoil": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Copper": 0.5
            }
          },
          "ItemCableCoilHeavy": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 0.5,
              "Gold": 0.5
            }
          },
          "ItemCableFuse": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Iron": 5.0
            }
          },
          "ItemCreditCard": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Silicon": 5.0
            }
          },
          "ItemDataDisk": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0
            }
          },
          "ItemElectronicParts": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 10.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 2.0,
              "Iron": 3.0
            }
          },
          "ItemFlashingLight": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 3.0,
              "Iron": 2.0
            }
          },
          "ItemHEMDroidRepairKit": {
            "tier": "TierTwo",
            "time": 40.0,
            "energy": 1500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Electrum": 10.0,
              "Inconel": 5.0,
              "Solder": 5.0
            }
          },
          "ItemIntegratedCircuit10": {
            "tier": "TierOne",
            "time": 40.0,
            "energy": 4000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Electrum": 5.0,
              "Gold": 10.0,
              "Solder": 2.0,
              "Steel": 4.0
            }
          },
          "ItemKitAIMeE": {
            "tier": "TierTwo",
            "time": 25.0,
            "energy": 2200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 7,
            "reagents": {
              "Astroloy": 10.0,
              "Constantan": 8.0,
              "Copper": 5.0,
              "Electrum": 15.0,
              "Gold": 5.0,
              "Invar": 7.0,
              "Steel": 22.0
            }
          },
          "ItemKitAdvancedComposter": {
            "tier": "TierTwo",
            "time": 55.0,
            "energy": 20000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 15.0,
              "Electrum": 20.0,
              "Solder": 5.0,
              "Steel": 30.0
            }
          },
          "ItemKitAdvancedFurnace": {
            "tier": "TierTwo",
            "time": 180.0,
            "energy": 36000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 6,
            "reagents": {
              "Copper": 25.0,
              "Electrum": 15.0,
              "Gold": 5.0,
              "Silicon": 6.0,
              "Solder": 8.0,
              "Steel": 30.0
            }
          },
          "ItemKitAdvancedPackagingMachine": {
            "tier": "TierTwo",
            "time": 60.0,
            "energy": 18000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Constantan": 10.0,
              "Copper": 10.0,
              "Electrum": 15.0,
              "Steel": 20.0
            }
          },
          "ItemKitAutoMinerSmall": {
            "tier": "TierTwo",
            "time": 90.0,
            "energy": 9000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 5,
            "reagents": {
              "Copper": 15.0,
              "Electrum": 50.0,
              "Invar": 25.0,
              "Iron": 15.0,
              "Steel": 100.0
            }
          },
          "ItemKitAutomatedOven": {
            "tier": "TierTwo",
            "time": 50.0,
            "energy": 15000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 5,
            "reagents": {
              "Constantan": 5.0,
              "Copper": 15.0,
              "Gold": 10.0,
              "Solder": 10.0,
              "Steel": 25.0
            }
          },
          "ItemKitBattery": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 12000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 20.0,
              "Gold": 20.0,
              "Steel": 20.0
            }
          },
          "ItemKitBatteryLarge": {
            "tier": "TierTwo",
            "time": 240.0,
            "energy": 96000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 6,
            "reagents": {
              "Copper": 35.0,
              "Electrum": 10.0,
              "Gold": 35.0,
              "Silicon": 5.0,
              "Steel": 35.0,
              "Stellite": 2.0
            }
          },
          "ItemKitBeacon": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 2.0,
              "Gold": 4.0,
              "Solder": 2.0,
              "Steel": 5.0
            }
          },
          "ItemKitComputer": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Gold": 5.0,
              "Iron": 5.0
            }
          },
          "ItemKitConsole": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 3.0,
              "Iron": 2.0
            }
          },
          "ItemKitDynamicGenerator": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Gold": 15.0,
              "Nickel": 15.0,
              "Solder": 5.0,
              "Steel": 20.0
            }
          },
          "ItemKitElevator": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 2.0,
              "Gold": 4.0,
              "Solder": 2.0,
              "Steel": 2.0
            }
          },
          "ItemKitFridgeBig": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 10.0,
              "Gold": 5.0,
              "Iron": 20.0,
              "Steel": 15.0
            }
          },
          "ItemKitFridgeSmall": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 2.0,
              "Iron": 10.0
            }
          },
          "ItemKitGasGenerator": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 10.0,
              "Iron": 50.0
            }
          },
          "ItemKitGroundTelescope": {
            "tier": "TierOne",
            "time": 150.0,
            "energy": 24000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Electrum": 15.0,
              "Solder": 10.0,
              "Steel": 25.0
            }
          },
          "ItemKitGrowLight": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Electrum": 10.0,
              "Steel": 5.0
            }
          },
          "ItemKitHarvie": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 5,
            "reagents": {
              "Copper": 15.0,
              "Electrum": 10.0,
              "Silicon": 5.0,
              "Solder": 5.0,
              "Steel": 10.0
            }
          },
          "ItemKitHorizontalAutoMiner": {
            "tier": "TierTwo",
            "time": 60.0,
            "energy": 60000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 5,
            "reagents": {
              "Copper": 7.0,
              "Electrum": 25.0,
              "Invar": 15.0,
              "Iron": 8.0,
              "Steel": 60.0
            }
          },
          "ItemKitHydroponicStation": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 20.0,
              "Gold": 5.0,
              "Nickel": 5.0,
              "Steel": 10.0
            }
          },
          "ItemKitLandingPadAtmos": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 1.0,
              "Steel": 5.0
            }
          },
          "ItemKitLandingPadBasic": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 1.0,
              "Steel": 5.0
            }
          },
          "ItemKitLandingPadWaypoint": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 1.0,
              "Steel": 5.0
            }
          },
          "ItemKitLargeSatelliteDish": {
            "tier": "TierOne",
            "time": 240.0,
            "energy": 72000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Astroloy": 100.0,
              "Inconel": 50.0,
              "Waspaloy": 20.0
            }
          },
          "ItemKitLogicCircuit": {
            "tier": "TierOne",
            "time": 40.0,
            "energy": 2000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Solder": 2.0,
              "Steel": 4.0
            }
          },
          "ItemKitLogicInputOutput": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0
            }
          },
          "ItemKitLogicMemory": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0
            }
          },
          "ItemKitLogicProcessor": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0
            }
          },
          "ItemKitLogicSwitch": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0
            }
          },
          "ItemKitLogicTransmitter": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 1.0,
              "Electrum": 3.0,
              "Gold": 2.0,
              "Silicon": 5.0
            }
          },
          "ItemKitMusicMachines": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0
            }
          },
          "ItemKitPowerTransmitter": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 7.0,
              "Gold": 5.0,
              "Steel": 3.0
            }
          },
          "ItemKitPowerTransmitterOmni": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 8.0,
              "Gold": 4.0,
              "Steel": 4.0
            }
          },
          "ItemKitPressurePlate": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0
            }
          },
          "ItemKitResearchMachine": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 10.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 2.0,
              "Iron": 9.0
            }
          },
          "ItemKitSatelliteDish": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 24000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Electrum": 15.0,
              "Solder": 10.0,
              "Steel": 20.0
            }
          },
          "ItemKitSensor": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 10.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 3.0
            }
          },
          "ItemKitSmallSatelliteDish": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 10.0,
              "Gold": 5.0
            }
          },
          "ItemKitSolarPanel": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 20.0,
              "Gold": 5.0,
              "Steel": 15.0
            }
          },
          "ItemKitSolarPanelBasic": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Gold": 2.0,
              "Iron": 10.0
            }
          },
          "ItemKitSolarPanelBasicReinforced": {
            "tier": "TierTwo",
            "time": 120.0,
            "energy": 24000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 10.0,
              "Electrum": 2.0,
              "Invar": 10.0,
              "Steel": 10.0
            }
          },
          "ItemKitSolarPanelReinforced": {
            "tier": "TierTwo",
            "time": 120.0,
            "energy": 24000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Astroloy": 15.0,
              "Copper": 20.0,
              "Electrum": 5.0,
              "Steel": 10.0
            }
          },
          "ItemKitSolidGenerator": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 10.0,
              "Iron": 50.0
            }
          },
          "ItemKitSpeaker": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Steel": 5.0
            }
          },
          "ItemKitStirlingEngine": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 20.0,
              "Gold": 5.0,
              "Steel": 30.0
            }
          },
          "ItemKitTransformer": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 12000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 5.0,
              "Steel": 10.0
            }
          },
          "ItemKitTransformerSmall": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 1.0,
              "Iron": 10.0
            }
          },
          "ItemKitTurbineGenerator": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 2.0,
              "Gold": 4.0,
              "Iron": 5.0,
              "Solder": 4.0
            }
          },
          "ItemKitUprightWindTurbine": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 12000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Gold": 5.0,
              "Iron": 10.0
            }
          },
          "ItemKitVendingMachine": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 15000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Electrum": 50.0,
              "Gold": 50.0,
              "Solder": 10.0,
              "Steel": 20.0
            }
          },
          "ItemKitVendingMachineRefrigerated": {
            "tier": "TierTwo",
            "time": 60.0,
            "energy": 25000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Electrum": 80.0,
              "Gold": 60.0,
              "Solder": 30.0,
              "Steel": 40.0
            }
          },
          "ItemKitWeatherStation": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 12000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 5.0,
              "Gold": 3.0,
              "Iron": 8.0,
              "Steel": 3.0
            }
          },
          "ItemKitWindTurbine": {
            "tier": "TierTwo",
            "time": 60.0,
            "energy": 12000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Electrum": 5.0,
              "Steel": 20.0
            }
          },
          "ItemLabeller": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 800.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 1.0,
              "Iron": 3.0
            }
          },
          "ItemLaptop": {
            "tier": "TierTwo",
            "time": 60.0,
            "energy": 18000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 5,
            "reagents": {
              "Copper": 5.5,
              "Electrum": 5.0,
              "Gold": 12.0,
              "Solder": 5.0,
              "Steel": 2.0
            }
          },
          "ItemPowerConnector": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 3.0,
              "Iron": 10.0
            }
          },
          "ItemResearchCapsule": {
            "tier": "TierOne",
            "time": 3.0,
            "energy": 400.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 2.0,
              "Iron": 9.0
            }
          },
          "ItemResearchCapsuleGreen": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 10.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Astroloy": 2.0,
              "Copper": 3.0,
              "Gold": 2.0,
              "Iron": 9.0
            }
          },
          "ItemResearchCapsuleRed": {
            "tier": "TierOne",
            "time": 8.0,
            "energy": 50.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 2.0,
              "Iron": 2.0
            }
          },
          "ItemResearchCapsuleYellow": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Astroloy": 3.0,
              "Copper": 3.0,
              "Gold": 2.0,
              "Iron": 9.0
            }
          },
          "ItemSoundCartridgeBass": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0,
              "Silicon": 2.0
            }
          },
          "ItemSoundCartridgeDrums": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0,
              "Silicon": 2.0
            }
          },
          "ItemSoundCartridgeLeads": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0,
              "Silicon": 2.0
            }
          },
          "ItemSoundCartridgeSynth": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0,
              "Silicon": 2.0
            }
          },
          "ItemTablet": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 2.0,
              "Solder": 5.0
            }
          },
          "ItemWallLight": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 10.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Iron": 1.0
            }
          },
          "MotherboardComms": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 5.0,
              "Electrum": 2.0,
              "Gold": 5.0,
              "Silver": 5.0
            }
          },
          "MotherboardLogic": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0
            }
          },
          "MotherboardProgrammableChip": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0
            }
          },
          "MotherboardRockets": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 5.0,
              "Solder": 5.0
            }
          },
          "MotherboardSorter": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Gold": 5.0,
              "Silver": 5.0
            }
          },
          "PipeBenderMod": {
            "tier": "TierTwo",
            "time": 180.0,
            "energy": 72000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Constantan": 8.0,
              "Electrum": 8.0,
              "Solder": 8.0,
              "Steel": 35.0
            }
          },
          "PortableComposter": {
            "tier": "TierOne",
            "time": 55.0,
            "energy": 20000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 15.0,
              "Steel": 10.0
            }
          },
          "PortableSolarPanel": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 3.0,
              "Iron": 5.0
            }
          },
          "ToolPrinterMod": {
            "tier": "TierTwo",
            "time": 180.0,
            "energy": 72000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Constantan": 8.0,
              "Electrum": 8.0,
              "Solder": 8.0,
              "Steel": 35.0
            }
          }
        }
      },
      "memory": {
        "instructions": {
          "DeviceSetLock": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>LOCK_STATE</color>                   | <color=orange>BOOL_8</color>     |\r\n| <color=grey>16-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>48</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | LOCK_STATE                   | BOOL_8     |\r\n| 16-63    | UNUSED                       | 48         |",
            "typ": "PrinterInstruction",
            "value": 6,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "LOCK_STATE",
                "typ": "Bool8"
              },
              {
                "range": [
                  16,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 48
                }
              }
            ]
          },
          "EjectAllReagents": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 8,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          },
          "EjectReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-39     | REAGENT_HASH                 | INT_32     |\r\n| 40-63    | UNUSED                       | 24         |",
            "typ": "PrinterInstruction",
            "value": 7,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  39
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  40,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 24
                }
              }
            ]
          },
          "ExecuteRecipe": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY</color>                     | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>PREFAB_HASH</color>                  | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY                     | BYTE_8     |\r\n| 16-47    | PREFAB_HASH                  | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 2,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "PREFAB_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "JumpIfNextInvalid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 4,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "JumpToAddress": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 5,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "MissingRecipeReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 54 TO 62</color>                     |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY_CEIL</color>                | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 54 TO 62                     |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY_CEIL                | BYTE_8     |\r\n| 16-47    | REAGENT_HASH                 | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 9,
            "valid": [
              54,
              62
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY_CEIL",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "StackPointer": {
            "description": "| <color=grey>VALID ONLY AT ADDRESS 63</color>                             |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>INDEX</color>                        | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESS 63                             |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | INDEX                        | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 1,
            "valid": [
              63,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "INDEX",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "WaitUntilNextValid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 3,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          }
        },
        "memory_access": "ReadWrite",
        "memory_size": 64
      }
    },
    "StructureElevatorLevelFront": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureElevatorLevelFront",
        "prefab_hash": -827912235,
        "desc": "",
        "name": "Elevator Level (Cabled)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ElevatorSpeed": "ReadWrite",
          "ElevatorLevel": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Elevator",
            "role": "None"
          },
          {
            "typ": "Elevator",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureElevatorLevelIndustrial": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureElevatorLevelIndustrial",
        "prefab_hash": 2060648791,
        "desc": "",
        "name": "Elevator Level"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ElevatorSpeed": "ReadWrite",
          "ElevatorLevel": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Elevator",
            "role": "None"
          },
          {
            "typ": "Elevator",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureElevatorShaft": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureElevatorShaft",
        "prefab_hash": 826144419,
        "desc": "",
        "name": "Elevator Shaft (Cabled)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ElevatorSpeed": "ReadWrite",
          "ElevatorLevel": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Elevator",
            "role": "None"
          },
          {
            "typ": "Elevator",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureElevatorShaftIndustrial": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureElevatorShaftIndustrial",
        "prefab_hash": 1998354978,
        "desc": "",
        "name": "Elevator Shaft"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "ElevatorSpeed": "ReadWrite",
          "ElevatorLevel": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Elevator",
            "role": "None"
          },
          {
            "typ": "Elevator",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureEmergencyButton": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureEmergencyButton",
        "prefab_hash": 1668452680,
        "desc": "Description coming.",
        "name": "Important Button"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureEngineMountTypeA1": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureEngineMountTypeA1",
        "prefab_hash": 2035781224,
        "desc": "",
        "name": "Engine Mount (Type A1)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureEvaporationChamber": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureEvaporationChamber",
        "prefab_hash": -1429782576,
        "desc": "A device for safely evaporating liquids into gasses. Liquids and Gasses will both exist safely inside the device. Lowering the pressure target of the in-built back pressure regulator using the setting wheel will change the boiling temperature of liquids inside.\n        The secondary gas input on the left is a heat-exchanger input and allows for heat exchange between the secondary input pipe and the internal atmosphere of the Evaporation Chamber. \n        Paired with <link=ThingStructureCondensationChamber><color=green>Condensation Chamber</color></link> Stationeers can exploit the phase change properties of gases to build a DIY air conditioner.",
        "name": "Evaporation Chamber"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.001,
        "radiation_factor": 0.000050000002
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input2"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureExpansionValve": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureExpansionValve",
        "prefab_hash": 195298587,
        "desc": "Allows for moving liquids from a liquid pipe into a gas pipe. Only allows liquids to pass in one direction. Typically this is done to allow the liquid to evaporate into a gas as part of an airconditioning loop.",
        "name": "Expansion Valve"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureFairingTypeA1": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFairingTypeA1",
        "prefab_hash": 1622567418,
        "desc": "",
        "name": "Fairing (Type A1)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureFairingTypeA2": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFairingTypeA2",
        "prefab_hash": -104908736,
        "desc": "",
        "name": "Fairing (Type A2)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureFairingTypeA3": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFairingTypeA3",
        "prefab_hash": -1900541738,
        "desc": "",
        "name": "Fairing (Type A3)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureFiltration": {
      "templateType": "StructureCircuitHolder",
      "prefab": {
        "prefab_name": "StructureFiltration",
        "prefab_hash": -348054045,
        "desc": "The Filtration Unit is based on a long-standing <link=ExMin><color=#0080FFFF>ExMin</color></link> system, itself based on older designs of uncertain provenance. It is available in the <link=ThingItemKitAtmospherics><color=green>Kit (Atmospherics)</color></link>.\nThe device has nonetheless proven indispensable for <link=Stationeers><color=#0080FFFF>Stationeer</color></link> atmospheric systems, as it can filter two <link=GasPage><color=#0080FFFF>gases</color></link> simultaneously from a single pipe network using a dual filter array. The unit has an input, and a filter output as well as an unfiltered outlet for any residual gases.\n",
        "name": "Filtration"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {},
          "2": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "PressureInput": "Read",
          "TemperatureInput": "Read",
          "RatioOxygenInput": "Read",
          "RatioCarbonDioxideInput": "Read",
          "RatioNitrogenInput": "Read",
          "RatioPollutantInput": "Read",
          "RatioVolatilesInput": "Read",
          "RatioWaterInput": "Read",
          "RatioNitrousOxideInput": "Read",
          "TotalMolesInput": "Read",
          "PressureOutput": "Read",
          "TemperatureOutput": "Read",
          "RatioOxygenOutput": "Read",
          "RatioCarbonDioxideOutput": "Read",
          "RatioNitrogenOutput": "Read",
          "RatioPollutantOutput": "Read",
          "RatioVolatilesOutput": "Read",
          "RatioWaterOutput": "Read",
          "RatioNitrousOxideOutput": "Read",
          "TotalMolesOutput": "Read",
          "PressureOutput2": "Read",
          "TemperatureOutput2": "Read",
          "RatioOxygenOutput2": "Read",
          "RatioCarbonDioxideOutput2": "Read",
          "RatioNitrogenOutput2": "Read",
          "RatioPollutantOutput2": "Read",
          "RatioVolatilesOutput2": "Read",
          "RatioWaterOutput2": "Read",
          "RatioNitrousOxideOutput2": "Read",
          "TotalMolesOutput2": "Read",
          "CombustionInput": "Read",
          "CombustionOutput": "Read",
          "CombustionOutput2": "Read",
          "RatioLiquidNitrogenInput": "Read",
          "RatioLiquidNitrogenOutput": "Read",
          "RatioLiquidNitrogenOutput2": "Read",
          "RatioLiquidOxygenInput": "Read",
          "RatioLiquidOxygenOutput": "Read",
          "RatioLiquidOxygenOutput2": "Read",
          "RatioLiquidVolatilesInput": "Read",
          "RatioLiquidVolatilesOutput": "Read",
          "RatioLiquidVolatilesOutput2": "Read",
          "RatioSteamInput": "Read",
          "RatioSteamOutput": "Read",
          "RatioSteamOutput2": "Read",
          "RatioLiquidCarbonDioxideInput": "Read",
          "RatioLiquidCarbonDioxideOutput": "Read",
          "RatioLiquidCarbonDioxideOutput2": "Read",
          "RatioLiquidPollutantInput": "Read",
          "RatioLiquidPollutantOutput": "Read",
          "RatioLiquidPollutantOutput2": "Read",
          "RatioLiquidNitrousOxideInput": "Read",
          "RatioLiquidNitrousOxideOutput": "Read",
          "RatioLiquidNitrousOxideOutput2": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Idle",
          "1": "Active"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": true
      },
      "slots": [
        {
          "name": "Gas Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Gas Filter",
          "typ": "GasFilter"
        },
        {
          "name": "Programmable Chip",
          "typ": "ProgrammableChip"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Pipe",
            "role": "Waste"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "device_pins_length": 2,
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureFlagSmall": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFlagSmall",
        "prefab_hash": -1529819532,
        "desc": "",
        "name": "Small Flag"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureFlashingLight": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureFlashingLight",
        "prefab_hash": -1535893860,
        "desc": "Few objects or ideas are as clearly and transparently named as the Flashing Light, although fans of scrupulous accuracy have been known to refer to it by its full, official title: 'Default Yellow Flashing Light'.",
        "name": "Flashing Light"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureFlatBench": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureFlatBench",
        "prefab_hash": 839890807,
        "desc": "",
        "name": "Bench (Flat)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Seat",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureFloorDrain": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFloorDrain",
        "prefab_hash": 1048813293,
        "desc": "A passive liquid floor inlet that quickly removes liquids in one direction from the world into the connected pipe network. It will equalise gasses with the world atmosphere also.",
        "name": "Passive Liquid Inlet"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructureFrame": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFrame",
        "prefab_hash": 1432512808,
        "desc": "More durable than the <link=ThingStructureFrameIron><color=green>Iron Frame</color></link>, steel frames also have several variations for more complex constructions, such as the <link=ThingStructureFrameCorner><color=green>Steel Frame (Corner)</color></link> and <link=ThingStructureFrameCornerCut><color=green>Steel Frame (Corner Cut)</color></link>. Like iron frames, they are placed then completed by welding <link=ThingItemSteelSheets><color=green>Steel Sheets</color></link> to the open framework.",
        "name": "Steel Frame"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureFrameCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFrameCorner",
        "prefab_hash": -2112390778,
        "desc": "More durable than the <link=ThingStructureFrameIron><color=green>Iron Frame</color></link>, steel frames also offer several variations for more complex lattice constructions. \nWith a little patience and maneuvering, the corner frame's Gothic-inspired silhouette allows the creation of ogival arches and even more ambitious architecture, although they are not airtight and cannot be built on.",
        "name": "Steel Frame (Corner)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureFrameCornerCut": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFrameCornerCut",
        "prefab_hash": 271315669,
        "desc": "0.Mode0\n1.Mode1",
        "name": "Steel Frame (Corner Cut)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureFrameIron": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFrameIron",
        "prefab_hash": -1240951678,
        "desc": "",
        "name": "Iron Frame"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureFrameSide": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFrameSide",
        "prefab_hash": -302420053,
        "desc": "More durable than the <link=ThingStructureFrameIron><color=green>Iron Frame</color></link>, steel frames also provide variations for more ornate constructions.",
        "name": "Steel Frame (Side)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureFridgeBig": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureFridgeBig",
        "prefab_hash": 958476921,
        "desc": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> Koolaid fridge is a self-cooling storage device with 15 slots that preserves food when powered and turned on. While many users have complained about the placement of the power switch, its place in the pantheon of off-world whiteware is unquestioned.\n      \nWith its own permanent internal atmosphere, the Koolaid fridge slows the decay of <link=OrganicPage><color=#0080FFFF>food</color></link> by maintaining an optimal internal temperature. Its power usage varies on the external temperature against which it must balance its internal temperature. As such, it must shed heat to operate, so the Koolaid fridge DOES NOT work in a vacuum.\n      \nAlso, don't leave the door open, as it will equalize with the current world temperature. And maybe start to beep.\n\nFor more information about food preservation, visit the <link=DecayPage><color=#0080FFFF>food decay</color></link> section of the Stationpedia.",
        "name": "Fridge (Large)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureFridgeSmall": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureFridgeSmall",
        "prefab_hash": 751887598,
        "desc": "Essentially a heavily insulated box that allows users to pipe in any desired atmosphere, the <link=Recurso><color=#0080FFFF>Recurso</color></link> Minibar fridge was a simple solution to the problem of <link=NutritionPage><color=#0080FFFF>food decay</color></link>. It stores a small number of items, at any temperature you can muster.\n      \n      For more information about food preservation, visit the <link=DecayPage><color=#0080FFFF>food decay</color></link> section of the Stationpedia.",
        "name": "Fridge Small"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureFurnace": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureFurnace",
        "prefab_hash": 1947944864,
        "desc": "The Zhurong furnace employs a high-temperature gas mixture of <link=GasOxygen><color=#44AD83>Oxygen</color></link> and <link=GasVolatiles><color=#44AD83>Volatiles</color></link> to smelt <link=IngotPage><color=#0080FFFF>ingots</color></link> and a range of <link=IngotPage><color=#0080FFFF>alloys</color></link> as raw materials for <link=FabricatorPage><color=#0080FFFF>fabricators</color></link>.\nA basic gas mixture can be achieved by adding <link=ThingItemOxite><color=green>Ice (Oxite)</color></link> and <link=ThingItemVolatiles><color=green>Ice (Volatiles)</color></link> in a 1:2 ratio directly to the furnace, but more complex alloys will require careful management of a dedicated gas mixing network. Exact ingredient ratios must be observed. Likewise, smelting ores at insufficient temperatures will produce <link=ReagentPage><color=#0080FFFF>reagents</color></link>, which must be recycled.\nIf liquids are present in the furnace, they will gather there until the furnace is connected to a liquid pipe network.",
        "name": "Furnace"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Reagents": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "RecipeHash": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Mode0",
          "1": "Mode1"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output2"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": true
      }
    },
    "StructureFuselageTypeA1": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFuselageTypeA1",
        "prefab_hash": 1033024712,
        "desc": "",
        "name": "Fuselage (Type A1)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureFuselageTypeA2": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFuselageTypeA2",
        "prefab_hash": -1533287054,
        "desc": "",
        "name": "Fuselage (Type A2)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureFuselageTypeA4": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFuselageTypeA4",
        "prefab_hash": 1308115015,
        "desc": "",
        "name": "Fuselage (Type A4)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureFuselageTypeC5": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureFuselageTypeC5",
        "prefab_hash": 147395155,
        "desc": "",
        "name": "Fuselage (Type C5)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureGasGenerator": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureGasGenerator",
        "prefab_hash": 1165997963,
        "desc": "",
        "name": "Gas Fuel Generator"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.01,
        "radiation_factor": 0.01
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PowerGeneration": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureGasMixer": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureGasMixer",
        "prefab_hash": 2104106366,
        "desc": "Indispensable for producing precise atmospheric ratios, this gas mixer blends two gases in proportions ranging anywhere from 0-100%.",
        "name": "Gas Mixer"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Pipe",
            "role": "Input2"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureGasSensor": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureGasSensor",
        "prefab_hash": -1252983604,
        "desc": "Gas sensors are designed to monitor and report basic atmospheric information, including temperature, pressure, and gas ratios. They also make wonderful wedding presents.",
        "name": "Gas Sensor"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureGasTankStorage": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureGasTankStorage",
        "prefab_hash": 1632165346,
        "desc": "When connected to a pipe network, the tank storage unit allows you to refill a <link=ThingItemGasCanisterEmpty><color=green>Canister</color></link>, as well as read various atmospheric data from the <link=SlotGasCanister><color=orange>Gas Canister</color></link>.",
        "name": "Gas Tank Storage"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Quantity": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "GasCanister"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureGasUmbilicalFemale": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureGasUmbilicalFemale",
        "prefab_hash": -1680477930,
        "desc": "",
        "name": "Umbilical Socket (Gas)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureGasUmbilicalFemaleSide": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureGasUmbilicalFemaleSide",
        "prefab_hash": -648683847,
        "desc": "",
        "name": "Umbilical Socket Angle (Gas)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureGasUmbilicalMale": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureGasUmbilicalMale",
        "prefab_hash": -1814939203,
        "desc": "0.Left\n1.Center\n2.Right",
        "name": "Umbilical (Gas)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Left",
          "1": "Center",
          "2": "Right"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureGlassDoor": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureGlassDoor",
        "prefab_hash": -324331872,
        "desc": "0.Operate\n1.Logic",
        "name": "Glass Door"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureGovernedGasEngine": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureGovernedGasEngine",
        "prefab_hash": -214232602,
        "desc": "The most reliable of all the rocket engines, the Pumped Gas Engine runs on a 2:1 mix of <link=GasVolatiles><color=#44AD83>Volatiles</color></link> to <link=GasOxygen><color=#44AD83>Oxygen</color></link> gas.",
        "name": "Pumped Gas Engine"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "Throttle": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "PassedMoles": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureGroundBasedTelescope": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureGroundBasedTelescope",
        "prefab_hash": -619745681,
        "desc": "A telescope that can be oriented to observe Celestial Bodies. When within full alignment will show orbital information for that celestial object. Atmospheric conditions may disrupt the ability to observe some objects at some times of day. To collect Horizontal and Vertical values you can use a <link=ThingStructureRocketCelestialTracker><color=green>Rocket Celestial Tracker</color></link> while it is in orbit, or a <link=ThingStructureDaylightSensor><color=green>Daylight Sensor</color></link> for primary body data.",
        "name": "Telescope"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "HorizontalRatio": "ReadWrite",
          "VerticalRatio": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "CelestialHash": "Read",
          "AlignmentError": "Read",
          "DistanceAu": "Read",
          "OrbitPeriod": "Read",
          "Inclination": "Read",
          "Eccentricity": "Read",
          "SemiMajorAxis": "Read",
          "DistanceKm": "Read",
          "CelestialParentHash": "Read",
          "TrueAnomaly": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureGrowLight": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureGrowLight",
        "prefab_hash": -1758710260,
        "desc": "<link=Agrizero><color=#0080FFFF>Agrizero's</color></link> leading hydroponic lighting system, the GrowUp UV light supplements sunshine in low light or sun-distant conditions. The unit adds growability over the space of a grid, so requires proximate placement to work. ",
        "name": "Grow Light"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureHarvie": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureHarvie",
        "prefab_hash": 958056199,
        "desc": "Use above a <link=ThingStructureHydroponicsTray><color=green>Hydroponics Tray</color></link> or <link=ThingStructureHydroponicsTrayData><color=green>Hydroponics Device</color></link> to manage the planting and harvest of your crops. It contains a button that will allow you to activate it's modes, or connect it to a logic system to do this for you. The modes indicate current growth status of the plant below. Import is used for planting, and harvested plants are sent to export.",
        "name": "Harvie"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "Plant": "Write",
          "Harvest": "Write",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Idle",
          "1": "Happy",
          "2": "UnHappy",
          "3": "Dead"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "Plant"
        },
        {
          "name": "Export",
          "typ": "None"
        },
        {
          "name": "Hand",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureHeatExchangeLiquidtoGas": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureHeatExchangeLiquidtoGas",
        "prefab_hash": 944685608,
        "desc": "The original specs for the N Series Flow-P heat exchanger were rumored to have been scrawled on the back of a burger receipt by a bored <link=Sinotai><color=#0080FFFF>Sinotai</color></link> designer riding up the Brazilian space elevator, but that hasn't stopped it becoming one of the most widely-copied heat exchanger designs in the Solar System.\nThe 'N Flow-P' has four connections, allowing you to pass separate liquid and gas networks into the unit, which then works to equalize temperature across the two separate networks.\nAs the N Flow-P is a passive system, it equalizes pressure across the entire of each individual network, unless connected to devices like a <link=ThingStructureVolumePump><color=green>Volume Pump</color></link> or a <link=ThingStructureBackLiquidPressureRegulator><color=green>Liquid Back Volume Regulator</color></link>.",
        "name": "Heat Exchanger - Liquid + Gas"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureHeatExchangerGastoGas": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureHeatExchangerGastoGas",
        "prefab_hash": 21266291,
        "desc": "The original specs for the N Series Flow-P heat exchanger were rumored to have been scrawled on the back of a burger receipt by a bored <link=Sinotai><color=#0080FFFF>Sinotai</color></link> designer riding up the Brazilian space elevator, but that hasn't stopped it becoming one of the most widely-copied heat exchanger designs in the Solar System.\nThe 'N Flow-P' has four connections, allowing you to pass two gas networks into the unit, which then works to equalize temperature across the two separate networks.\nAs the N Flow-P is a passive system, it equalizes pressure across the entire of each individual network, unless connected to gas management devices like a <link=ThingStructureVolumePump><color=green>Volume Pump</color></link> or a <link=ThingStructureBackPressureRegulator><color=green>Back Pressure Regulator</color></link>.",
        "name": "Heat Exchanger - Gas"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureHeatExchangerLiquidtoLiquid": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureHeatExchangerLiquidtoLiquid",
        "prefab_hash": -613784254,
        "desc": "The original specs for the N Series Flow-P heat exchanger were rumored to have been scrawled on the back of a burger receipt by a bored <link=Sinotai><color=#0080FFFF>Sinotai</color></link> designer riding up the Brazilian space elevator, but that hasn't stopped it becoming one of the most widely-copied heat exchanger designs in the Solar System.\nThe 'N Flow-P' has four connections, allowing you to pass two liquid networks into the unit, which then works to equalize temperature across the two separate networks.\nAs the N Flow-P is a passive system, it equalizes pressure across the entire of each individual network, unless connected to liquid management devices like a <link=ThingStructureLiquidVolumePump><color=green>Liquid Volume Pump</color></link> or a <link=ThingStructureBackLiquidPressureRegulator><color=green>Liquid Back Volume Regulator</color></link>.\n",
        "name": "Heat Exchanger - Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureHorizontalAutoMiner": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureHorizontalAutoMiner",
        "prefab_hash": 1070427573,
        "desc": "The <link=Recurso><color=#0080FFFF>Recurso</color></link> OGRE (Orthogonal Ground Rotating Excavator) is a base structure with attached mining vehicle, which will mine a horizontal shaft up to X meters long. When full, the mining vehicle will return to the base to empty itself, before returning to dig. If it encounters empty space, it will also return to base and await instruction. The unit will return if deactivated.\n      \nThe OGRE can be connected to a chute system, and is controllable by a logic network. Note that the OGRE outputs more <link=OrePage><color=#0080FFFF>ore</color></link> than a conventional <link=ThingItemMiningDrill><color=green>Mining Drill</color></link> over the same area, due to more efficient processing.\n\n<size=120%><b>MODES</b></size>\nIdle - 0\nMining - 1\nReturning - 2\nDepostingOre - 3\nFinished - 4\n",
        "name": "OGRE"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Mode0",
          "1": "Mode1"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureHydraulicPipeBender": {
      "templateType": "StructureLogicDeviceConsumerMemory",
      "prefab": {
        "prefab_name": "StructureHydraulicPipeBender",
        "prefab_hash": -1888248335,
        "desc": "A go-to tool for all your atmospheric and plumbing needs, the <link=ExMin><color=#0080FFFF>ExMin</color></link> Atmoprinter will create everything from pipes, pumps and tanks, to vents and filters, ensuring your survival in any environment. Upgrade the Atmoprinter using a <link=ThingPipeBenderMod><color=green>Pipe Bender Mod</color></link> for additional recipes and faster processing speeds.",
        "name": "Hydraulic Pipe Bender"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "Ingot"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": true
      },
      "consumer_info": {
        "consumed_resouces": [
          "ItemAstroloyIngot",
          "ItemConstantanIngot",
          "ItemCopperIngot",
          "ItemElectrumIngot",
          "ItemGoldIngot",
          "ItemHastelloyIngot",
          "ItemInconelIngot",
          "ItemInvarIngot",
          "ItemIronIngot",
          "ItemLeadIngot",
          "ItemNickelIngot",
          "ItemSiliconIngot",
          "ItemSilverIngot",
          "ItemSolderIngot",
          "ItemSolidFuel",
          "ItemSteelIngot",
          "ItemStelliteIngot",
          "ItemWaspaloyIngot",
          "ItemWasteIngot"
        ],
        "processed_reagents": []
      },
      "fabricator_info": {
        "tier": "Undefined",
        "recipes": {
          "ApplianceSeedTray": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Iron": 10.0,
              "Silicon": 15.0
            }
          },
          "ItemActiveVent": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 1.0,
              "Iron": 5.0
            }
          },
          "ItemAdhesiveInsulation": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Silicon": 1.0,
              "Steel": 0.5
            }
          },
          "ItemDynamicAirCon": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Gold": 5.0,
              "Silver": 5.0,
              "Solder": 5.0,
              "Steel": 20.0
            }
          },
          "ItemDynamicScrubber": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Gold": 5.0,
              "Invar": 5.0,
              "Solder": 5.0,
              "Steel": 20.0
            }
          },
          "ItemGasCanisterEmpty": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemGasCanisterSmart": {
            "tier": "TierTwo",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Silicon": 2.0,
              "Steel": 15.0
            }
          },
          "ItemGasFilterCarbonDioxide": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemGasFilterCarbonDioxideL": {
            "tier": "TierTwo",
            "time": 45.0,
            "energy": 4000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Invar": 1.0,
              "Steel": 5.0,
              "Stellite": 1.0
            }
          },
          "ItemGasFilterCarbonDioxideM": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Constantan": 1.0,
              "Iron": 5.0,
              "Silver": 5.0
            }
          },
          "ItemGasFilterNitrogen": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemGasFilterNitrogenL": {
            "tier": "TierTwo",
            "time": 45.0,
            "energy": 4000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Invar": 1.0,
              "Steel": 5.0,
              "Stellite": 1.0
            }
          },
          "ItemGasFilterNitrogenM": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Constantan": 1.0,
              "Iron": 5.0,
              "Silver": 5.0
            }
          },
          "ItemGasFilterNitrousOxide": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemGasFilterNitrousOxideL": {
            "tier": "TierTwo",
            "time": 45.0,
            "energy": 4000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Invar": 1.0,
              "Steel": 5.0,
              "Stellite": 1.0
            }
          },
          "ItemGasFilterNitrousOxideM": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Constantan": 1.0,
              "Iron": 5.0,
              "Silver": 5.0
            }
          },
          "ItemGasFilterOxygen": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemGasFilterOxygenL": {
            "tier": "TierTwo",
            "time": 45.0,
            "energy": 4000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Invar": 1.0,
              "Steel": 5.0,
              "Stellite": 1.0
            }
          },
          "ItemGasFilterOxygenM": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Constantan": 1.0,
              "Iron": 5.0,
              "Silver": 5.0
            }
          },
          "ItemGasFilterPollutants": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemGasFilterPollutantsL": {
            "tier": "TierTwo",
            "time": 45.0,
            "energy": 4000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Invar": 1.0,
              "Steel": 5.0,
              "Stellite": 1.0
            }
          },
          "ItemGasFilterPollutantsM": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Constantan": 1.0,
              "Iron": 5.0,
              "Silver": 5.0
            }
          },
          "ItemGasFilterVolatiles": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemGasFilterVolatilesL": {
            "tier": "TierTwo",
            "time": 45.0,
            "energy": 4000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Invar": 1.0,
              "Steel": 5.0,
              "Stellite": 1.0
            }
          },
          "ItemGasFilterVolatilesM": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Constantan": 1.0,
              "Iron": 5.0,
              "Silver": 5.0
            }
          },
          "ItemGasFilterWater": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemGasFilterWaterL": {
            "tier": "TierTwo",
            "time": 45.0,
            "energy": 4000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Invar": 1.0,
              "Steel": 5.0,
              "Stellite": 1.0
            }
          },
          "ItemGasFilterWaterM": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Constantan": 1.0,
              "Iron": 5.0,
              "Silver": 5.0
            }
          },
          "ItemHydroponicTray": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 10.0
            }
          },
          "ItemKitAirlock": {
            "tier": "TierOne",
            "time": 50.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Steel": 15.0
            }
          },
          "ItemKitAirlockGate": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Steel": 25.0
            }
          },
          "ItemKitAtmospherics": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 20.0,
              "Gold": 5.0,
              "Iron": 10.0
            }
          },
          "ItemKitChute": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 3.0
            }
          },
          "ItemKitCryoTube": {
            "tier": "TierTwo",
            "time": 120.0,
            "energy": 24000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 10.0,
              "Gold": 10.0,
              "Silver": 5.0,
              "Steel": 35.0
            }
          },
          "ItemKitDrinkingFountain": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 620.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Iron": 5.0,
              "Silicon": 8.0
            }
          },
          "ItemKitDynamicCanister": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 20.0
            }
          },
          "ItemKitDynamicGasTankAdvanced": {
            "tier": "TierTwo",
            "time": 40.0,
            "energy": 2000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 5.0,
              "Iron": 20.0,
              "Silicon": 5.0,
              "Steel": 15.0
            }
          },
          "ItemKitDynamicHydroponics": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Nickel": 5.0,
              "Steel": 20.0
            }
          },
          "ItemKitDynamicLiquidCanister": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 20.0
            }
          },
          "ItemKitDynamicMKIILiquidCanister": {
            "tier": "TierTwo",
            "time": 40.0,
            "energy": 2000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 5.0,
              "Iron": 20.0,
              "Silicon": 5.0,
              "Steel": 15.0
            }
          },
          "ItemKitEvaporationChamber": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Silicon": 5.0,
              "Steel": 10.0
            }
          },
          "ItemKitHeatExchanger": {
            "tier": "TierTwo",
            "time": 30.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Invar": 10.0,
              "Steel": 10.0
            }
          },
          "ItemKitIceCrusher": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 3000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 3.0
            }
          },
          "ItemKitInsulatedLiquidPipe": {
            "tier": "TierOne",
            "time": 4.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Silicon": 1.0,
              "Steel": 1.0
            }
          },
          "ItemKitInsulatedPipe": {
            "tier": "TierOne",
            "time": 4.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Silicon": 1.0,
              "Steel": 1.0
            }
          },
          "ItemKitInsulatedPipeUtility": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Silicon": 1.0,
              "Steel": 5.0
            }
          },
          "ItemKitInsulatedPipeUtilityLiquid": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Silicon": 1.0,
              "Steel": 5.0
            }
          },
          "ItemKitLargeDirectHeatExchanger": {
            "tier": "TierTwo",
            "time": 30.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Invar": 10.0,
              "Steel": 10.0
            }
          },
          "ItemKitLargeExtendableRadiator": {
            "tier": "TierTwo",
            "time": 30.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Invar": 10.0,
              "Steel": 10.0
            }
          },
          "ItemKitLiquidRegulator": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 1.0,
              "Iron": 5.0
            }
          },
          "ItemKitLiquidTank": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 2000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Steel": 20.0
            }
          },
          "ItemKitLiquidTankInsulated": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Silicon": 30.0,
              "Steel": 20.0
            }
          },
          "ItemKitLiquidTurboVolumePump": {
            "tier": "TierTwo",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 4.0,
              "Electrum": 5.0,
              "Gold": 4.0,
              "Steel": 5.0
            }
          },
          "ItemKitPassiveLargeRadiatorGas": {
            "tier": "TierTwo",
            "time": 30.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Invar": 5.0,
              "Steel": 5.0
            }
          },
          "ItemKitPassiveLargeRadiatorLiquid": {
            "tier": "TierTwo",
            "time": 30.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Invar": 5.0,
              "Steel": 5.0
            }
          },
          "ItemKitPassthroughHeatExchanger": {
            "tier": "TierTwo",
            "time": 30.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Invar": 10.0,
              "Steel": 10.0
            }
          },
          "ItemKitPipe": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 0.5
            }
          },
          "ItemKitPipeLiquid": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 0.5
            }
          },
          "ItemKitPipeOrgan": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 3.0
            }
          },
          "ItemKitPipeRadiator": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Gold": 3.0,
              "Steel": 2.0
            }
          },
          "ItemKitPipeRadiatorLiquid": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Gold": 3.0,
              "Steel": 2.0
            }
          },
          "ItemKitPipeUtility": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemKitPipeUtilityLiquid": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemKitPlanter": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 10.0
            }
          },
          "ItemKitPortablesConnector": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemKitPoweredVent": {
            "tier": "TierTwo",
            "time": 20.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Electrum": 5.0,
              "Invar": 2.0,
              "Steel": 5.0
            }
          },
          "ItemKitRegulator": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 1.0,
              "Iron": 5.0
            }
          },
          "ItemKitSensor": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "ItemKitShower": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 3000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Iron": 5.0,
              "Silicon": 5.0
            }
          },
          "ItemKitSleeper": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Gold": 10.0,
              "Steel": 25.0
            }
          },
          "ItemKitSmallDirectHeatExchanger": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Steel": 3.0
            }
          },
          "ItemKitStandardChute": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Constantan": 2.0,
              "Electrum": 2.0,
              "Iron": 3.0
            }
          },
          "ItemKitSuitStorage": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Iron": 15.0,
              "Silver": 5.0
            }
          },
          "ItemKitTank": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 2000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Steel": 20.0
            }
          },
          "ItemKitTankInsulated": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Silicon": 30.0,
              "Steel": 20.0
            }
          },
          "ItemKitTurboVolumePump": {
            "tier": "TierTwo",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 4.0,
              "Electrum": 5.0,
              "Gold": 4.0,
              "Steel": 5.0
            }
          },
          "ItemKitWaterBottleFiller": {
            "tier": "TierOne",
            "time": 7.0,
            "energy": 620.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Iron": 5.0,
              "Silicon": 8.0
            }
          },
          "ItemKitWaterPurifier": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 20.0,
              "Gold": 5.0,
              "Iron": 10.0
            }
          },
          "ItemLiquidCanisterEmpty": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemLiquidCanisterSmart": {
            "tier": "TierTwo",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Silicon": 2.0,
              "Steel": 15.0
            }
          },
          "ItemLiquidDrain": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Iron": 5.0
            }
          },
          "ItemLiquidPipeAnalyzer": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Electrum": 2.0,
              "Gold": 2.0,
              "Iron": 2.0
            }
          },
          "ItemLiquidPipeHeater": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 3.0,
              "Iron": 5.0
            }
          },
          "ItemLiquidPipeValve": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Iron": 3.0
            }
          },
          "ItemLiquidPipeVolumePump": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 2.0,
              "Iron": 5.0
            }
          },
          "ItemPassiveVent": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 3.0
            }
          },
          "ItemPassiveVentInsulated": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Silicon": 5.0,
              "Steel": 1.0
            }
          },
          "ItemPipeAnalyizer": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Electrum": 2.0,
              "Gold": 2.0,
              "Iron": 2.0
            }
          },
          "ItemPipeCowl": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 3.0
            }
          },
          "ItemPipeDigitalValve": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Invar": 3.0,
              "Steel": 5.0
            }
          },
          "ItemPipeGasMixer": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0,
              "Iron": 2.0
            }
          },
          "ItemPipeHeater": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 3.0,
              "Iron": 5.0
            }
          },
          "ItemPipeIgniter": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 2.0,
              "Iron": 2.0
            }
          },
          "ItemPipeLabel": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemPipeMeter": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Iron": 3.0
            }
          },
          "ItemPipeValve": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Iron": 3.0
            }
          },
          "ItemPipeVolumePump": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 2.0,
              "Iron": 5.0
            }
          },
          "ItemWallCooler": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 1.0,
              "Iron": 3.0
            }
          },
          "ItemWallHeater": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 1.0,
              "Iron": 3.0
            }
          },
          "ItemWaterBottle": {
            "tier": "TierOne",
            "time": 4.0,
            "energy": 120.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Iron": 2.0,
              "Silicon": 4.0
            }
          },
          "ItemWaterPipeDigitalValve": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Invar": 3.0,
              "Steel": 5.0
            }
          },
          "ItemWaterPipeMeter": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Iron": 3.0
            }
          },
          "ItemWaterWallCooler": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 1.0,
              "Iron": 3.0
            }
          }
        }
      },
      "memory": {
        "instructions": {
          "DeviceSetLock": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>LOCK_STATE</color>                   | <color=orange>BOOL_8</color>     |\r\n| <color=grey>16-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>48</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | LOCK_STATE                   | BOOL_8     |\r\n| 16-63    | UNUSED                       | 48         |",
            "typ": "PrinterInstruction",
            "value": 6,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "LOCK_STATE",
                "typ": "Bool8"
              },
              {
                "range": [
                  16,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 48
                }
              }
            ]
          },
          "EjectAllReagents": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 8,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          },
          "EjectReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-39     | REAGENT_HASH                 | INT_32     |\r\n| 40-63    | UNUSED                       | 24         |",
            "typ": "PrinterInstruction",
            "value": 7,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  39
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  40,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 24
                }
              }
            ]
          },
          "ExecuteRecipe": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY</color>                     | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>PREFAB_HASH</color>                  | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY                     | BYTE_8     |\r\n| 16-47    | PREFAB_HASH                  | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 2,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "PREFAB_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "JumpIfNextInvalid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 4,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "JumpToAddress": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 5,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "MissingRecipeReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 54 TO 62</color>                     |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY_CEIL</color>                | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 54 TO 62                     |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY_CEIL                | BYTE_8     |\r\n| 16-47    | REAGENT_HASH                 | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 9,
            "valid": [
              54,
              62
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY_CEIL",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "StackPointer": {
            "description": "| <color=grey>VALID ONLY AT ADDRESS 63</color>                             |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>INDEX</color>                        | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESS 63                             |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | INDEX                        | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 1,
            "valid": [
              63,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "INDEX",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "WaitUntilNextValid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 3,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          }
        },
        "memory_access": "ReadWrite",
        "memory_size": 64
      }
    },
    "StructureHydroponicsStation": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureHydroponicsStation",
        "prefab_hash": 1441767298,
        "desc": "",
        "name": "Hydroponics Station"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureHydroponicsTray": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureHydroponicsTray",
        "prefab_hash": 1464854517,
        "desc": "The <link=Agrizero><color=#0080FFFF>Agrizero</color></link> hydroponics tray is the ideal vessel for growing a range of <link=OrganicPage><color=#0080FFFF>plantlife</color></link>. It must be supplied with water using a pipe network, and sufficient light to generate photosynthesis. \nIt can be automated using the <link=ThingStructureHarvie><color=green>Harvie</color></link>.",
        "name": "Hydroponics Tray"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      },
      "slots": [
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Fertiliser",
          "typ": "Plant"
        }
      ]
    },
    "StructureHydroponicsTrayData": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureHydroponicsTrayData",
        "prefab_hash": -1841632400,
        "desc": "The <link=Agrizero><color=#0080FFFF>Agrizero</color></link> hydroponics device is the ideal vessel for growing a range of <link=OrganicPage><color=#0080FFFF>plantlife</color></link>. It must be supplied with <link=GasWater><color=#44AD83>Water</color></link> using a pipe network, and sufficient light to generate photosynthesis. \nIt can be automated using the <link=ThingStructureHarvie><color=green>Harvie</color></link>. Note that unlike the <link=ThingStructureHydroponicsTray><color=green>Hydroponics Tray</color></link>, these cannot be placed consecutively as they are considered devices rather than pure pipes. They do, however, allow data interrogation for logic systems.",
        "name": "Hydroponics Device"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Efficiency": "Read",
            "Health": "Read",
            "Growth": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "Mature": "Read",
            "PrefabHash": "Read",
            "Seeding": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Fertiliser",
          "typ": "Plant"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureIceCrusher": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureIceCrusher",
        "prefab_hash": 443849486,
        "desc": "The <link=Recurso><color=#0080FFFF>Recurso</color></link> KoolAuger converts various ices into their respective <link=GasPage><color=#0080FFFF>gases</color></link> and liquids.\nA remarkably smart and compact sublimation-melting unit, it produces gas or liquid depending on the ice being processed. The upper outlet is gas, the lower for liquid, and while you can attach any pipe you like to either outlet, it will only function if the correct network is attached. It will also only pass gas or liquid into a network if it is powered and turned on.\nIf the KoolAuger is full, it will not accept any further ice until the gas or liquid contents is drained. In this state, it will flash a yellow error state on the activation switch.",
        "name": "Ice Crusher"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "Ore"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output2"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureIgniter": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureIgniter",
        "prefab_hash": 1005491513,
        "desc": "It gets the party started. Especially if that party is an explosive gas mixture.",
        "name": "Igniter"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureInLineTankGas1x1": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInLineTankGas1x1",
        "prefab_hash": -1693382705,
        "desc": "A small expansion tank that increases the volume of a pipe network.",
        "name": "In-Line Tank Small Gas"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructureInLineTankGas1x2": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInLineTankGas1x2",
        "prefab_hash": 35149429,
        "desc": "A small expansion tank that increases the volume of a pipe network.",
        "name": "In-Line Tank Gas"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructureInLineTankLiquid1x1": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInLineTankLiquid1x1",
        "prefab_hash": 543645499,
        "desc": "A small expansion tank that increases the volume of a pipe network.",
        "name": "In-Line Tank Small Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructureInLineTankLiquid1x2": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInLineTankLiquid1x2",
        "prefab_hash": -1183969663,
        "desc": "A small expansion tank that increases the volume of a pipe network.",
        "name": "In-Line Tank Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructureInsulatedInLineTankGas1x1": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedInLineTankGas1x1",
        "prefab_hash": 1818267386,
        "desc": "",
        "name": "Insulated In-Line Tank Small Gas"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedInLineTankGas1x2": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedInLineTankGas1x2",
        "prefab_hash": -177610944,
        "desc": "",
        "name": "Insulated In-Line Tank Gas"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedInLineTankLiquid1x1": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedInLineTankLiquid1x1",
        "prefab_hash": -813426145,
        "desc": "",
        "name": "Insulated In-Line Tank Small Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedInLineTankLiquid1x2": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedInLineTankLiquid1x2",
        "prefab_hash": 1452100517,
        "desc": "",
        "name": "Insulated In-Line Tank Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeCorner",
        "prefab_hash": -1967711059,
        "desc": "Insulated pipes greatly reduce heat loss from gases stored in them.",
        "name": "Insulated Pipe (Corner)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeCrossJunction": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeCrossJunction",
        "prefab_hash": -92778058,
        "desc": "Insulated pipes greatly reduce heat loss from gases stored in them.",
        "name": "Insulated Pipe (Cross Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeCrossJunction3": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeCrossJunction3",
        "prefab_hash": 1328210035,
        "desc": "Insulated pipes greatly reduce heat loss from gases stored in them.",
        "name": "Insulated Pipe (3-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeCrossJunction4": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeCrossJunction4",
        "prefab_hash": -783387184,
        "desc": "Insulated pipes greatly reduce heat loss from gases stored in them.",
        "name": "Insulated Pipe (4-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeCrossJunction5": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeCrossJunction5",
        "prefab_hash": -1505147578,
        "desc": "Insulated pipes greatly reduce heat loss from gases stored in them.",
        "name": "Insulated Pipe (5-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeCrossJunction6": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeCrossJunction6",
        "prefab_hash": 1061164284,
        "desc": "Insulated pipes greatly reduce heat loss from gases stored in them.",
        "name": "Insulated Pipe (6-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeLiquidCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeLiquidCorner",
        "prefab_hash": 1713710802,
        "desc": "Liquid piping with very low temperature loss or gain.",
        "name": "Insulated Liquid Pipe (Corner)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeLiquidCrossJunction": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeLiquidCrossJunction",
        "prefab_hash": 1926651727,
        "desc": "Liquid piping with very low temperature loss or gain.",
        "name": "Insulated Liquid Pipe (3-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeLiquidCrossJunction4": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeLiquidCrossJunction4",
        "prefab_hash": 363303270,
        "desc": "Liquid piping with very low temperature loss or gain.",
        "name": "Insulated Liquid Pipe (4-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeLiquidCrossJunction5": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeLiquidCrossJunction5",
        "prefab_hash": 1654694384,
        "desc": "Liquid piping with very low temperature loss or gain.",
        "name": "Insulated Liquid Pipe (5-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeLiquidCrossJunction6": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeLiquidCrossJunction6",
        "prefab_hash": -72748982,
        "desc": "Liquid piping with very low temperature loss or gain.",
        "name": "Insulated Liquid Pipe (6-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeLiquidStraight": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeLiquidStraight",
        "prefab_hash": 295678685,
        "desc": "Liquid piping with very low temperature loss or gain.",
        "name": "Insulated Liquid Pipe (Straight)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeLiquidTJunction": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeLiquidTJunction",
        "prefab_hash": -532384855,
        "desc": "Liquid piping with very low temperature loss or gain.",
        "name": "Insulated Liquid Pipe (T Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeStraight": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeStraight",
        "prefab_hash": 2134172356,
        "desc": "Insulated pipes greatly reduce heat loss from gases stored in them.",
        "name": "Insulated Pipe (Straight)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedPipeTJunction": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureInsulatedPipeTJunction",
        "prefab_hash": -2076086215,
        "desc": "Insulated pipes greatly reduce heat loss from gases stored in them.",
        "name": "Insulated Pipe (T Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructureInsulatedTankConnector": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureInsulatedTankConnector",
        "prefab_hash": -31273349,
        "desc": "",
        "name": "Insulated Tank Connector"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "StructureInsulatedTankConnectorLiquid": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureInsulatedTankConnectorLiquid",
        "prefab_hash": -1602030414,
        "desc": "",
        "name": "Insulated Tank Connector Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "slots": [
        {
          "name": "Portable Slot",
          "typ": "None"
        }
      ]
    },
    "StructureInteriorDoorGlass": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureInteriorDoorGlass",
        "prefab_hash": -2096421875,
        "desc": "0.Operate\n1.Logic",
        "name": "Interior Door Glass"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureInteriorDoorPadded": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureInteriorDoorPadded",
        "prefab_hash": 847461335,
        "desc": "0.Operate\n1.Logic",
        "name": "Interior Door Padded"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureInteriorDoorPaddedThin": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureInteriorDoorPaddedThin",
        "prefab_hash": 1981698201,
        "desc": "0.Operate\n1.Logic",
        "name": "Interior Door Padded Thin"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureInteriorDoorTriangle": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureInteriorDoorTriangle",
        "prefab_hash": -1182923101,
        "desc": "0.Operate\n1.Logic",
        "name": "Interior Door Triangle"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureKlaxon": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureKlaxon",
        "prefab_hash": -828056979,
        "desc": "Klaxons allow you to play over 50 announcements and sounds, depending on your <link=LogicPage><color=#0080FFFF>Logic</color></link> set-up. Set the mode to select the output.",
        "name": "Klaxon Speaker"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Volume": "ReadWrite",
          "PrefabHash": "Read",
          "SoundAlert": "ReadWrite",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "None",
          "1": "Alarm2",
          "2": "Alarm3",
          "3": "Alarm4",
          "4": "Alarm5",
          "5": "Alarm6",
          "6": "Alarm7",
          "7": "Music1",
          "8": "Music2",
          "9": "Music3",
          "10": "Alarm8",
          "11": "Alarm9",
          "12": "Alarm10",
          "13": "Alarm11",
          "14": "Alarm12",
          "15": "Danger",
          "16": "Warning",
          "17": "Alert",
          "18": "StormIncoming",
          "19": "IntruderAlert",
          "20": "Depressurising",
          "21": "Pressurising",
          "22": "AirlockCycling",
          "23": "PowerLow",
          "24": "SystemFailure",
          "25": "Welcome",
          "26": "MalfunctionDetected",
          "27": "HaltWhoGoesThere",
          "28": "FireFireFire",
          "29": "One",
          "30": "Two",
          "31": "Three",
          "32": "Four",
          "33": "Five",
          "34": "Floor",
          "35": "RocketLaunching",
          "36": "LiftOff",
          "37": "TraderIncoming",
          "38": "TraderLanded",
          "39": "PressureHigh",
          "40": "PressureLow",
          "41": "TemperatureHigh",
          "42": "TemperatureLow",
          "43": "PollutantsDetected",
          "44": "HighCarbonDioxide",
          "45": "Alarm1"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLadder": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureLadder",
        "prefab_hash": -415420281,
        "desc": "",
        "name": "Ladder"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureLadderEnd": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureLadderEnd",
        "prefab_hash": 1541734993,
        "desc": "",
        "name": "Ladder End"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureLargeDirectHeatExchangeGastoGas": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLargeDirectHeatExchangeGastoGas",
        "prefab_hash": -1230658883,
        "desc": "Direct Heat Exchangers equalize the temperature of the two input networks.",
        "name": "Large Direct Heat Exchanger - Gas + Gas"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Input2"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLargeDirectHeatExchangeGastoLiquid": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLargeDirectHeatExchangeGastoLiquid",
        "prefab_hash": 1412338038,
        "desc": "Direct Heat Exchangers equalize the temperature of the two input networks.",
        "name": "Large Direct Heat Exchanger - Gas + Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Input2"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLargeDirectHeatExchangeLiquidtoLiquid": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLargeDirectHeatExchangeLiquidtoLiquid",
        "prefab_hash": 792686502,
        "desc": "Direct Heat Exchangers equalize the temperature of the two input networks.",
        "name": "Large Direct Heat Exchange - Liquid + Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input2"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLargeExtendableRadiator": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLargeExtendableRadiator",
        "prefab_hash": -566775170,
        "desc": "Omptimised for radiating heat in vacuum and low pressure environments. If pointed at the sun it will heat its contents rapidly via solar heating. The panels can fold away to stop all heat radiation/solar heating and protect them from storms.",
        "name": "Large Extendable Radiator"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.02,
        "radiation_factor": 2.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Horizontal": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureLargeHangerDoor": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLargeHangerDoor",
        "prefab_hash": -1351081801,
        "desc": "1 x 3 modular door piece for building hangar doors.",
        "name": "Large Hangar Door"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureLargeSatelliteDish": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLargeSatelliteDish",
        "prefab_hash": 1913391845,
        "desc": "This large communications unit can be used to communicate with nearby trade vessels.\n\n        When connected to a <link=ThingStructureComputer><color=green>Computer</color></link> containing a <link=ThingMotherboardComms><color=green>Communications Motherboard</color></link> motherboard, a <link=ThingLandingpad_CenterPiece01><color=green>Landingpad Center</color></link>, and a <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link>, this allows Stationeers to contact traders. Adjust its horizontal and vertical attributes either directly or through logic.",
        "name": "Large Satellite Dish"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Setting": "ReadWrite",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "SignalStrength": "Read",
          "SignalId": "Read",
          "InterrogationProgress": "Read",
          "TargetPadIndex": "ReadWrite",
          "SizeX": "Read",
          "SizeZ": "Read",
          "MinimumWattsToContact": "Read",
          "WattsReachingContact": "Read",
          "ContactTypeId": "Read",
          "ReferenceId": "Read",
          "BestContactFilter": "ReadWrite",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLaunchMount": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureLaunchMount",
        "prefab_hash": -558953231,
        "desc": "The first piece to place whern building a rocket. Rockets can be constructed and/or landed here. Each Launch Mount will be allocated a slot on the Space Map and assigned a Location Code.",
        "name": "Launch Mount"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureLightLong": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLightLong",
        "prefab_hash": 797794350,
        "desc": "",
        "name": "Wall Light (Long)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLightLongAngled": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLightLongAngled",
        "prefab_hash": 1847265835,
        "desc": "",
        "name": "Wall Light (Long Angled)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLightLongWide": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLightLongWide",
        "prefab_hash": 555215790,
        "desc": "",
        "name": "Wall Light (Long Wide)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLightRound": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLightRound",
        "prefab_hash": 1514476632,
        "desc": "Description coming.",
        "name": "Light Round"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLightRoundAngled": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLightRoundAngled",
        "prefab_hash": 1592905386,
        "desc": "Description coming.",
        "name": "Light Round (Angled)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLightRoundSmall": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLightRoundSmall",
        "prefab_hash": 1436121888,
        "desc": "Description coming.",
        "name": "Light Round (Small)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidDrain": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidDrain",
        "prefab_hash": 1687692899,
        "desc": "When connected to power and activated, it pumps liquid from a liquid network into the world.",
        "name": "Active Liquid Outlet"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidPipeAnalyzer": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidPipeAnalyzer",
        "prefab_hash": -2113838091,
        "desc": "",
        "name": "Liquid Pipe Analyzer"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidPipeHeater": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidPipeHeater",
        "prefab_hash": -287495560,
        "desc": "Adds 1000 joules of heat per tick to the contents of your pipe network.",
        "name": "Pipe Heater (Liquid)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidPipeOneWayValve": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidPipeOneWayValve",
        "prefab_hash": -782453061,
        "desc": "The one way valve moves liquid in one direction only: from input side to output side. It only permits flow if the input pressure is higher than output pressure..",
        "name": "One Way Valve (Liquid)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidPipeRadiator": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidPipeRadiator",
        "prefab_hash": 2072805863,
        "desc": "A simple heat exchanger, pipe radiators can be placed on pipes to shed or gain heat, depending on the temperature of the surrounding atmosphere. If the atmosphere is hotter, heat will be added to the liquid within the pipe network, and visa versa if colder. In a vacuum, heat will be radiated. \nThe speed of heat gain or loss will depend on the liquid in question. Adding multiple radiators will speed up heat transfer.",
        "name": "Liquid Pipe Convection Radiator"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 1.0,
        "radiation_factor": 0.75
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidPressureRegulator": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidPressureRegulator",
        "prefab_hash": 482248766,
        "desc": "Regulates the volume ratio of liquid in the output Liquid pipe. This is expressed as percentage where 100 is totally full and 0 is empty.",
        "name": "Liquid Volume Regulator"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidTankBig": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidTankBig",
        "prefab_hash": 1098900430,
        "desc": "",
        "name": "Liquid Tank Big"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.002
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidTankBigInsulated": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidTankBigInsulated",
        "prefab_hash": -1430440215,
        "desc": "",
        "name": "Insulated Liquid Tank Big"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidTankSmall": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidTankSmall",
        "prefab_hash": 1988118157,
        "desc": "",
        "name": "Liquid Tank Small"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.002
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidTankSmallInsulated": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidTankSmallInsulated",
        "prefab_hash": 608607718,
        "desc": "",
        "name": "Insulated Liquid Tank Small"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidTankStorage": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidTankStorage",
        "prefab_hash": 1691898022,
        "desc": "When connected to a liquid pipe network, the tank storage unit allows you to refill a <link=ThingItemLiquidCanisterEmpty><color=green>Liquid Canister</color></link>, as well as read various atmospheric data from the <link=SlotGasCanister><color=orange>Gas Canister</color></link>. It will not accept gas canisters.",
        "name": "Liquid Tank Storage"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Quantity": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Liquid Canister",
          "typ": "LiquidCanister"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidTurboVolumePump": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidTurboVolumePump",
        "prefab_hash": -1051805505,
        "desc": "Shifts 10 times more liquid than a basic <link=ThingStructureVolumePump><color=green>Volume Pump</color></link>, with a mode that can be set to flow in either direction.",
        "name": "Turbo Volume Pump (Liquid)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Right",
          "1": "Left"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidUmbilicalFemale": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidUmbilicalFemale",
        "prefab_hash": 1734723642,
        "desc": "",
        "name": "Umbilical Socket (Liquid)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidUmbilicalFemaleSide": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidUmbilicalFemaleSide",
        "prefab_hash": 1220870319,
        "desc": "",
        "name": "Umbilical Socket Angle (Liquid)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidUmbilicalMale": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidUmbilicalMale",
        "prefab_hash": -1798420047,
        "desc": "0.Left\n1.Center\n2.Right",
        "name": "Umbilical (Liquid)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Left",
          "1": "Center",
          "2": "Right"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureLiquidValve": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidValve",
        "prefab_hash": 1849974453,
        "desc": "",
        "name": "Liquid Valve"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLiquidVolumePump": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLiquidVolumePump",
        "prefab_hash": -454028979,
        "desc": "",
        "name": "Liquid Volume Pump"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Output"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLockerSmall": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLockerSmall",
        "prefab_hash": -647164662,
        "desc": "",
        "name": "Locker (Small)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureLogicBatchReader": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicBatchReader",
        "prefab_hash": 264413729,
        "desc": "",
        "name": "Batch Reader"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicBatchSlotReader": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicBatchSlotReader",
        "prefab_hash": 436888930,
        "desc": "",
        "name": "Batch Slot Reader"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicBatchWriter": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicBatchWriter",
        "prefab_hash": 1415443359,
        "desc": "",
        "name": "Batch Writer"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ForceWrite": "Write",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicButton": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicButton",
        "prefab_hash": 491845673,
        "desc": "",
        "name": "Button"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicCompare": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicCompare",
        "prefab_hash": -1489728908,
        "desc": "0.Equals\n1.Greater\n2.Less\n3.NotEquals",
        "name": "Logic Compare"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Equals",
          "1": "Greater",
          "2": "Less",
          "3": "NotEquals"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicDial": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicDial",
        "prefab_hash": 554524804,
        "desc": "An assignable dial with up to 1000 modes.",
        "name": "Dial"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Mode": "ReadWrite",
          "Setting": "ReadWrite",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicGate": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicGate",
        "prefab_hash": 1942143074,
        "desc": "A <link=LogicPage><color=#0080FFFF>logic</color></link> device that performs a logical operation on one or more binary inputs that produces a single binary output. An input greater than zero is considered true for operations.",
        "name": "Logic Gate"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "AND",
          "1": "OR",
          "2": "XOR",
          "3": "NAND",
          "4": "NOR",
          "5": "XNOR"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicHashGen": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicHashGen",
        "prefab_hash": 2077593121,
        "desc": "",
        "name": "Logic Hash Generator"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicMath": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicMath",
        "prefab_hash": 1657691323,
        "desc": "0.Add\n1.Subtract\n2.Multiply\n3.Divide\n4.Mod\n5.Atan2\n6.Pow\n7.Log",
        "name": "Logic Math"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Add",
          "1": "Subtract",
          "2": "Multiply",
          "3": "Divide",
          "4": "Mod",
          "5": "Atan2",
          "6": "Pow",
          "7": "Log"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicMathUnary": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicMathUnary",
        "prefab_hash": -1160020195,
        "desc": "0.Ceil\n1.Floor\n2.Abs\n3.Log\n4.Exp\n5.Round\n6.Rand\n7.Sqrt\n8.Sin\n9.Cos\n10.Tan\n11.Asin\n12.Acos\n13.Atan\n14.Not",
        "name": "Math Unary"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Ceil",
          "1": "Floor",
          "2": "Abs",
          "3": "Log",
          "4": "Exp",
          "5": "Round",
          "6": "Rand",
          "7": "Sqrt",
          "8": "Sin",
          "9": "Cos",
          "10": "Tan",
          "11": "Asin",
          "12": "Acos",
          "13": "Atan",
          "14": "Not"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicMemory": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicMemory",
        "prefab_hash": -851746783,
        "desc": "",
        "name": "Logic Memory"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicMinMax": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicMinMax",
        "prefab_hash": 929022276,
        "desc": "0.Greater\n1.Less",
        "name": "Logic Min/Max"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Greater",
          "1": "Less"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicMirror": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicMirror",
        "prefab_hash": 2096189278,
        "desc": "",
        "name": "Logic Mirror"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {},
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicReader": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicReader",
        "prefab_hash": -345383640,
        "desc": "",
        "name": "Logic Reader"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicReagentReader": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicReagentReader",
        "prefab_hash": -124308857,
        "desc": "",
        "name": "Reagent Reader"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicRocketDownlink": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicRocketDownlink",
        "prefab_hash": 876108549,
        "desc": "",
        "name": "Logic Rocket Downlink"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicRocketUplink": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicRocketUplink",
        "prefab_hash": 546002924,
        "desc": "",
        "name": "Logic Uplink"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicSelect": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicSelect",
        "prefab_hash": 1822736084,
        "desc": "0.Equals\n1.Greater\n2.Less\n3.NotEquals",
        "name": "Logic Select"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Equals",
          "1": "Greater",
          "2": "Less",
          "3": "NotEquals"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicSlotReader": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicSlotReader",
        "prefab_hash": -767867194,
        "desc": "",
        "name": "Slot Reader"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicSorter": {
      "templateType": "StructureLogicDeviceMemory",
      "prefab": {
        "prefab_name": "StructureLogicSorter",
        "prefab_hash": 873418029,
        "desc": "Contains an Internal Memory which is assessed to check whether something should be sorted. When an item is in the <link=SlotImport><color=orange>Import</color></link> Slot, the stack is checked and if result is true the thing is moved to the <link=SlotExport2><color=orange>Export 2</color></link> slot, otherwise it is moved to the <link=SlotExport><color=orange>Export</color></link> slot. The Mode is used in how the stack is assessed, by default the mode is ALL, so every instruction in the stack would need to return true.",
        "name": "Logic Sorter"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "All",
          "1": "Any",
          "2": "None"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        },
        {
          "name": "Export 2",
          "typ": "None"
        },
        {
          "name": "Data Disk",
          "typ": "DataDisk"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Output2"
          },
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      },
      "memory": {
        "instructions": {
          "FilterPrefabHashEquals": {
            "description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>PREFAB_HASH</color>                  | <color=orange>INT_32</color>     |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>",
            "description_stripped": "| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-39     | PREFAB_HASH                  | INT_32     |\r\n| 40-63    | UNUSED                       | 24         |",
            "typ": "SorterInstruction",
            "value": 1,
            "valid": [
              0,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  39
                ],
                "name": "PREFAB_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  40,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 24
                }
              }
            ]
          },
          "FilterPrefabHashNotEquals": {
            "description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>PREFAB_HASH</color>                  | <color=orange>INT_32</color>     |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>",
            "description_stripped": "| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-39     | PREFAB_HASH                  | INT_32     |\r\n| 40-63    | UNUSED                       | 24         |",
            "typ": "SorterInstruction",
            "value": 2,
            "valid": [
              0,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  39
                ],
                "name": "PREFAB_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  40,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 24
                }
              }
            ]
          },
          "FilterQuantityCompare": {
            "description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>CONDITION_OPERATION</color>          | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-31 </color>   | <color=yellow>QUANTITY</color>                     | <color=orange>USHORT_16</color>  |\r\n| <color=grey>32-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>32</color>         |</color>",
            "description_stripped": "| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | CONDITION_OPERATION          | BYTE_8     |\r\n| 16-31    | QUANTITY                     | USHORT_16  |\r\n| 32-63    | UNUSED                       | 32         |",
            "typ": "SorterInstruction",
            "value": 5,
            "valid": [
              0,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "CONDITION_OPERATION",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  31
                ],
                "name": "QUANTITY",
                "typ": "UShort16"
              },
              {
                "range": [
                  32,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 32
                }
              }
            ]
          },
          "FilterSlotTypeCompare": {
            "description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>CONDITION_OPERATION</color>          | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-31 </color>   | <color=yellow>SLOT_TYPE</color>                    | <color=orange>USHORT_16</color>  |\r\n| <color=grey>32-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>32</color>         |</color>",
            "description_stripped": "| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | CONDITION_OPERATION          | BYTE_8     |\r\n| 16-31    | SLOT_TYPE                    | USHORT_16  |\r\n| 32-63    | UNUSED                       | 32         |",
            "typ": "SorterInstruction",
            "value": 4,
            "valid": [
              0,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "CONDITION_OPERATION",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  31
                ],
                "name": "SLOT_TYPE",
                "typ": "UShort16"
              },
              {
                "range": [
                  32,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 32
                }
              }
            ]
          },
          "FilterSortingClassCompare": {
            "description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>CONDITION_OPERATION</color>          | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-31 </color>   | <color=yellow>SORTING_CLASS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>32-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>32</color>         |</color>",
            "description_stripped": "| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | CONDITION_OPERATION          | BYTE_8     |\r\n| 16-31    | SORTING_CLASS                | USHORT_16  |\r\n| 32-63    | UNUSED                       | 32         |",
            "typ": "SorterInstruction",
            "value": 3,
            "valid": [
              0,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "CONDITION_OPERATION",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  31
                ],
                "name": "SORTING_CLASS",
                "typ": "UShort16"
              },
              {
                "range": [
                  32,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 32
                }
              }
            ]
          },
          "LimitNextExecutionByCount": {
            "description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>COUNT</color>                        | <color=orange>UINT_32</color>    |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>",
            "description_stripped": "| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-39     | COUNT                        | UINT_32    |\r\n| 40-63    | UNUSED                       | 24         |",
            "typ": "SorterInstruction",
            "value": 6,
            "valid": [
              0,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  39
                ],
                "name": "COUNT",
                "typ": "UInt32"
              },
              {
                "range": [
                  40,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 24
                }
              }
            ]
          }
        },
        "memory_access": "ReadWrite",
        "memory_size": 32
      }
    },
    "StructureLogicSwitch": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicSwitch",
        "prefab_hash": 1220484876,
        "desc": "",
        "name": "Lever"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureLogicSwitch2": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicSwitch2",
        "prefab_hash": 321604921,
        "desc": "",
        "name": "Switch"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureLogicTransmitter": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicTransmitter",
        "prefab_hash": -693235651,
        "desc": "Connects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
        "name": "Logic Transmitter"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {},
        "modes": {
          "0": "Passive",
          "1": "Active"
        },
        "transmission_receiver": true,
        "wireless_logic": true,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicWriter": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicWriter",
        "prefab_hash": -1326019434,
        "desc": "",
        "name": "Logic Writer"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ForceWrite": "Write",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureLogicWriterSwitch": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureLogicWriterSwitch",
        "prefab_hash": -1321250424,
        "desc": "",
        "name": "Logic Writer Switch"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ForceWrite": "Write",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureManualHatch": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureManualHatch",
        "prefab_hash": -1808154199,
        "desc": "Can be welded using a <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link> or <link=ThingItemArcWelder><color=green>Arc Welder</color></link> to lock it in the current state. Use the welder again to unlock.",
        "name": "Manual Hatch"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureMediumConvectionRadiator": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureMediumConvectionRadiator",
        "prefab_hash": -1918215845,
        "desc": "A stand-alone radiator unit optimized for exchanging heat with its surrounding atmosphere.",
        "name": "Medium Convection Radiator"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 1.25,
        "radiation_factor": 0.4
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureMediumConvectionRadiatorLiquid": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureMediumConvectionRadiatorLiquid",
        "prefab_hash": -1169014183,
        "desc": "A stand-alone liquid radiator unit optimized for exchanging heat with its surrounding atmosphere.",
        "name": "Medium Convection Radiator Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 1.25,
        "radiation_factor": 0.4
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureMediumHangerDoor": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureMediumHangerDoor",
        "prefab_hash": -566348148,
        "desc": "1 x 2 modular door piece for building hangar doors.",
        "name": "Medium Hangar Door"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureMediumRadiator": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureMediumRadiator",
        "prefab_hash": -975966237,
        "desc": "A stand-alone radiator unit optimized for radiating heat in vacuums.",
        "name": "Medium Radiator"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.2,
        "radiation_factor": 4.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureMediumRadiatorLiquid": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureMediumRadiatorLiquid",
        "prefab_hash": -1141760613,
        "desc": "A stand-alone liquid radiator unit optimized for radiating heat in vacuums.",
        "name": "Medium Radiator Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.2,
        "radiation_factor": 4.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureMediumRocketGasFuelTank": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureMediumRocketGasFuelTank",
        "prefab_hash": -1093860567,
        "desc": "",
        "name": "Gas Capsule Tank Medium"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.002
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureMediumRocketLiquidFuelTank": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureMediumRocketLiquidFuelTank",
        "prefab_hash": 1143639539,
        "desc": "",
        "name": "Liquid Capsule Tank Medium"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.002
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "Output"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureMotionSensor": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureMotionSensor",
        "prefab_hash": -1713470563,
        "desc": "Originally developed to monitor dance marathons, the motion sensor can also be connected to <link=LogicPage><color=#0080FFFF>Logic</color></link> systems for security purposes, automatic lighting, doors and various other applications.\nThe sensor activates whenever a player enters the grid it is placed on.",
        "name": "Motion Sensor"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Activate": "ReadWrite",
          "Quantity": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureNitrolyzer": {
      "templateType": "StructureCircuitHolder",
      "prefab": {
        "prefab_name": "StructureNitrolyzer",
        "prefab_hash": 1898243702,
        "desc": "This device is used to create <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> from <link=GasOxygen><color=#44AD83>Oxygen</color></link>, <link=GasNitrogen><color=#44AD83>Nitrogen</color></link>, and a large amount of energy. The process does not completely transform all the available gas at once, so the output is a mix of all three gasses, which may need further processing.  More NOS will be created, if the gas inside the machine is close to a 1/1 ratio of Oxygen to Nitrogen.  The second gas input line in optional, and not required if the gas is pre mixed.",
        "name": "Nitrolyzer"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "PressureInput": "Read",
          "TemperatureInput": "Read",
          "RatioOxygenInput": "Read",
          "RatioCarbonDioxideInput": "Read",
          "RatioNitrogenInput": "Read",
          "RatioPollutantInput": "Read",
          "RatioVolatilesInput": "Read",
          "RatioWaterInput": "Read",
          "RatioNitrousOxideInput": "Read",
          "TotalMolesInput": "Read",
          "PressureInput2": "Read",
          "TemperatureInput2": "Read",
          "RatioOxygenInput2": "Read",
          "RatioCarbonDioxideInput2": "Read",
          "RatioNitrogenInput2": "Read",
          "RatioPollutantInput2": "Read",
          "RatioVolatilesInput2": "Read",
          "RatioWaterInput2": "Read",
          "RatioNitrousOxideInput2": "Read",
          "TotalMolesInput2": "Read",
          "PressureOutput": "Read",
          "TemperatureOutput": "Read",
          "RatioOxygenOutput": "Read",
          "RatioCarbonDioxideOutput": "Read",
          "RatioNitrogenOutput": "Read",
          "RatioPollutantOutput": "Read",
          "RatioVolatilesOutput": "Read",
          "RatioWaterOutput": "Read",
          "RatioNitrousOxideOutput": "Read",
          "TotalMolesOutput": "Read",
          "CombustionInput": "Read",
          "CombustionInput2": "Read",
          "CombustionOutput": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidNitrogenInput": "Read",
          "RatioLiquidNitrogenInput2": "Read",
          "RatioLiquidNitrogenOutput": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidOxygenInput": "Read",
          "RatioLiquidOxygenInput2": "Read",
          "RatioLiquidOxygenOutput": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioLiquidVolatilesInput": "Read",
          "RatioLiquidVolatilesInput2": "Read",
          "RatioLiquidVolatilesOutput": "Read",
          "RatioSteam": "Read",
          "RatioSteamInput": "Read",
          "RatioSteamInput2": "Read",
          "RatioSteamOutput": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidCarbonDioxideInput": "Read",
          "RatioLiquidCarbonDioxideInput2": "Read",
          "RatioLiquidCarbonDioxideOutput": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidPollutantInput": "Read",
          "RatioLiquidPollutantInput2": "Read",
          "RatioLiquidPollutantOutput": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "RatioLiquidNitrousOxideInput": "Read",
          "RatioLiquidNitrousOxideInput2": "Read",
          "RatioLiquidNitrousOxideOutput": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Idle",
          "1": "Active"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": true
      },
      "slots": [
        {
          "name": "Programmable Chip",
          "typ": "ProgrammableChip"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Input2"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "device_pins_length": 2,
        "has_activate_state": true,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureOccupancySensor": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureOccupancySensor",
        "prefab_hash": 322782515,
        "desc": "Will be triggered if there is a player in the same room as the sensor. The quantity variable will show the number of players. You can use configure it to only detect players who hold the correct Access Card using a <link=ThingCartridgeAccessController><color=green>Cartridge (Access Controller)</color></link> in a <link=ThingItemTablet><color=green>Handheld Tablet</color></link>. This sensor only works when placed in a room.",
        "name": "Occupancy Sensor"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Activate": "Read",
          "Quantity": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureOverheadShortCornerLocker": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureOverheadShortCornerLocker",
        "prefab_hash": -1794932560,
        "desc": "",
        "name": "Overhead Corner Locker"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureOverheadShortLocker": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureOverheadShortLocker",
        "prefab_hash": 1468249454,
        "desc": "",
        "name": "Overhead Locker"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructurePassiveLargeRadiatorGas": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePassiveLargeRadiatorGas",
        "prefab_hash": 2066977095,
        "desc": "Has been replaced by <link=ThingStructureMediumConvectionRadiator><color=green>Medium Convection Radiator</color></link>.",
        "name": "Medium Convection Radiator"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 1.0,
        "radiation_factor": 0.4
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePassiveLargeRadiatorLiquid": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePassiveLargeRadiatorLiquid",
        "prefab_hash": 24786172,
        "desc": "Has been replaced by <link=ThingStructureMediumConvectionRadiatorLiquid><color=green>Medium Convection Radiator Liquid</color></link>.",
        "name": "Medium Convection Radiator Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 1.0,
        "radiation_factor": 0.4
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePassiveLiquidDrain": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePassiveLiquidDrain",
        "prefab_hash": 1812364811,
        "desc": "Moves liquids from a pipe network to the world atmosphere.",
        "name": "Passive Liquid Drain"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePassiveVent": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePassiveVent",
        "prefab_hash": 335498166,
        "desc": "Passive vents allow gases to move into and out of pipe networks, which are closed systems unless connected to a device or structure. Passive vents are not powered, merely an aperture, essentially turning an enclosed space into part of the pipe network. ",
        "name": "Passive Vent"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePassiveVentInsulated": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePassiveVentInsulated",
        "prefab_hash": 1363077139,
        "desc": "",
        "name": "Insulated Passive Vent"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructurePassthroughHeatExchangerGasToGas": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePassthroughHeatExchangerGasToGas",
        "prefab_hash": -1674187440,
        "desc": "Exchange heat from one pipe network to another. By drawing down the pressure of the outputs with a pump or regulator and regulating input pressures, the temperatures of two counterflowing networks can be effectively exchanged.\n      Balancing the throughput of both inputs is key to creating a good exhange of temperatures.",
        "name": "CounterFlow Heat Exchanger - Gas + Gas"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Input2"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Pipe",
            "role": "Output2"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePassthroughHeatExchangerGasToLiquid": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePassthroughHeatExchangerGasToLiquid",
        "prefab_hash": 1928991265,
        "desc": "Exchange heat from one pipe network to another. By drawing down the pressure of the outputs with a pump or regulator and regulating input pressures, the temperatures of two counterflowing networks can be effectively exchanged.\n        Balancing the throughput of both inputs is key to creating a good exhange of temperatures.",
        "name": "CounterFlow Heat Exchanger - Gas + Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input2"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output2"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePassthroughHeatExchangerLiquidToLiquid": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePassthroughHeatExchangerLiquidToLiquid",
        "prefab_hash": -1472829583,
        "desc": "Exchange heat from one pipe network to another. By drawing down the pressure of the outputs with a pump or regulator and regulating input pressures, the temperatures of two counterflowing networks can be effectively exchanged.\n        Balancing the throughput of both inputs is key to creating a good exchange of temperatures.",
        "name": "CounterFlow Heat Exchanger - Liquid + Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input2"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output2"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePictureFrameThickLandscapeLarge": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThickLandscapeLarge",
        "prefab_hash": -1434523206,
        "desc": "",
        "name": "Picture Frame Thick Landscape Large"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThickLandscapeSmall": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThickLandscapeSmall",
        "prefab_hash": -2041566697,
        "desc": "",
        "name": "Picture Frame Thick Landscape Small"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThickMountLandscapeLarge": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThickMountLandscapeLarge",
        "prefab_hash": 950004659,
        "desc": "",
        "name": "Picture Frame Thick Landscape Large"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThickMountLandscapeSmall": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThickMountLandscapeSmall",
        "prefab_hash": 347154462,
        "desc": "",
        "name": "Picture Frame Thick Landscape Small"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThickMountPortraitLarge": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThickMountPortraitLarge",
        "prefab_hash": -1459641358,
        "desc": "",
        "name": "Picture Frame Thick Mount Portrait Large"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThickMountPortraitSmall": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThickMountPortraitSmall",
        "prefab_hash": -2066653089,
        "desc": "",
        "name": "Picture Frame Thick Mount Portrait Small"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThickPortraitLarge": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThickPortraitLarge",
        "prefab_hash": -1686949570,
        "desc": "",
        "name": "Picture Frame Thick Portrait Large"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThickPortraitSmall": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThickPortraitSmall",
        "prefab_hash": -1218579821,
        "desc": "",
        "name": "Picture Frame Thick Portrait Small"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThinLandscapeLarge": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThinLandscapeLarge",
        "prefab_hash": -1418288625,
        "desc": "",
        "name": "Picture Frame Thin Landscape Large"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThinLandscapeSmall": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThinLandscapeSmall",
        "prefab_hash": -2024250974,
        "desc": "",
        "name": "Picture Frame Thin Landscape Small"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThinMountLandscapeLarge": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThinMountLandscapeLarge",
        "prefab_hash": -1146760430,
        "desc": "",
        "name": "Picture Frame Thin Landscape Large"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThinMountLandscapeSmall": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThinMountLandscapeSmall",
        "prefab_hash": -1752493889,
        "desc": "",
        "name": "Picture Frame Thin Landscape Small"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThinMountPortraitLarge": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThinMountPortraitLarge",
        "prefab_hash": 1094895077,
        "desc": "",
        "name": "Picture Frame Thin Portrait Large"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThinMountPortraitSmall": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThinMountPortraitSmall",
        "prefab_hash": 1835796040,
        "desc": "",
        "name": "Picture Frame Thin Portrait Small"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThinPortraitLarge": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThinPortraitLarge",
        "prefab_hash": 1212777087,
        "desc": "",
        "name": "Picture Frame Thin Portrait Large"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePictureFrameThinPortraitSmall": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePictureFrameThinPortraitSmall",
        "prefab_hash": 1684488658,
        "desc": "",
        "name": "Picture Frame Thin Portrait Small"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructurePipeAnalysizer": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePipeAnalysizer",
        "prefab_hash": 435685051,
        "desc": "Allegedly the outcome of a weekend father-daughter electronics project by an overzealous {<link=ExMin><color=#0080FFFF>ExMin</color></link> engineer, the pipe analyzer is essentially a more advanced version of the <link=ThingStructurePipeMeter><color=green>Pipe Meter</color></link>.\nDisplaying the internal pressure of pipe networks, it  also reads out temperature and gas contents, and can be connected to a <link=ThingStructureConsole><color=green>Console</color></link> or <link=ThingStructureComputer><color=green>Computer</color></link> via a {<link=LogicPage><color=#0080FFFF>Logic</color></link> system.",
        "name": "Pipe Analyzer"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePipeCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeCorner",
        "prefab_hash": -1785673561,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeCorner><color=green>Insulated Pipe (Corner)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Pipe (Corner)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeCowl": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeCowl",
        "prefab_hash": 465816159,
        "desc": "",
        "name": "Pipe Cowl"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeCrossJunction": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeCrossJunction",
        "prefab_hash": -1405295588,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeCrossJunction><color=green>Insulated Pipe (Cross Junction)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Pipe (Cross Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeCrossJunction3": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeCrossJunction3",
        "prefab_hash": 2038427184,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeCrossJunction3><color=green>Insulated Pipe (3-Way Junction)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Pipe (3-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeCrossJunction4": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeCrossJunction4",
        "prefab_hash": -417629293,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeCrossJunction4><color=green>Insulated Pipe (4-Way Junction)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Pipe (4-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeCrossJunction5": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeCrossJunction5",
        "prefab_hash": -1877193979,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeCrossJunction5><color=green>Insulated Pipe (5-Way Junction)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Pipe (5-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeCrossJunction6": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeCrossJunction6",
        "prefab_hash": 152378047,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeCrossJunction6><color=green>Insulated Pipe (6-Way Junction)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Pipe (6-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeHeater": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePipeHeater",
        "prefab_hash": -419758574,
        "desc": "Adds 1000 joules of heat per tick to the contents of your pipe network.",
        "name": "Pipe Heater (Gas)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePipeIgniter": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePipeIgniter",
        "prefab_hash": 1286441942,
        "desc": "Ignites the atmosphere inside the attached pipe network.",
        "name": "Pipe Igniter"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePipeInsulatedLiquidCrossJunction": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeInsulatedLiquidCrossJunction",
        "prefab_hash": -2068497073,
        "desc": "Liquid piping with very low temperature loss or gain.",
        "name": "Insulated Liquid Pipe (Cross Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      }
    },
    "StructurePipeLabel": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePipeLabel",
        "prefab_hash": -999721119,
        "desc": "As its perspicacious name suggests, the pipe label is designed to be attached to a straight stretch of pipe. Users can then label the label with the <link=ThingItemLabeller><color=green>Labeller</color></link>.",
        "name": "Pipe Label"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePipeLiquidCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeLiquidCorner",
        "prefab_hash": -1856720921,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidCorner><color=green>Insulated Liquid Pipe (Corner)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Liquid Pipe (Corner)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeLiquidCrossJunction": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeLiquidCrossJunction",
        "prefab_hash": 1848735691,
        "desc": "You can upgrade this pipe to an <link=ThingStructurePipeInsulatedLiquidCrossJunction><color=green>Insulated Liquid Pipe (Cross Junction)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Liquid Pipe (Cross Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeLiquidCrossJunction3": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeLiquidCrossJunction3",
        "prefab_hash": 1628087508,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidCrossJunction3><color=green><N:EN:StructureInsulatedPipeLiquidCrossJunction3></color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Liquid Pipe (3-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeLiquidCrossJunction4": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeLiquidCrossJunction4",
        "prefab_hash": -9555593,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidCrossJunction4><color=green>Insulated Liquid Pipe (4-Way Junction)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Liquid Pipe (4-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeLiquidCrossJunction5": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeLiquidCrossJunction5",
        "prefab_hash": -2006384159,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidCrossJunction5><color=green>Insulated Liquid Pipe (5-Way Junction)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Liquid Pipe (5-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeLiquidCrossJunction6": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeLiquidCrossJunction6",
        "prefab_hash": 291524699,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidCrossJunction6><color=green>Insulated Liquid Pipe (6-Way Junction)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Liquid Pipe (6-Way Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeLiquidStraight": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeLiquidStraight",
        "prefab_hash": 667597982,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidStraight><color=green>Insulated Liquid Pipe (Straight)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Liquid Pipe (Straight)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeLiquidTJunction": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeLiquidTJunction",
        "prefab_hash": 262616717,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeLiquidTJunction><color=green>Insulated Liquid Pipe (T Junction)</color></link> using an <link=ThingItemKitInsulatedLiquidPipe><color=green>Kit (Insulated Liquid Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Liquid Pipe (T Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeMeter": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePipeMeter",
        "prefab_hash": -1798362329,
        "desc": "While the Stationeers program has, thus far, inspired little in the way of classical poetry, the following haiku was found etched, ironically, on a piece of pipe wreckage found on Vulcan:\n\"Humble pipe meter\nspeaks the truth, transmits pressure\nwithin any pipe\"",
        "name": "Pipe Meter"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePipeOneWayValve": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePipeOneWayValve",
        "prefab_hash": 1580412404,
        "desc": "The one way valve moves gas in one direction only: from input side to output side. It only permits flow if the input pressure is higher than output pressure.\n",
        "name": "One Way Valve (Gas)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePipeOrgan": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeOrgan",
        "prefab_hash": 1305252611,
        "desc": "The pipe organ can be attached to one end of a <link=ThingItemPipeValve><color=green>Kit (Pipe Valve)</color></link>. The length of the pipe after the pipe organ changes the pitch of the note it will play when the valve is opened. Use <link=LogicPage><color=#0080FFFF>Logic</color></link> to open and close the valves to create some custom tunes for your base or an audible warning.",
        "name": "Pipe Organ"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeRadiator": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePipeRadiator",
        "prefab_hash": 1696603168,
        "desc": "A simple heat exchanger, pipe radiators can be placed on pipes to shed or gain heat, depending on the temperature of the surrounding atmosphere. If the atmosphere is hotter, heat will be added the gas within the pipe network, and visa versa if colder. In a vacuum, heat will be radiated. \nThe speed of heat gain or loss will depend on the gas in question. Adding multiple radiators will speed up heat transfer.",
        "name": "Pipe Convection Radiator"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 1.0,
        "radiation_factor": 0.75
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePipeRadiatorFlat": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePipeRadiatorFlat",
        "prefab_hash": -399883995,
        "desc": "A pipe mounted radiator optimized for radiating heat in vacuums.",
        "name": "Pipe Radiator"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.2,
        "radiation_factor": 3.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePipeRadiatorFlatLiquid": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePipeRadiatorFlatLiquid",
        "prefab_hash": 2024754523,
        "desc": "A liquid pipe mounted radiator optimized for radiating heat in vacuums.",
        "name": "Pipe Radiator Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.2,
        "radiation_factor": 3.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePipeStraight": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeStraight",
        "prefab_hash": 73728932,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeStraight><color=green>Insulated Pipe (Straight)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Pipe (Straight)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePipeTJunction": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePipeTJunction",
        "prefab_hash": -913817472,
        "desc": "You can upgrade this pipe to an <link=ThingStructureInsulatedPipeTJunction><color=green>Insulated Pipe (T Junction)</color></link> using an <link=ThingItemKitInsulatedPipe><color=green>Kit (Insulated Pipe)</color></link> and a <link=ThingItemWrench><color=green>Wrench</color></link>.",
        "name": "Pipe (T Junction)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      }
    },
    "StructurePlanter": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructurePlanter",
        "prefab_hash": -1125641329,
        "desc": "A small planter for decorative or hydroponic purposes. Can be connected to <link=GasWater><color=#44AD83>Water</color></link>, or watered manually using a <link=ThingItemWaterBottle><color=green>Water Bottle</color></link> or <link=ThingItemGasCanisterWater><color=green>Liquid Canister (Water)</color></link>.",
        "name": "Planter"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      },
      "slots": [
        {
          "name": "Plant",
          "typ": "Plant"
        },
        {
          "name": "Plant",
          "typ": "Plant"
        }
      ]
    },
    "StructurePlatformLadderOpen": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructurePlatformLadderOpen",
        "prefab_hash": 1559586682,
        "desc": "",
        "name": "Ladder Platform"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructurePlinth": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructurePlinth",
        "prefab_hash": 989835703,
        "desc": "",
        "name": "Plinth"
      },
      "structure": {
        "small_grid": true
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "StructurePortablesConnector": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePortablesConnector",
        "prefab_hash": -899013427,
        "desc": "",
        "name": "Portables Connector"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Open": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input2"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructurePowerConnector": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePowerConnector",
        "prefab_hash": -782951720,
        "desc": "Attaches a <link=ThingItemKitDynamicGenerator><color=green>Kit (Portable Generator)</color></link> to a power network.",
        "name": "Power Connector"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Open": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Portable Slot",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructurePowerTransmitter": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePowerTransmitter",
        "prefab_hash": -65087121,
        "desc": "The <link=Norsec><color=#0080FFFF>Norsec</color></link> Wireless Power Transmitter is an uni-directional, A-to-B, far field microwave electrical transmission system.The rotatable base transmitter delivers a narrow, non-lethal microwave beam to a dedicated base receiver.\nThe transmitter must be aligned to the base station in order to transmit any power. The brightness of the transmitter's collimator arc provides an indication of transmission intensity. Note that there is an attrition over longer ranges, so the unit requires more power over greater distances to deliver the same output.",
        "name": "Microwave Power Transmitter"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "Read",
          "Error": "Read",
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PositionX": "Read",
          "PositionY": "Read",
          "PositionZ": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Unlinked",
          "1": "Linked"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePowerTransmitterOmni": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePowerTransmitterOmni",
        "prefab_hash": -327468845,
        "desc": "",
        "name": "Power Transmitter Omni"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePowerTransmitterReceiver": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePowerTransmitterReceiver",
        "prefab_hash": 1195820278,
        "desc": "The <link=Norsec><color=#0080FFFF>Norsec</color></link> Wireless Power Transmitter is an uni-directional, A-to-B, far field microwave electrical transmission system.The rotatable base transmitter delivers a narrow, non-lethal microwave beam to a dedicated base receiver.\nThe transmitter must be aligned to the base station in order to transmit any power. The brightness of the transmitter's collimator arc provides an indication of transmission intensity. Note that there is an attrition over longer ranges, so the unit requires more power over greater distances to deliver the same output.Connects to <pos=300><link=ThingStructureLogicTransmitter><color=green>Logic Transmitter</color></link>",
        "name": "Microwave Power Receiver"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "Read",
          "Error": "Read",
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "PowerPotential": "Read",
          "PowerActual": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PositionX": "Read",
          "PositionY": "Read",
          "PositionZ": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Unlinked",
          "1": "Linked"
        },
        "transmission_receiver": false,
        "wireless_logic": true,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePowerUmbilicalFemale": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePowerUmbilicalFemale",
        "prefab_hash": 101488029,
        "desc": "",
        "name": "Umbilical Socket (Power)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePowerUmbilicalFemaleSide": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePowerUmbilicalFemaleSide",
        "prefab_hash": 1922506192,
        "desc": "",
        "name": "Umbilical Socket Angle (Power)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePowerUmbilicalMale": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePowerUmbilicalMale",
        "prefab_hash": 1529453938,
        "desc": "0.Left\n1.Center\n2.Right",
        "name": "Umbilical (Power)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Left",
          "1": "Center",
          "2": "Right"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "Input"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructurePoweredVent": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePoweredVent",
        "prefab_hash": 938836756,
        "desc": "Great for moving large quantities of air into a pipe network. Its primary purpose is for the creation of multi-grid airlocks. It can effeciently pull a vacuum on a small to medium sized room.",
        "name": "Powered Vent"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "PressureExternal": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Outward",
          "1": "Inward"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePoweredVentLarge": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePoweredVentLarge",
        "prefab_hash": -785498334,
        "desc": "For building large scale airlock systems and pressurised hangers, a bigger and bolder version of the <link=ThingStructurePoweredVent><color=green>Powered Vent</color></link> that can effeciently pull a vacuum in large room.",
        "name": "Powered Vent Large"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "PressureExternal": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Outward",
          "1": "Inward"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePressurantValve": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePressurantValve",
        "prefab_hash": 23052817,
        "desc": "Pumps gas into a liquid pipe in order to raise the pressure",
        "name": "Pressurant Valve"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePressureFedGasEngine": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePressureFedGasEngine",
        "prefab_hash": -624011170,
        "desc": "Inefficient but very powerful, the Pressure Fed Gas Engine moves gas from each of its two inputs based on the pressure of the input pipes. Control the mixing ratio of fuels by tweaking the input pressures to target a 2:1 mix of <link=GasVolatiles><color=#44AD83>Volatiles</color></link> to <link=GasOxygen><color=#44AD83>Oxygen</color></link> gas. Chilling propellant gasses or using <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> as an oxydizer will result in even higher thrust outputs.",
        "name": "Pressure Fed Gas Engine"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "Throttle": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "PassedMoles": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Input2"
          },
          {
            "typ": "PowerAndData",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePressureFedLiquidEngine": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePressureFedLiquidEngine",
        "prefab_hash": 379750958,
        "desc": "Highly efficient and powerful, the Pressure Fed Liquid Engine is a challenging engine to run in a stable configuration. Liquid is pulled from the input into the engine based on the input gas pressure. Some gas is also moved in this process so Stationeers will need to devise a system to maintain a high gas pressure in the liquid input pipe. The second liquid pipe connection is an optional heat-exchanger connection which exchanges heat between the pipes contents and the engine bell, the Setting variable drives the effectiveness of the heat-exchanger.",
        "name": "Pressure Fed Liquid Engine"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "Throttle": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "PassedMoles": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input2"
          },
          {
            "typ": "PowerAndData",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePressurePlateLarge": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePressurePlateLarge",
        "prefab_hash": -2008706143,
        "desc": "",
        "name": "Trigger Plate (Large)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePressurePlateMedium": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePressurePlateMedium",
        "prefab_hash": 1269458680,
        "desc": "",
        "name": "Trigger Plate (Medium)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePressurePlateSmall": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePressurePlateSmall",
        "prefab_hash": -1536471028,
        "desc": "",
        "name": "Trigger Plate (Small)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePressureRegulator": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePressureRegulator",
        "prefab_hash": 209854039,
        "desc": "Controlling the flow of gas between two pipe networks, pressure regulators shift gas until a set pressure on the outlet side is achieved, or the gas supply is exhausted. The back pressure regulator, by contrast, will only operate when pressure on the intake side exceeds the set value. With a max pressure of over 20,000kPa, it requires power to operate.",
        "name": "Pressure Regulator"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureProximitySensor": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureProximitySensor",
        "prefab_hash": 568800213,
        "desc": "Will be triggered if there is a player in the range of the sensor (as defined by the setting dial). The quantity variable will show the number of players. You can configure the sensor to only detect players who hold the correct Access Card using a <link=ThingCartridgeAccessController><color=green>Cartridge (Access Controller)</color></link> in a <link=ThingItemTablet><color=green>Handheld Tablet</color></link>.",
        "name": "Proximity Sensor"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Activate": "Read",
          "Setting": "ReadWrite",
          "Quantity": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePumpedLiquidEngine": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePumpedLiquidEngine",
        "prefab_hash": -2031440019,
        "desc": "Liquid propellants bring greater efficiencies with Pumped Liquid Engine. Two inputs are provided so Stationeers can seperate their fuels, the Setting variable controls the mixing ratio of the inputs. The engine is designed to run on <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link> and <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link>, some Stationeers have reported excessive thrust values by switching to <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link>",
        "name": "Pumped Liquid Engine"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "Throttle": "ReadWrite",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "PassedMoles": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "None"
          },
          {
            "typ": "PowerAndData",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructurePurgeValve": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructurePurgeValve",
        "prefab_hash": -737232128,
        "desc": "Allows for removal of pressurant gas and evaporated liquids from a liquid pipe. Similar in function to a <link=ThingStructureBackPressureRegulator><color=green>Back Pressure Regulator</color></link> the <link=ThingStructurePurgeValve><color=green>Purge Valve</color></link> moves gas from the input liquid pipe to the output gas pipe aiming to keep the pressure of the input at the target setting.",
        "name": "Purge Valve"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureRailing": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureRailing",
        "prefab_hash": -1756913871,
        "desc": "\"Safety third.\"",
        "name": "Railing Industrial (Type 1)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureRecycler": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureRecycler",
        "prefab_hash": -1633947337,
        "desc": "A device for collecting the raw resources while destroying an item. Produces <link=ThingItemReagentMix><color=green>Reagent Mix</color></link> containing packages of reagents. Pass these through the <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link> to gain back the source ores. Plants and organic matter passed through will create Biomass, which when passed through the <link=ThingStructureCentrifuge><color=green>Centrifuge</color></link> will produce <link=ThingItemBiomass><color=green>Biomass</color></link>.",
        "name": "Recycler"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": true
      }
    },
    "StructureRefrigeratedVendingMachine": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureRefrigeratedVendingMachine",
        "prefab_hash": -1577831321,
        "desc": "The refrigerated OmniKool vending machine is an advanced version of the standard <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link>, which maintains an optimum pressure and constant temperature of -130 degrees C, to prevent food spoilage. It can hold up to 100 stacks.\nThe OmniKool also has an in-built <link=ThingStructureStacker><color=green>Stacker</color></link>, allowing players to set the stack sizes of any items ADDED to the device. The unit's default stack size is 50.\nNOTE: altering stack sizes DOES NOT update existing stacks within the machine, only those subsequently added. ",
        "name": "Refrigerated Vending Machine"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {},
          "2": {},
          "3": {},
          "4": {},
          "5": {},
          "6": {},
          "7": {},
          "8": {},
          "9": {},
          "10": {},
          "11": {},
          "12": {},
          "13": {},
          "14": {},
          "15": {},
          "16": {},
          "17": {},
          "18": {},
          "19": {},
          "20": {},
          "21": {},
          "22": {},
          "23": {},
          "24": {},
          "25": {},
          "26": {},
          "27": {},
          "28": {},
          "29": {},
          "30": {},
          "31": {},
          "32": {},
          "33": {},
          "34": {},
          "35": {},
          "36": {},
          "37": {},
          "38": {},
          "39": {},
          "40": {},
          "41": {},
          "42": {},
          "43": {},
          "44": {},
          "45": {},
          "46": {},
          "47": {},
          "48": {},
          "49": {},
          "50": {},
          "51": {},
          "52": {},
          "53": {},
          "54": {},
          "55": {},
          "56": {},
          "57": {},
          "58": {},
          "59": {},
          "60": {},
          "61": {},
          "62": {},
          "63": {},
          "64": {},
          "65": {},
          "66": {},
          "67": {},
          "68": {},
          "69": {},
          "70": {},
          "71": {},
          "72": {},
          "73": {},
          "74": {},
          "75": {},
          "76": {},
          "77": {},
          "78": {},
          "79": {},
          "80": {},
          "81": {},
          "82": {},
          "83": {},
          "84": {},
          "85": {},
          "86": {},
          "87": {},
          "88": {},
          "89": {},
          "90": {},
          "91": {},
          "92": {},
          "93": {},
          "94": {},
          "95": {},
          "96": {},
          "97": {},
          "98": {},
          "99": {},
          "100": {},
          "101": {}
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Ratio": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RequestHash": "ReadWrite",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureReinforcedCompositeWindow": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureReinforcedCompositeWindow",
        "prefab_hash": 2027713511,
        "desc": "Enjoy vistas of even the most savage, alien landscapes with these heavy duty window frames, which are resistant to pressure differentials up to 1MPa.",
        "name": "Reinforced Window (Composite)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureReinforcedCompositeWindowSteel": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureReinforcedCompositeWindowSteel",
        "prefab_hash": -816454272,
        "desc": "Enjoy vistas of even the most savage, alien landscapes with these heavy duty window frames, which are resistant to pressure differentials up to 1MPa.",
        "name": "Reinforced Window (Composite Steel)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureReinforcedWallPaddedWindow": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureReinforcedWallPaddedWindow",
        "prefab_hash": 1939061729,
        "desc": "Enjoy vistas of even the most savage, alien landscapes with these heavy duty window frames, which are resistant to pressure differentials up to 1MPa.",
        "name": "Reinforced Window (Padded)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureReinforcedWallPaddedWindowThin": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureReinforcedWallPaddedWindowThin",
        "prefab_hash": 158502707,
        "desc": "Enjoy vistas of even the most savage, alien landscapes with these heavy duty window frames, which are resistant to pressure differentials up to 1MPa.",
        "name": "Reinforced Window (Thin)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureRocketAvionics": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureRocketAvionics",
        "prefab_hash": 808389066,
        "desc": "",
        "name": "Rocket Avionics"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Temperature": "Read",
          "Reagents": "Read",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "VelocityRelativeY": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "Progress": "Read",
          "DestinationCode": "ReadWrite",
          "Acceleration": "Read",
          "ReferenceId": "Read",
          "AutoShutOff": "ReadWrite",
          "Mass": "Read",
          "DryMass": "Read",
          "Thrust": "Read",
          "Weight": "Read",
          "ThrustToWeight": "Read",
          "TimeToDestination": "Read",
          "BurnTimeRemaining": "Read",
          "AutoLand": "Write",
          "FlightControlRule": "Read",
          "ReEntryAltitude": "Read",
          "Apex": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "Discover": "Read",
          "Chart": "Read",
          "Survey": "Read",
          "NavPoints": "Read",
          "ChartedNavPoints": "Read",
          "Sites": "Read",
          "CurrentCode": "Read",
          "Density": "Read",
          "Richness": "Read",
          "Size": "Read",
          "TotalQuantity": "Read",
          "MinedQuantity": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Invalid",
          "1": "None",
          "2": "Mine",
          "3": "Survey",
          "4": "Discover",
          "5": "Chart"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": true
      }
    },
    "StructureRocketCelestialTracker": {
      "templateType": "StructureLogicDeviceMemory",
      "prefab": {
        "prefab_name": "StructureRocketCelestialTracker",
        "prefab_hash": 997453927,
        "desc": "The Celestial Tracker can be placed in Rockets and when turned on will provide data that can be used to orientate devices such as the <link=ThingStructureGroundBasedTelescope><color=green>Telescope</color></link>. The Horizontal and Vertical output is localized to the orientation of the tracker. You can calibrate your alignment by comparing the result for the primary body with the output from the <link=ThingStructureDaylightSensor><color=green>Daylight Sensor</color></link>. Full functionality will only be available in orbit, but you can configure using the primary body. For aligning with the telescope, have the face plate facing up and the cables facing in the same direction as for the telescope and the output values will be aligned.",
        "name": "Rocket Celestial Tracker"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Horizontal": "Read",
          "Vertical": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "Index": "ReadWrite",
          "CelestialHash": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      },
      "memory": {
        "instructions": {
          "BodyOrientation": {
            "description": "<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>CELESTIAL_INDEX</color>              | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-31 </color>   | <color=yellow>HORIZONTAL_DECI_DEGREES</color>      | <color=orange>SHORT_16</color>   |\r\n| <color=red>32-47 </color>   | <color=yellow>VERTICAL_DECI_DEGREES</color>        | <color=orange>SHORT_16</color>   |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | CELESTIAL_INDEX              | BYTE_8     |\r\n| 16-31    | HORIZONTAL_DECI_DEGREES      | SHORT_16   |\r\n| 32-47    | VERTICAL_DECI_DEGREES        | SHORT_16   |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "CelestialTracking",
            "value": 1,
            "valid": [
              0,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "CELESTIAL_INDEX",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  31
                ],
                "name": "HORIZONTAL_DECI_DEGREES",
                "typ": "Short16"
              },
              {
                "range": [
                  32,
                  47
                ],
                "name": "VERTICAL_DECI_DEGREES",
                "typ": "Short16"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          }
        },
        "memory_access": "Read",
        "memory_size": 12
      }
    },
    "StructureRocketCircuitHousing": {
      "templateType": "StructureCircuitHolder",
      "prefab": {
        "prefab_name": "StructureRocketCircuitHousing",
        "prefab_hash": 150135861,
        "desc": "",
        "name": "Rocket Circuit Housing"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "LineNumber": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "LineNumber": "ReadWrite",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": true
      },
      "slots": [
        {
          "name": "Programmable Chip",
          "typ": "ProgrammableChip"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "Input"
          }
        ],
        "device_pins_length": 6,
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureRocketEngineTiny": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureRocketEngineTiny",
        "prefab_hash": 178472613,
        "desc": "",
        "name": "Rocket Engine (Tiny)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "TotalMoles": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureRocketManufactory": {
      "templateType": "StructureLogicDeviceConsumerMemory",
      "prefab": {
        "prefab_name": "StructureRocketManufactory",
        "prefab_hash": 1781051034,
        "desc": "",
        "name": "Rocket Manufactory"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "Ingot"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": true
      },
      "consumer_info": {
        "consumed_resouces": [
          "ItemAstroloyIngot",
          "ItemConstantanIngot",
          "ItemCopperIngot",
          "ItemElectrumIngot",
          "ItemGoldIngot",
          "ItemHastelloyIngot",
          "ItemInconelIngot",
          "ItemInvarIngot",
          "ItemIronIngot",
          "ItemLeadIngot",
          "ItemNickelIngot",
          "ItemSiliconIngot",
          "ItemSilverIngot",
          "ItemSolderIngot",
          "ItemSolidFuel",
          "ItemSteelIngot",
          "ItemStelliteIngot",
          "ItemWaspaloyIngot",
          "ItemWasteIngot"
        ],
        "processed_reagents": []
      },
      "fabricator_info": {
        "tier": "Undefined",
        "recipes": {
          "ItemKitAccessBridge": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 9000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 3.0,
              "Steel": 10.0
            }
          },
          "ItemKitChuteUmbilical": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 3.0,
              "Steel": 10.0
            }
          },
          "ItemKitElectricUmbilical": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Gold": 5.0,
              "Steel": 5.0
            }
          },
          "ItemKitFuselage": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 60000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 20.0
            }
          },
          "ItemKitGasUmbilical": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Steel": 5.0
            }
          },
          "ItemKitGovernedGasRocketEngine": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 60000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 10.0,
              "Gold": 5.0,
              "Iron": 15.0
            }
          },
          "ItemKitLaunchMount": {
            "tier": "TierOne",
            "time": 240.0,
            "energy": 120000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 60.0
            }
          },
          "ItemKitLaunchTower": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 30000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 10.0
            }
          },
          "ItemKitLiquidUmbilical": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Steel": 5.0
            }
          },
          "ItemKitPressureFedGasEngine": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 60000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Constantan": 10.0,
              "Electrum": 5.0,
              "Invar": 20.0,
              "Steel": 20.0
            }
          },
          "ItemKitPressureFedLiquidEngine": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 60000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Astroloy": 10.0,
              "Inconel": 5.0,
              "Waspaloy": 15.0
            }
          },
          "ItemKitPumpedLiquidEngine": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 60000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Constantan": 10.0,
              "Electrum": 5.0,
              "Steel": 15.0
            }
          },
          "ItemKitRocketAvionics": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 2.0,
              "Solder": 3.0
            }
          },
          "ItemKitRocketBattery": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 10000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Electrum": 5.0,
              "Solder": 5.0,
              "Steel": 10.0
            }
          },
          "ItemKitRocketCargoStorage": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 30000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Constantan": 10.0,
              "Invar": 5.0,
              "Steel": 10.0
            }
          },
          "ItemKitRocketCelestialTracker": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 5.0,
              "Steel": 5.0
            }
          },
          "ItemKitRocketCircuitHousing": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 2.0,
              "Solder": 3.0
            }
          },
          "ItemKitRocketDatalink": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 2.0,
              "Solder": 3.0
            }
          },
          "ItemKitRocketGasFuelTank": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Steel": 10.0
            }
          },
          "ItemKitRocketLiquidFuelTank": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Steel": 20.0
            }
          },
          "ItemKitRocketMiner": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 60000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Constantan": 10.0,
              "Electrum": 5.0,
              "Invar": 5.0,
              "Steel": 10.0
            }
          },
          "ItemKitRocketScanner": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 60000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 10.0,
              "Gold": 10.0
            }
          },
          "ItemKitRocketTransformerSmall": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 12000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 5.0,
              "Steel": 10.0
            }
          },
          "ItemKitStairwell": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 6000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 15.0
            }
          },
          "ItemRocketMiningDrillHead": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 20.0
            }
          },
          "ItemRocketMiningDrillHeadDurable": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Iron": 10.0,
              "Steel": 10.0
            }
          },
          "ItemRocketMiningDrillHeadHighSpeedIce": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Invar": 5.0,
              "Steel": 10.0
            }
          },
          "ItemRocketMiningDrillHeadHighSpeedMineral": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Invar": 5.0,
              "Steel": 10.0
            }
          },
          "ItemRocketMiningDrillHeadIce": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Iron": 10.0,
              "Steel": 10.0
            }
          },
          "ItemRocketMiningDrillHeadLongTerm": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Invar": 5.0,
              "Steel": 10.0
            }
          },
          "ItemRocketMiningDrillHeadMineral": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 5000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Iron": 10.0,
              "Steel": 10.0
            }
          },
          "ItemRocketScanningHead": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 60000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 3.0,
              "Gold": 2.0
            }
          }
        }
      },
      "memory": {
        "instructions": {
          "DeviceSetLock": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>LOCK_STATE</color>                   | <color=orange>BOOL_8</color>     |\r\n| <color=grey>16-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>48</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | LOCK_STATE                   | BOOL_8     |\r\n| 16-63    | UNUSED                       | 48         |",
            "typ": "PrinterInstruction",
            "value": 6,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "LOCK_STATE",
                "typ": "Bool8"
              },
              {
                "range": [
                  16,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 48
                }
              }
            ]
          },
          "EjectAllReagents": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 8,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          },
          "EjectReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-39     | REAGENT_HASH                 | INT_32     |\r\n| 40-63    | UNUSED                       | 24         |",
            "typ": "PrinterInstruction",
            "value": 7,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  39
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  40,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 24
                }
              }
            ]
          },
          "ExecuteRecipe": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY</color>                     | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>PREFAB_HASH</color>                  | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY                     | BYTE_8     |\r\n| 16-47    | PREFAB_HASH                  | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 2,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "PREFAB_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "JumpIfNextInvalid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 4,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "JumpToAddress": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 5,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "MissingRecipeReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 54 TO 62</color>                     |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY_CEIL</color>                | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 54 TO 62                     |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY_CEIL                | BYTE_8     |\r\n| 16-47    | REAGENT_HASH                 | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 9,
            "valid": [
              54,
              62
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY_CEIL",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "StackPointer": {
            "description": "| <color=grey>VALID ONLY AT ADDRESS 63</color>                             |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>INDEX</color>                        | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESS 63                             |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | INDEX                        | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 1,
            "valid": [
              63,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "INDEX",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "WaitUntilNextValid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 3,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          }
        },
        "memory_access": "ReadWrite",
        "memory_size": 64
      }
    },
    "StructureRocketMiner": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureRocketMiner",
        "prefab_hash": -2087223687,
        "desc": "Gathers available resources at the rocket's current space location.",
        "name": "Rocket Miner"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "DrillCondition": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Export",
          "typ": "None"
        },
        {
          "name": "Drill Head Slot",
          "typ": "DrillHead"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureRocketScanner": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureRocketScanner",
        "prefab_hash": 2014252591,
        "desc": "",
        "name": "Rocket Scanner"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Scanner Head Slot",
          "typ": "ScanningHead"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureRocketTower": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureRocketTower",
        "prefab_hash": -654619479,
        "desc": "",
        "name": "Launch Tower"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureRocketTransformerSmall": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureRocketTransformerSmall",
        "prefab_hash": 518925193,
        "desc": "",
        "name": "Transformer Small (Rocket)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureRover": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureRover",
        "prefab_hash": 806513938,
        "desc": "",
        "name": "Rover Frame"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureSDBHopper": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSDBHopper",
        "prefab_hash": -1875856925,
        "desc": "",
        "name": "SDB Hopper"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Open": "ReadWrite",
          "ClearMemory": "Write",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureSDBHopperAdvanced": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSDBHopperAdvanced",
        "prefab_hash": 467225612,
        "desc": "",
        "name": "SDB Hopper Advanced"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "ClearMemory": "Write",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "Chute",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureSDBSilo": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSDBSilo",
        "prefab_hash": 1155865682,
        "desc": "The majestic silo holds large quantities of almost anything. While it is doing that, it cannot be deconstructed. Note also, that any food you put into a silo is likely to <link=DecayPage><color=#0080FFFF>decay</color></link> extremely rapidly. The silo can hold up to 600 stacks.",
        "name": "SDB Silo"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Mode0",
          "1": "Mode1"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureSatelliteDish": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSatelliteDish",
        "prefab_hash": 439026183,
        "desc": "This medium communications unit can be used to communicate with nearby trade vessels.\n      \nWhen connected to a <link=ThingStructureComputer><color=green>Computer</color></link> containing a <link=ThingMotherboardComms><color=green>Communications Motherboard</color></link> motherboard, a <link=ThingLandingpad_CenterPiece01><color=green>Landingpad Center</color></link>, and a <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link>, this allows Stationeers to contact traders. Adjust its horizontal and vertical attributes either directly or through logic.",
        "name": "Medium Satellite Dish"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Setting": "ReadWrite",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "SignalStrength": "Read",
          "SignalId": "Read",
          "InterrogationProgress": "Read",
          "TargetPadIndex": "ReadWrite",
          "SizeX": "Read",
          "SizeZ": "Read",
          "MinimumWattsToContact": "Read",
          "WattsReachingContact": "Read",
          "ContactTypeId": "Read",
          "ReferenceId": "Read",
          "BestContactFilter": "ReadWrite",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSecurityPrinter": {
      "templateType": "StructureLogicDeviceConsumerMemory",
      "prefab": {
        "prefab_name": "StructureSecurityPrinter",
        "prefab_hash": -641491515,
        "desc": "Any <link=Stationeer><color=#0080FFFF>Stationeer</color></link> concerned about security needs the <link=Harkwell><color=#0080FFFF>Harkwell-designed</color></link> Vigilant-E security printer. Use the Vigilant-E to create a <link=ThingCartridgeAccessController><color=green>Cartridge (Access Controller)</color></link>, in order to restrict access to different parts of your base via keycards like the <link=ThingAccessCardBlue><color=green>Access Card (Blue)</color></link>. The printer also makes a variety of weapons and ammunitions to defend your base against any hostile, aggressive or just slightly rude entites you encounter as you explore the Solar System.\n",
        "name": "Security Printer"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "Ingot"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": true
      },
      "consumer_info": {
        "consumed_resouces": [
          "ItemAstroloyIngot",
          "ItemConstantanIngot",
          "ItemCopperIngot",
          "ItemElectrumIngot",
          "ItemGoldIngot",
          "ItemHastelloyIngot",
          "ItemInconelIngot",
          "ItemInvarIngot",
          "ItemIronIngot",
          "ItemLeadIngot",
          "ItemNickelIngot",
          "ItemSiliconIngot",
          "ItemSilverIngot",
          "ItemSolderIngot",
          "ItemSolidFuel",
          "ItemSteelIngot",
          "ItemStelliteIngot",
          "ItemWaspaloyIngot",
          "ItemWasteIngot"
        ],
        "processed_reagents": []
      },
      "fabricator_info": {
        "tier": "Undefined",
        "recipes": {
          "AccessCardBlack": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "AccessCardBlue": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "AccessCardBrown": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "AccessCardGray": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "AccessCardGreen": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "AccessCardKhaki": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "AccessCardOrange": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "AccessCardPink": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "AccessCardPurple": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "AccessCardRed": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "AccessCardWhite": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "AccessCardYellow": {
            "tier": "TierOne",
            "time": 2.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Gold": 1.0,
              "Iron": 1.0
            }
          },
          "CartridgeAccessController": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 1.0
            }
          },
          "FireArmSMG": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 3000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Nickel": 10.0,
              "Steel": 30.0
            }
          },
          "Handgun": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 3000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Nickel": 10.0,
              "Steel": 30.0
            }
          },
          "HandgunMagazine": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Lead": 1.0,
              "Steel": 3.0
            }
          },
          "ItemAmmoBox": {
            "tier": "TierOne",
            "time": 120.0,
            "energy": 3000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 30.0,
              "Lead": 50.0,
              "Steel": 30.0
            }
          },
          "ItemExplosive": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 5,
            "reagents": {
              "Copper": 5.0,
              "Electrum": 1.0,
              "Gold": 5.0,
              "Lead": 10.0,
              "Steel": 7.0
            }
          },
          "ItemGrenade": {
            "tier": "TierOne",
            "time": 90.0,
            "energy": 2900.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 15.0,
              "Gold": 1.0,
              "Lead": 25.0,
              "Steel": 25.0
            }
          },
          "ItemMiningCharge": {
            "tier": "TierOne",
            "time": 7.0,
            "energy": 200.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 7.0,
              "Lead": 10.0
            }
          },
          "SMGMagazine": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Lead": 1.0,
              "Steel": 3.0
            }
          },
          "WeaponPistolEnergy": {
            "tier": "TierTwo",
            "time": 120.0,
            "energy": 3000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Electrum": 20.0,
              "Gold": 10.0,
              "Solder": 10.0,
              "Steel": 10.0
            }
          },
          "WeaponRifleEnergy": {
            "tier": "TierTwo",
            "time": 240.0,
            "energy": 10000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 6,
            "reagents": {
              "Constantan": 10.0,
              "Electrum": 20.0,
              "Gold": 10.0,
              "Invar": 10.0,
              "Solder": 10.0,
              "Steel": 20.0
            }
          }
        }
      },
      "memory": {
        "instructions": {
          "DeviceSetLock": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>LOCK_STATE</color>                   | <color=orange>BOOL_8</color>     |\r\n| <color=grey>16-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>48</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | LOCK_STATE                   | BOOL_8     |\r\n| 16-63    | UNUSED                       | 48         |",
            "typ": "PrinterInstruction",
            "value": 6,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "LOCK_STATE",
                "typ": "Bool8"
              },
              {
                "range": [
                  16,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 48
                }
              }
            ]
          },
          "EjectAllReagents": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 8,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          },
          "EjectReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-39     | REAGENT_HASH                 | INT_32     |\r\n| 40-63    | UNUSED                       | 24         |",
            "typ": "PrinterInstruction",
            "value": 7,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  39
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  40,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 24
                }
              }
            ]
          },
          "ExecuteRecipe": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY</color>                     | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>PREFAB_HASH</color>                  | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY                     | BYTE_8     |\r\n| 16-47    | PREFAB_HASH                  | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 2,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "PREFAB_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "JumpIfNextInvalid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 4,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "JumpToAddress": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 5,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "MissingRecipeReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 54 TO 62</color>                     |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY_CEIL</color>                | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 54 TO 62                     |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY_CEIL                | BYTE_8     |\r\n| 16-47    | REAGENT_HASH                 | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 9,
            "valid": [
              54,
              62
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY_CEIL",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "StackPointer": {
            "description": "| <color=grey>VALID ONLY AT ADDRESS 63</color>                             |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>INDEX</color>                        | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESS 63                             |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | INDEX                        | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 1,
            "valid": [
              63,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "INDEX",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "WaitUntilNextValid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 3,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          }
        },
        "memory_access": "ReadWrite",
        "memory_size": 64
      }
    },
    "StructureShelf": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureShelf",
        "prefab_hash": 1172114950,
        "desc": "",
        "name": "Shelf"
      },
      "structure": {
        "small_grid": true
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "StructureShelfMedium": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureShelfMedium",
        "prefab_hash": 182006674,
        "desc": "A shelf for putting things on, so you can see them.",
        "name": "Shelf Medium"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Open": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureShortCornerLocker": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureShortCornerLocker",
        "prefab_hash": 1330754486,
        "desc": "",
        "name": "Short Corner Locker"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureShortLocker": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureShortLocker",
        "prefab_hash": -554553467,
        "desc": "",
        "name": "Short Locker"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureShower": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureShower",
        "prefab_hash": -775128944,
        "desc": "",
        "name": "Shower"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Open": "ReadWrite",
          "Activate": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureShowerPowered": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureShowerPowered",
        "prefab_hash": -1081797501,
        "desc": "",
        "name": "Shower (Powered)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureSign1x1": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSign1x1",
        "prefab_hash": 879058460,
        "desc": "",
        "name": "Sign 1x1"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSign2x1": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSign2x1",
        "prefab_hash": 908320837,
        "desc": "",
        "name": "Sign 2x1"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSingleBed": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSingleBed",
        "prefab_hash": -492611,
        "desc": "Description coming.",
        "name": "Single Bed"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Bed",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSleeper": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSleeper",
        "prefab_hash": -1467449329,
        "desc": "",
        "name": "Sleeper"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Bed",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureSleeperLeft": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSleeperLeft",
        "prefab_hash": 1213495833,
        "desc": "A horizontal variant of the sleeper. Will keep players hydrated and fed while they are logged out - as long as a breathable atmosphere is provided.",
        "name": "Sleeper Left"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Safe",
          "1": "Unsafe",
          "2": "Unpowered"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Player",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureSleeperRight": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSleeperRight",
        "prefab_hash": -1812330717,
        "desc": "A horizontal variant of the sleeper. Will keep players hydrated and fed while they are logged out - as long as a breathable atmosphere is provided.",
        "name": "Sleeper Right"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Safe",
          "1": "Unsafe",
          "2": "Unpowered"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Player",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureSleeperVertical": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSleeperVertical",
        "prefab_hash": -1300059018,
        "desc": "The vertical variant of the sleeper. Will keep players hydrated and fed while they are logged out - as long as a breathable atmosphere is provided.",
        "name": "Sleeper Vertical"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.1,
        "radiation_factor": 0.1
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "EntityState": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Safe",
          "1": "Unsafe",
          "2": "Unpowered"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Player",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureSleeperVerticalDroid": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSleeperVerticalDroid",
        "prefab_hash": 1382098999,
        "desc": "The Droid Sleeper will recharge robot batteries and equiped suit batteries if present. This sleeper variant is only safe for robots. Entering as a non robot character will cause you to take damage.",
        "name": "Droid Sleeper Vertical"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Player",
          "typ": "Entity"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureSmallDirectHeatExchangeGastoGas": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSmallDirectHeatExchangeGastoGas",
        "prefab_hash": 1310303582,
        "desc": "Direct Heat Exchangers equalize the temperature of the two input networks.",
        "name": "Small Direct Heat Exchanger - Gas + Gas"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Input2"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSmallDirectHeatExchangeLiquidtoGas": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSmallDirectHeatExchangeLiquidtoGas",
        "prefab_hash": 1825212016,
        "desc": "Direct Heat Exchangers equalize the temperature of the two input networks.",
        "name": "Small Direct Heat Exchanger - Liquid + Gas "
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Input2"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSmallDirectHeatExchangeLiquidtoLiquid": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSmallDirectHeatExchangeLiquidtoLiquid",
        "prefab_hash": -507770416,
        "desc": "Direct Heat Exchangers equalize the temperature of the two input networks.",
        "name": "Small Direct Heat Exchanger - Liquid + Liquid"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input2"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSmallSatelliteDish": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSmallSatelliteDish",
        "prefab_hash": -2138748650,
        "desc": "This small communications unit can be used to communicate with nearby trade vessels.\n\n        When connected to a <link=ThingStructureComputer><color=green>Computer</color></link> containing a <link=ThingMotherboardComms><color=green>Communications Motherboard</color></link> motherboard, a <link=ThingLandingpad_CenterPiece01><color=green>Landingpad Center</color></link>, and a <link=ThingStructureVendingMachine><color=green>Vending Machine</color></link>, this allows Stationeers to contact traders. Adjust its horizontal and vertical attributes either directly or through logic.",
        "name": "Small Satellite Dish"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Setting": "ReadWrite",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "SignalStrength": "Read",
          "SignalId": "Read",
          "InterrogationProgress": "Read",
          "TargetPadIndex": "ReadWrite",
          "SizeX": "Read",
          "SizeZ": "Read",
          "MinimumWattsToContact": "Read",
          "WattsReachingContact": "Read",
          "ContactTypeId": "Read",
          "ReferenceId": "Read",
          "BestContactFilter": "ReadWrite",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "Input"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSmallTableBacklessDouble": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureSmallTableBacklessDouble",
        "prefab_hash": -1633000411,
        "desc": "",
        "name": "Small (Table Backless Double)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureSmallTableBacklessSingle": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureSmallTableBacklessSingle",
        "prefab_hash": -1897221677,
        "desc": "",
        "name": "Small (Table Backless Single)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureSmallTableDinnerSingle": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureSmallTableDinnerSingle",
        "prefab_hash": 1260651529,
        "desc": "",
        "name": "Small (Table Dinner Single)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureSmallTableRectangleDouble": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureSmallTableRectangleDouble",
        "prefab_hash": -660451023,
        "desc": "",
        "name": "Small (Table Rectangle Double)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureSmallTableRectangleSingle": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureSmallTableRectangleSingle",
        "prefab_hash": -924678969,
        "desc": "",
        "name": "Small (Table Rectangle Single)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureSmallTableThickDouble": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureSmallTableThickDouble",
        "prefab_hash": -19246131,
        "desc": "",
        "name": "Small (Table Thick Double)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureSmallTableThickSingle": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureSmallTableThickSingle",
        "prefab_hash": -291862981,
        "desc": "",
        "name": "Small Table (Thick Single)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureSolarPanel": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSolarPanel",
        "prefab_hash": -2045627372,
        "desc": "<link=Sinotai><color=#0080FFFF>Sinotai's</color></link> standard solar panels are used for generating power from sunlight. They can be connected to <link=LogicPage><color=#0080FFFF>Logic</color></link> systems, in order to track sunlight, but their reduced during storms and when damaged. You can repair these using some trusty <link=ThingItemDuctTape><color=green>Duct Tape</color></link>.",
        "name": "Solar Panel"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSolarPanel45": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSolarPanel45",
        "prefab_hash": -1554349863,
        "desc": "<link=Sinotai><color=#0080FFFF>Sinotai</color></link> basic solar panels generate power from sunlight, sitting at 45 degrees to the ground. Their efficiency is reduced during storms and when damaged. You can repair these using some trusty <link=ThingItemDuctTape><color=green>Duct Tape</color></link>.",
        "name": "Solar Panel (Angled)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSolarPanel45Reinforced": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSolarPanel45Reinforced",
        "prefab_hash": 930865127,
        "desc": "This solar panel is resistant to storm damage.",
        "name": "Solar Panel (Heavy Angled)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSolarPanelDual": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSolarPanelDual",
        "prefab_hash": -539224550,
        "desc": "<link=Sinotai><color=#0080FFFF>Sinotai</color></link> dual solar panels are used for generating power from sunlight, with dedicated data and power ports. They can be connected to {<link=LogicPage><color=#0080FFFF>Logic</color></link> systems, in order to track sunlight, but their efficiency is reduced during storms and when damaged. You can repair these using some trusty <link=ThingItemDuctTape><color=green>Duct Tape</color></link>.",
        "name": "Solar Panel (Dual)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSolarPanelDualReinforced": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSolarPanelDualReinforced",
        "prefab_hash": -1545574413,
        "desc": "This solar panel is resistant to storm damage.",
        "name": "Solar Panel (Heavy Dual)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSolarPanelFlat": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSolarPanelFlat",
        "prefab_hash": 1968102968,
        "desc": "<link=Sinotai><color=#0080FFFF>Sinotai</color></link> basic solar panels generate power from sunlight. They lie flat to the ground, and their efficiency is reduced during storms and when damaged. You can repair these using some trusty <link=ThingItemDuctTape><color=green>Duct Tape</color></link>.",
        "name": "Solar Panel (Flat)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSolarPanelFlatReinforced": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSolarPanelFlatReinforced",
        "prefab_hash": 1697196770,
        "desc": "This solar panel is resistant to storm damage.",
        "name": "Solar Panel (Heavy Flat)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSolarPanelReinforced": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSolarPanelReinforced",
        "prefab_hash": -934345724,
        "desc": "This solar panel is resistant to storm damage.",
        "name": "Solar Panel (Heavy)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Charge": "Read",
          "Horizontal": "ReadWrite",
          "Vertical": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureSolidFuelGenerator": {
      "templateType": "StructureLogicDeviceConsumer",
      "prefab": {
        "prefab_name": "StructureSolidFuelGenerator",
        "prefab_hash": 813146305,
        "desc": "The mainstay of power generation for Stationeers, this device provides 20kW of power. Multiple solid resources can be loaded. While operating, the device will output its maximum power regardless of whether you have captured it or not. Watch for blown wires! It will output much more power than your regular <link=ThingItemCableCoil><color=green>Cable Coil</color></link> can handle.",
        "name": "Generator (Solid Fuel)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "ClearMemory": "Write",
          "ImportCount": "Read",
          "PowerGeneration": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Not Generating",
          "1": "Generating"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Input",
          "typ": "Ore"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      },
      "consumer_info": {
        "consumed_resouces": [
          "ItemCharcoal",
          "ItemCoalOre",
          "ItemSolidFuel"
        ],
        "processed_reagents": []
      }
    },
    "StructureSorter": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSorter",
        "prefab_hash": -1009150565,
        "desc": "No amount of automation is complete without some way of moving different items to different parts of a system. The <link=Xigo><color=#0080FFFF>Xigo</color></link> A2B sorter can be programmed via a computer with a <link=ThingMotherboardSorter><color=green>Sorter Motherboard</color></link> to direct various items into different chute networks. Filtered items are always passed out the righthand side of the sorter, while non filtered items continue straight through.",
        "name": "Sorter"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "Output": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Split",
          "1": "Filter",
          "2": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        },
        {
          "name": "Export 2",
          "typ": "None"
        },
        {
          "name": "Data Disk",
          "typ": "DataDisk"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Output2"
          },
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureStacker": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureStacker",
        "prefab_hash": -2020231820,
        "desc": "A stacker is an important part of any automated chute network. The <link=Xigo><color=#0080FFFF>Xigo</color></link> ProKompile can be set manually or via logic, to make sure items passing through the stacker are maximized for your storage needs.\nThe ProKompile can stack a wide variety of things such as <link=IngotPage><color=#0080FFFF>ingots</color></link>, as well as splitting stacks into appropriate sizes as needed.",
        "name": "Stacker"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "Output": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Automatic",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        },
        {
          "name": "Processing",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Chute",
            "role": "Input"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureStackerReverse": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureStackerReverse",
        "prefab_hash": 1585641623,
        "desc": "A stacker is an important part of any automated chute network. The <link=Xigo><color=#0080FFFF>Xigo</color></link> ProKompile can be set manually or via logic, to make sure items passing through the stacker are maximized for your storage needs. The reversed stacker has power and data on the opposite side.\nThe ProKompile can stack a wide variety of things such as <link=IngotPage><color=#0080FFFF>ingots</color></link>, as well as splitting stacks into appropriate sizes as needed.",
        "name": "Stacker"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "Output": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Automatic",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Chute",
            "role": "Input"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureStairs4x2": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureStairs4x2",
        "prefab_hash": 1405018945,
        "desc": "",
        "name": "Stairs"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureStairs4x2RailL": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureStairs4x2RailL",
        "prefab_hash": 155214029,
        "desc": "",
        "name": "Stairs with Rail (Left)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureStairs4x2RailR": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureStairs4x2RailR",
        "prefab_hash": -212902482,
        "desc": "",
        "name": "Stairs with Rail (Right)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureStairs4x2Rails": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureStairs4x2Rails",
        "prefab_hash": -1088008720,
        "desc": "",
        "name": "Stairs with Rails"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureStairwellBackLeft": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureStairwellBackLeft",
        "prefab_hash": 505924160,
        "desc": "",
        "name": "Stairwell (Back Left)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureStairwellBackPassthrough": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureStairwellBackPassthrough",
        "prefab_hash": -862048392,
        "desc": "",
        "name": "Stairwell (Back Passthrough)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureStairwellBackRight": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureStairwellBackRight",
        "prefab_hash": -2128896573,
        "desc": "",
        "name": "Stairwell (Back Right)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureStairwellFrontLeft": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureStairwellFrontLeft",
        "prefab_hash": -37454456,
        "desc": "",
        "name": "Stairwell (Front Left)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureStairwellFrontPassthrough": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureStairwellFrontPassthrough",
        "prefab_hash": -1625452928,
        "desc": "",
        "name": "Stairwell (Front Passthrough)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureStairwellFrontRight": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureStairwellFrontRight",
        "prefab_hash": 340210934,
        "desc": "",
        "name": "Stairwell (Front Right)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureStairwellNoDoors": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureStairwellNoDoors",
        "prefab_hash": 2049879875,
        "desc": "",
        "name": "Stairwell (No Doors)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureStirlingEngine": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureStirlingEngine",
        "prefab_hash": -260316435,
        "desc": "Harnessing an ancient thermal exploit, the <link=Recurso><color=#0080FFFF>Recurso</color></link> 'Libra' Stirling Engine generates power via the expansion and contraction of a working gas to drive pistons operating an electrical generator.\n      \nWhen high pressure hot gas is supplied into the input pipe, this gas will heat the hot side of the unit, then pass into the output pipe. The cooler side uses the room's ambient atmosphere, which must be kept at a lower temperature and pressure in order to create a differential. Add a working gas by inserting a <link=SlotGasCanister><color=orange>Gas Canister</color></link>. The unit must be deactivated when adding or removing canisters, or the working gas may leak into the surrounding atmosphere.\n \nGases with a low molecular mass make the most efficient working gases. Increasing the moles of working gas can result in a greater potential power output. However, overpressuring the unit may have ... sub-optimal results.",
        "name": "Stirling Engine"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.15,
        "radiation_factor": 0.15
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PowerGeneration": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "EnvironmentEfficiency": "Read",
          "WorkingGasEfficiency": "Read",
          "RatioLiquidNitrogen": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Gas Canister",
          "typ": "GasCanister"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureStorageLocker": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureStorageLocker",
        "prefab_hash": -793623899,
        "desc": "",
        "name": "Locker"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "3": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "4": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "5": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "6": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "7": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "8": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "9": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "10": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "11": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "12": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "13": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "14": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "15": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "16": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "17": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "18": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "19": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "20": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "21": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "22": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "23": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "24": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "25": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "26": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "27": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "28": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "29": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Open": "ReadWrite",
          "Lock": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureSuitStorage": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureSuitStorage",
        "prefab_hash": 255034731,
        "desc": "As tidy as it is useful, the suit storage rack holds an <link=ThingItemEvaSuit><color=green>Eva Suit</color></link>, <link=ThingItemSpaceHelmet><color=green>Space Helmet</color></link> and a <link=ThingItemJetpackBasic><color=green>Jetpack Basic</color></link>.\nWhen powered and connected to <link=ThingOxygen><color=green><N:EN:Oxygen></color></link> and <link=ThingPropellant><color=green><N:EN:Propellant></color></link>, it will recharge the suit's batteries, refill the <link=ThingItemGasCanisterOxygen><color=green>Canister (Oxygen)</color></link> and your <link=ThingItemGasFilterNitrogen><color=green>Filter (Nitrogen)</color></link> <link=SlotGasCanister><color=orange>Gas Canister</color></link>. The wastetank will be pumped out to the pipe connected to the waste outlet.\nAll the rack's pipes must be connected or the unit will show an error state, but it will still charge the battery.",
        "name": "Suit Storage"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Open": "ReadWrite",
            "On": "ReadWrite",
            "Lock": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "PressureWaste": "Read",
            "PressureAir": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "2": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Helmet",
          "typ": "Helmet"
        },
        {
          "name": "Suit",
          "typ": "Suit"
        },
        {
          "name": "Back",
          "typ": "Back"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "Pipe",
            "role": "Input2"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureTankBig": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTankBig",
        "prefab_hash": -1606848156,
        "desc": "",
        "name": "Large Tank"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.002
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureTankBigInsulated": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTankBigInsulated",
        "prefab_hash": 1280378227,
        "desc": "",
        "name": "Tank Big (Insulated)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureTankConnector": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureTankConnector",
        "prefab_hash": -1276379454,
        "desc": "Tank connectors are basic mounting devices that allow you to attach a <link=ThingDynamicGasCanisterEmpty><color=green>Portable Gas Tank</color></link> to a gas pipe network.",
        "name": "Tank Connector"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        }
      ]
    },
    "StructureTankConnectorLiquid": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureTankConnectorLiquid",
        "prefab_hash": 1331802518,
        "desc": "These basic mounting devices allow you to attach a <link=ThingDynamicLiquidCanisterEmpty><color=green>Portable Liquid Tank</color></link> to a liquid pipe network.",
        "name": "Liquid Tank Connector"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.010000001,
        "radiation_factor": 0.0005
      },
      "slots": [
        {
          "name": "Portable Slot",
          "typ": "None"
        }
      ]
    },
    "StructureTankSmall": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTankSmall",
        "prefab_hash": 1013514688,
        "desc": "",
        "name": "Small Tank"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.002
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureTankSmallAir": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTankSmallAir",
        "prefab_hash": 955744474,
        "desc": "",
        "name": "Small Tank (Air)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.002
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureTankSmallFuel": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTankSmallFuel",
        "prefab_hash": 2102454415,
        "desc": "",
        "name": "Small Tank (Fuel)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.05,
        "radiation_factor": 0.002
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureTankSmallInsulated": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTankSmallInsulated",
        "prefab_hash": 272136332,
        "desc": "",
        "name": "Tank Small (Insulated)"
      },
      "structure": {
        "small_grid": true
      },
      "thermal_info": {
        "convection_factor": 0.0,
        "radiation_factor": 0.0
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Open": "ReadWrite",
          "Pressure": "Read",
          "Temperature": "Read",
          "Setting": "ReadWrite",
          "RatioOxygen": "Read",
          "RatioCarbonDioxide": "Read",
          "RatioNitrogen": "Read",
          "RatioPollutant": "Read",
          "RatioVolatiles": "Read",
          "RatioWater": "Read",
          "Maximum": "Read",
          "Ratio": "Read",
          "TotalMoles": "Read",
          "Volume": "Read",
          "RatioNitrousOxide": "Read",
          "PrefabHash": "Read",
          "Combustion": "Read",
          "RatioLiquidNitrogen": "Read",
          "VolumeOfLiquid": "Read",
          "RatioLiquidOxygen": "Read",
          "RatioLiquidVolatiles": "Read",
          "RatioSteam": "Read",
          "RatioLiquidCarbonDioxide": "Read",
          "RatioLiquidPollutant": "Read",
          "RatioLiquidNitrousOxide": "Read",
          "ReferenceId": "Read",
          "RatioHydrogen": "Read",
          "RatioLiquidHydrogen": "Read",
          "RatioPollutedWater": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": true,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "StructureToolManufactory": {
      "templateType": "StructureLogicDeviceConsumerMemory",
      "prefab": {
        "prefab_name": "StructureToolManufactory",
        "prefab_hash": -465741100,
        "desc": "No mission can be completed without the proper tools. The <link=Norsec><color=#0080FFFF>Norsec</color></link> ThuulDek manufactory can fabricate almost any tool or hand-held device a <link=Stationeer><color=#0080FFFF>Stationeer</color></link> may need to complete their mission, as well as a variety of delightful paints.\nUpgrade the device using a <link=ThingToolPrinterMod><color=green>Tool Printer Mod</color></link> for additional recipes and faster processing speeds.",
        "name": "Tool Manufactory"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {}
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Reagents": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RecipeHash": "ReadWrite",
          "CompletionRatio": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "Ingot"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": true
      },
      "consumer_info": {
        "consumed_resouces": [
          "ItemAstroloyIngot",
          "ItemConstantanIngot",
          "ItemCopperIngot",
          "ItemElectrumIngot",
          "ItemGoldIngot",
          "ItemHastelloyIngot",
          "ItemInconelIngot",
          "ItemInvarIngot",
          "ItemIronIngot",
          "ItemLeadIngot",
          "ItemNickelIngot",
          "ItemSiliconIngot",
          "ItemSilverIngot",
          "ItemSolderIngot",
          "ItemSolidFuel",
          "ItemSteelIngot",
          "ItemStelliteIngot",
          "ItemWaspaloyIngot",
          "ItemWasteIngot"
        ],
        "processed_reagents": []
      },
      "fabricator_info": {
        "tier": "Undefined",
        "recipes": {
          "FlareGun": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 2000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Iron": 10.0,
              "Silicon": 10.0
            }
          },
          "ItemAngleGrinder": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 1.0,
              "Iron": 3.0
            }
          },
          "ItemArcWelder": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Electrum": 10.0,
              "Invar": 5.0,
              "Solder": 10.0,
              "Steel": 10.0
            }
          },
          "ItemBasketBall": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 1.0
            }
          },
          "ItemBeacon": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Gold": 1.0,
              "Iron": 2.0
            }
          },
          "ItemChemLightBlue": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 1.0
            }
          },
          "ItemChemLightGreen": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 1.0
            }
          },
          "ItemChemLightRed": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 1.0
            }
          },
          "ItemChemLightWhite": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 1.0
            }
          },
          "ItemChemLightYellow": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 1.0
            }
          },
          "ItemClothingBagOveralls_Aus": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_Brazil": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_Canada": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_China": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_EU": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_France": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_Germany": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_Japan": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_Korea": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_NZ": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_Russia": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_SouthAfrica": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_UK": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_US": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemClothingBagOveralls_Ukraine": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "ItemCrowbar": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 5.0
            }
          },
          "ItemDirtCanister": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 400.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 3.0
            }
          },
          "ItemDisposableBatteryCharger": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Gold": 2.0,
              "Iron": 2.0
            }
          },
          "ItemDrill": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Iron": 5.0
            }
          },
          "ItemDuctTape": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 2.0
            }
          },
          "ItemEvaSuit": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Iron": 5.0
            }
          },
          "ItemFlagSmall": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemFlashlight": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0
            }
          },
          "ItemGlasses": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 250.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Iron": 15.0,
              "Silicon": 10.0
            }
          },
          "ItemHardBackpack": {
            "tier": "TierTwo",
            "time": 30.0,
            "energy": 1500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Astroloy": 5.0,
              "Steel": 15.0,
              "Stellite": 5.0
            }
          },
          "ItemHardJetpack": {
            "tier": "TierTwo",
            "time": 40.0,
            "energy": 1750.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Astroloy": 8.0,
              "Steel": 20.0,
              "Stellite": 8.0,
              "Waspaloy": 8.0
            }
          },
          "ItemHardMiningBackPack": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Invar": 1.0,
              "Steel": 6.0
            }
          },
          "ItemHardSuit": {
            "tier": "TierTwo",
            "time": 60.0,
            "energy": 3000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Astroloy": 10.0,
              "Steel": 20.0,
              "Stellite": 2.0
            }
          },
          "ItemHardsuitHelmet": {
            "tier": "TierTwo",
            "time": 50.0,
            "energy": 1750.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Astroloy": 2.0,
              "Steel": 10.0,
              "Stellite": 2.0
            }
          },
          "ItemIgniter": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Copper": 3.0
            }
          },
          "ItemJetpackBasic": {
            "tier": "TierOne",
            "time": 30.0,
            "energy": 1500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Gold": 2.0,
              "Lead": 5.0,
              "Steel": 10.0
            }
          },
          "ItemKitBasket": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Iron": 5.0
            }
          },
          "ItemLabeller": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Gold": 1.0,
              "Iron": 2.0
            }
          },
          "ItemMKIIAngleGrinder": {
            "tier": "TierTwo",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 1.0,
              "Electrum": 4.0,
              "Iron": 3.0
            }
          },
          "ItemMKIIArcWelder": {
            "tier": "TierTwo",
            "time": 30.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Electrum": 14.0,
              "Invar": 5.0,
              "Solder": 10.0,
              "Steel": 10.0
            }
          },
          "ItemMKIICrowbar": {
            "tier": "TierTwo",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 5.0,
              "Iron": 5.0
            }
          },
          "ItemMKIIDrill": {
            "tier": "TierTwo",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 5.0,
              "Electrum": 5.0,
              "Iron": 5.0
            }
          },
          "ItemMKIIDuctTape": {
            "tier": "TierTwo",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 1.0,
              "Iron": 2.0
            }
          },
          "ItemMKIIMiningDrill": {
            "tier": "TierTwo",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 2.0,
              "Electrum": 5.0,
              "Iron": 3.0
            }
          },
          "ItemMKIIScrewdriver": {
            "tier": "TierTwo",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 2.0,
              "Iron": 2.0
            }
          },
          "ItemMKIIWireCutters": {
            "tier": "TierTwo",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 5.0,
              "Iron": 3.0
            }
          },
          "ItemMKIIWrench": {
            "tier": "TierTwo",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Electrum": 3.0,
              "Iron": 3.0
            }
          },
          "ItemMarineBodyArmor": {
            "tier": "TierOne",
            "time": 60.0,
            "energy": 3000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Nickel": 10.0,
              "Silicon": 10.0,
              "Steel": 20.0
            }
          },
          "ItemMarineHelmet": {
            "tier": "TierOne",
            "time": 45.0,
            "energy": 1750.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Gold": 4.0,
              "Silicon": 4.0,
              "Steel": 8.0
            }
          },
          "ItemMiningBackPack": {
            "tier": "TierOne",
            "time": 8.0,
            "energy": 800.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 6.0
            }
          },
          "ItemMiningBelt": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 3.0
            }
          },
          "ItemMiningBeltMKII": {
            "tier": "TierTwo",
            "time": 10.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Constantan": 5.0,
              "Steel": 10.0
            }
          },
          "ItemMiningDrill": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Iron": 3.0
            }
          },
          "ItemMiningDrillHeavy": {
            "tier": "TierTwo",
            "time": 30.0,
            "energy": 2500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Electrum": 5.0,
              "Invar": 10.0,
              "Solder": 10.0,
              "Steel": 10.0
            }
          },
          "ItemMiningDrillPneumatic": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 2000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 4.0,
              "Solder": 4.0,
              "Steel": 6.0
            }
          },
          "ItemMkIIToolbelt": {
            "tier": "TierTwo",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Constantan": 5.0,
              "Iron": 3.0
            }
          },
          "ItemNVG": {
            "tier": "TierOne",
            "time": 45.0,
            "energy": 2750.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Hastelloy": 10.0,
              "Silicon": 5.0,
              "Steel": 5.0
            }
          },
          "ItemPickaxe": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 1.0,
              "Iron": 2.0
            }
          },
          "ItemPlantSampler": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 5.0,
              "Iron": 5.0
            }
          },
          "ItemRemoteDetonator": {
            "tier": "TierOne",
            "time": 4.5,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Gold": 1.0,
              "Iron": 3.0
            }
          },
          "ItemReusableFireExtinguisher": {
            "tier": "TierOne",
            "time": 20.0,
            "energy": 1000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Steel": 5.0
            }
          },
          "ItemRoadFlare": {
            "tier": "TierOne",
            "time": 1.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemScrewdriver": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 2.0
            }
          },
          "ItemSensorLenses": {
            "tier": "TierTwo",
            "time": 45.0,
            "energy": 3500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Inconel": 5.0,
              "Silicon": 5.0,
              "Steel": 5.0
            }
          },
          "ItemSensorProcessingUnitCelestialScanner": {
            "tier": "TierTwo",
            "time": 15.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 5.0,
              "Silicon": 5.0
            }
          },
          "ItemSensorProcessingUnitMesonScanner": {
            "tier": "TierTwo",
            "time": 15.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 5.0,
              "Silicon": 5.0
            }
          },
          "ItemSensorProcessingUnitOreScanner": {
            "tier": "TierTwo",
            "time": 15.0,
            "energy": 100.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Copper": 5.0,
              "Gold": 5.0,
              "Iron": 5.0,
              "Silicon": 5.0
            }
          },
          "ItemSpaceHelmet": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0
            }
          },
          "ItemSpacepack": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Iron": 5.0
            }
          },
          "ItemSprayCanBlack": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemSprayCanBlue": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemSprayCanBrown": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemSprayCanGreen": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemSprayCanGrey": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemSprayCanKhaki": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemSprayCanOrange": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemSprayCanPink": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemSprayCanPurple": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemSprayCanRed": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemSprayCanWhite": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemSprayCanYellow": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 1.0
            }
          },
          "ItemSprayGun": {
            "tier": "TierTwo",
            "time": 10.0,
            "energy": 2000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Invar": 5.0,
              "Silicon": 10.0,
              "Steel": 10.0
            }
          },
          "ItemTerrainManipulator": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 600.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 3,
            "reagents": {
              "Copper": 3.0,
              "Gold": 2.0,
              "Iron": 5.0
            }
          },
          "ItemToolBelt": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 3.0
            }
          },
          "ItemWearLamp": {
            "tier": "TierOne",
            "time": 15.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 2.0,
              "Gold": 2.0
            }
          },
          "ItemWeldingTorch": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Copper": 1.0,
              "Iron": 3.0
            }
          },
          "ItemWireCutters": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 3.0
            }
          },
          "ItemWrench": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Iron": 3.0
            }
          },
          "ToyLuna": {
            "tier": "TierOne",
            "time": 10.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 2,
            "reagents": {
              "Gold": 1.0,
              "Iron": 5.0
            }
          },
          "UniformCommander": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 25.0
            }
          },
          "UniformMarine": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 10.0
            }
          },
          "UniformOrangeJumpSuit": {
            "tier": "TierOne",
            "time": 5.0,
            "energy": 500.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 1,
            "reagents": {
              "Silicon": 10.0
            }
          },
          "WeaponPistolEnergy": {
            "tier": "TierTwo",
            "time": 120.0,
            "energy": 3000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 4,
            "reagents": {
              "Electrum": 20.0,
              "Gold": 10.0,
              "Solder": 10.0,
              "Steel": 10.0
            }
          },
          "WeaponRifleEnergy": {
            "tier": "TierTwo",
            "time": 240.0,
            "energy": 10000.0,
            "temperature": {
              "start": 1.0,
              "stop": 80000.0,
              "is_valid": false
            },
            "pressure": {
              "start": 0.0,
              "stop": 1000000.0,
              "is_valid": false
            },
            "required_mix": {
              "rule": 0,
              "is_any": true,
              "is_any_to_remove": false,
              "reagents": {}
            },
            "count_types": 6,
            "reagents": {
              "Constantan": 10.0,
              "Electrum": 20.0,
              "Gold": 10.0,
              "Invar": 10.0,
              "Solder": 10.0,
              "Steel": 20.0
            }
          }
        }
      },
      "memory": {
        "instructions": {
          "DeviceSetLock": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>LOCK_STATE</color>                   | <color=orange>BOOL_8</color>     |\r\n| <color=grey>16-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>48</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | LOCK_STATE                   | BOOL_8     |\r\n| 16-63    | UNUSED                       | 48         |",
            "typ": "PrinterInstruction",
            "value": 6,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "LOCK_STATE",
                "typ": "Bool8"
              },
              {
                "range": [
                  16,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 48
                }
              }
            ]
          },
          "EjectAllReagents": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 8,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          },
          "EjectReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-39 </color>    | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>40-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>24</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-39     | REAGENT_HASH                 | INT_32     |\r\n| 40-63    | UNUSED                       | 24         |",
            "typ": "PrinterInstruction",
            "value": 7,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  39
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  40,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 24
                }
              }
            ]
          },
          "ExecuteRecipe": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY</color>                     | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>PREFAB_HASH</color>                  | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY                     | BYTE_8     |\r\n| 16-47    | PREFAB_HASH                  | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 2,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "PREFAB_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "JumpIfNextInvalid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 4,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "JumpToAddress": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>STACK_ADDRESS</color>                | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | STACK_ADDRESS                | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 5,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "STACK_ADDRESS",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "MissingRecipeReagent": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 54 TO 62</color>                     |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-15 </color>    | <color=yellow>QUANTITY_CEIL</color>                | <color=orange>BYTE_8</color>     |\r\n| <color=red>16-47 </color>   | <color=yellow>REAGENT_HASH</color>                 | <color=orange>INT_32</color>     |\r\n| <color=grey>48-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>16</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 54 TO 62                     |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-15     | QUANTITY_CEIL                | BYTE_8     |\r\n| 16-47    | REAGENT_HASH                 | INT_32     |\r\n| 48-63    | UNUSED                       | 16         |",
            "typ": "PrinterInstruction",
            "value": 9,
            "valid": [
              54,
              62
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  15
                ],
                "name": "QUANTITY_CEIL",
                "typ": "Byte8"
              },
              {
                "range": [
                  16,
                  47
                ],
                "name": "REAGENT_HASH",
                "typ": "Int32"
              },
              {
                "range": [
                  48,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 16
                }
              }
            ]
          },
          "StackPointer": {
            "description": "| <color=grey>VALID ONLY AT ADDRESS 63</color>                             |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=red>8-23 </color>    | <color=yellow>INDEX</color>                        | <color=orange>USHORT_16</color>  |\r\n| <color=grey>24-63 </color>   | <color=grey>UNUSED</color>                       | <color=grey>40</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESS 63                             |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-23     | INDEX                        | USHORT_16  |\r\n| 24-63    | UNUSED                       | 40         |",
            "typ": "PrinterInstruction",
            "value": 1,
            "valid": [
              63,
              null
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  23
                ],
                "name": "INDEX",
                "typ": "UShort16"
              },
              {
                "range": [
                  24,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 40
                }
              }
            ]
          },
          "WaitUntilNextValid": {
            "description": "| <color=grey>VALID ONLY AT ADDRESSES 0 TO 53</color>                      |\r\n<color=white>| <color=red>0-7 </color>     | <color=yellow>OP_CODE</color>                      | <color=orange>BYTE_8</color>     |\r\n| <color=grey>8-63 </color>    | <color=grey>UNUSED</color>                       | <color=grey>56</color>         |</color>",
            "description_stripped": "| VALID ONLY AT ADDRESSES 0 TO 53                      |\r\n| 0-7      | OP_CODE                      | BYTE_8     |\r\n| 8-63     | UNUSED                       | 56         |",
            "typ": "PrinterInstruction",
            "value": 3,
            "valid": [
              0,
              53
            ],
            "parts": [
              {
                "range": [
                  0,
                  7
                ],
                "name": "OP_CODE",
                "typ": "Byte8"
              },
              {
                "range": [
                  8,
                  63
                ],
                "name": "UNUSED",
                "typ": {
                  "Unused": 56
                }
              }
            ]
          }
        },
        "memory_access": "ReadWrite",
        "memory_size": 64
      }
    },
    "StructureTorpedoRack": {
      "templateType": "StructureSlots",
      "prefab": {
        "prefab_name": "StructureTorpedoRack",
        "prefab_hash": 1473807953,
        "desc": "",
        "name": "Torpedo Rack"
      },
      "structure": {
        "small_grid": true
      },
      "slots": [
        {
          "name": "Torpedo",
          "typ": "Torpedo"
        },
        {
          "name": "Torpedo",
          "typ": "Torpedo"
        },
        {
          "name": "Torpedo",
          "typ": "Torpedo"
        },
        {
          "name": "Torpedo",
          "typ": "Torpedo"
        },
        {
          "name": "Torpedo",
          "typ": "Torpedo"
        },
        {
          "name": "Torpedo",
          "typ": "Torpedo"
        },
        {
          "name": "Torpedo",
          "typ": "Torpedo"
        },
        {
          "name": "Torpedo",
          "typ": "Torpedo"
        }
      ]
    },
    "StructureTraderWaypoint": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTraderWaypoint",
        "prefab_hash": 1570931620,
        "desc": "",
        "name": "Trader Waypoint"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureTransformer": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTransformer",
        "prefab_hash": -1423212473,
        "desc": "The large <link=Norsec><color=#0080FFFF>Norsec</color></link> transformer is a critical component of extended <link=ElectronicPage><color=#0080FFFF>electrical</color></link> networks, controlling the maximum power that will flow down a cable. To prevent overloading, output can be set from 0 to 50,000W. \nNote that transformers operate as data isolators, preventing data flowing into any network beyond it.",
        "name": "Transformer (Large)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureTransformerMedium": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTransformerMedium",
        "prefab_hash": -1065725831,
        "desc": "Transformers control the maximum power that will flow down a sub-network of cables, to prevent overloading <link=ElectronicPage><color=#0080FFFF>electrical</color></link> systems. \nMedium transformers are used in larger setups where more than 5000W is required, with output that can be set to a maximum of 25000W.\nNote that transformers also operate as data isolators, preventing data flowing into any network beyond it.",
        "name": "Transformer (Medium)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureTransformerMediumReversed": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTransformerMediumReversed",
        "prefab_hash": 833912764,
        "desc": "Transformers control the maximum power that will flow down a sub-network of cables, to prevent overloading <link=ElectronicPage><color=#0080FFFF>electrical</color></link> systems. \nMedium transformers are used in larger setups where more than 5000W is required, with output that can be set to a maximum of 25000W.\nNote that transformers also operate as data isolators, preventing data flowing into any network beyond it.",
        "name": "Transformer Reversed (Medium)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureTransformerSmall": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTransformerSmall",
        "prefab_hash": -890946730,
        "desc": "Transformers control the maximum power that will flow down a cable subnetwork, to prevent overloading <link=ElectronicPage><color=#0080FFFF>electrical</color></link> systems. Output on small transformers can be set from 0 to 5000W.\nNote that transformers operate as data isolators, preventing data flowing into any network beyond it.",
        "name": "Transformer (Small)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "Input"
          },
          {
            "typ": "Power",
            "role": "Output"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureTransformerSmallReversed": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTransformerSmallReversed",
        "prefab_hash": 1054059374,
        "desc": "Transformers control the maximum power that will flow down a cable subnetwork, to prevent overloading <link=ElectronicPage><color=#0080FFFF>electrical</color></link> systems. Output on small transformers can be set from 0 to 5000W.\nNote that transformers operate as data isolators, preventing data flowing into any network beyond it.",
        "name": "Transformer Reversed (Small)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "Output"
          },
          {
            "typ": "PowerAndData",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureTurbineGenerator": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTurbineGenerator",
        "prefab_hash": 1282191063,
        "desc": "",
        "name": "Turbine Generator"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PowerGeneration": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureTurboVolumePump": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureTurboVolumePump",
        "prefab_hash": 1310794736,
        "desc": "Shifts 10 times more gas than a basic <link=ThingStructureVolumePump><color=green>Volume Pump</color></link>, with a mode that can be set to flow in either direction.",
        "name": "Turbo Volume Pump (Gas)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Right",
          "1": "Left"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureUnloader": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureUnloader",
        "prefab_hash": 750118160,
        "desc": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> Re:Gurge is a handy unit for unloading any items inserted into it, and feeding them into a chute network. For instance, if you add a full <link=ThingItemMiningBelt><color=green>Mining Belt</color></link>, the Re:Gurge will empty a mining belt of its contents, insert them into the chute network, then insert the mining belt itself. A <link=ThingStructureSorter><color=green>Sorter</color></link> is recommended to reclaim the mining belt.\n\nOutput = 0 exporting the main item\nOutput = 1 exporting items inside and eventually the main item.",
        "name": "Unloader"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "Output": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Automatic",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Chute",
            "role": "Input"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureUprightWindTurbine": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureUprightWindTurbine",
        "prefab_hash": 1622183451,
        "desc": "Norsec's basic wind turbine is an easily fabricated, rapidly deployed design that is strong enough to withstand the worst that environments can throw at it. \nWhile the wind turbine is optimized to produce power even on low atmosphere worlds (up to 200W), it performs best in denser environments. Output varies with wind speed, and during storms, may increase dramatically (up to 800W), so be careful to design your power networks with that in mind.",
        "name": "Upright Wind Turbine"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PowerGeneration": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureValve": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureValve",
        "prefab_hash": -692036078,
        "desc": "",
        "name": "Valve"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "None"
          },
          {
            "typ": "Pipe",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureVendingMachine": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureVendingMachine",
        "prefab_hash": -443130773,
        "desc": "The <link=Xigo><color=#0080FFFF>Xigo-designed</color></link> 'Slot Mate' vending machine allows storage of almost any item, while also operating as a distribution point for working with <link=TradingPage><color=#0080FFFF>Traders</color></link>. You cannot trade without a vending machine, or its more advanced equivalent, the <link=ThingStructureRefrigeratedVendingMachine><color=green>Refrigerated Vending Machine</color></link>. Each vending machine can hold up to 100 stacks.",
        "name": "Vending Machine"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {},
          "1": {},
          "2": {},
          "3": {},
          "4": {},
          "5": {},
          "6": {},
          "7": {},
          "8": {},
          "9": {},
          "10": {},
          "11": {},
          "12": {},
          "13": {},
          "14": {},
          "15": {},
          "16": {},
          "17": {},
          "18": {},
          "19": {},
          "20": {},
          "21": {},
          "22": {},
          "23": {},
          "24": {},
          "25": {},
          "26": {},
          "27": {},
          "28": {},
          "29": {},
          "30": {},
          "31": {},
          "32": {},
          "33": {},
          "34": {},
          "35": {},
          "36": {},
          "37": {},
          "38": {},
          "39": {},
          "40": {},
          "41": {},
          "42": {},
          "43": {},
          "44": {},
          "45": {},
          "46": {},
          "47": {},
          "48": {},
          "49": {},
          "50": {},
          "51": {},
          "52": {},
          "53": {},
          "54": {},
          "55": {},
          "56": {},
          "57": {},
          "58": {},
          "59": {},
          "60": {},
          "61": {},
          "62": {},
          "63": {},
          "64": {},
          "65": {},
          "66": {},
          "67": {},
          "68": {},
          "69": {},
          "70": {},
          "71": {},
          "72": {},
          "73": {},
          "74": {},
          "75": {},
          "76": {},
          "77": {},
          "78": {},
          "79": {},
          "80": {},
          "81": {},
          "82": {},
          "83": {},
          "84": {},
          "85": {},
          "86": {},
          "87": {},
          "88": {},
          "89": {},
          "90": {},
          "91": {},
          "92": {},
          "93": {},
          "94": {},
          "95": {},
          "96": {},
          "97": {},
          "98": {},
          "99": {},
          "100": {},
          "101": {}
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "Ratio": "Read",
          "Quantity": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "RequestHash": "ReadWrite",
          "ClearMemory": "Write",
          "ExportCount": "Read",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "None"
        },
        {
          "name": "Export",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        },
        {
          "name": "Storage",
          "typ": "None"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Chute",
            "role": "Input"
          },
          {
            "typ": "Chute",
            "role": "Output"
          },
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureVolumePump": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureVolumePump",
        "prefab_hash": -321403609,
        "desc": "The volume pump pumps pumpable gases. It also separates out pipe networks into separate networks.",
        "name": "Volume Pump"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "Output"
          },
          {
            "typ": "Pipe",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWallArch": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallArch",
        "prefab_hash": -858143148,
        "desc": "",
        "name": "Wall (Arch)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallArchArrow": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallArchArrow",
        "prefab_hash": 1649708822,
        "desc": "",
        "name": "Wall (Arch Arrow)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallArchCornerRound": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallArchCornerRound",
        "prefab_hash": 1794588890,
        "desc": "",
        "name": "Wall (Arch Corner Round)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWallArchCornerSquare": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallArchCornerSquare",
        "prefab_hash": -1963016580,
        "desc": "",
        "name": "Wall (Arch Corner Square)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWallArchCornerTriangle": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallArchCornerTriangle",
        "prefab_hash": 1281911841,
        "desc": "",
        "name": "Wall (Arch Corner Triangle)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWallArchPlating": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallArchPlating",
        "prefab_hash": 1182510648,
        "desc": "",
        "name": "Wall (Arch Plating)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallArchTwoTone": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallArchTwoTone",
        "prefab_hash": 782529714,
        "desc": "",
        "name": "Wall (Arch Two Tone)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallCooler": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWallCooler",
        "prefab_hash": -739292323,
        "desc": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> Freezy Boi wall cooler complements the wall heater, which can only raise the temperature. The wall cooler functions by drawing heat from the surrounding atmosphere and adding that heat into its pipe network.\nIn order to run the wall cooler properly, you will need to connect pipes to the wall cooler and fill the connected pipe network with any type of gas. The gas's heat capacity and volume will determine how fast it reacts to temperature changes.\n\n<size=120%><b>EFFICIENCY</b></size>\nThe higher the difference in temperature between the gas stored in the pipes and the room, the less efficient the wall cooler will be. So to keep the wall cooler running at an acceptable efficiency you will need to get rid of the heat that accumulates in the pipes connected to it. A common practice would be to run the pipes to the outside and use radiators on the outside section of the pipes to get rid of the heat.\nThe less efficient the wall cooler, the less power it consumes. It will consume 1010W at max efficiency. The wall cooler can be controlled by logic chips to run when the temperature hits a certain degree.\n<size=120%><b>ERRORS</b></size>\nIf the wall cooler is flashing an error then it is missing one of the following:\n\n- Pipe connection to the wall cooler.\n- Gas in the connected pipes, or pressure is too low.\n- Atmosphere in the surrounding environment or pressure is too low.\n\nFor more information about how to control temperatures, consult the <link=TemperatureControlPage><color=#0080FFFF>temperature control</color></link> Guides page.",
        "name": "Wall Cooler"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "DataDisk"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Pipe",
            "role": "None"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWallFlat": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallFlat",
        "prefab_hash": 1635864154,
        "desc": "",
        "name": "Wall (Flat)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallFlatCornerRound": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallFlatCornerRound",
        "prefab_hash": 898708250,
        "desc": "",
        "name": "Wall (Flat Corner Round)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWallFlatCornerSquare": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallFlatCornerSquare",
        "prefab_hash": 298130111,
        "desc": "",
        "name": "Wall (Flat Corner Square)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWallFlatCornerTriangle": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallFlatCornerTriangle",
        "prefab_hash": 2097419366,
        "desc": "",
        "name": "Wall (Flat Corner Triangle)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWallFlatCornerTriangleFlat": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallFlatCornerTriangleFlat",
        "prefab_hash": -1161662836,
        "desc": "",
        "name": "Wall (Flat Corner Triangle Flat)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWallGeometryCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallGeometryCorner",
        "prefab_hash": 1979212240,
        "desc": "",
        "name": "Wall (Geometry Corner)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallGeometryStreight": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallGeometryStreight",
        "prefab_hash": 1049735537,
        "desc": "",
        "name": "Wall (Geometry Straight)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallGeometryT": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallGeometryT",
        "prefab_hash": 1602758612,
        "desc": "",
        "name": "Wall (Geometry T)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallGeometryTMirrored": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallGeometryTMirrored",
        "prefab_hash": -1427845483,
        "desc": "",
        "name": "Wall (Geometry T Mirrored)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallHeater": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWallHeater",
        "prefab_hash": 24258244,
        "desc": "The <link=Xigo><color=#0080FFFF>Xigo</color></link> wall heater is a simple device that can be installed on a wall or frame and connected to power. When switched on, it will start heating the surrounding environment. It consumes 1010W of power and can be controlled by logic chips to run when the temperature hits a certain level.",
        "name": "Wall Heater"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "DataDisk"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWallIron": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallIron",
        "prefab_hash": 1287324802,
        "desc": "",
        "name": "Iron Wall (Type 1)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallIron02": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallIron02",
        "prefab_hash": 1485834215,
        "desc": "",
        "name": "Iron Wall (Type 2)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallIron03": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallIron03",
        "prefab_hash": 798439281,
        "desc": "",
        "name": "Iron Wall (Type 3)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallIron04": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallIron04",
        "prefab_hash": -1309433134,
        "desc": "",
        "name": "Iron Wall (Type 4)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallLargePanel": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallLargePanel",
        "prefab_hash": 1492930217,
        "desc": "",
        "name": "Wall (Large Panel)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallLargePanelArrow": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallLargePanelArrow",
        "prefab_hash": -776581573,
        "desc": "",
        "name": "Wall (Large Panel Arrow)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallLight": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWallLight",
        "prefab_hash": -1860064656,
        "desc": "",
        "name": "Wall Light"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWallLightBattery": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWallLightBattery",
        "prefab_hash": -1306415132,
        "desc": "",
        "name": "Wall Light (Battery)"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWallPaddedArch": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddedArch",
        "prefab_hash": 1590330637,
        "desc": "",
        "name": "Wall (Padded Arch)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallPaddedArchCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddedArchCorner",
        "prefab_hash": -1126688298,
        "desc": "",
        "name": "Wall (Padded Arch Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWallPaddedArchLightFittingTop": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddedArchLightFittingTop",
        "prefab_hash": 1171987947,
        "desc": "",
        "name": "Wall (Padded Arch Light Fitting Top)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallPaddedArchLightsFittings": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddedArchLightsFittings",
        "prefab_hash": -1546743960,
        "desc": "",
        "name": "Wall (Padded Arch Lights Fittings)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallPaddedCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddedCorner",
        "prefab_hash": -155945899,
        "desc": "",
        "name": "Wall (Padded Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWallPaddedCornerThin": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddedCornerThin",
        "prefab_hash": 1183203913,
        "desc": "",
        "name": "Wall (Padded Corner Thin)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWallPaddedNoBorder": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddedNoBorder",
        "prefab_hash": 8846501,
        "desc": "",
        "name": "Wall (Padded No Border)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallPaddedNoBorderCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddedNoBorderCorner",
        "prefab_hash": 179694804,
        "desc": "",
        "name": "Wall (Padded No Border Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWallPaddedThinNoBorder": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddedThinNoBorder",
        "prefab_hash": -1611559100,
        "desc": "",
        "name": "Wall (Padded Thin No Border)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallPaddedThinNoBorderCorner": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddedThinNoBorderCorner",
        "prefab_hash": 1769527556,
        "desc": "",
        "name": "Wall (Padded Thin No Border Corner)"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWallPaddedWindow": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddedWindow",
        "prefab_hash": 2087628940,
        "desc": "",
        "name": "Wall (Padded Window)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallPaddedWindowThin": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddedWindowThin",
        "prefab_hash": -37302931,
        "desc": "",
        "name": "Wall (Padded Window Thin)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallPadding": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPadding",
        "prefab_hash": 635995024,
        "desc": "",
        "name": "Wall (Padding)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallPaddingArchVent": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddingArchVent",
        "prefab_hash": -1243329828,
        "desc": "",
        "name": "Wall (Padding Arch Vent)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallPaddingLightFitting": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddingLightFitting",
        "prefab_hash": 2024882687,
        "desc": "",
        "name": "Wall (Padding Light Fitting)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallPaddingThin": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPaddingThin",
        "prefab_hash": -1102403554,
        "desc": "",
        "name": "Wall (Padding Thin)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallPlating": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallPlating",
        "prefab_hash": 26167457,
        "desc": "",
        "name": "Wall (Plating)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallSmallPanelsAndHatch": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallSmallPanelsAndHatch",
        "prefab_hash": 619828719,
        "desc": "",
        "name": "Wall (Small Panels And Hatch)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallSmallPanelsArrow": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallSmallPanelsArrow",
        "prefab_hash": -639306697,
        "desc": "",
        "name": "Wall (Small Panels Arrow)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallSmallPanelsMonoChrome": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallSmallPanelsMonoChrome",
        "prefab_hash": 386820253,
        "desc": "",
        "name": "Wall (Small Panels Mono Chrome)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallSmallPanelsOpen": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallSmallPanelsOpen",
        "prefab_hash": -1407480603,
        "desc": "",
        "name": "Wall (Small Panels Open)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallSmallPanelsTwoTone": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallSmallPanelsTwoTone",
        "prefab_hash": 1709994581,
        "desc": "",
        "name": "Wall (Small Panels Two Tone)"
      },
      "structure": {
        "small_grid": false
      }
    },
    "StructureWallVent": {
      "templateType": "Structure",
      "prefab": {
        "prefab_name": "StructureWallVent",
        "prefab_hash": -1177469307,
        "desc": "Used to mix atmospheres passively between two walls.",
        "name": "Wall Vent"
      },
      "structure": {
        "small_grid": true
      }
    },
    "StructureWaterBottleFiller": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWaterBottleFiller",
        "prefab_hash": -1178961954,
        "desc": "",
        "name": "Water Bottle Filler"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Error": "Read",
          "Activate": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Bottle Slot",
          "typ": "LiquidBottle"
        },
        {
          "name": "Bottle Slot",
          "typ": "LiquidBottle"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWaterBottleFillerBottom": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWaterBottleFillerBottom",
        "prefab_hash": 1433754995,
        "desc": "",
        "name": "Water Bottle Filler Bottom"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Error": "Read",
          "Activate": "ReadWrite",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Bottle Slot",
          "typ": "LiquidBottle"
        },
        {
          "name": "Bottle Slot",
          "typ": "LiquidBottle"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWaterBottleFillerPowered": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWaterBottleFillerPowered",
        "prefab_hash": -756587791,
        "desc": "",
        "name": "Waterbottle Filler"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Bottle Slot",
          "typ": "LiquidBottle"
        },
        {
          "name": "Bottle Slot",
          "typ": "LiquidBottle"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWaterBottleFillerPoweredBottom": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWaterBottleFillerPoweredBottom",
        "prefab_hash": 1986658780,
        "desc": "",
        "name": "Waterbottle Filler"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          },
          "1": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Pressure": "Read",
            "Temperature": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "Volume": "Read",
            "Open": "ReadWrite",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Bottle Slot",
          "typ": "LiquidBottle"
        },
        {
          "name": "Bottle Slot",
          "typ": "LiquidBottle"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "None"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWaterDigitalValve": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWaterDigitalValve",
        "prefab_hash": -517628750,
        "desc": "",
        "name": "Liquid Digital Valve"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "Output"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWaterPipeMeter": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWaterPipeMeter",
        "prefab_hash": 433184168,
        "desc": "",
        "name": "Liquid Pipe Meter"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWaterPurifier": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWaterPurifier",
        "prefab_hash": 887383294,
        "desc": "Cleans <link=GasPollutedWater><color=#44AD83>Polluted Water</color></link> and outputs <link=GasWater><color=#44AD83>Water</color></link>. The purification process requires <link=ThingItemCharcoal><color=green>Charcoal</color></link> which can be added to the machine via the import bin. The procesing throughput can be improved by increasing the gas pressure of the input pipe relative to the gas pressure of the output pipe.",
        "name": "Water Purifier"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {}
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "ClearMemory": "Write",
          "ImportCount": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Import",
          "typ": "Ore"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "PipeLiquid",
            "role": "Input"
          },
          {
            "typ": "PipeLiquid",
            "role": "Output"
          },
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "Chute",
            "role": "Input"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWaterWallCooler": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWaterWallCooler",
        "prefab_hash": -1369060582,
        "desc": "",
        "name": "Liquid Wall Cooler"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "PrefabHash": "Read",
            "SortingClass": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Error": "Read",
          "Lock": "ReadWrite",
          "Setting": "ReadWrite",
          "Maximum": "Read",
          "Ratio": "Read",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "",
          "typ": "DataDisk"
        }
      ],
      "device": {
        "connection_list": [
          {
            "typ": "PipeLiquid",
            "role": "None"
          },
          {
            "typ": "PowerAndData",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": false,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWeatherStation": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWeatherStation",
        "prefab_hash": 1997212478,
        "desc": "0.NoStorm\n1.StormIncoming\n2.InStorm",
        "name": "Weather Station"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Mode": "Read",
          "Error": "Read",
          "Activate": "ReadWrite",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "PrefabHash": "Read",
          "NextWeatherEventTime": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "NoStorm",
          "1": "StormIncoming",
          "2": "InStorm"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": true,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": true,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWindTurbine": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWindTurbine",
        "prefab_hash": -2082355173,
        "desc": "The Stationeers wind turbine was first designed by Norsec atmospheric engineers, looking to create a wind-driven power generation system that would operate even on exceedingly low atmosphere worlds. The ultra-light blades respond to exceedingly low atmospheric densities, while being strong enough to function even under huge strain in much more demanding environments.\nWhile the wind turbine is optimized to produce power (up to 500W) even on low atmosphere worlds, it performs best in denser environments. Output varies with wind speed and, during storms, may increase dramatically (up to 10,000W), so be careful to design your power networks with that in mind.",
        "name": "Wind Turbine"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "PowerGeneration": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Power",
            "role": "None"
          },
          {
            "typ": "Data",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": false,
        "has_on_off_state": false,
        "has_open_state": false,
        "has_reagents": false
      }
    },
    "StructureWindowShutter": {
      "templateType": "StructureLogicDevice",
      "prefab": {
        "prefab_name": "StructureWindowShutter",
        "prefab_hash": 2056377335,
        "desc": "For those special, private moments, a window that can be closed to prying eyes. \n      \nWhen closed, has the heat transfer characteristics of a basic wall. Requires power, and can be connected to logic systems.",
        "name": "Window Shutter"
      },
      "structure": {
        "small_grid": true
      },
      "logic": {
        "logic_slot_types": {},
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Setting": "ReadWrite",
          "On": "ReadWrite",
          "RequiredPower": "Read",
          "Idle": "Read",
          "PrefabHash": "Read",
          "ReferenceId": "Read",
          "NameHash": "Read"
        },
        "modes": {
          "0": "Operate",
          "1": "Logic"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [],
      "device": {
        "connection_list": [
          {
            "typ": "Data",
            "role": "None"
          },
          {
            "typ": "Power",
            "role": "None"
          }
        ],
        "has_activate_state": false,
        "has_atmosphere": false,
        "has_color_state": false,
        "has_lock_state": false,
        "has_mode_state": true,
        "has_on_off_state": true,
        "has_open_state": true,
        "has_reagents": false
      }
    },
    "ToolPrinterMod": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ToolPrinterMod",
        "prefab_hash": 1700018136,
        "desc": "Apply to an <link=ThingStructureToolManufactory><color=green>Tool Manufactory</color></link> with a <link=ThingItemWeldingTorch><color=green>Welding Torch</color></link> or <link=ThingItemArcWelder><color=green>Arc Welder</color></link> to upgrade for increased processing speed and more recipe options.",
        "name": "Tool Printer Mod"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "ToyLuna": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "ToyLuna",
        "prefab_hash": 94730034,
        "desc": "",
        "name": "Toy Luna"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Default"
      }
    },
    "UniformCommander": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "UniformCommander",
        "prefab_hash": -2083426457,
        "desc": "",
        "name": "Uniform Commander"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Uniform",
        "sorting_class": "Clothing"
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "Access Card",
          "typ": "AccessCard"
        },
        {
          "name": "Access Card",
          "typ": "AccessCard"
        },
        {
          "name": "Credit Card",
          "typ": "CreditCard"
        }
      ]
    },
    "UniformMarine": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "UniformMarine",
        "prefab_hash": -48342840,
        "desc": "",
        "name": "Marine Uniform"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Uniform",
        "sorting_class": "Clothing"
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "Access Card",
          "typ": "AccessCard"
        },
        {
          "name": "Credit Card",
          "typ": "CreditCard"
        }
      ]
    },
    "UniformOrangeJumpSuit": {
      "templateType": "ItemSlots",
      "prefab": {
        "prefab_name": "UniformOrangeJumpSuit",
        "prefab_hash": 810053150,
        "desc": "",
        "name": "Jump Suit (Orange)"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Uniform",
        "sorting_class": "Clothing"
      },
      "slots": [
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "",
          "typ": "None"
        },
        {
          "name": "Access Card",
          "typ": "AccessCard"
        },
        {
          "name": "Credit Card",
          "typ": "CreditCard"
        }
      ]
    },
    "WeaponEnergy": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "WeaponEnergy",
        "prefab_hash": 789494694,
        "desc": "",
        "name": "Weapon Energy"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "WeaponPistolEnergy": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "WeaponPistolEnergy",
        "prefab_hash": -385323479,
        "desc": "0.Stun\n1.Kill",
        "name": "Energy Pistol"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Stun",
          "1": "Kill"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "WeaponRifleEnergy": {
      "templateType": "ItemLogic",
      "prefab": {
        "prefab_name": "WeaponRifleEnergy",
        "prefab_hash": 1154745374,
        "desc": "0.Stun\n1.Kill",
        "name": "Energy Rifle"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "None",
        "sorting_class": "Tools"
      },
      "logic": {
        "logic_slot_types": {
          "0": {
            "Occupied": "Read",
            "OccupantHash": "Read",
            "Quantity": "Read",
            "Damage": "Read",
            "Charge": "Read",
            "ChargeRatio": "Read",
            "Class": "Read",
            "MaxQuantity": "Read",
            "ReferenceId": "Read"
          }
        },
        "logic_types": {
          "Power": "Read",
          "Open": "ReadWrite",
          "Mode": "ReadWrite",
          "Error": "Read",
          "Lock": "ReadWrite",
          "On": "ReadWrite",
          "ReferenceId": "Read"
        },
        "modes": {
          "0": "Stun",
          "1": "Kill"
        },
        "transmission_receiver": false,
        "wireless_logic": false,
        "circuit_holder": false
      },
      "slots": [
        {
          "name": "Battery",
          "typ": "Battery"
        }
      ]
    },
    "WeaponTorpedo": {
      "templateType": "Item",
      "prefab": {
        "prefab_name": "WeaponTorpedo",
        "prefab_hash": -1102977898,
        "desc": "",
        "name": "Torpedo"
      },
      "item": {
        "consumable": false,
        "ingredient": false,
        "max_quantity": 1,
        "slot_class": "Torpedo",
        "sorting_class": "Default"
      }
    }
  },
  "reagents": {
    "Alcohol": {
      "Hash": 1565803737,
      "Unit": "ml"
    },
    "Astroloy": {
      "Hash": -1493155787,
      "Unit": "g",
      "Sources": {
        "ItemAstroloyIngot": 1.0
      }
    },
    "Biomass": {
      "Hash": 925270362,
      "Unit": "",
      "Sources": {
        "ItemBiomass": 1.0
      }
    },
    "Carbon": {
      "Hash": 1582746610,
      "Unit": "g",
      "Sources": {
        "HumanSkull": 1.0,
        "ItemCharcoal": 1.0
      }
    },
    "Cobalt": {
      "Hash": 1702246124,
      "Unit": "g",
      "Sources": {
        "ItemCobaltOre": 1.0
      }
    },
    "Cocoa": {
      "Hash": 678781198,
      "Unit": "g",
      "Sources": {
        "ItemCocoaPowder": 1.0,
        "ItemCocoaTree": 1.0
      }
    },
    "ColorBlue": {
      "Hash": 557517660,
      "Unit": "g",
      "Sources": {
        "ReagentColorBlue": 10.0
      }
    },
    "ColorGreen": {
      "Hash": 2129955242,
      "Unit": "g",
      "Sources": {
        "ReagentColorGreen": 10.0
      }
    },
    "ColorOrange": {
      "Hash": 1728153015,
      "Unit": "g",
      "Sources": {
        "ReagentColorOrange": 10.0
      }
    },
    "ColorRed": {
      "Hash": 667001276,
      "Unit": "g",
      "Sources": {
        "ReagentColorRed": 10.0
      }
    },
    "ColorYellow": {
      "Hash": -1430202288,
      "Unit": "g",
      "Sources": {
        "ReagentColorYellow": 10.0
      }
    },
    "Constantan": {
      "Hash": 1731241392,
      "Unit": "g",
      "Sources": {
        "ItemConstantanIngot": 1.0
      }
    },
    "Copper": {
      "Hash": -1172078909,
      "Unit": "g",
      "Sources": {
        "ItemCopperIngot": 1.0,
        "ItemCopperOre": 1.0
      }
    },
    "Corn": {
      "Hash": 1550709753,
      "Unit": "",
      "Sources": {
        "ItemCookedCorn": 1.0,
        "ItemCorn": 1.0
      }
    },
    "Egg": {
      "Hash": 1887084450,
      "Unit": "",
      "Sources": {
        "ItemCookedPowderedEggs": 1.0,
        "ItemEgg": 1.0,
        "ItemFertilizedEgg": 1.0
      }
    },
    "Electrum": {
      "Hash": 478264742,
      "Unit": "g",
      "Sources": {
        "ItemElectrumIngot": 1.0
      }
    },
    "Fenoxitone": {
      "Hash": -865687737,
      "Unit": "g",
      "Sources": {
        "ItemFern": 1.0
      }
    },
    "Flour": {
      "Hash": -811006991,
      "Unit": "g",
      "Sources": {
        "ItemFlour": 50.0
      }
    },
    "Gold": {
      "Hash": -409226641,
      "Unit": "g",
      "Sources": {
        "ItemGoldIngot": 1.0,
        "ItemGoldOre": 1.0
      }
    },
    "Hastelloy": {
      "Hash": 2019732679,
      "Unit": "g",
      "Sources": {
        "ItemHastelloyIngot": 1.0
      }
    },
    "Hydrocarbon": {
      "Hash": 2003628602,
      "Unit": "g",
      "Sources": {
        "ItemCoalOre": 1.0,
        "ItemSolidFuel": 1.0
      }
    },
    "Inconel": {
      "Hash": -586072179,
      "Unit": "g",
      "Sources": {
        "ItemInconelIngot": 1.0
      }
    },
    "Invar": {
      "Hash": -626453759,
      "Unit": "g",
      "Sources": {
        "ItemInvarIngot": 1.0
      }
    },
    "Iron": {
      "Hash": -666742878,
      "Unit": "g",
      "Sources": {
        "ItemIronIngot": 1.0,
        "ItemIronOre": 1.0
      }
    },
    "Lead": {
      "Hash": -2002530571,
      "Unit": "g",
      "Sources": {
        "ItemLeadIngot": 1.0,
        "ItemLeadOre": 1.0
      }
    },
    "Milk": {
      "Hash": 471085864,
      "Unit": "ml",
      "Sources": {
        "ItemCookedCondensedMilk": 1.0,
        "ItemMilk": 1.0
      }
    },
    "Mushroom": {
      "Hash": 516242109,
      "Unit": "g",
      "Sources": {
        "ItemCookedMushroom": 1.0,
        "ItemMushroom": 1.0
      }
    },
    "Nickel": {
      "Hash": 556601662,
      "Unit": "g",
      "Sources": {
        "ItemNickelIngot": 1.0,
        "ItemNickelOre": 1.0
      }
    },
    "Oil": {
      "Hash": 1958538866,
      "Unit": "ml",
      "Sources": {
        "ItemSoyOil": 1.0
      }
    },
    "Plastic": {
      "Hash": 791382247,
      "Unit": "g"
    },
    "Potato": {
      "Hash": -1657266385,
      "Unit": "",
      "Sources": {
        "ItemPotato": 1.0,
        "ItemPotatoBaked": 1.0
      }
    },
    "Pumpkin": {
      "Hash": -1250164309,
      "Unit": "",
      "Sources": {
        "ItemCookedPumpkin": 1.0,
        "ItemPumpkin": 1.0
      }
    },
    "Rice": {
      "Hash": 1951286569,
      "Unit": "g",
      "Sources": {
        "ItemCookedRice": 1.0,
        "ItemRice": 1.0
      }
    },
    "SalicylicAcid": {
      "Hash": -2086114347,
      "Unit": "g"
    },
    "Silicon": {
      "Hash": -1195893171,
      "Unit": "g",
      "Sources": {
        "ItemSiliconIngot": 0.1,
        "ItemSiliconOre": 1.0
      }
    },
    "Silver": {
      "Hash": 687283565,
      "Unit": "g",
      "Sources": {
        "ItemSilverIngot": 1.0,
        "ItemSilverOre": 1.0
      }
    },
    "Solder": {
      "Hash": -1206542381,
      "Unit": "g",
      "Sources": {
        "ItemSolderIngot": 1.0
      }
    },
    "Soy": {
      "Hash": 1510471435,
      "Unit": "",
      "Sources": {
        "ItemCookedSoybean": 1.0,
        "ItemSoybean": 1.0
      }
    },
    "Steel": {
      "Hash": 1331613335,
      "Unit": "g",
      "Sources": {
        "ItemEmptyCan": 1.0,
        "ItemSteelIngot": 1.0
      }
    },
    "Stellite": {
      "Hash": -500544800,
      "Unit": "g",
      "Sources": {
        "ItemStelliteIngot": 1.0
      }
    },
    "Sugar": {
      "Hash": 1778746875,
      "Unit": "g",
      "Sources": {
        "ItemSugar": 10.0,
        "ItemSugarCane": 1.0
      }
    },
    "Tomato": {
      "Hash": 733496620,
      "Unit": "",
      "Sources": {
        "ItemCookedTomato": 1.0,
        "ItemTomato": 1.0
      }
    },
    "Uranium": {
      "Hash": -208860272,
      "Unit": "g",
      "Sources": {
        "ItemUraniumOre": 1.0
      }
    },
    "Waspaloy": {
      "Hash": 1787814293,
      "Unit": "g",
      "Sources": {
        "ItemWaspaloyIngot": 1.0
      }
    },
    "Wheat": {
      "Hash": -686695134,
      "Unit": "",
      "Sources": {
        "ItemWheat": 1.0
      }
    }
  },
  "enums": {
    "scriptEnums": {
      "LogicBatchMethod": {
        "enumName": "LogicBatchMethod",
        "values": {
          "Average": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Maximum": {
            "value": 3,
            "deprecated": false,
            "description": ""
          },
          "Minimum": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "Sum": {
            "value": 1,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "LogicReagentMode": {
        "enumName": "LogicReagentMode",
        "values": {
          "Contents": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Recipe": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "Required": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "TotalContents": {
            "value": 3,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "LogicSlotType": {
        "enumName": "LogicSlotType",
        "values": {
          "Charge": {
            "value": 10,
            "deprecated": false,
            "description": "returns current energy charge the slot occupant is holding"
          },
          "ChargeRatio": {
            "value": 11,
            "deprecated": false,
            "description": "returns current energy charge the slot occupant is holding as a ratio between 0 and 1 of its maximum"
          },
          "Class": {
            "value": 12,
            "deprecated": false,
            "description": "returns integer representing the class of object"
          },
          "Damage": {
            "value": 4,
            "deprecated": false,
            "description": "returns the damage state of the item in the slot"
          },
          "Efficiency": {
            "value": 5,
            "deprecated": false,
            "description": "returns the growth efficiency of the plant in the slot"
          },
          "FilterType": {
            "value": 25,
            "deprecated": false,
            "description": "No description available"
          },
          "Growth": {
            "value": 7,
            "deprecated": false,
            "description": "returns the current growth state of the plant in the slot"
          },
          "Health": {
            "value": 6,
            "deprecated": false,
            "description": "returns the health of the plant in the slot"
          },
          "LineNumber": {
            "value": 19,
            "deprecated": false,
            "description": "The line number of current execution for an integrated circuit running on this device. While this number can be written, use with caution"
          },
          "Lock": {
            "value": 23,
            "deprecated": false,
            "description": "No description available"
          },
          "Mature": {
            "value": 16,
            "deprecated": false,
            "description": "returns 1 if the plant in this slot is mature, 0 when it isn't"
          },
          "MaxQuantity": {
            "value": 15,
            "deprecated": false,
            "description": "returns the max stack size of the item in the slot"
          },
          "None": {
            "value": 0,
            "deprecated": false,
            "description": "No description"
          },
          "OccupantHash": {
            "value": 2,
            "deprecated": false,
            "description": "returns the has of the current occupant, the unique identifier of the thing"
          },
          "Occupied": {
            "value": 1,
            "deprecated": false,
            "description": "returns 0 when slot is not occupied, 1 when it is"
          },
          "On": {
            "value": 22,
            "deprecated": false,
            "description": "No description available"
          },
          "Open": {
            "value": 21,
            "deprecated": false,
            "description": "No description available"
          },
          "PrefabHash": {
            "value": 17,
            "deprecated": false,
            "description": "returns the hash of the structure in the slot"
          },
          "Pressure": {
            "value": 8,
            "deprecated": false,
            "description": "returns pressure of the slot occupants internal atmosphere"
          },
          "PressureAir": {
            "value": 14,
            "deprecated": false,
            "description": "returns pressure in the air tank of the jetpack in this slot"
          },
          "PressureWaste": {
            "value": 13,
            "deprecated": false,
            "description": "returns pressure in the waste tank of the jetpack in this slot"
          },
          "Quantity": {
            "value": 3,
            "deprecated": false,
            "description": "returns the current quantity, such as stack size, of the item in the slot"
          },
          "ReferenceId": {
            "value": 26,
            "deprecated": false,
            "description": "Unique Reference Identifier for this object"
          },
          "Seeding": {
            "value": 18,
            "deprecated": false,
            "description": "Whether a plant is seeding (ready to harvest seeds from). Returns 1 if seeding or 0 if not."
          },
          "SortingClass": {
            "value": 24,
            "deprecated": false,
            "description": "No description available"
          },
          "Temperature": {
            "value": 9,
            "deprecated": false,
            "description": "returns temperature of the slot occupants internal atmosphere"
          },
          "Volume": {
            "value": 20,
            "deprecated": false,
            "description": "No description available"
          }
        }
      },
      "LogicType": {
        "enumName": "LogicType",
        "values": {
          "Acceleration": {
            "value": 216,
            "deprecated": false,
            "description": "Change in velocity. Rockets that are deccelerating when landing will show this as negative value."
          },
          "Activate": {
            "value": 9,
            "deprecated": false,
            "description": "1 if device is activated (usually means running), otherwise 0"
          },
          "AirRelease": {
            "value": 75,
            "deprecated": false,
            "description": "The current state of the air release system, for example AirRelease = 1 for a Hardsuit sets Air Release to On"
          },
          "AlignmentError": {
            "value": 243,
            "deprecated": false,
            "description": "The angular discrepancy between the telescope's current orientation and the target. Indicates how 'off target' the telescope is. Returns NaN when no target."
          },
          "Apex": {
            "value": 238,
            "deprecated": false,
            "description": "The lowest altitude that the rocket will reach before it starts travelling upwards again."
          },
          "AutoLand": {
            "value": 226,
            "deprecated": false,
            "description": "Engages the automatic landing algorithm. The rocket will automatically throttle and turn on and off its engines to achieve a smooth landing."
          },
          "AutoShutOff": {
            "value": 218,
            "deprecated": false,
            "description": "Turns off all devices in the rocket upon reaching destination"
          },
          "BestContactFilter": {
            "value": 267,
            "deprecated": false,
            "description": "Filters the satellite's auto selection of targets to a single reference ID."
          },
          "Bpm": {
            "value": 103,
            "deprecated": false,
            "description": "Bpm"
          },
          "BurnTimeRemaining": {
            "value": 225,
            "deprecated": false,
            "description": "Estimated time in seconds until fuel is depleted. Calculated based on current fuel usage."
          },
          "CelestialHash": {
            "value": 242,
            "deprecated": false,
            "description": "The current hash of the targeted celestial object."
          },
          "CelestialParentHash": {
            "value": 250,
            "deprecated": false,
            "description": "The hash for the name of the parent the celestial is orbiting, 0 if there is no parent celestial."
          },
          "Channel0": {
            "value": 165,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel1": {
            "value": 166,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel2": {
            "value": 167,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel3": {
            "value": 168,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel4": {
            "value": 169,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel5": {
            "value": 170,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel6": {
            "value": 171,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel7": {
            "value": 172,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Charge": {
            "value": 11,
            "deprecated": false,
            "description": "The current charge the device has"
          },
          "Chart": {
            "value": 256,
            "deprecated": false,
            "description": "Progress status of Chart scan at the rocket's target Space Map Location. Returns a clamped normalised value. If Chart scan is not available returns -1."
          },
          "ChartedNavPoints": {
            "value": 259,
            "deprecated": false,
            "description": "The number of charted NavPoints at the rocket's target Space Map Location."
          },
          "ClearMemory": {
            "value": 62,
            "deprecated": false,
            "description": "When set to 1, clears the counter memory (e.g. ExportCount). Will set itself back to 0 when actioned"
          },
          "CollectableGoods": {
            "value": 101,
            "deprecated": false,
            "description": "Gets the cost of fuel to return the rocket to your current world."
          },
          "Color": {
            "value": 38,
            "deprecated": false,
            "description": "\n        Whether driven by concerns for clarity, safety or simple aesthetics, <link=Stationeers><color=#0080FFFF>Stationeers</color></link> have access to a small rainbow of colors for their constructions. These are the color setting for devices, represented as an integer.\n\n0: Blue\n1: Grey\n2: Green\n3: Orange\n4: Red\n5: Yellow\n6: White\n7: Black\n8: Brown\n9: Khaki\n10: Pink\n11: Purple\n\n        It is an unwavering universal law that anything higher than 11 will be purple. The <link=ODA><color=#0080FFFF>ODA</color></link> is powerless to change this. Similarly, anything lower than 0 will be Blue.\n      "
          },
          "Combustion": {
            "value": 98,
            "deprecated": false,
            "description": "The assess atmosphere is on fire. Returns 1 if atmosphere is on fire, 0 if not."
          },
          "CombustionInput": {
            "value": 146,
            "deprecated": false,
            "description": "The assess atmosphere is on fire. Returns 1 if device's input network is on fire, 0 if not."
          },
          "CombustionInput2": {
            "value": 147,
            "deprecated": false,
            "description": "The assess atmosphere is on fire. Returns 1 if device's Input2 network is on fire, 0 if not."
          },
          "CombustionLimiter": {
            "value": 153,
            "deprecated": false,
            "description": "Retards the rate of combustion inside the machine (range: 0-100), with 0 being the slowest rate of combustion and 100 being the fastest"
          },
          "CombustionOutput": {
            "value": 148,
            "deprecated": false,
            "description": "The assess atmosphere is on fire. Returns 1 if device's Output network is on fire, 0 if not."
          },
          "CombustionOutput2": {
            "value": 149,
            "deprecated": false,
            "description": "The assess atmosphere is on fire. Returns 1 if device's Output2 network is on fire, 0 if not."
          },
          "CompletionRatio": {
            "value": 61,
            "deprecated": false,
            "description": "How complete the current production is for this device, between 0 and 1"
          },
          "ContactTypeId": {
            "value": 198,
            "deprecated": false,
            "description": "The type id of the contact."
          },
          "CurrentCode": {
            "value": 261,
            "deprecated": false,
            "description": "The Space Map Address of the rockets current Space Map Location"
          },
          "CurrentResearchPodType": {
            "value": 93,
            "deprecated": false,
            "description": "<A:EN:1890273128>"
          },
          "Density": {
            "value": 262,
            "deprecated": false,
            "description": "The density of the rocket's target site's mine-able deposit."
          },
          "DestinationCode": {
            "value": 215,
            "deprecated": false,
            "description": "The Space Map Address of the rockets target Space Map Location"
          },
          "Discover": {
            "value": 255,
            "deprecated": false,
            "description": "Progress status of Discovery scan at the rocket's target Space Map Location. Returns a clamped normalised value. If Discovery scan is not available returns -1."
          },
          "DistanceAu": {
            "value": 244,
            "deprecated": false,
            "description": "The current distance to the celestial object, measured in astronomical units."
          },
          "DistanceKm": {
            "value": 249,
            "deprecated": false,
            "description": "The current distance to the celestial object, measured in kilometers."
          },
          "DrillCondition": {
            "value": 240,
            "deprecated": false,
            "description": "The current condition of the drill head in this devices drill slot. Expressed as a ratio between 0 and 1."
          },
          "DryMass": {
            "value": 220,
            "deprecated": false,
            "description": "The Mass in kilograms of the rocket excluding fuel. The more massive the rocket the more fuel will be required to move to a new location in space."
          },
          "Eccentricity": {
            "value": 247,
            "deprecated": false,
            "description": "A measure of how elliptical (oval) an orbit is. Ranges from 0 (a perfect circle) to 1 (a parabolic trajectory)."
          },
          "ElevatorLevel": {
            "value": 40,
            "deprecated": false,
            "description": "Level the elevator is currently at"
          },
          "ElevatorSpeed": {
            "value": 39,
            "deprecated": false,
            "description": "Current speed of the elevator"
          },
          "EntityState": {
            "value": 239,
            "deprecated": false,
            "description": "The current entity state, such as whether it is dead, unconscious or alive, expressed as a state integer."
          },
          "EnvironmentEfficiency": {
            "value": 104,
            "deprecated": false,
            "description": "The Environment Efficiency reported by the machine, as a float between 0 and 1"
          },
          "Error": {
            "value": 4,
            "deprecated": false,
            "description": "1 if device is in error state, otherwise 0"
          },
          "ExhaustVelocity": {
            "value": 235,
            "deprecated": false,
            "description": "The velocity of the exhaust gas in m/s"
          },
          "ExportCount": {
            "value": 63,
            "deprecated": false,
            "description": "How many items exported since last ClearMemory"
          },
          "ExportQuantity": {
            "value": 31,
            "deprecated": true,
            "description": "Total quantity of items exported by the device"
          },
          "ExportSlotHash": {
            "value": 42,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "ExportSlotOccupant": {
            "value": 32,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "Filtration": {
            "value": 74,
            "deprecated": false,
            "description": "The current state of the filtration system, for example Filtration = 1 for a Hardsuit sets filtration to On"
          },
          "FlightControlRule": {
            "value": 236,
            "deprecated": false,
            "description": "Flight control rule of rocket. None = 0, No AutoPilot. Normal = 1, Target Decent Apex of 60m. Alternate = 2, Velocity to High - Full throttle. Alternate2 = 3, Target an appropriate decent velocity as velocity is too low. FinalApproach = 4, Descend towards launch mount in a controlled manner."
          },
          "Flush": {
            "value": 174,
            "deprecated": false,
            "description": "Set to 1 to activate the flush function on the device"
          },
          "ForceWrite": {
            "value": 85,
            "deprecated": false,
            "description": "Forces Logic Writer devices to rewrite value"
          },
          "ForwardX": {
            "value": 227,
            "deprecated": false,
            "description": "The direction the entity is facing expressed as a normalized vector"
          },
          "ForwardY": {
            "value": 228,
            "deprecated": false,
            "description": "The direction the entity is facing expressed as a normalized vector"
          },
          "ForwardZ": {
            "value": 229,
            "deprecated": false,
            "description": "The direction the entity is facing expressed as a normalized vector"
          },
          "Fuel": {
            "value": 99,
            "deprecated": false,
            "description": "Gets the cost of fuel to return the rocket to your current world."
          },
          "Harvest": {
            "value": 69,
            "deprecated": false,
            "description": "Performs the harvesting action for any plant based machinery"
          },
          "Horizontal": {
            "value": 20,
            "deprecated": false,
            "description": "Horizontal setting of the device"
          },
          "HorizontalRatio": {
            "value": 34,
            "deprecated": false,
            "description": "Radio of horizontal setting for device"
          },
          "Idle": {
            "value": 37,
            "deprecated": false,
            "description": "Returns 1 if the device is currently idle, otherwise 0"
          },
          "ImportCount": {
            "value": 64,
            "deprecated": false,
            "description": "How many items imported since last ClearMemory"
          },
          "ImportQuantity": {
            "value": 29,
            "deprecated": true,
            "description": "Total quantity of items imported by the device"
          },
          "ImportSlotHash": {
            "value": 43,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "ImportSlotOccupant": {
            "value": 30,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "Inclination": {
            "value": 246,
            "deprecated": false,
            "description": "The tilt of an orbit's plane relative to the equatorial plane, measured in degrees. Defines the orbital plane's angle."
          },
          "Index": {
            "value": 241,
            "deprecated": false,
            "description": "The current index for the device."
          },
          "InterrogationProgress": {
            "value": 157,
            "deprecated": false,
            "description": "Progress of this sattellite dish's interrogation of its current target, as a ratio from 0-1"
          },
          "LineNumber": {
            "value": 173,
            "deprecated": false,
            "description": "The line number of current execution for an integrated circuit running on this device. While this number can be written, use with caution"
          },
          "Lock": {
            "value": 10,
            "deprecated": false,
            "description": "1 if device is locked, otherwise 0, can be set in most devices and prevents the user from access the values"
          },
          "ManualResearchRequiredPod": {
            "value": 94,
            "deprecated": false,
            "description": "Sets the pod type to search for a certain pod when breaking down a pods."
          },
          "Mass": {
            "value": 219,
            "deprecated": false,
            "description": "The total Mass of the rocket in kilograms including fuel and cargo. The more massive the rocket the more fuel will be required to move to a new location in space."
          },
          "Maximum": {
            "value": 23,
            "deprecated": false,
            "description": "Maximum setting of the device"
          },
          "MineablesInQueue": {
            "value": 96,
            "deprecated": false,
            "description": "Returns the amount of mineables AIMEe has queued up to mine."
          },
          "MineablesInVicinity": {
            "value": 95,
            "deprecated": false,
            "description": "Returns the amount of potential mineables within an extended area around AIMEe."
          },
          "MinedQuantity": {
            "value": 266,
            "deprecated": false,
            "description": "The total number of resources that have been mined at the rocket's target Space Map Site."
          },
          "MinimumWattsToContact": {
            "value": 163,
            "deprecated": false,
            "description": "Minimum required amount of watts from the dish hitting the target trader contact to start interrogating the contact"
          },
          "Mode": {
            "value": 3,
            "deprecated": false,
            "description": "Integer for mode state, different devices will have different mode states available to them"
          },
          "NameHash": {
            "value": 268,
            "deprecated": false,
            "description": "Provides the hash value for the name of the object as a 32 bit integer."
          },
          "NavPoints": {
            "value": 258,
            "deprecated": false,
            "description": "The number of NavPoints at the rocket's target Space Map Location."
          },
          "NextWeatherEventTime": {
            "value": 97,
            "deprecated": false,
            "description": "Returns in seconds when the next weather event is inbound."
          },
          "None": {
            "value": 0,
            "deprecated": true,
            "description": "No description"
          },
          "On": {
            "value": 28,
            "deprecated": false,
            "description": "The current state of the device, 0 for off, 1 for on"
          },
          "Open": {
            "value": 2,
            "deprecated": false,
            "description": "1 if device is open, otherwise 0"
          },
          "OperationalTemperatureEfficiency": {
            "value": 150,
            "deprecated": false,
            "description": "How the input pipe's temperature effects the machines efficiency"
          },
          "OrbitPeriod": {
            "value": 245,
            "deprecated": false,
            "description": "The time it takes for an object to complete one full orbit around another object, measured in days. Indicates the duration of the orbital cycle."
          },
          "Orientation": {
            "value": 230,
            "deprecated": false,
            "description": "The orientation of the entity in degrees in a plane relative towards the north origin"
          },
          "Output": {
            "value": 70,
            "deprecated": false,
            "description": "The output operation for a sort handling device, such as a stacker or sorter, when in logic mode the device will only action one repetition when set zero or above and then back to -1 and await further instructions"
          },
          "PassedMoles": {
            "value": 234,
            "deprecated": false,
            "description": "The number of moles that passed through this device on the previous simulation tick"
          },
          "Plant": {
            "value": 68,
            "deprecated": false,
            "description": "Performs the planting action for any plant based machinery"
          },
          "PlantEfficiency1": {
            "value": 52,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantEfficiency2": {
            "value": 53,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantEfficiency3": {
            "value": 54,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantEfficiency4": {
            "value": 55,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantGrowth1": {
            "value": 48,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantGrowth2": {
            "value": 49,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantGrowth3": {
            "value": 50,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantGrowth4": {
            "value": 51,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHash1": {
            "value": 56,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHash2": {
            "value": 57,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHash3": {
            "value": 58,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHash4": {
            "value": 59,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHealth1": {
            "value": 44,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHealth2": {
            "value": 45,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHealth3": {
            "value": 46,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHealth4": {
            "value": 47,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PositionX": {
            "value": 76,
            "deprecated": false,
            "description": "The current position in X dimension in world coordinates"
          },
          "PositionY": {
            "value": 77,
            "deprecated": false,
            "description": "The current position in Y dimension in world coordinates"
          },
          "PositionZ": {
            "value": 78,
            "deprecated": false,
            "description": "The current position in Z dimension in world coordinates"
          },
          "Power": {
            "value": 1,
            "deprecated": false,
            "description": "Can be read to return if the device is correctly powered or not, set via the power system, return 1 if powered and 0 if not"
          },
          "PowerActual": {
            "value": 26,
            "deprecated": false,
            "description": "How much energy the device or network is actually using"
          },
          "PowerGeneration": {
            "value": 65,
            "deprecated": false,
            "description": "Returns how much power is being generated"
          },
          "PowerPotential": {
            "value": 25,
            "deprecated": false,
            "description": "How much energy the device or network potentially provides"
          },
          "PowerRequired": {
            "value": 36,
            "deprecated": false,
            "description": "Power requested from the device and/or network"
          },
          "PrefabHash": {
            "value": 84,
            "deprecated": false,
            "description": "The hash of the structure"
          },
          "Pressure": {
            "value": 5,
            "deprecated": false,
            "description": "The current pressure reading of the device"
          },
          "PressureEfficiency": {
            "value": 152,
            "deprecated": false,
            "description": "How the pressure of the input pipe and waste pipe effect the machines efficiency"
          },
          "PressureExternal": {
            "value": 7,
            "deprecated": false,
            "description": "Setting for external pressure safety, in KPa"
          },
          "PressureInput": {
            "value": 106,
            "deprecated": false,
            "description": "The current pressure reading of the device's Input Network"
          },
          "PressureInput2": {
            "value": 116,
            "deprecated": false,
            "description": "The current pressure reading of the device's Input2 Network"
          },
          "PressureInternal": {
            "value": 8,
            "deprecated": false,
            "description": "Setting for internal pressure safety, in KPa"
          },
          "PressureOutput": {
            "value": 126,
            "deprecated": false,
            "description": "The current pressure reading of the device's Output Network"
          },
          "PressureOutput2": {
            "value": 136,
            "deprecated": false,
            "description": "The current pressure reading of the device's Output2 Network"
          },
          "PressureSetting": {
            "value": 71,
            "deprecated": false,
            "description": "The current setting for the internal pressure of the object (e.g. the Hardsuit Air release), in KPa"
          },
          "Progress": {
            "value": 214,
            "deprecated": false,
            "description": "Progress of the rocket to the next node on the map expressed as a value between 0-1."
          },
          "Quantity": {
            "value": 27,
            "deprecated": false,
            "description": "Total quantity on the device"
          },
          "Ratio": {
            "value": 24,
            "deprecated": false,
            "description": "Context specific value depending on device, 0 to 1 based ratio"
          },
          "RatioCarbonDioxide": {
            "value": 15,
            "deprecated": false,
            "description": "The ratio of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> in device atmosphere"
          },
          "RatioCarbonDioxideInput": {
            "value": 109,
            "deprecated": false,
            "description": "The ratio of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> in device's input network"
          },
          "RatioCarbonDioxideInput2": {
            "value": 119,
            "deprecated": false,
            "description": "The ratio of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> in device's Input2 network"
          },
          "RatioCarbonDioxideOutput": {
            "value": 129,
            "deprecated": false,
            "description": "The ratio of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> in device's Output network"
          },
          "RatioCarbonDioxideOutput2": {
            "value": 139,
            "deprecated": false,
            "description": "The ratio of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> in device's Output2 network"
          },
          "RatioHydrogen": {
            "value": 252,
            "deprecated": false,
            "description": "The ratio of <link=GasHydrogen><color=#44AD83>Hydrogen</color></link> in device's Atmopshere"
          },
          "RatioLiquidCarbonDioxide": {
            "value": 199,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidCarbonDioxide><color=#44AD83>Liquid Carbon Dioxide</color></link> in device's Atmosphere"
          },
          "RatioLiquidCarbonDioxideInput": {
            "value": 200,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidCarbonDioxide><color=#44AD83>Liquid Carbon Dioxide</color></link> in device's Input Atmosphere"
          },
          "RatioLiquidCarbonDioxideInput2": {
            "value": 201,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidCarbonDioxide><color=#44AD83>Liquid Carbon Dioxide</color></link> in device's Input2 Atmosphere"
          },
          "RatioLiquidCarbonDioxideOutput": {
            "value": 202,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidCarbonDioxide><color=#44AD83>Liquid Carbon Dioxide</color></link> in device's device's Output Atmosphere"
          },
          "RatioLiquidCarbonDioxideOutput2": {
            "value": 203,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidCarbonDioxide><color=#44AD83>Liquid Carbon Dioxide</color></link> in device's Output2 Atmopshere"
          },
          "RatioLiquidHydrogen": {
            "value": 253,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidHydrogen><color=#44AD83>Liquid Hydrogen</color></link> in device's Atmopshere"
          },
          "RatioLiquidNitrogen": {
            "value": 177,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrogen><color=#44AD83>Liquid Nitrogen</color></link> in device atmosphere"
          },
          "RatioLiquidNitrogenInput": {
            "value": 178,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrogen><color=#44AD83>Liquid Nitrogen</color></link> in device's input network"
          },
          "RatioLiquidNitrogenInput2": {
            "value": 179,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrogen><color=#44AD83>Liquid Nitrogen</color></link> in device's Input2 network"
          },
          "RatioLiquidNitrogenOutput": {
            "value": 180,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrogen><color=#44AD83>Liquid Nitrogen</color></link> in device's Output network"
          },
          "RatioLiquidNitrogenOutput2": {
            "value": 181,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrogen><color=#44AD83>Liquid Nitrogen</color></link> in device's Output2 network"
          },
          "RatioLiquidNitrousOxide": {
            "value": 209,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link> in device's Atmosphere"
          },
          "RatioLiquidNitrousOxideInput": {
            "value": 210,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link> in device's Input Atmosphere"
          },
          "RatioLiquidNitrousOxideInput2": {
            "value": 211,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link> in device's Input2 Atmosphere"
          },
          "RatioLiquidNitrousOxideOutput": {
            "value": 212,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link> in device's device's Output Atmosphere"
          },
          "RatioLiquidNitrousOxideOutput2": {
            "value": 213,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link> in device's Output2 Atmopshere"
          },
          "RatioLiquidOxygen": {
            "value": 183,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link> in device's Atmosphere"
          },
          "RatioLiquidOxygenInput": {
            "value": 184,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link> in device's Input Atmosphere"
          },
          "RatioLiquidOxygenInput2": {
            "value": 185,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link> in device's Input2 Atmosphere"
          },
          "RatioLiquidOxygenOutput": {
            "value": 186,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link> in device's device's Output Atmosphere"
          },
          "RatioLiquidOxygenOutput2": {
            "value": 187,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link> in device's Output2 Atmopshere"
          },
          "RatioLiquidPollutant": {
            "value": 204,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidPollutant><color=#44AD83>Liquid Pollutant</color></link> in device's Atmosphere"
          },
          "RatioLiquidPollutantInput": {
            "value": 205,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidPollutant><color=#44AD83>Liquid Pollutant</color></link> in device's Input Atmosphere"
          },
          "RatioLiquidPollutantInput2": {
            "value": 206,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidPollutant><color=#44AD83>Liquid Pollutant</color></link> in device's Input2 Atmosphere"
          },
          "RatioLiquidPollutantOutput": {
            "value": 207,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidPollutant><color=#44AD83>Liquid Pollutant</color></link> in device's device's Output Atmosphere"
          },
          "RatioLiquidPollutantOutput2": {
            "value": 208,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidPollutant><color=#44AD83>Liquid Pollutant</color></link> in device's Output2 Atmopshere"
          },
          "RatioLiquidVolatiles": {
            "value": 188,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link> in device's Atmosphere"
          },
          "RatioLiquidVolatilesInput": {
            "value": 189,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link> in device's Input Atmosphere"
          },
          "RatioLiquidVolatilesInput2": {
            "value": 190,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link> in device's Input2 Atmosphere"
          },
          "RatioLiquidVolatilesOutput": {
            "value": 191,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link> in device's device's Output Atmosphere"
          },
          "RatioLiquidVolatilesOutput2": {
            "value": 192,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link> in device's Output2 Atmopshere"
          },
          "RatioNitrogen": {
            "value": 16,
            "deprecated": false,
            "description": "The ratio of nitrogen in device atmosphere"
          },
          "RatioNitrogenInput": {
            "value": 110,
            "deprecated": false,
            "description": "The ratio of nitrogen in device's input network"
          },
          "RatioNitrogenInput2": {
            "value": 120,
            "deprecated": false,
            "description": "The ratio of nitrogen in device's Input2 network"
          },
          "RatioNitrogenOutput": {
            "value": 130,
            "deprecated": false,
            "description": "The ratio of nitrogen in device's Output network"
          },
          "RatioNitrogenOutput2": {
            "value": 140,
            "deprecated": false,
            "description": "The ratio of nitrogen in device's Output2 network"
          },
          "RatioNitrousOxide": {
            "value": 83,
            "deprecated": false,
            "description": "The ratio of <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> in device atmosphere"
          },
          "RatioNitrousOxideInput": {
            "value": 114,
            "deprecated": false,
            "description": "The ratio of <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> in device's input network"
          },
          "RatioNitrousOxideInput2": {
            "value": 124,
            "deprecated": false,
            "description": "The ratio of <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> in device's Input2 network"
          },
          "RatioNitrousOxideOutput": {
            "value": 134,
            "deprecated": false,
            "description": "The ratio of <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> in device's Output network"
          },
          "RatioNitrousOxideOutput2": {
            "value": 144,
            "deprecated": false,
            "description": "The ratio of <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> in device's Output2 network"
          },
          "RatioOxygen": {
            "value": 14,
            "deprecated": false,
            "description": "The ratio of oxygen in device atmosphere"
          },
          "RatioOxygenInput": {
            "value": 108,
            "deprecated": false,
            "description": "The ratio of oxygen in device's input network"
          },
          "RatioOxygenInput2": {
            "value": 118,
            "deprecated": false,
            "description": "The ratio of oxygen in device's Input2 network"
          },
          "RatioOxygenOutput": {
            "value": 128,
            "deprecated": false,
            "description": "The ratio of oxygen in device's Output network"
          },
          "RatioOxygenOutput2": {
            "value": 138,
            "deprecated": false,
            "description": "The ratio of oxygen in device's Output2 network"
          },
          "RatioPollutant": {
            "value": 17,
            "deprecated": false,
            "description": "The ratio of pollutant in device atmosphere"
          },
          "RatioPollutantInput": {
            "value": 111,
            "deprecated": false,
            "description": "The ratio of pollutant in device's input network"
          },
          "RatioPollutantInput2": {
            "value": 121,
            "deprecated": false,
            "description": "The ratio of pollutant in device's Input2 network"
          },
          "RatioPollutantOutput": {
            "value": 131,
            "deprecated": false,
            "description": "The ratio of pollutant in device's Output network"
          },
          "RatioPollutantOutput2": {
            "value": 141,
            "deprecated": false,
            "description": "The ratio of pollutant in device's Output2 network"
          },
          "RatioPollutedWater": {
            "value": 254,
            "deprecated": false,
            "description": "The ratio of polluted water in device atmosphere"
          },
          "RatioSteam": {
            "value": 193,
            "deprecated": false,
            "description": "The ratio of <link=GasSteam><color=#44AD83>Steam</color></link> in device's Atmosphere"
          },
          "RatioSteamInput": {
            "value": 194,
            "deprecated": false,
            "description": "The ratio of <link=GasSteam><color=#44AD83>Steam</color></link> in device's Input Atmosphere"
          },
          "RatioSteamInput2": {
            "value": 195,
            "deprecated": false,
            "description": "The ratio of <link=GasSteam><color=#44AD83>Steam</color></link> in device's Input2 Atmosphere"
          },
          "RatioSteamOutput": {
            "value": 196,
            "deprecated": false,
            "description": "The ratio of <link=GasSteam><color=#44AD83>Steam</color></link> in device's device's Output Atmosphere"
          },
          "RatioSteamOutput2": {
            "value": 197,
            "deprecated": false,
            "description": "The ratio of <link=GasSteam><color=#44AD83>Steam</color></link> in device's Output2 Atmopshere"
          },
          "RatioVolatiles": {
            "value": 18,
            "deprecated": false,
            "description": "The ratio of volatiles in device atmosphere"
          },
          "RatioVolatilesInput": {
            "value": 112,
            "deprecated": false,
            "description": "The ratio of volatiles in device's input network"
          },
          "RatioVolatilesInput2": {
            "value": 122,
            "deprecated": false,
            "description": "The ratio of volatiles in device's Input2 network"
          },
          "RatioVolatilesOutput": {
            "value": 132,
            "deprecated": false,
            "description": "The ratio of volatiles in device's Output network"
          },
          "RatioVolatilesOutput2": {
            "value": 142,
            "deprecated": false,
            "description": "The ratio of volatiles in device's Output2 network"
          },
          "RatioWater": {
            "value": 19,
            "deprecated": false,
            "description": "The ratio of water in device atmosphere"
          },
          "RatioWaterInput": {
            "value": 113,
            "deprecated": false,
            "description": "The ratio of water in device's input network"
          },
          "RatioWaterInput2": {
            "value": 123,
            "deprecated": false,
            "description": "The ratio of water in device's Input2 network"
          },
          "RatioWaterOutput": {
            "value": 133,
            "deprecated": false,
            "description": "The ratio of water in device's Output network"
          },
          "RatioWaterOutput2": {
            "value": 143,
            "deprecated": false,
            "description": "The ratio of water in device's Output2 network"
          },
          "ReEntryAltitude": {
            "value": 237,
            "deprecated": false,
            "description": "The altitude that the rocket will begin its decent to the pad. Must be between 25km and 120km"
          },
          "Reagents": {
            "value": 13,
            "deprecated": false,
            "description": "Total number of reagents recorded by the device"
          },
          "RecipeHash": {
            "value": 41,
            "deprecated": false,
            "description": "Current hash of the recipe the device is set to produce"
          },
          "ReferenceId": {
            "value": 217,
            "deprecated": false,
            "description": "Unique Reference Identifier for this object"
          },
          "RequestHash": {
            "value": 60,
            "deprecated": false,
            "description": "When set to the unique identifier, requests an item of the provided type from the device"
          },
          "RequiredPower": {
            "value": 33,
            "deprecated": false,
            "description": "Idle operating power quantity, does not necessarily include extra demand power"
          },
          "ReturnFuelCost": {
            "value": 100,
            "deprecated": false,
            "description": "Gets the fuel remaining in your rocket's fuel tank."
          },
          "Richness": {
            "value": 263,
            "deprecated": false,
            "description": "The richness of the rocket's target site's mine-able deposit."
          },
          "Rpm": {
            "value": 155,
            "deprecated": false,
            "description": "The number of revolutions per minute that the device's spinning mechanism is doing"
          },
          "SemiMajorAxis": {
            "value": 248,
            "deprecated": false,
            "description": "The longest radius of an elliptical orbit in astronomical units, measuring half the major axis. Determines the size of the orbit."
          },
          "Setting": {
            "value": 12,
            "deprecated": false,
            "description": "A variable setting that can be read or written, depending on the device"
          },
          "SettingInput": {
            "value": 91,
            "deprecated": false,
            "description": "<A:EN:-1139210406>"
          },
          "SettingOutput": {
            "value": 92,
            "deprecated": false,
            "description": "<A:EN:1605622326>"
          },
          "SignalID": {
            "value": 87,
            "deprecated": false,
            "description": "Returns the contact ID of the strongest signal from this Satellite"
          },
          "SignalStrength": {
            "value": 86,
            "deprecated": false,
            "description": "Returns the degree offset of the strongest contact"
          },
          "Sites": {
            "value": 260,
            "deprecated": false,
            "description": "The number of Sites that have been discovered at the rockets target Space Map location."
          },
          "Size": {
            "value": 264,
            "deprecated": false,
            "description": "The size of the rocket's target site's mine-able deposit."
          },
          "SizeX": {
            "value": 160,
            "deprecated": false,
            "description": "Size on the X (right) axis of the object in largeGrids (a largeGrid is 2meters)"
          },
          "SizeY": {
            "value": 161,
            "deprecated": false,
            "description": "Size on the Y(Up) axis of the object in largeGrids (a largeGrid is 2meters)"
          },
          "SizeZ": {
            "value": 162,
            "deprecated": false,
            "description": "Size on the Z(Forward) axis of the object in largeGrids (a largeGrid is 2meters)"
          },
          "SolarAngle": {
            "value": 22,
            "deprecated": false,
            "description": "Solar angle of the device"
          },
          "SolarIrradiance": {
            "value": 176,
            "deprecated": false,
            "description": "<A:EN:-1627927313>"
          },
          "SoundAlert": {
            "value": 175,
            "deprecated": false,
            "description": "Plays a sound alert on the devices speaker"
          },
          "Stress": {
            "value": 156,
            "deprecated": false,
            "description": "Machines get stressed when working hard. When Stress reaches 100 the machine will automatically shut down"
          },
          "Survey": {
            "value": 257,
            "deprecated": false,
            "description": "Progress status of Survey scan at the rocket's target Space Map Location. Returns a normalised value where 100% surveyed is equal to 1. If Survey scan is not available returns -1."
          },
          "TargetPadIndex": {
            "value": 158,
            "deprecated": false,
            "description": "The index of the trader landing pad on this devices data network that it will try to call a trader in to land"
          },
          "TargetX": {
            "value": 88,
            "deprecated": false,
            "description": "The target position in X dimension in world coordinates"
          },
          "TargetY": {
            "value": 89,
            "deprecated": false,
            "description": "The target position in Y dimension in world coordinates"
          },
          "TargetZ": {
            "value": 90,
            "deprecated": false,
            "description": "The target position in Z dimension in world coordinates"
          },
          "Temperature": {
            "value": 6,
            "deprecated": false,
            "description": "The current temperature reading of the device"
          },
          "TemperatureDifferentialEfficiency": {
            "value": 151,
            "deprecated": false,
            "description": "How the difference between the input pipe and waste pipe temperatures effect the machines efficiency"
          },
          "TemperatureExternal": {
            "value": 73,
            "deprecated": false,
            "description": "The temperature of the outside of the device, usually the world atmosphere surrounding it"
          },
          "TemperatureInput": {
            "value": 107,
            "deprecated": false,
            "description": "The current temperature reading of the device's Input Network"
          },
          "TemperatureInput2": {
            "value": 117,
            "deprecated": false,
            "description": "The current temperature reading of the device's Input2 Network"
          },
          "TemperatureOutput": {
            "value": 127,
            "deprecated": false,
            "description": "The current temperature reading of the device's Output Network"
          },
          "TemperatureOutput2": {
            "value": 137,
            "deprecated": false,
            "description": "The current temperature reading of the device's Output2 Network"
          },
          "TemperatureSetting": {
            "value": 72,
            "deprecated": false,
            "description": "The current setting for the internal temperature of the object (e.g. the Hardsuit A/C)"
          },
          "Throttle": {
            "value": 154,
            "deprecated": false,
            "description": "Increases the rate at which the machine works (range: 0-100)"
          },
          "Thrust": {
            "value": 221,
            "deprecated": false,
            "description": "Total current thrust of all rocket engines on the rocket in Newtons."
          },
          "ThrustToWeight": {
            "value": 223,
            "deprecated": false,
            "description": "Ratio of thrust to weight of rocket. Weight is effected by local body gravity. A rocket with a low thrust to weight will expend more fuel during launch and landing."
          },
          "Time": {
            "value": 102,
            "deprecated": false,
            "description": "Time"
          },
          "TimeToDestination": {
            "value": 224,
            "deprecated": false,
            "description": "Estimated time in seconds until rocket arrives at target destination."
          },
          "TotalMoles": {
            "value": 66,
            "deprecated": false,
            "description": "Returns the total moles of the device"
          },
          "TotalMolesInput": {
            "value": 115,
            "deprecated": false,
            "description": "Returns the total moles of the device's Input Network"
          },
          "TotalMolesInput2": {
            "value": 125,
            "deprecated": false,
            "description": "Returns the total moles of the device's Input2 Network"
          },
          "TotalMolesOutput": {
            "value": 135,
            "deprecated": false,
            "description": "Returns the total moles of the device's Output Network"
          },
          "TotalMolesOutput2": {
            "value": 145,
            "deprecated": false,
            "description": "Returns the total moles of the device's Output2 Network"
          },
          "TotalQuantity": {
            "value": 265,
            "deprecated": false,
            "description": "The estimated total quantity of resources available to mine at the rocket's target Space Map Site."
          },
          "TrueAnomaly": {
            "value": 251,
            "deprecated": false,
            "description": "An angular parameter that defines the position of a body moving along a Keplerian orbit. It is the angle between the direction of periapsis and the current position of the body, as seen from the main focus of the ellipse (the point around which the object orbits)."
          },
          "VelocityMagnitude": {
            "value": 79,
            "deprecated": false,
            "description": "The current magnitude of the velocity vector"
          },
          "VelocityRelativeX": {
            "value": 80,
            "deprecated": false,
            "description": "The current velocity X relative to the forward vector of this"
          },
          "VelocityRelativeY": {
            "value": 81,
            "deprecated": false,
            "description": "The current velocity Y relative to the forward vector of this"
          },
          "VelocityRelativeZ": {
            "value": 82,
            "deprecated": false,
            "description": "The current velocity Z relative to the forward vector of this"
          },
          "VelocityX": {
            "value": 231,
            "deprecated": false,
            "description": "The world velocity of the entity in the X axis"
          },
          "VelocityY": {
            "value": 232,
            "deprecated": false,
            "description": "The world velocity of the entity in the Y axis"
          },
          "VelocityZ": {
            "value": 233,
            "deprecated": false,
            "description": "The world velocity of the entity in the Z axis"
          },
          "Vertical": {
            "value": 21,
            "deprecated": false,
            "description": "Vertical setting of the device"
          },
          "VerticalRatio": {
            "value": 35,
            "deprecated": false,
            "description": "Radio of vertical setting for device"
          },
          "Volume": {
            "value": 67,
            "deprecated": false,
            "description": "Returns the device atmosphere volume"
          },
          "VolumeOfLiquid": {
            "value": 182,
            "deprecated": false,
            "description": "The total volume of all liquids in Liters in the atmosphere"
          },
          "WattsReachingContact": {
            "value": 164,
            "deprecated": false,
            "description": "The amount of watts actually hitting the contact. This is effected by the power of the dish and how far off-axis the dish is from the contact vector"
          },
          "Weight": {
            "value": 222,
            "deprecated": false,
            "description": "Weight of Rocket in Newtons (Including fuel and cargo). Weight is effected by local body gravity."
          },
          "WorkingGasEfficiency": {
            "value": 105,
            "deprecated": false,
            "description": "The Working Gas Efficiency reported by the machine, as a float between 0 and 1"
          }
        }
      }
    },
    "basicEnums": {
      "AirCon": {
        "enumName": "AirConditioningMode",
        "values": {
          "Cold": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Hot": {
            "value": 1,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "AirControl": {
        "enumName": "AirControlMode",
        "values": {
          "Draught": {
            "value": 4,
            "deprecated": false,
            "description": ""
          },
          "None": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Offline": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Pressure": {
            "value": 2,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "Color": {
        "enumName": "ColorType",
        "values": {
          "Black": {
            "value": 7,
            "deprecated": false,
            "description": ""
          },
          "Blue": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Brown": {
            "value": 8,
            "deprecated": false,
            "description": ""
          },
          "Gray": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Green": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "Khaki": {
            "value": 9,
            "deprecated": false,
            "description": ""
          },
          "Orange": {
            "value": 3,
            "deprecated": false,
            "description": ""
          },
          "Pink": {
            "value": 10,
            "deprecated": false,
            "description": ""
          },
          "Purple": {
            "value": 11,
            "deprecated": false,
            "description": ""
          },
          "Red": {
            "value": 4,
            "deprecated": false,
            "description": ""
          },
          "White": {
            "value": 6,
            "deprecated": false,
            "description": ""
          },
          "Yellow": {
            "value": 5,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "DaylightSensorMode": {
        "enumName": "DaylightSensorMode",
        "values": {
          "Default": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Horizontal": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Vertical": {
            "value": 2,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "ElevatorMode": {
        "enumName": "ElevatorMode",
        "values": {
          "Downward": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "Stationary": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Upward": {
            "value": 1,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "EntityState": {
        "enumName": "EntityState",
        "values": {
          "Alive": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Dead": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Decay": {
            "value": 3,
            "deprecated": false,
            "description": ""
          },
          "Unconscious": {
            "value": 2,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "GasType": {
        "enumName": "GasType",
        "values": {
          "CarbonDioxide": {
            "value": 4,
            "deprecated": false,
            "description": ""
          },
          "Hydrogen": {
            "value": 16384,
            "deprecated": false,
            "description": ""
          },
          "LiquidCarbonDioxide": {
            "value": 2048,
            "deprecated": false,
            "description": ""
          },
          "LiquidHydrogen": {
            "value": 32768,
            "deprecated": false,
            "description": ""
          },
          "LiquidNitrogen": {
            "value": 128,
            "deprecated": false,
            "description": ""
          },
          "LiquidNitrousOxide": {
            "value": 8192,
            "deprecated": false,
            "description": ""
          },
          "LiquidOxygen": {
            "value": 256,
            "deprecated": false,
            "description": ""
          },
          "LiquidPollutant": {
            "value": 4096,
            "deprecated": false,
            "description": ""
          },
          "LiquidVolatiles": {
            "value": 512,
            "deprecated": false,
            "description": ""
          },
          "Nitrogen": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "NitrousOxide": {
            "value": 64,
            "deprecated": false,
            "description": ""
          },
          "Oxygen": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Pollutant": {
            "value": 16,
            "deprecated": false,
            "description": ""
          },
          "PollutedWater": {
            "value": 65536,
            "deprecated": false,
            "description": ""
          },
          "Steam": {
            "value": 1024,
            "deprecated": false,
            "description": ""
          },
          "Undefined": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Volatiles": {
            "value": 8,
            "deprecated": false,
            "description": ""
          },
          "Water": {
            "value": 32,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "LogicSlotType": {
        "enumName": "LogicSlotType",
        "values": {
          "Charge": {
            "value": 10,
            "deprecated": false,
            "description": "returns current energy charge the slot occupant is holding"
          },
          "ChargeRatio": {
            "value": 11,
            "deprecated": false,
            "description": "returns current energy charge the slot occupant is holding as a ratio between 0 and 1 of its maximum"
          },
          "Class": {
            "value": 12,
            "deprecated": false,
            "description": "returns integer representing the class of object"
          },
          "Damage": {
            "value": 4,
            "deprecated": false,
            "description": "returns the damage state of the item in the slot"
          },
          "Efficiency": {
            "value": 5,
            "deprecated": false,
            "description": "returns the growth efficiency of the plant in the slot"
          },
          "FilterType": {
            "value": 25,
            "deprecated": false,
            "description": "No description available"
          },
          "Growth": {
            "value": 7,
            "deprecated": false,
            "description": "returns the current growth state of the plant in the slot"
          },
          "Health": {
            "value": 6,
            "deprecated": false,
            "description": "returns the health of the plant in the slot"
          },
          "LineNumber": {
            "value": 19,
            "deprecated": false,
            "description": "The line number of current execution for an integrated circuit running on this device. While this number can be written, use with caution"
          },
          "Lock": {
            "value": 23,
            "deprecated": false,
            "description": "No description available"
          },
          "Mature": {
            "value": 16,
            "deprecated": false,
            "description": "returns 1 if the plant in this slot is mature, 0 when it isn't"
          },
          "MaxQuantity": {
            "value": 15,
            "deprecated": false,
            "description": "returns the max stack size of the item in the slot"
          },
          "None": {
            "value": 0,
            "deprecated": false,
            "description": "No description"
          },
          "OccupantHash": {
            "value": 2,
            "deprecated": false,
            "description": "returns the has of the current occupant, the unique identifier of the thing"
          },
          "Occupied": {
            "value": 1,
            "deprecated": false,
            "description": "returns 0 when slot is not occupied, 1 when it is"
          },
          "On": {
            "value": 22,
            "deprecated": false,
            "description": "No description available"
          },
          "Open": {
            "value": 21,
            "deprecated": false,
            "description": "No description available"
          },
          "PrefabHash": {
            "value": 17,
            "deprecated": false,
            "description": "returns the hash of the structure in the slot"
          },
          "Pressure": {
            "value": 8,
            "deprecated": false,
            "description": "returns pressure of the slot occupants internal atmosphere"
          },
          "PressureAir": {
            "value": 14,
            "deprecated": false,
            "description": "returns pressure in the air tank of the jetpack in this slot"
          },
          "PressureWaste": {
            "value": 13,
            "deprecated": false,
            "description": "returns pressure in the waste tank of the jetpack in this slot"
          },
          "Quantity": {
            "value": 3,
            "deprecated": false,
            "description": "returns the current quantity, such as stack size, of the item in the slot"
          },
          "ReferenceId": {
            "value": 26,
            "deprecated": false,
            "description": "Unique Reference Identifier for this object"
          },
          "Seeding": {
            "value": 18,
            "deprecated": false,
            "description": "Whether a plant is seeding (ready to harvest seeds from). Returns 1 if seeding or 0 if not."
          },
          "SortingClass": {
            "value": 24,
            "deprecated": false,
            "description": "No description available"
          },
          "Temperature": {
            "value": 9,
            "deprecated": false,
            "description": "returns temperature of the slot occupants internal atmosphere"
          },
          "Volume": {
            "value": 20,
            "deprecated": false,
            "description": "No description available"
          }
        }
      },
      "LogicType": {
        "enumName": "LogicType",
        "values": {
          "Acceleration": {
            "value": 216,
            "deprecated": false,
            "description": "Change in velocity. Rockets that are deccelerating when landing will show this as negative value."
          },
          "Activate": {
            "value": 9,
            "deprecated": false,
            "description": "1 if device is activated (usually means running), otherwise 0"
          },
          "AirRelease": {
            "value": 75,
            "deprecated": false,
            "description": "The current state of the air release system, for example AirRelease = 1 for a Hardsuit sets Air Release to On"
          },
          "AlignmentError": {
            "value": 243,
            "deprecated": false,
            "description": "The angular discrepancy between the telescope's current orientation and the target. Indicates how 'off target' the telescope is. Returns NaN when no target."
          },
          "Apex": {
            "value": 238,
            "deprecated": false,
            "description": "The lowest altitude that the rocket will reach before it starts travelling upwards again."
          },
          "AutoLand": {
            "value": 226,
            "deprecated": false,
            "description": "Engages the automatic landing algorithm. The rocket will automatically throttle and turn on and off its engines to achieve a smooth landing."
          },
          "AutoShutOff": {
            "value": 218,
            "deprecated": false,
            "description": "Turns off all devices in the rocket upon reaching destination"
          },
          "BestContactFilter": {
            "value": 267,
            "deprecated": false,
            "description": "Filters the satellite's auto selection of targets to a single reference ID."
          },
          "Bpm": {
            "value": 103,
            "deprecated": false,
            "description": "Bpm"
          },
          "BurnTimeRemaining": {
            "value": 225,
            "deprecated": false,
            "description": "Estimated time in seconds until fuel is depleted. Calculated based on current fuel usage."
          },
          "CelestialHash": {
            "value": 242,
            "deprecated": false,
            "description": "The current hash of the targeted celestial object."
          },
          "CelestialParentHash": {
            "value": 250,
            "deprecated": false,
            "description": "The hash for the name of the parent the celestial is orbiting, 0 if there is no parent celestial."
          },
          "Channel0": {
            "value": 165,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel1": {
            "value": 166,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel2": {
            "value": 167,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel3": {
            "value": 168,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel4": {
            "value": 169,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel5": {
            "value": 170,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel6": {
            "value": 171,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Channel7": {
            "value": 172,
            "deprecated": false,
            "description": "Channel on a cable network which should be considered volatile"
          },
          "Charge": {
            "value": 11,
            "deprecated": false,
            "description": "The current charge the device has"
          },
          "Chart": {
            "value": 256,
            "deprecated": false,
            "description": "Progress status of Chart scan at the rocket's target Space Map Location. Returns a clamped normalised value. If Chart scan is not available returns -1."
          },
          "ChartedNavPoints": {
            "value": 259,
            "deprecated": false,
            "description": "The number of charted NavPoints at the rocket's target Space Map Location."
          },
          "ClearMemory": {
            "value": 62,
            "deprecated": false,
            "description": "When set to 1, clears the counter memory (e.g. ExportCount). Will set itself back to 0 when actioned"
          },
          "CollectableGoods": {
            "value": 101,
            "deprecated": false,
            "description": "Gets the cost of fuel to return the rocket to your current world."
          },
          "Color": {
            "value": 38,
            "deprecated": false,
            "description": "\n        Whether driven by concerns for clarity, safety or simple aesthetics, <link=Stationeers><color=#0080FFFF>Stationeers</color></link> have access to a small rainbow of colors for their constructions. These are the color setting for devices, represented as an integer.\n\n0: Blue\n1: Grey\n2: Green\n3: Orange\n4: Red\n5: Yellow\n6: White\n7: Black\n8: Brown\n9: Khaki\n10: Pink\n11: Purple\n\n        It is an unwavering universal law that anything higher than 11 will be purple. The <link=ODA><color=#0080FFFF>ODA</color></link> is powerless to change this. Similarly, anything lower than 0 will be Blue.\n      "
          },
          "Combustion": {
            "value": 98,
            "deprecated": false,
            "description": "The assess atmosphere is on fire. Returns 1 if atmosphere is on fire, 0 if not."
          },
          "CombustionInput": {
            "value": 146,
            "deprecated": false,
            "description": "The assess atmosphere is on fire. Returns 1 if device's input network is on fire, 0 if not."
          },
          "CombustionInput2": {
            "value": 147,
            "deprecated": false,
            "description": "The assess atmosphere is on fire. Returns 1 if device's Input2 network is on fire, 0 if not."
          },
          "CombustionLimiter": {
            "value": 153,
            "deprecated": false,
            "description": "Retards the rate of combustion inside the machine (range: 0-100), with 0 being the slowest rate of combustion and 100 being the fastest"
          },
          "CombustionOutput": {
            "value": 148,
            "deprecated": false,
            "description": "The assess atmosphere is on fire. Returns 1 if device's Output network is on fire, 0 if not."
          },
          "CombustionOutput2": {
            "value": 149,
            "deprecated": false,
            "description": "The assess atmosphere is on fire. Returns 1 if device's Output2 network is on fire, 0 if not."
          },
          "CompletionRatio": {
            "value": 61,
            "deprecated": false,
            "description": "How complete the current production is for this device, between 0 and 1"
          },
          "ContactTypeId": {
            "value": 198,
            "deprecated": false,
            "description": "The type id of the contact."
          },
          "CurrentCode": {
            "value": 261,
            "deprecated": false,
            "description": "The Space Map Address of the rockets current Space Map Location"
          },
          "CurrentResearchPodType": {
            "value": 93,
            "deprecated": false,
            "description": "<A:EN:1890273128>"
          },
          "Density": {
            "value": 262,
            "deprecated": false,
            "description": "The density of the rocket's target site's mine-able deposit."
          },
          "DestinationCode": {
            "value": 215,
            "deprecated": false,
            "description": "The Space Map Address of the rockets target Space Map Location"
          },
          "Discover": {
            "value": 255,
            "deprecated": false,
            "description": "Progress status of Discovery scan at the rocket's target Space Map Location. Returns a clamped normalised value. If Discovery scan is not available returns -1."
          },
          "DistanceAu": {
            "value": 244,
            "deprecated": false,
            "description": "The current distance to the celestial object, measured in astronomical units."
          },
          "DistanceKm": {
            "value": 249,
            "deprecated": false,
            "description": "The current distance to the celestial object, measured in kilometers."
          },
          "DrillCondition": {
            "value": 240,
            "deprecated": false,
            "description": "The current condition of the drill head in this devices drill slot. Expressed as a ratio between 0 and 1."
          },
          "DryMass": {
            "value": 220,
            "deprecated": false,
            "description": "The Mass in kilograms of the rocket excluding fuel. The more massive the rocket the more fuel will be required to move to a new location in space."
          },
          "Eccentricity": {
            "value": 247,
            "deprecated": false,
            "description": "A measure of how elliptical (oval) an orbit is. Ranges from 0 (a perfect circle) to 1 (a parabolic trajectory)."
          },
          "ElevatorLevel": {
            "value": 40,
            "deprecated": false,
            "description": "Level the elevator is currently at"
          },
          "ElevatorSpeed": {
            "value": 39,
            "deprecated": false,
            "description": "Current speed of the elevator"
          },
          "EntityState": {
            "value": 239,
            "deprecated": false,
            "description": "The current entity state, such as whether it is dead, unconscious or alive, expressed as a state integer."
          },
          "EnvironmentEfficiency": {
            "value": 104,
            "deprecated": false,
            "description": "The Environment Efficiency reported by the machine, as a float between 0 and 1"
          },
          "Error": {
            "value": 4,
            "deprecated": false,
            "description": "1 if device is in error state, otherwise 0"
          },
          "ExhaustVelocity": {
            "value": 235,
            "deprecated": false,
            "description": "The velocity of the exhaust gas in m/s"
          },
          "ExportCount": {
            "value": 63,
            "deprecated": false,
            "description": "How many items exported since last ClearMemory"
          },
          "ExportQuantity": {
            "value": 31,
            "deprecated": true,
            "description": "Total quantity of items exported by the device"
          },
          "ExportSlotHash": {
            "value": 42,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "ExportSlotOccupant": {
            "value": 32,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "Filtration": {
            "value": 74,
            "deprecated": false,
            "description": "The current state of the filtration system, for example Filtration = 1 for a Hardsuit sets filtration to On"
          },
          "FlightControlRule": {
            "value": 236,
            "deprecated": false,
            "description": "Flight control rule of rocket. None = 0, No AutoPilot. Normal = 1, Target Decent Apex of 60m. Alternate = 2, Velocity to High - Full throttle. Alternate2 = 3, Target an appropriate decent velocity as velocity is too low. FinalApproach = 4, Descend towards launch mount in a controlled manner."
          },
          "Flush": {
            "value": 174,
            "deprecated": false,
            "description": "Set to 1 to activate the flush function on the device"
          },
          "ForceWrite": {
            "value": 85,
            "deprecated": false,
            "description": "Forces Logic Writer devices to rewrite value"
          },
          "ForwardX": {
            "value": 227,
            "deprecated": false,
            "description": "The direction the entity is facing expressed as a normalized vector"
          },
          "ForwardY": {
            "value": 228,
            "deprecated": false,
            "description": "The direction the entity is facing expressed as a normalized vector"
          },
          "ForwardZ": {
            "value": 229,
            "deprecated": false,
            "description": "The direction the entity is facing expressed as a normalized vector"
          },
          "Fuel": {
            "value": 99,
            "deprecated": false,
            "description": "Gets the cost of fuel to return the rocket to your current world."
          },
          "Harvest": {
            "value": 69,
            "deprecated": false,
            "description": "Performs the harvesting action for any plant based machinery"
          },
          "Horizontal": {
            "value": 20,
            "deprecated": false,
            "description": "Horizontal setting of the device"
          },
          "HorizontalRatio": {
            "value": 34,
            "deprecated": false,
            "description": "Radio of horizontal setting for device"
          },
          "Idle": {
            "value": 37,
            "deprecated": false,
            "description": "Returns 1 if the device is currently idle, otherwise 0"
          },
          "ImportCount": {
            "value": 64,
            "deprecated": false,
            "description": "How many items imported since last ClearMemory"
          },
          "ImportQuantity": {
            "value": 29,
            "deprecated": true,
            "description": "Total quantity of items imported by the device"
          },
          "ImportSlotHash": {
            "value": 43,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "ImportSlotOccupant": {
            "value": 30,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "Inclination": {
            "value": 246,
            "deprecated": false,
            "description": "The tilt of an orbit's plane relative to the equatorial plane, measured in degrees. Defines the orbital plane's angle."
          },
          "Index": {
            "value": 241,
            "deprecated": false,
            "description": "The current index for the device."
          },
          "InterrogationProgress": {
            "value": 157,
            "deprecated": false,
            "description": "Progress of this sattellite dish's interrogation of its current target, as a ratio from 0-1"
          },
          "LineNumber": {
            "value": 173,
            "deprecated": false,
            "description": "The line number of current execution for an integrated circuit running on this device. While this number can be written, use with caution"
          },
          "Lock": {
            "value": 10,
            "deprecated": false,
            "description": "1 if device is locked, otherwise 0, can be set in most devices and prevents the user from access the values"
          },
          "ManualResearchRequiredPod": {
            "value": 94,
            "deprecated": false,
            "description": "Sets the pod type to search for a certain pod when breaking down a pods."
          },
          "Mass": {
            "value": 219,
            "deprecated": false,
            "description": "The total Mass of the rocket in kilograms including fuel and cargo. The more massive the rocket the more fuel will be required to move to a new location in space."
          },
          "Maximum": {
            "value": 23,
            "deprecated": false,
            "description": "Maximum setting of the device"
          },
          "MineablesInQueue": {
            "value": 96,
            "deprecated": false,
            "description": "Returns the amount of mineables AIMEe has queued up to mine."
          },
          "MineablesInVicinity": {
            "value": 95,
            "deprecated": false,
            "description": "Returns the amount of potential mineables within an extended area around AIMEe."
          },
          "MinedQuantity": {
            "value": 266,
            "deprecated": false,
            "description": "The total number of resources that have been mined at the rocket's target Space Map Site."
          },
          "MinimumWattsToContact": {
            "value": 163,
            "deprecated": false,
            "description": "Minimum required amount of watts from the dish hitting the target trader contact to start interrogating the contact"
          },
          "Mode": {
            "value": 3,
            "deprecated": false,
            "description": "Integer for mode state, different devices will have different mode states available to them"
          },
          "NameHash": {
            "value": 268,
            "deprecated": false,
            "description": "Provides the hash value for the name of the object as a 32 bit integer."
          },
          "NavPoints": {
            "value": 258,
            "deprecated": false,
            "description": "The number of NavPoints at the rocket's target Space Map Location."
          },
          "NextWeatherEventTime": {
            "value": 97,
            "deprecated": false,
            "description": "Returns in seconds when the next weather event is inbound."
          },
          "None": {
            "value": 0,
            "deprecated": true,
            "description": "No description"
          },
          "On": {
            "value": 28,
            "deprecated": false,
            "description": "The current state of the device, 0 for off, 1 for on"
          },
          "Open": {
            "value": 2,
            "deprecated": false,
            "description": "1 if device is open, otherwise 0"
          },
          "OperationalTemperatureEfficiency": {
            "value": 150,
            "deprecated": false,
            "description": "How the input pipe's temperature effects the machines efficiency"
          },
          "OrbitPeriod": {
            "value": 245,
            "deprecated": false,
            "description": "The time it takes for an object to complete one full orbit around another object, measured in days. Indicates the duration of the orbital cycle."
          },
          "Orientation": {
            "value": 230,
            "deprecated": false,
            "description": "The orientation of the entity in degrees in a plane relative towards the north origin"
          },
          "Output": {
            "value": 70,
            "deprecated": false,
            "description": "The output operation for a sort handling device, such as a stacker or sorter, when in logic mode the device will only action one repetition when set zero or above and then back to -1 and await further instructions"
          },
          "PassedMoles": {
            "value": 234,
            "deprecated": false,
            "description": "The number of moles that passed through this device on the previous simulation tick"
          },
          "Plant": {
            "value": 68,
            "deprecated": false,
            "description": "Performs the planting action for any plant based machinery"
          },
          "PlantEfficiency1": {
            "value": 52,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantEfficiency2": {
            "value": 53,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantEfficiency3": {
            "value": 54,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantEfficiency4": {
            "value": 55,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantGrowth1": {
            "value": 48,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantGrowth2": {
            "value": 49,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantGrowth3": {
            "value": 50,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantGrowth4": {
            "value": 51,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHash1": {
            "value": 56,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHash2": {
            "value": 57,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHash3": {
            "value": 58,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHash4": {
            "value": 59,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHealth1": {
            "value": 44,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHealth2": {
            "value": 45,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHealth3": {
            "value": 46,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PlantHealth4": {
            "value": 47,
            "deprecated": true,
            "description": "DEPRECATED"
          },
          "PositionX": {
            "value": 76,
            "deprecated": false,
            "description": "The current position in X dimension in world coordinates"
          },
          "PositionY": {
            "value": 77,
            "deprecated": false,
            "description": "The current position in Y dimension in world coordinates"
          },
          "PositionZ": {
            "value": 78,
            "deprecated": false,
            "description": "The current position in Z dimension in world coordinates"
          },
          "Power": {
            "value": 1,
            "deprecated": false,
            "description": "Can be read to return if the device is correctly powered or not, set via the power system, return 1 if powered and 0 if not"
          },
          "PowerActual": {
            "value": 26,
            "deprecated": false,
            "description": "How much energy the device or network is actually using"
          },
          "PowerGeneration": {
            "value": 65,
            "deprecated": false,
            "description": "Returns how much power is being generated"
          },
          "PowerPotential": {
            "value": 25,
            "deprecated": false,
            "description": "How much energy the device or network potentially provides"
          },
          "PowerRequired": {
            "value": 36,
            "deprecated": false,
            "description": "Power requested from the device and/or network"
          },
          "PrefabHash": {
            "value": 84,
            "deprecated": false,
            "description": "The hash of the structure"
          },
          "Pressure": {
            "value": 5,
            "deprecated": false,
            "description": "The current pressure reading of the device"
          },
          "PressureEfficiency": {
            "value": 152,
            "deprecated": false,
            "description": "How the pressure of the input pipe and waste pipe effect the machines efficiency"
          },
          "PressureExternal": {
            "value": 7,
            "deprecated": false,
            "description": "Setting for external pressure safety, in KPa"
          },
          "PressureInput": {
            "value": 106,
            "deprecated": false,
            "description": "The current pressure reading of the device's Input Network"
          },
          "PressureInput2": {
            "value": 116,
            "deprecated": false,
            "description": "The current pressure reading of the device's Input2 Network"
          },
          "PressureInternal": {
            "value": 8,
            "deprecated": false,
            "description": "Setting for internal pressure safety, in KPa"
          },
          "PressureOutput": {
            "value": 126,
            "deprecated": false,
            "description": "The current pressure reading of the device's Output Network"
          },
          "PressureOutput2": {
            "value": 136,
            "deprecated": false,
            "description": "The current pressure reading of the device's Output2 Network"
          },
          "PressureSetting": {
            "value": 71,
            "deprecated": false,
            "description": "The current setting for the internal pressure of the object (e.g. the Hardsuit Air release), in KPa"
          },
          "Progress": {
            "value": 214,
            "deprecated": false,
            "description": "Progress of the rocket to the next node on the map expressed as a value between 0-1."
          },
          "Quantity": {
            "value": 27,
            "deprecated": false,
            "description": "Total quantity on the device"
          },
          "Ratio": {
            "value": 24,
            "deprecated": false,
            "description": "Context specific value depending on device, 0 to 1 based ratio"
          },
          "RatioCarbonDioxide": {
            "value": 15,
            "deprecated": false,
            "description": "The ratio of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> in device atmosphere"
          },
          "RatioCarbonDioxideInput": {
            "value": 109,
            "deprecated": false,
            "description": "The ratio of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> in device's input network"
          },
          "RatioCarbonDioxideInput2": {
            "value": 119,
            "deprecated": false,
            "description": "The ratio of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> in device's Input2 network"
          },
          "RatioCarbonDioxideOutput": {
            "value": 129,
            "deprecated": false,
            "description": "The ratio of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> in device's Output network"
          },
          "RatioCarbonDioxideOutput2": {
            "value": 139,
            "deprecated": false,
            "description": "The ratio of <link=GasCarbonDioxide><color=#44AD83>Carbon Dioxide</color></link> in device's Output2 network"
          },
          "RatioHydrogen": {
            "value": 252,
            "deprecated": false,
            "description": "The ratio of <link=GasHydrogen><color=#44AD83>Hydrogen</color></link> in device's Atmopshere"
          },
          "RatioLiquidCarbonDioxide": {
            "value": 199,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidCarbonDioxide><color=#44AD83>Liquid Carbon Dioxide</color></link> in device's Atmosphere"
          },
          "RatioLiquidCarbonDioxideInput": {
            "value": 200,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidCarbonDioxide><color=#44AD83>Liquid Carbon Dioxide</color></link> in device's Input Atmosphere"
          },
          "RatioLiquidCarbonDioxideInput2": {
            "value": 201,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidCarbonDioxide><color=#44AD83>Liquid Carbon Dioxide</color></link> in device's Input2 Atmosphere"
          },
          "RatioLiquidCarbonDioxideOutput": {
            "value": 202,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidCarbonDioxide><color=#44AD83>Liquid Carbon Dioxide</color></link> in device's device's Output Atmosphere"
          },
          "RatioLiquidCarbonDioxideOutput2": {
            "value": 203,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidCarbonDioxide><color=#44AD83>Liquid Carbon Dioxide</color></link> in device's Output2 Atmopshere"
          },
          "RatioLiquidHydrogen": {
            "value": 253,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidHydrogen><color=#44AD83>Liquid Hydrogen</color></link> in device's Atmopshere"
          },
          "RatioLiquidNitrogen": {
            "value": 177,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrogen><color=#44AD83>Liquid Nitrogen</color></link> in device atmosphere"
          },
          "RatioLiquidNitrogenInput": {
            "value": 178,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrogen><color=#44AD83>Liquid Nitrogen</color></link> in device's input network"
          },
          "RatioLiquidNitrogenInput2": {
            "value": 179,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrogen><color=#44AD83>Liquid Nitrogen</color></link> in device's Input2 network"
          },
          "RatioLiquidNitrogenOutput": {
            "value": 180,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrogen><color=#44AD83>Liquid Nitrogen</color></link> in device's Output network"
          },
          "RatioLiquidNitrogenOutput2": {
            "value": 181,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrogen><color=#44AD83>Liquid Nitrogen</color></link> in device's Output2 network"
          },
          "RatioLiquidNitrousOxide": {
            "value": 209,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link> in device's Atmosphere"
          },
          "RatioLiquidNitrousOxideInput": {
            "value": 210,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link> in device's Input Atmosphere"
          },
          "RatioLiquidNitrousOxideInput2": {
            "value": 211,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link> in device's Input2 Atmosphere"
          },
          "RatioLiquidNitrousOxideOutput": {
            "value": 212,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link> in device's device's Output Atmosphere"
          },
          "RatioLiquidNitrousOxideOutput2": {
            "value": 213,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidNitrousOxide><color=#44AD83>Liquid Nitrous Oxide</color></link> in device's Output2 Atmopshere"
          },
          "RatioLiquidOxygen": {
            "value": 183,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link> in device's Atmosphere"
          },
          "RatioLiquidOxygenInput": {
            "value": 184,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link> in device's Input Atmosphere"
          },
          "RatioLiquidOxygenInput2": {
            "value": 185,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link> in device's Input2 Atmosphere"
          },
          "RatioLiquidOxygenOutput": {
            "value": 186,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link> in device's device's Output Atmosphere"
          },
          "RatioLiquidOxygenOutput2": {
            "value": 187,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidOxygen><color=#44AD83>Liquid Oxygen</color></link> in device's Output2 Atmopshere"
          },
          "RatioLiquidPollutant": {
            "value": 204,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidPollutant><color=#44AD83>Liquid Pollutant</color></link> in device's Atmosphere"
          },
          "RatioLiquidPollutantInput": {
            "value": 205,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidPollutant><color=#44AD83>Liquid Pollutant</color></link> in device's Input Atmosphere"
          },
          "RatioLiquidPollutantInput2": {
            "value": 206,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidPollutant><color=#44AD83>Liquid Pollutant</color></link> in device's Input2 Atmosphere"
          },
          "RatioLiquidPollutantOutput": {
            "value": 207,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidPollutant><color=#44AD83>Liquid Pollutant</color></link> in device's device's Output Atmosphere"
          },
          "RatioLiquidPollutantOutput2": {
            "value": 208,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidPollutant><color=#44AD83>Liquid Pollutant</color></link> in device's Output2 Atmopshere"
          },
          "RatioLiquidVolatiles": {
            "value": 188,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link> in device's Atmosphere"
          },
          "RatioLiquidVolatilesInput": {
            "value": 189,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link> in device's Input Atmosphere"
          },
          "RatioLiquidVolatilesInput2": {
            "value": 190,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link> in device's Input2 Atmosphere"
          },
          "RatioLiquidVolatilesOutput": {
            "value": 191,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link> in device's device's Output Atmosphere"
          },
          "RatioLiquidVolatilesOutput2": {
            "value": 192,
            "deprecated": false,
            "description": "The ratio of <link=GasLiquidVolatiles><color=#44AD83>Liquid Volatiles</color></link> in device's Output2 Atmopshere"
          },
          "RatioNitrogen": {
            "value": 16,
            "deprecated": false,
            "description": "The ratio of nitrogen in device atmosphere"
          },
          "RatioNitrogenInput": {
            "value": 110,
            "deprecated": false,
            "description": "The ratio of nitrogen in device's input network"
          },
          "RatioNitrogenInput2": {
            "value": 120,
            "deprecated": false,
            "description": "The ratio of nitrogen in device's Input2 network"
          },
          "RatioNitrogenOutput": {
            "value": 130,
            "deprecated": false,
            "description": "The ratio of nitrogen in device's Output network"
          },
          "RatioNitrogenOutput2": {
            "value": 140,
            "deprecated": false,
            "description": "The ratio of nitrogen in device's Output2 network"
          },
          "RatioNitrousOxide": {
            "value": 83,
            "deprecated": false,
            "description": "The ratio of <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> in device atmosphere"
          },
          "RatioNitrousOxideInput": {
            "value": 114,
            "deprecated": false,
            "description": "The ratio of <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> in device's input network"
          },
          "RatioNitrousOxideInput2": {
            "value": 124,
            "deprecated": false,
            "description": "The ratio of <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> in device's Input2 network"
          },
          "RatioNitrousOxideOutput": {
            "value": 134,
            "deprecated": false,
            "description": "The ratio of <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> in device's Output network"
          },
          "RatioNitrousOxideOutput2": {
            "value": 144,
            "deprecated": false,
            "description": "The ratio of <link=GasNitrousOxide><color=#44AD83>Nitrous Oxide</color></link> in device's Output2 network"
          },
          "RatioOxygen": {
            "value": 14,
            "deprecated": false,
            "description": "The ratio of oxygen in device atmosphere"
          },
          "RatioOxygenInput": {
            "value": 108,
            "deprecated": false,
            "description": "The ratio of oxygen in device's input network"
          },
          "RatioOxygenInput2": {
            "value": 118,
            "deprecated": false,
            "description": "The ratio of oxygen in device's Input2 network"
          },
          "RatioOxygenOutput": {
            "value": 128,
            "deprecated": false,
            "description": "The ratio of oxygen in device's Output network"
          },
          "RatioOxygenOutput2": {
            "value": 138,
            "deprecated": false,
            "description": "The ratio of oxygen in device's Output2 network"
          },
          "RatioPollutant": {
            "value": 17,
            "deprecated": false,
            "description": "The ratio of pollutant in device atmosphere"
          },
          "RatioPollutantInput": {
            "value": 111,
            "deprecated": false,
            "description": "The ratio of pollutant in device's input network"
          },
          "RatioPollutantInput2": {
            "value": 121,
            "deprecated": false,
            "description": "The ratio of pollutant in device's Input2 network"
          },
          "RatioPollutantOutput": {
            "value": 131,
            "deprecated": false,
            "description": "The ratio of pollutant in device's Output network"
          },
          "RatioPollutantOutput2": {
            "value": 141,
            "deprecated": false,
            "description": "The ratio of pollutant in device's Output2 network"
          },
          "RatioPollutedWater": {
            "value": 254,
            "deprecated": false,
            "description": "The ratio of polluted water in device atmosphere"
          },
          "RatioSteam": {
            "value": 193,
            "deprecated": false,
            "description": "The ratio of <link=GasSteam><color=#44AD83>Steam</color></link> in device's Atmosphere"
          },
          "RatioSteamInput": {
            "value": 194,
            "deprecated": false,
            "description": "The ratio of <link=GasSteam><color=#44AD83>Steam</color></link> in device's Input Atmosphere"
          },
          "RatioSteamInput2": {
            "value": 195,
            "deprecated": false,
            "description": "The ratio of <link=GasSteam><color=#44AD83>Steam</color></link> in device's Input2 Atmosphere"
          },
          "RatioSteamOutput": {
            "value": 196,
            "deprecated": false,
            "description": "The ratio of <link=GasSteam><color=#44AD83>Steam</color></link> in device's device's Output Atmosphere"
          },
          "RatioSteamOutput2": {
            "value": 197,
            "deprecated": false,
            "description": "The ratio of <link=GasSteam><color=#44AD83>Steam</color></link> in device's Output2 Atmopshere"
          },
          "RatioVolatiles": {
            "value": 18,
            "deprecated": false,
            "description": "The ratio of volatiles in device atmosphere"
          },
          "RatioVolatilesInput": {
            "value": 112,
            "deprecated": false,
            "description": "The ratio of volatiles in device's input network"
          },
          "RatioVolatilesInput2": {
            "value": 122,
            "deprecated": false,
            "description": "The ratio of volatiles in device's Input2 network"
          },
          "RatioVolatilesOutput": {
            "value": 132,
            "deprecated": false,
            "description": "The ratio of volatiles in device's Output network"
          },
          "RatioVolatilesOutput2": {
            "value": 142,
            "deprecated": false,
            "description": "The ratio of volatiles in device's Output2 network"
          },
          "RatioWater": {
            "value": 19,
            "deprecated": false,
            "description": "The ratio of water in device atmosphere"
          },
          "RatioWaterInput": {
            "value": 113,
            "deprecated": false,
            "description": "The ratio of water in device's input network"
          },
          "RatioWaterInput2": {
            "value": 123,
            "deprecated": false,
            "description": "The ratio of water in device's Input2 network"
          },
          "RatioWaterOutput": {
            "value": 133,
            "deprecated": false,
            "description": "The ratio of water in device's Output network"
          },
          "RatioWaterOutput2": {
            "value": 143,
            "deprecated": false,
            "description": "The ratio of water in device's Output2 network"
          },
          "ReEntryAltitude": {
            "value": 237,
            "deprecated": false,
            "description": "The altitude that the rocket will begin its decent to the pad. Must be between 25km and 120km"
          },
          "Reagents": {
            "value": 13,
            "deprecated": false,
            "description": "Total number of reagents recorded by the device"
          },
          "RecipeHash": {
            "value": 41,
            "deprecated": false,
            "description": "Current hash of the recipe the device is set to produce"
          },
          "ReferenceId": {
            "value": 217,
            "deprecated": false,
            "description": "Unique Reference Identifier for this object"
          },
          "RequestHash": {
            "value": 60,
            "deprecated": false,
            "description": "When set to the unique identifier, requests an item of the provided type from the device"
          },
          "RequiredPower": {
            "value": 33,
            "deprecated": false,
            "description": "Idle operating power quantity, does not necessarily include extra demand power"
          },
          "ReturnFuelCost": {
            "value": 100,
            "deprecated": false,
            "description": "Gets the fuel remaining in your rocket's fuel tank."
          },
          "Richness": {
            "value": 263,
            "deprecated": false,
            "description": "The richness of the rocket's target site's mine-able deposit."
          },
          "Rpm": {
            "value": 155,
            "deprecated": false,
            "description": "The number of revolutions per minute that the device's spinning mechanism is doing"
          },
          "SemiMajorAxis": {
            "value": 248,
            "deprecated": false,
            "description": "The longest radius of an elliptical orbit in astronomical units, measuring half the major axis. Determines the size of the orbit."
          },
          "Setting": {
            "value": 12,
            "deprecated": false,
            "description": "A variable setting that can be read or written, depending on the device"
          },
          "SettingInput": {
            "value": 91,
            "deprecated": false,
            "description": "<A:EN:-1139210406>"
          },
          "SettingOutput": {
            "value": 92,
            "deprecated": false,
            "description": "<A:EN:1605622326>"
          },
          "SignalID": {
            "value": 87,
            "deprecated": false,
            "description": "Returns the contact ID of the strongest signal from this Satellite"
          },
          "SignalStrength": {
            "value": 86,
            "deprecated": false,
            "description": "Returns the degree offset of the strongest contact"
          },
          "Sites": {
            "value": 260,
            "deprecated": false,
            "description": "The number of Sites that have been discovered at the rockets target Space Map location."
          },
          "Size": {
            "value": 264,
            "deprecated": false,
            "description": "The size of the rocket's target site's mine-able deposit."
          },
          "SizeX": {
            "value": 160,
            "deprecated": false,
            "description": "Size on the X (right) axis of the object in largeGrids (a largeGrid is 2meters)"
          },
          "SizeY": {
            "value": 161,
            "deprecated": false,
            "description": "Size on the Y(Up) axis of the object in largeGrids (a largeGrid is 2meters)"
          },
          "SizeZ": {
            "value": 162,
            "deprecated": false,
            "description": "Size on the Z(Forward) axis of the object in largeGrids (a largeGrid is 2meters)"
          },
          "SolarAngle": {
            "value": 22,
            "deprecated": false,
            "description": "Solar angle of the device"
          },
          "SolarIrradiance": {
            "value": 176,
            "deprecated": false,
            "description": "<A:EN:-1627927313>"
          },
          "SoundAlert": {
            "value": 175,
            "deprecated": false,
            "description": "Plays a sound alert on the devices speaker"
          },
          "Stress": {
            "value": 156,
            "deprecated": false,
            "description": "Machines get stressed when working hard. When Stress reaches 100 the machine will automatically shut down"
          },
          "Survey": {
            "value": 257,
            "deprecated": false,
            "description": "Progress status of Survey scan at the rocket's target Space Map Location. Returns a normalised value where 100% surveyed is equal to 1. If Survey scan is not available returns -1."
          },
          "TargetPadIndex": {
            "value": 158,
            "deprecated": false,
            "description": "The index of the trader landing pad on this devices data network that it will try to call a trader in to land"
          },
          "TargetX": {
            "value": 88,
            "deprecated": false,
            "description": "The target position in X dimension in world coordinates"
          },
          "TargetY": {
            "value": 89,
            "deprecated": false,
            "description": "The target position in Y dimension in world coordinates"
          },
          "TargetZ": {
            "value": 90,
            "deprecated": false,
            "description": "The target position in Z dimension in world coordinates"
          },
          "Temperature": {
            "value": 6,
            "deprecated": false,
            "description": "The current temperature reading of the device"
          },
          "TemperatureDifferentialEfficiency": {
            "value": 151,
            "deprecated": false,
            "description": "How the difference between the input pipe and waste pipe temperatures effect the machines efficiency"
          },
          "TemperatureExternal": {
            "value": 73,
            "deprecated": false,
            "description": "The temperature of the outside of the device, usually the world atmosphere surrounding it"
          },
          "TemperatureInput": {
            "value": 107,
            "deprecated": false,
            "description": "The current temperature reading of the device's Input Network"
          },
          "TemperatureInput2": {
            "value": 117,
            "deprecated": false,
            "description": "The current temperature reading of the device's Input2 Network"
          },
          "TemperatureOutput": {
            "value": 127,
            "deprecated": false,
            "description": "The current temperature reading of the device's Output Network"
          },
          "TemperatureOutput2": {
            "value": 137,
            "deprecated": false,
            "description": "The current temperature reading of the device's Output2 Network"
          },
          "TemperatureSetting": {
            "value": 72,
            "deprecated": false,
            "description": "The current setting for the internal temperature of the object (e.g. the Hardsuit A/C)"
          },
          "Throttle": {
            "value": 154,
            "deprecated": false,
            "description": "Increases the rate at which the machine works (range: 0-100)"
          },
          "Thrust": {
            "value": 221,
            "deprecated": false,
            "description": "Total current thrust of all rocket engines on the rocket in Newtons."
          },
          "ThrustToWeight": {
            "value": 223,
            "deprecated": false,
            "description": "Ratio of thrust to weight of rocket. Weight is effected by local body gravity. A rocket with a low thrust to weight will expend more fuel during launch and landing."
          },
          "Time": {
            "value": 102,
            "deprecated": false,
            "description": "Time"
          },
          "TimeToDestination": {
            "value": 224,
            "deprecated": false,
            "description": "Estimated time in seconds until rocket arrives at target destination."
          },
          "TotalMoles": {
            "value": 66,
            "deprecated": false,
            "description": "Returns the total moles of the device"
          },
          "TotalMolesInput": {
            "value": 115,
            "deprecated": false,
            "description": "Returns the total moles of the device's Input Network"
          },
          "TotalMolesInput2": {
            "value": 125,
            "deprecated": false,
            "description": "Returns the total moles of the device's Input2 Network"
          },
          "TotalMolesOutput": {
            "value": 135,
            "deprecated": false,
            "description": "Returns the total moles of the device's Output Network"
          },
          "TotalMolesOutput2": {
            "value": 145,
            "deprecated": false,
            "description": "Returns the total moles of the device's Output2 Network"
          },
          "TotalQuantity": {
            "value": 265,
            "deprecated": false,
            "description": "The estimated total quantity of resources available to mine at the rocket's target Space Map Site."
          },
          "TrueAnomaly": {
            "value": 251,
            "deprecated": false,
            "description": "An angular parameter that defines the position of a body moving along a Keplerian orbit. It is the angle between the direction of periapsis and the current position of the body, as seen from the main focus of the ellipse (the point around which the object orbits)."
          },
          "VelocityMagnitude": {
            "value": 79,
            "deprecated": false,
            "description": "The current magnitude of the velocity vector"
          },
          "VelocityRelativeX": {
            "value": 80,
            "deprecated": false,
            "description": "The current velocity X relative to the forward vector of this"
          },
          "VelocityRelativeY": {
            "value": 81,
            "deprecated": false,
            "description": "The current velocity Y relative to the forward vector of this"
          },
          "VelocityRelativeZ": {
            "value": 82,
            "deprecated": false,
            "description": "The current velocity Z relative to the forward vector of this"
          },
          "VelocityX": {
            "value": 231,
            "deprecated": false,
            "description": "The world velocity of the entity in the X axis"
          },
          "VelocityY": {
            "value": 232,
            "deprecated": false,
            "description": "The world velocity of the entity in the Y axis"
          },
          "VelocityZ": {
            "value": 233,
            "deprecated": false,
            "description": "The world velocity of the entity in the Z axis"
          },
          "Vertical": {
            "value": 21,
            "deprecated": false,
            "description": "Vertical setting of the device"
          },
          "VerticalRatio": {
            "value": 35,
            "deprecated": false,
            "description": "Radio of vertical setting for device"
          },
          "Volume": {
            "value": 67,
            "deprecated": false,
            "description": "Returns the device atmosphere volume"
          },
          "VolumeOfLiquid": {
            "value": 182,
            "deprecated": false,
            "description": "The total volume of all liquids in Liters in the atmosphere"
          },
          "WattsReachingContact": {
            "value": 164,
            "deprecated": false,
            "description": "The amount of watts actually hitting the contact. This is effected by the power of the dish and how far off-axis the dish is from the contact vector"
          },
          "Weight": {
            "value": 222,
            "deprecated": false,
            "description": "Weight of Rocket in Newtons (Including fuel and cargo). Weight is effected by local body gravity."
          },
          "WorkingGasEfficiency": {
            "value": 105,
            "deprecated": false,
            "description": "The Working Gas Efficiency reported by the machine, as a float between 0 and 1"
          }
        }
      },
      "PowerMode": {
        "enumName": "PowerMode",
        "values": {
          "Charged": {
            "value": 4,
            "deprecated": false,
            "description": ""
          },
          "Charging": {
            "value": 3,
            "deprecated": false,
            "description": ""
          },
          "Discharged": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Discharging": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "Idle": {
            "value": 0,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "PrinterInstruction": {
        "enumName": "PrinterInstruction",
        "values": {
          "DeviceSetLock": {
            "value": 6,
            "deprecated": false,
            "description": ""
          },
          "EjectAllReagents": {
            "value": 8,
            "deprecated": false,
            "description": ""
          },
          "EjectReagent": {
            "value": 7,
            "deprecated": false,
            "description": ""
          },
          "ExecuteRecipe": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "JumpIfNextInvalid": {
            "value": 4,
            "deprecated": false,
            "description": ""
          },
          "JumpToAddress": {
            "value": 5,
            "deprecated": false,
            "description": ""
          },
          "MissingRecipeReagent": {
            "value": 9,
            "deprecated": false,
            "description": ""
          },
          "None": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "StackPointer": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "WaitUntilNextValid": {
            "value": 3,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "ReEntryProfile": {
        "enumName": "ReEntryProfile",
        "values": {
          "High": {
            "value": 3,
            "deprecated": false,
            "description": ""
          },
          "Max": {
            "value": 4,
            "deprecated": false,
            "description": ""
          },
          "Medium": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "None": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Optimal": {
            "value": 1,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "RobotMode": {
        "enumName": "RobotMode",
        "values": {
          "Follow": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "MoveToTarget": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "None": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "PathToTarget": {
            "value": 5,
            "deprecated": false,
            "description": ""
          },
          "Roam": {
            "value": 3,
            "deprecated": false,
            "description": ""
          },
          "StorageFull": {
            "value": 6,
            "deprecated": false,
            "description": ""
          },
          "Unload": {
            "value": 4,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "RocketMode": {
        "enumName": "RocketMode",
        "values": {
          "Chart": {
            "value": 5,
            "deprecated": false,
            "description": ""
          },
          "Discover": {
            "value": 4,
            "deprecated": false,
            "description": ""
          },
          "Invalid": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Mine": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "None": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Survey": {
            "value": 3,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "SlotClass": {
        "enumName": "Class",
        "values": {
          "AccessCard": {
            "value": 22,
            "deprecated": false,
            "description": ""
          },
          "Appliance": {
            "value": 18,
            "deprecated": false,
            "description": ""
          },
          "Back": {
            "value": 3,
            "deprecated": false,
            "description": ""
          },
          "Battery": {
            "value": 14,
            "deprecated": false,
            "description": ""
          },
          "Belt": {
            "value": 16,
            "deprecated": false,
            "description": ""
          },
          "Blocked": {
            "value": 38,
            "deprecated": false,
            "description": ""
          },
          "Bottle": {
            "value": 25,
            "deprecated": false,
            "description": ""
          },
          "Cartridge": {
            "value": 21,
            "deprecated": false,
            "description": ""
          },
          "Circuit": {
            "value": 24,
            "deprecated": false,
            "description": ""
          },
          "Circuitboard": {
            "value": 7,
            "deprecated": false,
            "description": ""
          },
          "CreditCard": {
            "value": 28,
            "deprecated": false,
            "description": ""
          },
          "DataDisk": {
            "value": 8,
            "deprecated": false,
            "description": ""
          },
          "DirtCanister": {
            "value": 29,
            "deprecated": false,
            "description": ""
          },
          "DrillHead": {
            "value": 35,
            "deprecated": false,
            "description": ""
          },
          "Egg": {
            "value": 15,
            "deprecated": false,
            "description": ""
          },
          "Entity": {
            "value": 13,
            "deprecated": false,
            "description": ""
          },
          "Flare": {
            "value": 37,
            "deprecated": false,
            "description": ""
          },
          "GasCanister": {
            "value": 5,
            "deprecated": false,
            "description": ""
          },
          "GasFilter": {
            "value": 4,
            "deprecated": false,
            "description": ""
          },
          "Glasses": {
            "value": 27,
            "deprecated": false,
            "description": ""
          },
          "Helmet": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Ingot": {
            "value": 19,
            "deprecated": false,
            "description": ""
          },
          "LiquidBottle": {
            "value": 32,
            "deprecated": false,
            "description": ""
          },
          "LiquidCanister": {
            "value": 31,
            "deprecated": false,
            "description": ""
          },
          "Magazine": {
            "value": 23,
            "deprecated": false,
            "description": ""
          },
          "Motherboard": {
            "value": 6,
            "deprecated": false,
            "description": ""
          },
          "None": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Ore": {
            "value": 10,
            "deprecated": false,
            "description": ""
          },
          "Organ": {
            "value": 9,
            "deprecated": false,
            "description": ""
          },
          "Plant": {
            "value": 11,
            "deprecated": false,
            "description": ""
          },
          "ProgrammableChip": {
            "value": 26,
            "deprecated": false,
            "description": ""
          },
          "ScanningHead": {
            "value": 36,
            "deprecated": false,
            "description": ""
          },
          "SensorProcessingUnit": {
            "value": 30,
            "deprecated": false,
            "description": ""
          },
          "SoundCartridge": {
            "value": 34,
            "deprecated": false,
            "description": ""
          },
          "Suit": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "SuitMod": {
            "value": 39,
            "deprecated": false,
            "description": ""
          },
          "Tool": {
            "value": 17,
            "deprecated": false,
            "description": ""
          },
          "Torpedo": {
            "value": 20,
            "deprecated": false,
            "description": ""
          },
          "Uniform": {
            "value": 12,
            "deprecated": false,
            "description": ""
          },
          "Wreckage": {
            "value": 33,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "SorterInstruction": {
        "enumName": "SorterInstruction",
        "values": {
          "FilterPrefabHashEquals": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "FilterPrefabHashNotEquals": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "FilterQuantityCompare": {
            "value": 5,
            "deprecated": false,
            "description": ""
          },
          "FilterSlotTypeCompare": {
            "value": 4,
            "deprecated": false,
            "description": ""
          },
          "FilterSortingClassCompare": {
            "value": 3,
            "deprecated": false,
            "description": ""
          },
          "LimitNextExecutionByCount": {
            "value": 6,
            "deprecated": false,
            "description": ""
          },
          "None": {
            "value": 0,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "SortingClass": {
        "enumName": "SortingClass",
        "values": {
          "Appliances": {
            "value": 6,
            "deprecated": false,
            "description": ""
          },
          "Atmospherics": {
            "value": 7,
            "deprecated": false,
            "description": ""
          },
          "Clothing": {
            "value": 5,
            "deprecated": false,
            "description": ""
          },
          "Default": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Food": {
            "value": 4,
            "deprecated": false,
            "description": ""
          },
          "Ices": {
            "value": 10,
            "deprecated": false,
            "description": ""
          },
          "Kits": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Ores": {
            "value": 9,
            "deprecated": false,
            "description": ""
          },
          "Resources": {
            "value": 3,
            "deprecated": false,
            "description": ""
          },
          "Storage": {
            "value": 8,
            "deprecated": false,
            "description": ""
          },
          "Tools": {
            "value": 2,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "Sound": {
        "enumName": "SoundAlert",
        "values": {
          "AirlockCycling": {
            "value": 22,
            "deprecated": false,
            "description": ""
          },
          "Alarm1": {
            "value": 45,
            "deprecated": false,
            "description": ""
          },
          "Alarm10": {
            "value": 12,
            "deprecated": false,
            "description": ""
          },
          "Alarm11": {
            "value": 13,
            "deprecated": false,
            "description": ""
          },
          "Alarm12": {
            "value": 14,
            "deprecated": false,
            "description": ""
          },
          "Alarm2": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Alarm3": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "Alarm4": {
            "value": 3,
            "deprecated": false,
            "description": ""
          },
          "Alarm5": {
            "value": 4,
            "deprecated": false,
            "description": ""
          },
          "Alarm6": {
            "value": 5,
            "deprecated": false,
            "description": ""
          },
          "Alarm7": {
            "value": 6,
            "deprecated": false,
            "description": ""
          },
          "Alarm8": {
            "value": 10,
            "deprecated": false,
            "description": ""
          },
          "Alarm9": {
            "value": 11,
            "deprecated": false,
            "description": ""
          },
          "Alert": {
            "value": 17,
            "deprecated": false,
            "description": ""
          },
          "Danger": {
            "value": 15,
            "deprecated": false,
            "description": ""
          },
          "Depressurising": {
            "value": 20,
            "deprecated": false,
            "description": ""
          },
          "FireFireFire": {
            "value": 28,
            "deprecated": false,
            "description": ""
          },
          "Five": {
            "value": 33,
            "deprecated": false,
            "description": ""
          },
          "Floor": {
            "value": 34,
            "deprecated": false,
            "description": ""
          },
          "Four": {
            "value": 32,
            "deprecated": false,
            "description": ""
          },
          "HaltWhoGoesThere": {
            "value": 27,
            "deprecated": false,
            "description": ""
          },
          "HighCarbonDioxide": {
            "value": 44,
            "deprecated": false,
            "description": ""
          },
          "IntruderAlert": {
            "value": 19,
            "deprecated": false,
            "description": ""
          },
          "LiftOff": {
            "value": 36,
            "deprecated": false,
            "description": ""
          },
          "MalfunctionDetected": {
            "value": 26,
            "deprecated": false,
            "description": ""
          },
          "Music1": {
            "value": 7,
            "deprecated": false,
            "description": ""
          },
          "Music2": {
            "value": 8,
            "deprecated": false,
            "description": ""
          },
          "Music3": {
            "value": 9,
            "deprecated": false,
            "description": ""
          },
          "None": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "One": {
            "value": 29,
            "deprecated": false,
            "description": ""
          },
          "PollutantsDetected": {
            "value": 43,
            "deprecated": false,
            "description": ""
          },
          "PowerLow": {
            "value": 23,
            "deprecated": false,
            "description": ""
          },
          "PressureHigh": {
            "value": 39,
            "deprecated": false,
            "description": ""
          },
          "PressureLow": {
            "value": 40,
            "deprecated": false,
            "description": ""
          },
          "Pressurising": {
            "value": 21,
            "deprecated": false,
            "description": ""
          },
          "RocketLaunching": {
            "value": 35,
            "deprecated": false,
            "description": ""
          },
          "StormIncoming": {
            "value": 18,
            "deprecated": false,
            "description": ""
          },
          "SystemFailure": {
            "value": 24,
            "deprecated": false,
            "description": ""
          },
          "TemperatureHigh": {
            "value": 41,
            "deprecated": false,
            "description": ""
          },
          "TemperatureLow": {
            "value": 42,
            "deprecated": false,
            "description": ""
          },
          "Three": {
            "value": 31,
            "deprecated": false,
            "description": ""
          },
          "TraderIncoming": {
            "value": 37,
            "deprecated": false,
            "description": ""
          },
          "TraderLanded": {
            "value": 38,
            "deprecated": false,
            "description": ""
          },
          "Two": {
            "value": 30,
            "deprecated": false,
            "description": ""
          },
          "Warning": {
            "value": 16,
            "deprecated": false,
            "description": ""
          },
          "Welcome": {
            "value": 25,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "TransmitterMode": {
        "enumName": "LogicTransmitterMode",
        "values": {
          "Active": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Passive": {
            "value": 0,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "Vent": {
        "enumName": "VentDirection",
        "values": {
          "Inward": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Outward": {
            "value": 0,
            "deprecated": false,
            "description": ""
          }
        }
      },
      "_unnamed": {
        "enumName": "ConditionOperation",
        "values": {
          "Equals": {
            "value": 0,
            "deprecated": false,
            "description": ""
          },
          "Greater": {
            "value": 1,
            "deprecated": false,
            "description": ""
          },
          "Less": {
            "value": 2,
            "deprecated": false,
            "description": ""
          },
          "NotEquals": {
            "value": 3,
            "deprecated": false,
            "description": ""
          }
        }
      }
    }
  },
  "prefabsByHash": {
    "-2140672772": "ItemKitGroundTelescope",
    "-2138748650": "StructureSmallSatelliteDish",
    "-2128896573": "StructureStairwellBackRight",
    "-2127086069": "StructureBench2",
    "-2126113312": "ItemLiquidPipeValve",
    "-2124435700": "ItemDisposableBatteryCharger",
    "-2123455080": "StructureBatterySmall",
    "-2113838091": "StructureLiquidPipeAnalyzer",
    "-2113012215": "ItemGasTankStorage",
    "-2112390778": "StructureFrameCorner",
    "-2111886401": "ItemPotatoBaked",
    "-2107840748": "ItemFlashingLight",
    "-2106280569": "ItemLiquidPipeVolumePump",
    "-2105052344": "StructureAirlock",
    "-2104175091": "ItemCannedCondensedMilk",
    "-2098556089": "ItemKitHydraulicPipeBender",
    "-2098214189": "ItemKitLogicMemory",
    "-2096421875": "StructureInteriorDoorGlass",
    "-2087593337": "StructureAirConditioner",
    "-2087223687": "StructureRocketMiner",
    "-2085885850": "DynamicGPR",
    "-2083426457": "UniformCommander",
    "-2082355173": "StructureWindTurbine",
    "-2076086215": "StructureInsulatedPipeTJunction",
    "-2073202179": "ItemPureIcePollutedWater",
    "-2072792175": "RailingIndustrial02",
    "-2068497073": "StructurePipeInsulatedLiquidCrossJunction",
    "-2066892079": "ItemWeldingTorch",
    "-2066653089": "StructurePictureFrameThickMountPortraitSmall",
    "-2066405918": "Landingpad_DataConnectionPiece",
    "-2062364768": "ItemKitPictureFrame",
    "-2061979347": "ItemMKIIArcWelder",
    "-2060571986": "StructureCompositeWindow",
    "-2052458905": "ItemEmergencyDrill",
    "-2049946335": "Rover_MkI",
    "-2045627372": "StructureSolarPanel",
    "-2044446819": "CircuitboardShipDisplay",
    "-2042448192": "StructureBench",
    "-2041566697": "StructurePictureFrameThickLandscapeSmall",
    "-2039971217": "ItemKitLargeSatelliteDish",
    "-2038889137": "ItemKitMusicMachines",
    "-2038663432": "ItemStelliteGlassSheets",
    "-2038384332": "ItemKitVendingMachine",
    "-2031440019": "StructurePumpedLiquidEngine",
    "-2024250974": "StructurePictureFrameThinLandscapeSmall",
    "-2020231820": "StructureStacker",
    "-2015613246": "ItemMKIIScrewdriver",
    "-2008706143": "StructurePressurePlateLarge",
    "-2006384159": "StructurePipeLiquidCrossJunction5",
    "-1993197973": "ItemGasFilterWater",
    "-1991297271": "SpaceShuttle",
    "-1990600883": "SeedBag_Fern",
    "-1981101032": "ItemSecurityCamera",
    "-1976947556": "CardboardBox",
    "-1971419310": "ItemSoundCartridgeSynth",
    "-1968255729": "StructureCornerLocker",
    "-1967711059": "StructureInsulatedPipeCorner",
    "-1963016580": "StructureWallArchCornerSquare",
    "-1961153710": "StructureControlChair",
    "-1958705204": "PortableComposter",
    "-1957063345": "CartridgeGPS",
    "-1949054743": "StructureConsoleLED1x3",
    "-1943134693": "ItemDuctTape",
    "-1939209112": "DynamicLiquidCanisterEmpty",
    "-1935075707": "ItemKitDeepMiner",
    "-1931958659": "ItemKitAutomatedOven",
    "-1930442922": "MothershipCore",
    "-1924492105": "ItemKitSolarPanel",
    "-1923778429": "CircuitboardPowerControl",
    "-1922066841": "SeedBag_Tomato",
    "-1918892177": "StructureChuteUmbilicalFemale",
    "-1918215845": "StructureMediumConvectionRadiator",
    "-1916176068": "ItemGasFilterVolatilesInfinite",
    "-1908268220": "MotherboardSorter",
    "-1901500508": "ItemSoundCartridgeDrums",
    "-1900541738": "StructureFairingTypeA3",
    "-1898247915": "RailingElegant02",
    "-1897868623": "ItemStelliteIngot",
    "-1897221677": "StructureSmallTableBacklessSingle",
    "-1888248335": "StructureHydraulicPipeBender",
    "-1886261558": "ItemWrench",
    "-1884103228": "SeedBag_SugarCane",
    "-1883441704": "ItemSoundCartridgeBass",
    "-1880941852": "ItemSprayCanGreen",
    "-1877193979": "StructurePipeCrossJunction5",
    "-1875856925": "StructureSDBHopper",
    "-1875271296": "ItemMKIIMiningDrill",
    "-1872345847": "Landingpad_TaxiPieceCorner",
    "-1868555784": "ItemKitStairwell",
    "-1867508561": "ItemKitVendingMachineRefrigerated",
    "-1867280568": "ItemKitGasUmbilical",
    "-1866880307": "ItemBatteryCharger",
    "-1864982322": "ItemMuffin",
    "-1861154222": "ItemKitDynamicHydroponics",
    "-1860064656": "StructureWallLight",
    "-1856720921": "StructurePipeLiquidCorner",
    "-1854861891": "ItemGasCanisterWater",
    "-1854167549": "ItemKitLaunchMount",
    "-1844430312": "DeviceLfoVolume",
    "-1843379322": "StructureCableCornerH3",
    "-1841871763": "StructureCompositeCladdingAngledCornerInner",
    "-1841632400": "StructureHydroponicsTrayData",
    "-1831558953": "ItemKitInsulatedPipeUtilityLiquid",
    "-1826855889": "ItemKitWall",
    "-1826023284": "ItemWreckageAirConditioner1",
    "-1821571150": "ItemKitStirlingEngine",
    "-1814939203": "StructureGasUmbilicalMale",
    "-1812330717": "StructureSleeperRight",
    "-1808154199": "StructureManualHatch",
    "-1805394113": "ItemOxite",
    "-1805020897": "ItemKitLiquidTurboVolumePump",
    "-1798420047": "StructureLiquidUmbilicalMale",
    "-1798362329": "StructurePipeMeter",
    "-1798044015": "ItemKitUprightWindTurbine",
    "-1796655088": "ItemPipeRadiator",
    "-1794932560": "StructureOverheadShortCornerLocker",
    "-1792787349": "ItemCableAnalyser",
    "-1788929869": "Landingpad_LiquidConnectorOutwardPiece",
    "-1785673561": "StructurePipeCorner",
    "-1776897113": "ItemKitSensor",
    "-1773192190": "ItemReusableFireExtinguisher",
    "-1768732546": "CartridgeOreScanner",
    "-1766301997": "ItemPipeVolumePump",
    "-1758710260": "StructureGrowLight",
    "-1758310454": "ItemHardSuit",
    "-1756913871": "StructureRailing",
    "-1756896811": "StructureCableJunction4Burnt",
    "-1756772618": "ItemCreditCard",
    "-1755116240": "ItemKitBlastDoor",
    "-1753893214": "ItemKitAutolathe",
    "-1752768283": "ItemKitPassiveLargeRadiatorGas",
    "-1752493889": "StructurePictureFrameThinMountLandscapeSmall",
    "-1751627006": "ItemPipeHeater",
    "-1748926678": "ItemPureIceLiquidPollutant",
    "-1743663875": "ItemKitDrinkingFountain",
    "-1741267161": "DynamicGasCanisterEmpty",
    "-1737666461": "ItemSpaceCleaner",
    "-1731627004": "ItemAuthoringToolRocketNetwork",
    "-1730464583": "ItemSensorProcessingUnitMesonScanner",
    "-1721846327": "ItemWaterWallCooler",
    "-1715945725": "ItemPureIceLiquidCarbonDioxide",
    "-1713748313": "AccessCardRed",
    "-1713611165": "DynamicGasCanisterAir",
    "-1713470563": "StructureMotionSensor",
    "-1712264413": "ItemCookedPowderedEggs",
    "-1712153401": "ItemGasCanisterNitrousOxide",
    "-1710540039": "ItemKitHeatExchanger",
    "-1708395413": "ItemPureIceNitrogen",
    "-1697302609": "ItemKitPipeRadiatorLiquid",
    "-1693382705": "StructureInLineTankGas1x1",
    "-1691151239": "SeedBag_Rice",
    "-1686949570": "StructurePictureFrameThickPortraitLarge",
    "-1683849799": "ApplianceDeskLampLeft",
    "-1682930158": "ItemWreckageWallCooler1",
    "-1680477930": "StructureGasUmbilicalFemale",
    "-1678456554": "ItemGasFilterWaterInfinite",
    "-1674187440": "StructurePassthroughHeatExchangerGasToGas",
    "-1672404896": "StructureAutomatedOven",
    "-1668992663": "StructureElectrolyzer",
    "-1667675295": "MonsterEgg",
    "-1663349918": "ItemMiningDrillHeavy",
    "-1662476145": "ItemAstroloySheets",
    "-1662394403": "ItemWreckageTurbineGenerator1",
    "-1650383245": "ItemMiningBackPack",
    "-1645266981": "ItemSprayCanGrey",
    "-1641500434": "ItemReagentMix",
    "-1634532552": "CartridgeAccessController",
    "-1633947337": "StructureRecycler",
    "-1633000411": "StructureSmallTableBacklessDouble",
    "-1629347579": "ItemKitRocketGasFuelTank",
    "-1625452928": "StructureStairwellFrontPassthrough",
    "-1620686196": "StructureCableJunctionBurnt",
    "-1619793705": "ItemKitPipe",
    "-1616308158": "ItemPureIce",
    "-1613497288": "StructureBasketHoop",
    "-1611559100": "StructureWallPaddedThinNoBorder",
    "-1606848156": "StructureTankBig",
    "-1602030414": "StructureInsulatedTankConnectorLiquid",
    "-1590715731": "ItemKitTurbineGenerator",
    "-1585956426": "ItemKitCrateMkII",
    "-1577831321": "StructureRefrigeratedVendingMachine",
    "-1573623434": "ItemFlowerBlue",
    "-1567752627": "ItemWallCooler",
    "-1554349863": "StructureSolarPanel45",
    "-1552586384": "ItemGasCanisterPollutants",
    "-1550278665": "CartridgeAtmosAnalyser",
    "-1546743960": "StructureWallPaddedArchLightsFittings",
    "-1545574413": "StructureSolarPanelDualReinforced",
    "-1542172466": "StructureCableCorner4",
    "-1536471028": "StructurePressurePlateSmall",
    "-1535893860": "StructureFlashingLight",
    "-1533287054": "StructureFuselageTypeA2",
    "-1532448832": "ItemPipeDigitalValve",
    "-1530571426": "StructureCableJunctionH5",
    "-1529819532": "StructureFlagSmall",
    "-1527229051": "StopWatch",
    "-1516581844": "ItemUraniumOre",
    "-1514298582": "Landingpad_ThreshholdPiece",
    "-1513337058": "ItemFlowerGreen",
    "-1513030150": "StructureCompositeCladdingAngled",
    "-1510009608": "StructureChairThickSingle",
    "-1505147578": "StructureInsulatedPipeCrossJunction5",
    "-1499471529": "ItemNitrice",
    "-1493672123": "StructureCargoStorageSmall",
    "-1489728908": "StructureLogicCompare",
    "-1477941080": "Landingpad_TaxiPieceStraight",
    "-1472829583": "StructurePassthroughHeatExchangerLiquidToLiquid",
    "-1470820996": "ItemKitCompositeCladding",
    "-1469588766": "StructureChuteInlet",
    "-1467449329": "StructureSleeper",
    "-1462180176": "CartridgeElectronicReader",
    "-1459641358": "StructurePictureFrameThickMountPortraitLarge",
    "-1448105779": "ItemSteelFrames",
    "-1446854725": "StructureChuteFlipFlopSplitter",
    "-1434523206": "StructurePictureFrameThickLandscapeLarge",
    "-1431998347": "ItemKitAdvancedComposter",
    "-1430440215": "StructureLiquidTankBigInsulated",
    "-1429782576": "StructureEvaporationChamber",
    "-1427845483": "StructureWallGeometryTMirrored",
    "-1427415566": "KitchenTableShort",
    "-1425428917": "StructureChairRectangleSingle",
    "-1423212473": "StructureTransformer",
    "-1418288625": "StructurePictureFrameThinLandscapeLarge",
    "-1417912632": "StructureCompositeCladdingAngledCornerInnerLong",
    "-1414203269": "ItemPlantEndothermic_Genepool2",
    "-1411986716": "ItemFlowerOrange",
    "-1411327657": "AccessCardBlue",
    "-1407480603": "StructureWallSmallPanelsOpen",
    "-1406385572": "ItemNickelIngot",
    "-1405295588": "StructurePipeCrossJunction",
    "-1404690610": "StructureCableJunction6",
    "-1397583760": "ItemPassiveVentInsulated",
    "-1394008073": "ItemKitChairs",
    "-1388288459": "StructureBatteryLarge",
    "-1387439451": "ItemGasFilterNitrogenL",
    "-1386237782": "KitchenTableTall",
    "-1385712131": "StructureCapsuleTankGas",
    "-1381321828": "StructureCryoTubeVertical",
    "-1369060582": "StructureWaterWallCooler",
    "-1361598922": "ItemKitTables",
    "-1351081801": "StructureLargeHangerDoor",
    "-1348105509": "ItemGoldOre",
    "-1344601965": "ItemCannedMushroom",
    "-1339716113": "AppliancePaintMixer",
    "-1339479035": "AccessCardGray",
    "-1337091041": "StructureChuteDigitalValveRight",
    "-1335056202": "ItemSugarCane",
    "-1332682164": "ItemKitSmallDirectHeatExchanger",
    "-1330388999": "AccessCardBlack",
    "-1326019434": "StructureLogicWriter",
    "-1321250424": "StructureLogicWriterSwitch",
    "-1309433134": "StructureWallIron04",
    "-1306628937": "ItemPureIceLiquidVolatiles",
    "-1306415132": "StructureWallLightBattery",
    "-1303038067": "AppliancePlantGeneticAnalyzer",
    "-1301215609": "ItemIronIngot",
    "-1300059018": "StructureSleeperVertical",
    "-1295222317": "Landingpad_2x2CenterPiece01",
    "-1290755415": "SeedBag_Corn",
    "-1280984102": "StructureDigitalValve",
    "-1276379454": "StructureTankConnector",
    "-1274308304": "ItemSuitModCryogenicUpgrade",
    "-1267511065": "ItemKitLandingPadWaypoint",
    "-1264455519": "DynamicGasTankAdvancedOxygen",
    "-1262580790": "ItemBasketBall",
    "-1260618380": "ItemSpacepack",
    "-1256996603": "ItemKitRocketDatalink",
    "-1252983604": "StructureGasSensor",
    "-1251009404": "ItemPureIceCarbonDioxide",
    "-1248429712": "ItemKitTurboVolumePump",
    "-1247674305": "ItemGasFilterNitrousOxide",
    "-1245724402": "StructureChairThickDouble",
    "-1243329828": "StructureWallPaddingArchVent",
    "-1241851179": "ItemKitConsole",
    "-1241256797": "ItemKitBeds",
    "-1240951678": "StructureFrameIron",
    "-1234745580": "ItemDirtyOre",
    "-1230658883": "StructureLargeDirectHeatExchangeGastoGas",
    "-1219128491": "ItemSensorProcessingUnitOreScanner",
    "-1218579821": "StructurePictureFrameThickPortraitSmall",
    "-1217998945": "ItemGasFilterOxygenL",
    "-1216167727": "Landingpad_LiquidConnectorInwardPiece",
    "-1214467897": "ItemWreckageStructureWeatherStation008",
    "-1208890208": "ItemPlantThermogenic_Creative",
    "-1198702771": "ItemRocketScanningHead",
    "-1196981113": "StructureCableStraightBurnt",
    "-1193543727": "ItemHydroponicTray",
    "-1185552595": "ItemCannedRicePudding",
    "-1183969663": "StructureInLineTankLiquid1x2",
    "-1182923101": "StructureInteriorDoorTriangle",
    "-1181922382": "ItemKitElectronicsPrinter",
    "-1178961954": "StructureWaterBottleFiller",
    "-1177469307": "StructureWallVent",
    "-1176140051": "ItemSensorLenses",
    "-1174735962": "ItemSoundCartridgeLeads",
    "-1169014183": "StructureMediumConvectionRadiatorLiquid",
    "-1168199498": "ItemKitFridgeBig",
    "-1166461357": "ItemKitPipeLiquid",
    "-1161662836": "StructureWallFlatCornerTriangleFlat",
    "-1160020195": "StructureLogicMathUnary",
    "-1159179557": "ItemPlantEndothermic_Creative",
    "-1154200014": "ItemSensorProcessingUnitCelestialScanner",
    "-1152812099": "StructureChairRectangleDouble",
    "-1152261938": "ItemGasCanisterOxygen",
    "-1150448260": "ItemPureIceOxygen",
    "-1149857558": "StructureBackPressureRegulator",
    "-1146760430": "StructurePictureFrameThinMountLandscapeLarge",
    "-1141760613": "StructureMediumRadiatorLiquid",
    "-1136173965": "ApplianceMicrowave",
    "-1134459463": "ItemPipeGasMixer",
    "-1134148135": "CircuitboardModeControl",
    "-1129453144": "StructureActiveVent",
    "-1126688298": "StructureWallPaddedArchCorner",
    "-1125641329": "StructurePlanter",
    "-1125305264": "StructureBatteryMedium",
    "-1117581553": "ItemHorticultureBelt",
    "-1116110181": "CartridgeMedicalAnalyser",
    "-1113471627": "StructureCompositeFloorGrating3",
    "-1108244510": "ItemPlainCake",
    "-1104478996": "ItemWreckageStructureWeatherStation004",
    "-1103727120": "StructureCableFuse1k",
    "-1102977898": "WeaponTorpedo",
    "-1102403554": "StructureWallPaddingThin",
    "-1100218307": "Landingpad_GasConnectorOutwardPiece",
    "-1094868323": "AppliancePlantGeneticSplicer",
    "-1093860567": "StructureMediumRocketGasFuelTank",
    "-1088008720": "StructureStairs4x2Rails",
    "-1081797501": "StructureShowerPowered",
    "-1076892658": "ItemCookedMushroom",
    "-1068925231": "ItemGlasses",
    "-1068629349": "KitchenTableSimpleTall",
    "-1067319543": "ItemGasFilterOxygenM",
    "-1065725831": "StructureTransformerMedium",
    "-1061945368": "ItemKitDynamicCanister",
    "-1061510408": "ItemEmergencyPickaxe",
    "-1057658015": "ItemWheat",
    "-1056029600": "ItemEmergencyArcWelder",
    "-1055451111": "ItemGasFilterOxygenInfinite",
    "-1051805505": "StructureLiquidTurboVolumePump",
    "-1044933269": "ItemPureIceLiquidHydrogen",
    "-1032590967": "StructureCompositeCladdingAngledCornerInnerLongR",
    "-1032513487": "StructureAreaPowerControlReversed",
    "-1022714809": "StructureChuteOutlet",
    "-1022693454": "ItemKitHarvie",
    "-1014695176": "ItemGasCanisterFuel",
    "-1011701267": "StructureCompositeWall04",
    "-1009150565": "StructureSorter",
    "-999721119": "StructurePipeLabel",
    "-999714082": "ItemCannedEdamame",
    "-998592080": "ItemTomato",
    "-983091249": "ItemCobaltOre",
    "-981223316": "StructureCableCorner4HBurnt",
    "-976273247": "Landingpad_StraightPiece01",
    "-975966237": "StructureMediumRadiator",
    "-971920158": "ItemDynamicScrubber",
    "-965741795": "StructureCondensationValve",
    "-958884053": "StructureChuteUmbilicalMale",
    "-945806652": "ItemKitElevator",
    "-934345724": "StructureSolarPanelReinforced",
    "-932335800": "ItemKitRocketTransformerSmall",
    "-932136011": "CartridgeConfiguration",
    "-929742000": "ItemSilverIngot",
    "-927931558": "ItemKitHydroponicAutomated",
    "-924678969": "StructureSmallTableRectangleSingle",
    "-919745414": "ItemWreckageStructureWeatherStation005",
    "-916518678": "ItemSilverOre",
    "-913817472": "StructurePipeTJunction",
    "-913649823": "ItemPickaxe",
    "-906521320": "ItemPipeLiquidRadiator",
    "-899013427": "StructurePortablesConnector",
    "-895027741": "StructureCompositeFloorGrating2",
    "-890946730": "StructureTransformerSmall",
    "-889269388": "StructureCableCorner",
    "-876560854": "ItemKitChuteUmbilical",
    "-874791066": "ItemPureIceSteam",
    "-869869491": "ItemBeacon",
    "-868916503": "ItemKitWindTurbine",
    "-867969909": "ItemKitRocketMiner",
    "-862048392": "StructureStairwellBackPassthrough",
    "-858143148": "StructureWallArch",
    "-857713709": "HumanSkull",
    "-851746783": "StructureLogicMemory",
    "-850484480": "StructureChuteBin",
    "-846838195": "ItemKitWallFlat",
    "-842048328": "ItemActiveVent",
    "-838472102": "ItemFlashlight",
    "-834664349": "ItemWreckageStructureWeatherStation001",
    "-831480639": "ItemBiomass",
    "-831211676": "ItemKitPowerTransmitterOmni",
    "-828056979": "StructureKlaxon",
    "-827912235": "StructureElevatorLevelFront",
    "-827125300": "ItemKitPipeOrgan",
    "-821868990": "ItemKitWallPadded",
    "-817051527": "DynamicGasCanisterFuel",
    "-816454272": "StructureReinforcedCompositeWindowSteel",
    "-815193061": "StructureConsoleLED5",
    "-813426145": "StructureInsulatedInLineTankLiquid1x1",
    "-810874728": "StructureChuteDigitalFlipFlopSplitterLeft",
    "-806986392": "MotherboardRockets",
    "-806743925": "ItemKitFurnace",
    "-800947386": "ItemTropicalPlant",
    "-799849305": "ItemKitLiquidTank",
    "-793837322": "StructureCompositeDoor",
    "-793623899": "StructureStorageLocker",
    "-788672929": "RespawnPoint",
    "-787796599": "ItemInconelIngot",
    "-785498334": "StructurePoweredVentLarge",
    "-784733231": "ItemKitWallGeometry",
    "-783387184": "StructureInsulatedPipeCrossJunction4",
    "-782951720": "StructurePowerConnector",
    "-782453061": "StructureLiquidPipeOneWayValve",
    "-776581573": "StructureWallLargePanelArrow",
    "-775128944": "StructureShower",
    "-772542081": "ItemChemLightBlue",
    "-767867194": "StructureLogicSlotReader",
    "-767685874": "ItemGasCanisterCarbonDioxide",
    "-767597887": "ItemPipeAnalyizer",
    "-761772413": "StructureBatteryChargerSmall",
    "-756587791": "StructureWaterBottleFillerPowered",
    "-749191906": "AppliancePackagingMachine",
    "-744098481": "ItemIntegratedCircuit10",
    "-743968726": "ItemLabeller",
    "-742234680": "StructureCableJunctionH4",
    "-739292323": "StructureWallCooler",
    "-737232128": "StructurePurgeValve",
    "-733500083": "StructureCrateMount",
    "-732720413": "ItemKitDynamicGenerator",
    "-722284333": "StructureConsoleDual",
    "-721824748": "ItemGasFilterOxygen",
    "-709086714": "ItemCookedTomato",
    "-707307845": "ItemCopperOre",
    "-693235651": "StructureLogicTransmitter",
    "-692036078": "StructureValve",
    "-688284639": "StructureCompositeWindowIron",
    "-688107795": "ItemSprayCanBlack",
    "-684020753": "ItemRocketMiningDrillHeadLongTerm",
    "-676435305": "ItemMiningBelt",
    "-668314371": "ItemGasCanisterSmart",
    "-665995854": "ItemFlour",
    "-660451023": "StructureSmallTableRectangleDouble",
    "-659093969": "StructureChuteUmbilicalFemaleSide",
    "-654790771": "ItemSteelIngot",
    "-654756733": "SeedBag_Wheet",
    "-654619479": "StructureRocketTower",
    "-648683847": "StructureGasUmbilicalFemaleSide",
    "-647164662": "StructureLockerSmall",
    "-641491515": "StructureSecurityPrinter",
    "-639306697": "StructureWallSmallPanelsArrow",
    "-638019974": "ItemKitDynamicMKIILiquidCanister",
    "-636127860": "ItemKitRocketManufactory",
    "-633723719": "ItemPureIceVolatiles",
    "-632657357": "ItemGasFilterNitrogenM",
    "-631590668": "StructureCableFuse5k",
    "-628145954": "StructureCableJunction6Burnt",
    "-626563514": "StructureComputer",
    "-624011170": "StructurePressureFedGasEngine",
    "-619745681": "StructureGroundBasedTelescope",
    "-616758353": "ItemKitAdvancedFurnace",
    "-613784254": "StructureHeatExchangerLiquidtoLiquid",
    "-611232514": "StructureChuteJunction",
    "-607241919": "StructureChuteWindow",
    "-598730959": "ItemWearLamp",
    "-598545233": "ItemKitAdvancedPackagingMachine",
    "-597479390": "ItemChemLightGreen",
    "-583103395": "EntityRoosterBrown",
    "-566775170": "StructureLargeExtendableRadiator",
    "-566348148": "StructureMediumHangerDoor",
    "-558953231": "StructureLaunchMount",
    "-554553467": "StructureShortLocker",
    "-551612946": "ItemKitCrateMount",
    "-545234195": "ItemKitCryoTube",
    "-539224550": "StructureSolarPanelDual",
    "-532672323": "ItemPlantSwitchGrass",
    "-532384855": "StructureInsulatedPipeLiquidTJunction",
    "-528695432": "ItemKitSolarPanelBasicReinforced",
    "-525810132": "ItemChemLightRed",
    "-524546923": "ItemKitWallIron",
    "-524289310": "ItemEggCarton",
    "-517628750": "StructureWaterDigitalValve",
    "-507770416": "StructureSmallDirectHeatExchangeLiquidtoLiquid",
    "-504717121": "ItemWirelessBatteryCellExtraLarge",
    "-503738105": "ItemGasFilterPollutantsInfinite",
    "-498464883": "ItemSprayCanBlue",
    "-491247370": "RespawnPointWallMounted",
    "-487378546": "ItemIronSheets",
    "-472094806": "ItemGasCanisterVolatiles",
    "-466050668": "ItemCableCoil",
    "-465741100": "StructureToolManufactory",
    "-463037670": "StructureAdvancedPackagingMachine",
    "-462415758": "Battery_Wireless_cell",
    "-459827268": "ItemBatteryCellLarge",
    "-454028979": "StructureLiquidVolumePump",
    "-453039435": "ItemKitTransformer",
    "-443130773": "StructureVendingMachine",
    "-419758574": "StructurePipeHeater",
    "-417629293": "StructurePipeCrossJunction4",
    "-415420281": "StructureLadder",
    "-412551656": "ItemHardJetpack",
    "-412104504": "CircuitboardCameraDisplay",
    "-404336834": "ItemCopperIngot",
    "-400696159": "ReagentColorOrange",
    "-400115994": "StructureBattery",
    "-399883995": "StructurePipeRadiatorFlat",
    "-387546514": "StructureCompositeCladdingAngledLong",
    "-386375420": "DynamicGasTankAdvanced",
    "-385323479": "WeaponPistolEnergy",
    "-383972371": "ItemFertilizedEgg",
    "-380904592": "ItemRocketMiningDrillHeadIce",
    "-375156130": "Flag_ODA_8m",
    "-374567952": "AccessCardGreen",
    "-367720198": "StructureChairBoothCornerLeft",
    "-366262681": "ItemKitFuselage",
    "-365253871": "ItemSolidFuel",
    "-364868685": "ItemKitSolarPanelReinforced",
    "-355127880": "ItemToolBelt",
    "-351438780": "ItemEmergencyAngleGrinder",
    "-349716617": "StructureCableFuse50k",
    "-348918222": "StructureCompositeCladdingAngledCornerLongR",
    "-348054045": "StructureFiltration",
    "-345383640": "StructureLogicReader",
    "-344968335": "ItemKitMotherShipCore",
    "-342072665": "StructureCamera",
    "-341365649": "StructureCableJunctionHBurnt",
    "-337075633": "MotherboardComms",
    "-332896929": "AccessCardOrange",
    "-327468845": "StructurePowerTransmitterOmni",
    "-324331872": "StructureGlassDoor",
    "-322413931": "DynamicGasCanisterCarbonDioxide",
    "-321403609": "StructureVolumePump",
    "-319510386": "DynamicMKIILiquidCanisterWater",
    "-314072139": "ItemKitRocketBattery",
    "-311170652": "ElectronicPrinterMod",
    "-310178617": "ItemWreckageHydroponicsTray1",
    "-303008602": "ItemKitRocketCelestialTracker",
    "-302420053": "StructureFrameSide",
    "-297990285": "ItemInvarIngot",
    "-291862981": "StructureSmallTableThickSingle",
    "-290196476": "ItemSiliconIngot",
    "-287495560": "StructureLiquidPipeHeater",
    "-261575861": "ItemChocolateCake",
    "-260316435": "StructureStirlingEngine",
    "-259357734": "StructureCompositeCladdingRounded",
    "-256607540": "SMGMagazine",
    "-248475032": "ItemLiquidPipeHeater",
    "-247344692": "StructureArcFurnace",
    "-229808600": "ItemTablet",
    "-214232602": "StructureGovernedGasEngine",
    "-212902482": "StructureStairs4x2RailR",
    "-190236170": "ItemLeadOre",
    "-188177083": "StructureBeacon",
    "-185568964": "ItemGasFilterCarbonDioxideInfinite",
    "-185207387": "ItemLiquidCanisterEmpty",
    "-178893251": "ItemMKIIWireCutters",
    "-177792789": "ItemPlantThermogenic_Genepool1",
    "-177610944": "StructureInsulatedInLineTankGas1x2",
    "-177220914": "StructureCableCornerBurnt",
    "-175342021": "StructureCableJunction",
    "-174523552": "ItemKitLaunchTower",
    "-164622691": "StructureBench3",
    "-161107071": "MotherboardProgrammableChip",
    "-158007629": "ItemSprayCanOrange",
    "-155945899": "StructureWallPaddedCorner",
    "-146200530": "StructureCableStraightH",
    "-137465079": "StructureDockPortSide",
    "-128473777": "StructureCircuitHousing",
    "-127121474": "MotherboardMissionControl",
    "-126038526": "ItemKitSpeaker",
    "-124308857": "StructureLogicReagentReader",
    "-123934842": "ItemGasFilterNitrousOxideInfinite",
    "-121514007": "ItemKitPressureFedGasEngine",
    "-115809132": "StructureCableJunction4HBurnt",
    "-110788403": "ElevatorCarrage",
    "-104908736": "StructureFairingTypeA2",
    "-99091572": "ItemKitPressureFedLiquidEngine",
    "-99064335": "Meteorite",
    "-98995857": "ItemKitArcFurnace",
    "-92778058": "StructureInsulatedPipeCrossJunction",
    "-90898877": "ItemWaterPipeMeter",
    "-86315541": "FireArmSMG",
    "-84573099": "ItemHardsuitHelmet",
    "-82508479": "ItemSolderIngot",
    "-82343730": "CircuitboardGasDisplay",
    "-82087220": "DynamicGenerator",
    "-81376085": "ItemFlowerRed",
    "-78099334": "KitchenTableSimpleShort",
    "-73796547": "ImGuiCircuitboardAirlockControl",
    "-72748982": "StructureInsulatedPipeLiquidCrossJunction6",
    "-69685069": "StructureCompositeCladdingAngledCorner",
    "-65087121": "StructurePowerTransmitter",
    "-57608687": "ItemFrenchFries",
    "-53151617": "StructureConsoleLED1x2",
    "-48342840": "UniformMarine",
    "-41519077": "Battery_Wireless_cell_Big",
    "-39359015": "StructureCableCornerH",
    "-38898376": "ItemPipeCowl",
    "-37454456": "StructureStairwellFrontLeft",
    "-37302931": "StructureWallPaddedWindowThin",
    "-31273349": "StructureInsulatedTankConnector",
    "-27284803": "ItemKitInsulatedPipeUtility",
    "-21970188": "DynamicLight",
    "-21225041": "ItemKitBatteryLarge",
    "-19246131": "StructureSmallTableThickDouble",
    "-9559091": "ItemAmmoBox",
    "-9555593": "StructurePipeLiquidCrossJunction4",
    "-8883951": "DynamicGasCanisterRocketFuel",
    "-1755356": "ItemPureIcePollutant",
    "-997763": "ItemWreckageLargeExtendableRadiator01",
    "-492611": "StructureSingleBed",
    "2393826": "StructureCableCorner3HBurnt",
    "7274344": "StructureAutoMinerSmall",
    "8709219": "CrateMkII",
    "8804422": "ItemGasFilterWaterM",
    "8846501": "StructureWallPaddedNoBorder",
    "15011598": "ItemGasFilterVolatiles",
    "15829510": "ItemMiningCharge",
    "19645163": "ItemKitEngineSmall",
    "21266291": "StructureHeatExchangerGastoGas",
    "23052817": "StructurePressurantValve",
    "24258244": "StructureWallHeater",
    "24786172": "StructurePassiveLargeRadiatorLiquid",
    "26167457": "StructureWallPlating",
    "30686509": "ItemSprayCanPurple",
    "30727200": "DynamicGasCanisterNitrousOxide",
    "35149429": "StructureInLineTankGas1x2",
    "38555961": "ItemSteelSheets",
    "42280099": "ItemGasCanisterEmpty",
    "45733800": "ItemWreckageWallCooler2",
    "62768076": "ItemPumpkinPie",
    "63677771": "ItemGasFilterPollutantsM",
    "73728932": "StructurePipeStraight",
    "77421200": "ItemKitDockingPort",
    "81488783": "CartridgeTracker",
    "94730034": "ToyLuna",
    "98602599": "ItemWreckageTurbineGenerator2",
    "101488029": "StructurePowerUmbilicalFemale",
    "106953348": "DynamicSkeleton",
    "107741229": "ItemWaterBottle",
    "108086870": "DynamicGasCanisterVolatiles",
    "110184667": "StructureCompositeCladdingRoundedCornerInner",
    "111280987": "ItemTerrainManipulator",
    "118685786": "FlareGun",
    "119096484": "ItemKitPlanter",
    "120807542": "ReagentColorGreen",
    "121951301": "DynamicGasCanisterNitrogen",
    "123504691": "ItemKitPressurePlate",
    "124499454": "ItemKitLogicSwitch",
    "139107321": "StructureCompositeCladdingSpherical",
    "141535121": "ItemLaptop",
    "142831994": "ApplianceSeedTray",
    "146051619": "Landingpad_TaxiPieceHold",
    "147395155": "StructureFuselageTypeC5",
    "148305004": "ItemKitBasket",
    "150135861": "StructureRocketCircuitHousing",
    "152378047": "StructurePipeCrossJunction6",
    "152751131": "ItemGasFilterNitrogenInfinite",
    "155214029": "StructureStairs4x2RailL",
    "155856647": "NpcChick",
    "156348098": "ItemWaspaloyIngot",
    "158502707": "StructureReinforcedWallPaddedWindowThin",
    "159886536": "ItemKitWaterBottleFiller",
    "162553030": "ItemEmergencyWrench",
    "163728359": "StructureChuteDigitalFlipFlopSplitterRight",
    "168307007": "StructureChuteStraight",
    "168615924": "ItemKitDoor",
    "169888054": "ItemWreckageAirConditioner2",
    "170818567": "Landingpad_GasCylinderTankPiece",
    "170878959": "ItemKitStairs",
    "173023800": "ItemPlantSampler",
    "176446172": "ItemAlienMushroom",
    "178422810": "ItemKitSatelliteDish",
    "178472613": "StructureRocketEngineTiny",
    "179694804": "StructureWallPaddedNoBorderCorner",
    "182006674": "StructureShelfMedium",
    "195298587": "StructureExpansionValve",
    "195442047": "ItemCableFuse",
    "197243872": "ItemKitRoverMKI",
    "197293625": "DynamicGasCanisterWater",
    "201215010": "ItemAngleGrinder",
    "205837861": "StructureCableCornerH4",
    "205916793": "ItemEmergencySpaceHelmet",
    "206848766": "ItemKitGovernedGasRocketEngine",
    "209854039": "StructurePressureRegulator",
    "212919006": "StructureCompositeCladdingCylindrical",
    "215486157": "ItemCropHay",
    "220644373": "ItemKitLogicProcessor",
    "221058307": "AutolathePrinterMod",
    "225377225": "StructureChuteOverflow",
    "226055671": "ItemLiquidPipeAnalyzer",
    "226410516": "ItemGoldIngot",
    "231903234": "KitStructureCombustionCentrifuge",
    "234601764": "ItemChocolateBar",
    "235361649": "ItemExplosive",
    "235638270": "StructureConsole",
    "238631271": "ItemPassiveVent",
    "240174650": "ItemMKIIAngleGrinder",
    "247238062": "Handgun",
    "248893646": "PassiveSpeaker",
    "249073136": "ItemKitBeacon",
    "252561409": "ItemCharcoal",
    "255034731": "StructureSuitStorage",
    "258339687": "ItemCorn",
    "262616717": "StructurePipeLiquidTJunction",
    "264413729": "StructureLogicBatchReader",
    "265720906": "StructureDeepMiner",
    "266099983": "ItemEmergencyScrewdriver",
    "266654416": "ItemFilterFern",
    "268421361": "StructureCableCorner4Burnt",
    "271315669": "StructureFrameCornerCut",
    "272136332": "StructureTankSmallInsulated",
    "281380789": "StructureCableFuse100k",
    "288111533": "ItemKitIceCrusher",
    "291368213": "ItemKitPowerTransmitter",
    "291524699": "StructurePipeLiquidCrossJunction6",
    "293581318": "ItemKitLandingPadBasic",
    "295678685": "StructureInsulatedPipeLiquidStraight",
    "298130111": "StructureWallFlatCornerSquare",
    "299189339": "ItemHat",
    "309693520": "ItemWaterPipeDigitalValve",
    "311593418": "SeedBag_Mushroom",
    "318437449": "StructureCableCorner3Burnt",
    "321604921": "StructureLogicSwitch2",
    "322782515": "StructureOccupancySensor",
    "323957548": "ItemKitSDBHopper",
    "324791548": "ItemMKIIDrill",
    "324868581": "StructureCompositeFloorGrating",
    "326752036": "ItemKitSleeper",
    "334097180": "EntityChickenBrown",
    "335498166": "StructurePassiveVent",
    "336213101": "StructureAutolathe",
    "337035771": "AccessCardKhaki",
    "337416191": "StructureBlastDoor",
    "337505889": "ItemKitWeatherStation",
    "340210934": "StructureStairwellFrontRight",
    "341030083": "ItemKitGrowLight",
    "347154462": "StructurePictureFrameThickMountLandscapeSmall",
    "350726273": "RoverCargo",
    "363303270": "StructureInsulatedPipeLiquidCrossJunction4",
    "374891127": "ItemHardBackpack",
    "375541286": "ItemKitDynamicLiquidCanister",
    "377745425": "ItemKitGasGenerator",
    "378084505": "StructureBlocker",
    "379750958": "StructurePressureFedLiquidEngine",
    "386754635": "ItemPureIceNitrous",
    "386820253": "StructureWallSmallPanelsMonoChrome",
    "388774906": "ItemMKIIDuctTape",
    "391453348": "ItemWreckageStructureRTG1",
    "391769637": "ItemPipeLabel",
    "396065382": "DynamicGasCanisterPollutants",
    "399074198": "NpcChicken",
    "399661231": "RailingElegant01",
    "406745009": "StructureBench1",
    "412924554": "ItemAstroloyIngot",
    "416897318": "ItemGasFilterCarbonDioxideM",
    "418958601": "ItemPillStun",
    "429365598": "ItemKitCrate",
    "431317557": "AccessCardPink",
    "433184168": "StructureWaterPipeMeter",
    "434786784": "Robot",
    "434875271": "StructureChuteValve",
    "435685051": "StructurePipeAnalysizer",
    "436888930": "StructureLogicBatchSlotReader",
    "439026183": "StructureSatelliteDish",
    "443849486": "StructureIceCrusher",
    "443947415": "PipeBenderMod",
    "446212963": "StructureAdvancedComposter",
    "450164077": "ItemKitLargeDirectHeatExchanger",
    "452636699": "ItemKitInsulatedPipe",
    "457286516": "ItemCocoaPowder",
    "459843265": "AccessCardPurple",
    "465267979": "ItemGasFilterNitrousOxideL",
    "465816159": "StructurePipeCowl",
    "467225612": "StructureSDBHopperAdvanced",
    "469451637": "StructureCableJunctionH",
    "470636008": "ItemHEMDroidRepairKit",
    "479850239": "ItemKitRocketCargoStorage",
    "482248766": "StructureLiquidPressureRegulator",
    "488360169": "SeedBag_Switchgrass",
    "489494578": "ItemKitLadder",
    "491845673": "StructureLogicButton",
    "495305053": "ItemRTG",
    "496830914": "ItemKitAIMeE",
    "498481505": "ItemSprayCanWhite",
    "502280180": "ItemElectrumIngot",
    "502555944": "MotherboardLogic",
    "505924160": "StructureStairwellBackLeft",
    "513258369": "ItemKitAccessBridge",
    "518925193": "StructureRocketTransformerSmall",
    "519913639": "DynamicAirConditioner",
    "529137748": "ItemKitToolManufactory",
    "529996327": "ItemKitSign",
    "534213209": "StructureCompositeCladdingSphericalCap",
    "541621589": "ItemPureIceLiquidOxygen",
    "542009679": "ItemWreckageStructureWeatherStation003",
    "543645499": "StructureInLineTankLiquid1x1",
    "544617306": "ItemBatteryCellNuclear",
    "545034114": "ItemCornSoup",
    "545937711": "StructureAdvancedFurnace",
    "546002924": "StructureLogicRocketUplink",
    "554524804": "StructureLogicDial",
    "555215790": "StructureLightLongWide",
    "568800213": "StructureProximitySensor",
    "568932536": "AccessCardYellow",
    "576516101": "StructureDiodeSlide",
    "578078533": "ItemKitSecurityPrinter",
    "578182956": "ItemKitCentrifuge",
    "587726607": "DynamicHydroponics",
    "595478589": "ItemKitPipeUtilityLiquid",
    "600133846": "StructureCompositeFloorGrating4",
    "605357050": "StructureCableStraight",
    "608607718": "StructureLiquidTankSmallInsulated",
    "611181283": "ItemKitWaterPurifier",
    "617773453": "ItemKitLiquidTankInsulated",
    "619828719": "StructureWallSmallPanelsAndHatch",
    "632853248": "ItemGasFilterNitrogen",
    "635208006": "ReagentColorYellow",
    "635995024": "StructureWallPadding",
    "636112787": "ItemKitPassthroughHeatExchanger",
    "648608238": "StructureChuteDigitalValveLeft",
    "653461728": "ItemRocketMiningDrillHeadHighSpeedIce",
    "656649558": "ItemWreckageStructureWeatherStation007",
    "658916791": "ItemRice",
    "662053345": "ItemPlasticSheets",
    "665194284": "ItemKitTransformerSmall",
    "667597982": "StructurePipeLiquidStraight",
    "675686937": "ItemSpaceIce",
    "678483886": "ItemRemoteDetonator",
    "680051921": "ItemCocoaTree",
    "682546947": "ItemKitAirlockGate",
    "687940869": "ItemScrewdriver",
    "688734890": "ItemTomatoSoup",
    "690945935": "StructureCentrifuge",
    "697908419": "StructureBlockBed",
    "700133157": "ItemBatteryCell",
    "714830451": "ItemSpaceHelmet",
    "718343384": "StructureCompositeWall02",
    "721251202": "ItemKitRocketCircuitHousing",
    "724776762": "ItemKitResearchMachine",
    "731250882": "ItemElectronicParts",
    "735858725": "ItemKitShower",
    "750118160": "StructureUnloader",
    "750176282": "ItemKitRailing",
    "751887598": "StructureFridgeSmall",
    "755048589": "DynamicScrubber",
    "755302726": "ItemKitEngineLarge",
    "771439840": "ItemKitTank",
    "777684475": "ItemLiquidCanisterSmart",
    "782529714": "StructureWallArchTwoTone",
    "789015045": "ItemAuthoringTool",
    "789494694": "WeaponEnergy",
    "791746840": "ItemCerealBar",
    "792686502": "StructureLargeDirectHeatExchangeLiquidtoLiquid",
    "797794350": "StructureLightLong",
    "798439281": "StructureWallIron03",
    "799323450": "ItemPipeValve",
    "801677497": "StructureConsoleMonitor",
    "806513938": "StructureRover",
    "808389066": "StructureRocketAvionics",
    "810053150": "UniformOrangeJumpSuit",
    "813146305": "StructureSolidFuelGenerator",
    "817945707": "Landingpad_GasConnectorInwardPiece",
    "826144419": "StructureElevatorShaft",
    "833912764": "StructureTransformerMediumReversed",
    "839890807": "StructureFlatBench",
    "839924019": "ItemPowerConnector",
    "844391171": "ItemKitHorizontalAutoMiner",
    "844961456": "ItemKitSolarPanelBasic",
    "845176977": "ItemSprayCanBrown",
    "847430620": "ItemKitLargeExtendableRadiator",
    "847461335": "StructureInteriorDoorPadded",
    "849148192": "ItemKitRecycler",
    "850558385": "StructureCompositeCladdingAngledCornerLong",
    "851290561": "ItemPlantEndothermic_Genepool1",
    "855694771": "CircuitboardDoorControl",
    "856108234": "ItemCrowbar",
    "860793245": "ItemChocolateCerealBar",
    "861674123": "Rover_MkI_build_states",
    "871432335": "AppliancePlantGeneticStabilizer",
    "871811564": "ItemRoadFlare",
    "872720793": "CartridgeGuide",
    "873418029": "StructureLogicSorter",
    "876108549": "StructureLogicRocketDownlink",
    "879058460": "StructureSign1x1",
    "882301399": "ItemKitLocker",
    "882307910": "StructureCompositeFloorGratingOpenRotated",
    "887383294": "StructureWaterPurifier",
    "890106742": "ItemIgniter",
    "892110467": "ItemFern",
    "893514943": "ItemBreadLoaf",
    "894390004": "StructureCableJunction5",
    "897176943": "ItemInsulation",
    "898708250": "StructureWallFlatCornerRound",
    "900366130": "ItemHardMiningBackPack",
    "902565329": "ItemDirtCanister",
    "908320837": "StructureSign2x1",
    "912176135": "CircuitboardAirlockControl",
    "912453390": "Landingpad_BlankPiece",
    "920411066": "ItemKitPipeRadiator",
    "929022276": "StructureLogicMinMax",
    "930865127": "StructureSolarPanel45Reinforced",
    "938836756": "StructurePoweredVent",
    "944530361": "ItemPureIceHydrogen",
    "944685608": "StructureHeatExchangeLiquidtoGas",
    "947705066": "StructureCompositeCladdingAngledCornerInnerLongL",
    "950004659": "StructurePictureFrameThickMountLandscapeLarge",
    "955744474": "StructureTankSmallAir",
    "958056199": "StructureHarvie",
    "958476921": "StructureFridgeBig",
    "964043875": "ItemKitAirlock",
    "966959649": "EntityRoosterBlack",
    "969522478": "ItemKitSorter",
    "976699731": "ItemEmergencyCrowbar",
    "977899131": "Landingpad_DiagonalPiece01",
    "980054869": "ReagentColorBlue",
    "980469101": "StructureCableCorner3",
    "982514123": "ItemNVG",
    "989835703": "StructurePlinth",
    "995468116": "ItemSprayCanYellow",
    "997453927": "StructureRocketCelestialTracker",
    "998653377": "ItemHighVolumeGasCanisterEmpty",
    "1005397063": "ItemKitLogicTransmitter",
    "1005491513": "StructureIgniter",
    "1005571172": "SeedBag_Potato",
    "1005843700": "ItemDataDisk",
    "1008295833": "ItemBatteryChargerSmall",
    "1010807532": "EntityChickenWhite",
    "1013244511": "ItemKitStacker",
    "1013514688": "StructureTankSmall",
    "1013818348": "ItemEmptyCan",
    "1021053608": "ItemKitTankInsulated",
    "1025254665": "ItemKitChute",
    "1033024712": "StructureFuselageTypeA1",
    "1036015121": "StructureCableAnalysizer",
    "1036780772": "StructureCableJunctionH6",
    "1037507240": "ItemGasFilterVolatilesM",
    "1041148999": "ItemKitPortablesConnector",
    "1048813293": "StructureFloorDrain",
    "1049735537": "StructureWallGeometryStreight",
    "1054059374": "StructureTransformerSmallReversed",
    "1055173191": "ItemMiningDrill",
    "1058547521": "ItemConstantanIngot",
    "1061164284": "StructureInsulatedPipeCrossJunction6",
    "1070143159": "Landingpad_CenterPiece01",
    "1070427573": "StructureHorizontalAutoMiner",
    "1072914031": "ItemDynamicAirCon",
    "1073631646": "ItemMarineHelmet",
    "1076425094": "StructureDaylightSensor",
    "1077151132": "StructureCompositeCladdingCylindricalPanel",
    "1083675581": "ItemRocketMiningDrillHeadMineral",
    "1088892825": "ItemKitSuitStorage",
    "1094895077": "StructurePictureFrameThinMountPortraitLarge",
    "1098900430": "StructureLiquidTankBig",
    "1101296153": "Landingpad_CrossPiece",
    "1101328282": "CartridgePlantAnalyser",
    "1103972403": "ItemSiliconOre",
    "1108423476": "ItemWallLight",
    "1112047202": "StructureCableJunction4",
    "1118069417": "ItemPillHeal",
    "1139887531": "SeedBag_Cocoa",
    "1143639539": "StructureMediumRocketLiquidFuelTank",
    "1151864003": "StructureCargoStorageMedium",
    "1154745374": "WeaponRifleEnergy",
    "1155865682": "StructureSDBSilo",
    "1159126354": "Flag_ODA_4m",
    "1161510063": "ItemCannedPowderedEggs",
    "1162905029": "ItemKitFurniture",
    "1165997963": "StructureGasGenerator",
    "1167659360": "StructureChair",
    "1171987947": "StructureWallPaddedArchLightFittingTop",
    "1172114950": "StructureShelf",
    "1174360780": "ApplianceDeskLampRight",
    "1181371795": "ItemKitRegulator",
    "1182412869": "ItemKitCompositeFloorGrating",
    "1182510648": "StructureWallArchPlating",
    "1183203913": "StructureWallPaddedCornerThin",
    "1195820278": "StructurePowerTransmitterReceiver",
    "1207939683": "ItemPipeMeter",
    "1212777087": "StructurePictureFrameThinPortraitLarge",
    "1213495833": "StructureSleeperLeft",
    "1217489948": "ItemIce",
    "1220484876": "StructureLogicSwitch",
    "1220870319": "StructureLiquidUmbilicalFemaleSide",
    "1222286371": "ItemKitAtmospherics",
    "1224819963": "ItemChemLightYellow",
    "1225836666": "ItemIronFrames",
    "1228794916": "CompositeRollCover",
    "1237302061": "StructureCompositeWall",
    "1238905683": "StructureCombustionCentrifuge",
    "1253102035": "ItemVolatiles",
    "1254383185": "HandgunMagazine",
    "1255156286": "ItemGasFilterVolatilesL",
    "1258187304": "ItemMiningDrillPneumatic",
    "1260651529": "StructureSmallTableDinnerSingle",
    "1260918085": "ApplianceReagentProcessor",
    "1269458680": "StructurePressurePlateMedium",
    "1277828144": "ItemPumpkin",
    "1277979876": "ItemPumpkinSoup",
    "1280378227": "StructureTankBigInsulated",
    "1281911841": "StructureWallArchCornerTriangle",
    "1282191063": "StructureTurbineGenerator",
    "1286441942": "StructurePipeIgniter",
    "1287324802": "StructureWallIron",
    "1289723966": "ItemSprayGun",
    "1293995736": "ItemKitSolidGenerator",
    "1298920475": "StructureAccessBridge",
    "1305252611": "StructurePipeOrgan",
    "1307165496": "StructureElectronicsPrinter",
    "1308115015": "StructureFuselageTypeA4",
    "1310303582": "StructureSmallDirectHeatExchangeGastoGas",
    "1310794736": "StructureTurboVolumePump",
    "1312166823": "ItemChemLightWhite",
    "1327248310": "ItemMilk",
    "1328210035": "StructureInsulatedPipeCrossJunction3",
    "1330754486": "StructureShortCornerLocker",
    "1331802518": "StructureTankConnectorLiquid",
    "1344257263": "ItemSprayCanPink",
    "1344368806": "CircuitboardGraphDisplay",
    "1344576960": "ItemWreckageStructureWeatherStation006",
    "1344773148": "ItemCookedCorn",
    "1353449022": "ItemCookedSoybean",
    "1360330136": "StructureChuteCorner",
    "1360925836": "DynamicGasCanisterOxygen",
    "1363077139": "StructurePassiveVentInsulated",
    "1365789392": "ApplianceChemistryStation",
    "1366030599": "ItemPipeIgniter",
    "1371786091": "ItemFries",
    "1382098999": "StructureSleeperVerticalDroid",
    "1385062886": "ItemArcWelder",
    "1387403148": "ItemSoyOil",
    "1396305045": "ItemKitRocketAvionics",
    "1399098998": "ItemMarineBodyArmor",
    "1405018945": "StructureStairs4x2",
    "1406656973": "ItemKitBattery",
    "1412338038": "StructureLargeDirectHeatExchangeGastoLiquid",
    "1412428165": "AccessCardBrown",
    "1415396263": "StructureCapsuleTankLiquid",
    "1415443359": "StructureLogicBatchWriter",
    "1420719315": "StructureCondensationChamber",
    "1423199840": "SeedBag_Pumpkin",
    "1428477399": "ItemPureIceLiquidNitrous",
    "1432512808": "StructureFrame",
    "1433754995": "StructureWaterBottleFillerBottom",
    "1436121888": "StructureLightRoundSmall",
    "1440678625": "ItemRocketMiningDrillHeadHighSpeedMineral",
    "1440775434": "ItemMKIICrowbar",
    "1441767298": "StructureHydroponicsStation",
    "1443059329": "StructureCryoTubeHorizontal",
    "1452100517": "StructureInsulatedInLineTankLiquid1x2",
    "1453961898": "ItemKitPassiveLargeRadiatorLiquid",
    "1459985302": "ItemKitReinforcedWindows",
    "1464424921": "ItemWreckageStructureWeatherStation002",
    "1464854517": "StructureHydroponicsTray",
    "1467558064": "ItemMkIIToolbelt",
    "1468249454": "StructureOverheadShortLocker",
    "1470787934": "ItemMiningBeltMKII",
    "1473807953": "StructureTorpedoRack",
    "1485834215": "StructureWallIron02",
    "1492930217": "StructureWallLargePanel",
    "1512322581": "ItemKitLogicCircuit",
    "1514393921": "ItemSprayCanRed",
    "1514476632": "StructureLightRound",
    "1517856652": "Fertilizer",
    "1529453938": "StructurePowerUmbilicalMale",
    "1530764483": "ItemRocketMiningDrillHeadDurable",
    "1531087544": "DecayedFood",
    "1531272458": "LogicStepSequencer8",
    "1533501495": "ItemKitDynamicGasTankAdvanced",
    "1535854074": "ItemWireCutters",
    "1541734993": "StructureLadderEnd",
    "1544275894": "ItemGrenade",
    "1545286256": "StructureCableJunction5Burnt",
    "1559586682": "StructurePlatformLadderOpen",
    "1570931620": "StructureTraderWaypoint",
    "1571996765": "ItemKitLiquidUmbilical",
    "1574321230": "StructureCompositeWall03",
    "1574688481": "ItemKitRespawnPointWallMounted",
    "1579842814": "ItemHastelloyIngot",
    "1580412404": "StructurePipeOneWayValve",
    "1585641623": "StructureStackerReverse",
    "1587787610": "ItemKitEvaporationChamber",
    "1588896491": "ItemGlassSheets",
    "1590330637": "StructureWallPaddedArch",
    "1592905386": "StructureLightRoundAngled",
    "1602758612": "StructureWallGeometryT",
    "1603046970": "ItemKitElectricUmbilical",
    "1605130615": "Lander",
    "1606989119": "CartridgeNetworkAnalyser",
    "1618019559": "CircuitboardAirControl",
    "1622183451": "StructureUprightWindTurbine",
    "1622567418": "StructureFairingTypeA1",
    "1625214531": "ItemKitWallArch",
    "1628087508": "StructurePipeLiquidCrossJunction3",
    "1632165346": "StructureGasTankStorage",
    "1633074601": "CircuitboardHashDisplay",
    "1633663176": "CircuitboardAdvAirlockControl",
    "1635000764": "ItemGasFilterCarbonDioxide",
    "1635864154": "StructureWallFlat",
    "1640720378": "StructureChairBoothMiddle",
    "1649708822": "StructureWallArchArrow",
    "1654694384": "StructureInsulatedPipeLiquidCrossJunction5",
    "1657691323": "StructureLogicMath",
    "1661226524": "ItemKitFridgeSmall",
    "1661270830": "ItemScanner",
    "1661941301": "ItemEmergencyToolBelt",
    "1668452680": "StructureEmergencyButton",
    "1668815415": "ItemKitAutoMinerSmall",
    "1672275150": "StructureChairBacklessSingle",
    "1674576569": "ItemPureIceLiquidNitrogen",
    "1677018918": "ItemEvaSuit",
    "1684488658": "StructurePictureFrameThinPortraitSmall",
    "1687692899": "StructureLiquidDrain",
    "1691898022": "StructureLiquidTankStorage",
    "1696603168": "StructurePipeRadiator",
    "1697196770": "StructureSolarPanelFlatReinforced",
    "1700018136": "ToolPrinterMod",
    "1701593300": "StructureCableJunctionH5Burnt",
    "1701764190": "ItemKitFlagODA",
    "1709994581": "StructureWallSmallPanelsTwoTone",
    "1712822019": "ItemFlowerYellow",
    "1713710802": "StructureInsulatedPipeLiquidCorner",
    "1715917521": "ItemCookedCondensedMilk",
    "1717593480": "ItemGasSensor",
    "1722785341": "ItemAdvancedTablet",
    "1724793494": "ItemCoalOre",
    "1730165908": "EntityChick",
    "1734723642": "StructureLiquidUmbilicalFemale",
    "1736080881": "StructureAirlockGate",
    "1738236580": "CartridgeOreScannerColor",
    "1750375230": "StructureBench4",
    "1751355139": "StructureCompositeCladdingSphericalCorner",
    "1753647154": "ItemKitRocketScanner",
    "1757673317": "ItemAreaPowerControl",
    "1758427767": "ItemIronOre",
    "1762696475": "DeviceStepUnit",
    "1769527556": "StructureWallPaddedThinNoBorderCorner",
    "1779979754": "ItemKitWindowShutter",
    "1781051034": "StructureRocketManufactory",
    "1783004244": "SeedBag_Soybean",
    "1791306431": "ItemEmergencyEvaSuit",
    "1794588890": "StructureWallArchCornerRound",
    "1800622698": "ItemCoffeeMug",
    "1811979158": "StructureAngledBench",
    "1812364811": "StructurePassiveLiquidDrain",
    "1817007843": "ItemKitLandingPadAtmos",
    "1817645803": "ItemRTGSurvival",
    "1818267386": "StructureInsulatedInLineTankGas1x1",
    "1819167057": "ItemPlantThermogenic_Genepool2",
    "1822736084": "StructureLogicSelect",
    "1824284061": "ItemGasFilterNitrousOxideM",
    "1825212016": "StructureSmallDirectHeatExchangeLiquidtoGas",
    "1827215803": "ItemKitRoverFrame",
    "1830218956": "ItemNickelOre",
    "1835796040": "StructurePictureFrameThinMountPortraitSmall",
    "1840108251": "H2Combustor",
    "1845441951": "Flag_ODA_10m",
    "1847265835": "StructureLightLongAngled",
    "1848735691": "StructurePipeLiquidCrossJunction",
    "1849281546": "ItemCookedPumpkin",
    "1849974453": "StructureLiquidValve",
    "1853941363": "ApplianceTabletDock",
    "1854404029": "StructureCableJunction6HBurnt",
    "1862001680": "ItemMKIIWrench",
    "1871048978": "ItemAdhesiveInsulation",
    "1876847024": "ItemGasFilterCarbonDioxideL",
    "1880134612": "ItemWallHeater",
    "1898243702": "StructureNitrolyzer",
    "1913391845": "StructureLargeSatelliteDish",
    "1915566057": "ItemGasFilterPollutants",
    "1918456047": "ItemSprayCanKhaki",
    "1921918951": "ItemKitPumpedLiquidEngine",
    "1922506192": "StructurePowerUmbilicalFemaleSide",
    "1924673028": "ItemSoybean",
    "1926651727": "StructureInsulatedPipeLiquidCrossJunction",
    "1927790321": "ItemWreckageTurbineGenerator3",
    "1928991265": "StructurePassthroughHeatExchangerGasToLiquid",
    "1929046963": "ItemPotato",
    "1931412811": "StructureCableCornerHBurnt",
    "1932952652": "KitSDBSilo",
    "1934508338": "ItemKitPipeUtility",
    "1935945891": "ItemKitInteriorDoors",
    "1938254586": "StructureCryoTube",
    "1939061729": "StructureReinforcedWallPaddedWindow",
    "1941079206": "DynamicCrate",
    "1942143074": "StructureLogicGate",
    "1944485013": "StructureDiode",
    "1944858936": "StructureChairBacklessDouble",
    "1945930022": "StructureBatteryCharger",
    "1947944864": "StructureFurnace",
    "1949076595": "ItemLightSword",
    "1951126161": "ItemKitLiquidRegulator",
    "1951525046": "StructureCompositeCladdingRoundedCorner",
    "1959564765": "ItemGasFilterPollutantsL",
    "1960952220": "ItemKitSmallSatelliteDish",
    "1968102968": "StructureSolarPanelFlat",
    "1968371847": "StructureDrinkingFountain",
    "1969189000": "ItemJetpackBasic",
    "1969312177": "ItemKitEngineMedium",
    "1979212240": "StructureWallGeometryCorner",
    "1981698201": "StructureInteriorDoorPaddedThin",
    "1986658780": "StructureWaterBottleFillerPoweredBottom",
    "1988118157": "StructureLiquidTankSmall",
    "1990225489": "ItemKitComputer",
    "1997212478": "StructureWeatherStation",
    "1997293610": "ItemKitLogicInputOutput",
    "1997436771": "StructureCompositeCladdingPanel",
    "1998354978": "StructureElevatorShaftIndustrial",
    "1998377961": "ReagentColorRed",
    "1998634960": "Flag_ODA_6m",
    "1999523701": "StructureAreaPowerControl",
    "2004969680": "ItemGasFilterWaterL",
    "2009673399": "ItemDrill",
    "2011191088": "ItemFlagSmall",
    "2013539020": "ItemCookedRice",
    "2014252591": "StructureRocketScanner",
    "2015439334": "ItemKitPoweredVent",
    "2020180320": "CircuitboardSolarControl",
    "2024754523": "StructurePipeRadiatorFlatLiquid",
    "2024882687": "StructureWallPaddingLightFitting",
    "2027713511": "StructureReinforcedCompositeWindow",
    "2032027950": "ItemKitRocketLiquidFuelTank",
    "2035781224": "StructureEngineMountTypeA1",
    "2036225202": "ItemLiquidDrain",
    "2037427578": "ItemLiquidTankStorage",
    "2038427184": "StructurePipeCrossJunction3",
    "2042955224": "ItemPeaceLily",
    "2043318949": "PortableSolarPanel",
    "2044798572": "ItemMushroom",
    "2049879875": "StructureStairwellNoDoors",
    "2056377335": "StructureWindowShutter",
    "2057179799": "ItemKitHydroponicStation",
    "2060134443": "ItemCableCoilHeavy",
    "2060648791": "StructureElevatorLevelIndustrial",
    "2066977095": "StructurePassiveLargeRadiatorGas",
    "2067655311": "ItemKitInsulatedLiquidPipe",
    "2072805863": "StructureLiquidPipeRadiator",
    "2077593121": "StructureLogicHashGen",
    "2079959157": "AccessCardWhite",
    "2085762089": "StructureCableStraightHBurnt",
    "2087628940": "StructureWallPaddedWindow",
    "2096189278": "StructureLogicMirror",
    "2097419366": "StructureWallFlatCornerTriangle",
    "2099900163": "StructureBackLiquidPressureRegulator",
    "2102454415": "StructureTankSmallFuel",
    "2102803952": "ItemEmergencyWireCutters",
    "2104106366": "StructureGasMixer",
    "2109695912": "StructureCompositeFloorGratingOpen",
    "2109945337": "ItemRocketMiningDrillHead",
    "2111910840": "ItemSugar",
    "2130739600": "DynamicMKIILiquidCanisterEmpty",
    "2131916219": "ItemSpaceOre",
    "2133035682": "ItemKitStandardChute",
    "2134172356": "StructureInsulatedPipeStraight",
    "2134647745": "ItemLeadIngot",
    "2145068424": "ItemGasCanisterNitrogen"
  },
  "structures": [
    "CompositeRollCover",
    "DeviceLfoVolume",
    "DeviceStepUnit",
    "Flag_ODA_10m",
    "Flag_ODA_4m",
    "Flag_ODA_6m",
    "Flag_ODA_8m",
    "H2Combustor",
    "KitchenTableShort",
    "KitchenTableSimpleShort",
    "KitchenTableSimpleTall",
    "KitchenTableTall",
    "Landingpad_2x2CenterPiece01",
    "Landingpad_BlankPiece",
    "Landingpad_CenterPiece01",
    "Landingpad_CrossPiece",
    "Landingpad_DataConnectionPiece",
    "Landingpad_DiagonalPiece01",
    "Landingpad_GasConnectorInwardPiece",
    "Landingpad_GasConnectorOutwardPiece",
    "Landingpad_GasCylinderTankPiece",
    "Landingpad_LiquidConnectorInwardPiece",
    "Landingpad_LiquidConnectorOutwardPiece",
    "Landingpad_StraightPiece01",
    "Landingpad_TaxiPieceCorner",
    "Landingpad_TaxiPieceHold",
    "Landingpad_TaxiPieceStraight",
    "Landingpad_ThreshholdPiece",
    "LogicStepSequencer8",
    "PassiveSpeaker",
    "RailingElegant01",
    "RailingElegant02",
    "RailingIndustrial02",
    "RespawnPoint",
    "RespawnPointWallMounted",
    "Rover_MkI_build_states",
    "StopWatch",
    "StructureAccessBridge",
    "StructureActiveVent",
    "StructureAdvancedComposter",
    "StructureAdvancedFurnace",
    "StructureAdvancedPackagingMachine",
    "StructureAirConditioner",
    "StructureAirlock",
    "StructureAirlockGate",
    "StructureAngledBench",
    "StructureArcFurnace",
    "StructureAreaPowerControl",
    "StructureAreaPowerControlReversed",
    "StructureAutoMinerSmall",
    "StructureAutolathe",
    "StructureAutomatedOven",
    "StructureBackLiquidPressureRegulator",
    "StructureBackPressureRegulator",
    "StructureBasketHoop",
    "StructureBattery",
    "StructureBatteryCharger",
    "StructureBatteryChargerSmall",
    "StructureBatteryLarge",
    "StructureBatteryMedium",
    "StructureBatterySmall",
    "StructureBeacon",
    "StructureBench",
    "StructureBench1",
    "StructureBench2",
    "StructureBench3",
    "StructureBench4",
    "StructureBlastDoor",
    "StructureBlockBed",
    "StructureBlocker",
    "StructureCableAnalysizer",
    "StructureCableCorner",
    "StructureCableCorner3",
    "StructureCableCorner3Burnt",
    "StructureCableCorner3HBurnt",
    "StructureCableCorner4",
    "StructureCableCorner4Burnt",
    "StructureCableCorner4HBurnt",
    "StructureCableCornerBurnt",
    "StructureCableCornerH",
    "StructureCableCornerH3",
    "StructureCableCornerH4",
    "StructureCableCornerHBurnt",
    "StructureCableFuse100k",
    "StructureCableFuse1k",
    "StructureCableFuse50k",
    "StructureCableFuse5k",
    "StructureCableJunction",
    "StructureCableJunction4",
    "StructureCableJunction4Burnt",
    "StructureCableJunction4HBurnt",
    "StructureCableJunction5",
    "StructureCableJunction5Burnt",
    "StructureCableJunction6",
    "StructureCableJunction6Burnt",
    "StructureCableJunction6HBurnt",
    "StructureCableJunctionBurnt",
    "StructureCableJunctionH",
    "StructureCableJunctionH4",
    "StructureCableJunctionH5",
    "StructureCableJunctionH5Burnt",
    "StructureCableJunctionH6",
    "StructureCableJunctionHBurnt",
    "StructureCableStraight",
    "StructureCableStraightBurnt",
    "StructureCableStraightH",
    "StructureCableStraightHBurnt",
    "StructureCamera",
    "StructureCapsuleTankGas",
    "StructureCapsuleTankLiquid",
    "StructureCargoStorageMedium",
    "StructureCargoStorageSmall",
    "StructureCentrifuge",
    "StructureChair",
    "StructureChairBacklessDouble",
    "StructureChairBacklessSingle",
    "StructureChairBoothCornerLeft",
    "StructureChairBoothMiddle",
    "StructureChairRectangleDouble",
    "StructureChairRectangleSingle",
    "StructureChairThickDouble",
    "StructureChairThickSingle",
    "StructureChuteBin",
    "StructureChuteCorner",
    "StructureChuteDigitalFlipFlopSplitterLeft",
    "StructureChuteDigitalFlipFlopSplitterRight",
    "StructureChuteDigitalValveLeft",
    "StructureChuteDigitalValveRight",
    "StructureChuteFlipFlopSplitter",
    "StructureChuteInlet",
    "StructureChuteJunction",
    "StructureChuteOutlet",
    "StructureChuteOverflow",
    "StructureChuteStraight",
    "StructureChuteUmbilicalFemale",
    "StructureChuteUmbilicalFemaleSide",
    "StructureChuteUmbilicalMale",
    "StructureChuteValve",
    "StructureChuteWindow",
    "StructureCircuitHousing",
    "StructureCombustionCentrifuge",
    "StructureCompositeCladdingAngled",
    "StructureCompositeCladdingAngledCorner",
    "StructureCompositeCladdingAngledCornerInner",
    "StructureCompositeCladdingAngledCornerInnerLong",
    "StructureCompositeCladdingAngledCornerInnerLongL",
    "StructureCompositeCladdingAngledCornerInnerLongR",
    "StructureCompositeCladdingAngledCornerLong",
    "StructureCompositeCladdingAngledCornerLongR",
    "StructureCompositeCladdingAngledLong",
    "StructureCompositeCladdingCylindrical",
    "StructureCompositeCladdingCylindricalPanel",
    "StructureCompositeCladdingPanel",
    "StructureCompositeCladdingRounded",
    "StructureCompositeCladdingRoundedCorner",
    "StructureCompositeCladdingRoundedCornerInner",
    "StructureCompositeCladdingSpherical",
    "StructureCompositeCladdingSphericalCap",
    "StructureCompositeCladdingSphericalCorner",
    "StructureCompositeDoor",
    "StructureCompositeFloorGrating",
    "StructureCompositeFloorGrating2",
    "StructureCompositeFloorGrating3",
    "StructureCompositeFloorGrating4",
    "StructureCompositeFloorGratingOpen",
    "StructureCompositeFloorGratingOpenRotated",
    "StructureCompositeWall",
    "StructureCompositeWall02",
    "StructureCompositeWall03",
    "StructureCompositeWall04",
    "StructureCompositeWindow",
    "StructureCompositeWindowIron",
    "StructureComputer",
    "StructureCondensationChamber",
    "StructureCondensationValve",
    "StructureConsole",
    "StructureConsoleDual",
    "StructureConsoleLED1x2",
    "StructureConsoleLED1x3",
    "StructureConsoleLED5",
    "StructureConsoleMonitor",
    "StructureControlChair",
    "StructureCornerLocker",
    "StructureCrateMount",
    "StructureCryoTube",
    "StructureCryoTubeHorizontal",
    "StructureCryoTubeVertical",
    "StructureDaylightSensor",
    "StructureDeepMiner",
    "StructureDigitalValve",
    "StructureDiode",
    "StructureDiodeSlide",
    "StructureDockPortSide",
    "StructureDrinkingFountain",
    "StructureElectrolyzer",
    "StructureElectronicsPrinter",
    "StructureElevatorLevelFront",
    "StructureElevatorLevelIndustrial",
    "StructureElevatorShaft",
    "StructureElevatorShaftIndustrial",
    "StructureEmergencyButton",
    "StructureEngineMountTypeA1",
    "StructureEvaporationChamber",
    "StructureExpansionValve",
    "StructureFairingTypeA1",
    "StructureFairingTypeA2",
    "StructureFairingTypeA3",
    "StructureFiltration",
    "StructureFlagSmall",
    "StructureFlashingLight",
    "StructureFlatBench",
    "StructureFloorDrain",
    "StructureFrame",
    "StructureFrameCorner",
    "StructureFrameCornerCut",
    "StructureFrameIron",
    "StructureFrameSide",
    "StructureFridgeBig",
    "StructureFridgeSmall",
    "StructureFurnace",
    "StructureFuselageTypeA1",
    "StructureFuselageTypeA2",
    "StructureFuselageTypeA4",
    "StructureFuselageTypeC5",
    "StructureGasGenerator",
    "StructureGasMixer",
    "StructureGasSensor",
    "StructureGasTankStorage",
    "StructureGasUmbilicalFemale",
    "StructureGasUmbilicalFemaleSide",
    "StructureGasUmbilicalMale",
    "StructureGlassDoor",
    "StructureGovernedGasEngine",
    "StructureGroundBasedTelescope",
    "StructureGrowLight",
    "StructureHarvie",
    "StructureHeatExchangeLiquidtoGas",
    "StructureHeatExchangerGastoGas",
    "StructureHeatExchangerLiquidtoLiquid",
    "StructureHorizontalAutoMiner",
    "StructureHydraulicPipeBender",
    "StructureHydroponicsStation",
    "StructureHydroponicsTray",
    "StructureHydroponicsTrayData",
    "StructureIceCrusher",
    "StructureIgniter",
    "StructureInLineTankGas1x1",
    "StructureInLineTankGas1x2",
    "StructureInLineTankLiquid1x1",
    "StructureInLineTankLiquid1x2",
    "StructureInsulatedInLineTankGas1x1",
    "StructureInsulatedInLineTankGas1x2",
    "StructureInsulatedInLineTankLiquid1x1",
    "StructureInsulatedInLineTankLiquid1x2",
    "StructureInsulatedPipeCorner",
    "StructureInsulatedPipeCrossJunction",
    "StructureInsulatedPipeCrossJunction3",
    "StructureInsulatedPipeCrossJunction4",
    "StructureInsulatedPipeCrossJunction5",
    "StructureInsulatedPipeCrossJunction6",
    "StructureInsulatedPipeLiquidCorner",
    "StructureInsulatedPipeLiquidCrossJunction",
    "StructureInsulatedPipeLiquidCrossJunction4",
    "StructureInsulatedPipeLiquidCrossJunction5",
    "StructureInsulatedPipeLiquidCrossJunction6",
    "StructureInsulatedPipeLiquidStraight",
    "StructureInsulatedPipeLiquidTJunction",
    "StructureInsulatedPipeStraight",
    "StructureInsulatedPipeTJunction",
    "StructureInsulatedTankConnector",
    "StructureInsulatedTankConnectorLiquid",
    "StructureInteriorDoorGlass",
    "StructureInteriorDoorPadded",
    "StructureInteriorDoorPaddedThin",
    "StructureInteriorDoorTriangle",
    "StructureKlaxon",
    "StructureLadder",
    "StructureLadderEnd",
    "StructureLargeDirectHeatExchangeGastoGas",
    "StructureLargeDirectHeatExchangeGastoLiquid",
    "StructureLargeDirectHeatExchangeLiquidtoLiquid",
    "StructureLargeExtendableRadiator",
    "StructureLargeHangerDoor",
    "StructureLargeSatelliteDish",
    "StructureLaunchMount",
    "StructureLightLong",
    "StructureLightLongAngled",
    "StructureLightLongWide",
    "StructureLightRound",
    "StructureLightRoundAngled",
    "StructureLightRoundSmall",
    "StructureLiquidDrain",
    "StructureLiquidPipeAnalyzer",
    "StructureLiquidPipeHeater",
    "StructureLiquidPipeOneWayValve",
    "StructureLiquidPipeRadiator",
    "StructureLiquidPressureRegulator",
    "StructureLiquidTankBig",
    "StructureLiquidTankBigInsulated",
    "StructureLiquidTankSmall",
    "StructureLiquidTankSmallInsulated",
    "StructureLiquidTankStorage",
    "StructureLiquidTurboVolumePump",
    "StructureLiquidUmbilicalFemale",
    "StructureLiquidUmbilicalFemaleSide",
    "StructureLiquidUmbilicalMale",
    "StructureLiquidValve",
    "StructureLiquidVolumePump",
    "StructureLockerSmall",
    "StructureLogicBatchReader",
    "StructureLogicBatchSlotReader",
    "StructureLogicBatchWriter",
    "StructureLogicButton",
    "StructureLogicCompare",
    "StructureLogicDial",
    "StructureLogicGate",
    "StructureLogicHashGen",
    "StructureLogicMath",
    "StructureLogicMathUnary",
    "StructureLogicMemory",
    "StructureLogicMinMax",
    "StructureLogicMirror",
    "StructureLogicReader",
    "StructureLogicReagentReader",
    "StructureLogicRocketDownlink",
    "StructureLogicRocketUplink",
    "StructureLogicSelect",
    "StructureLogicSlotReader",
    "StructureLogicSorter",
    "StructureLogicSwitch",
    "StructureLogicSwitch2",
    "StructureLogicTransmitter",
    "StructureLogicWriter",
    "StructureLogicWriterSwitch",
    "StructureManualHatch",
    "StructureMediumConvectionRadiator",
    "StructureMediumConvectionRadiatorLiquid",
    "StructureMediumHangerDoor",
    "StructureMediumRadiator",
    "StructureMediumRadiatorLiquid",
    "StructureMediumRocketGasFuelTank",
    "StructureMediumRocketLiquidFuelTank",
    "StructureMotionSensor",
    "StructureNitrolyzer",
    "StructureOccupancySensor",
    "StructureOverheadShortCornerLocker",
    "StructureOverheadShortLocker",
    "StructurePassiveLargeRadiatorGas",
    "StructurePassiveLargeRadiatorLiquid",
    "StructurePassiveLiquidDrain",
    "StructurePassiveVent",
    "StructurePassiveVentInsulated",
    "StructurePassthroughHeatExchangerGasToGas",
    "StructurePassthroughHeatExchangerGasToLiquid",
    "StructurePassthroughHeatExchangerLiquidToLiquid",
    "StructurePictureFrameThickLandscapeLarge",
    "StructurePictureFrameThickLandscapeSmall",
    "StructurePictureFrameThickMountLandscapeLarge",
    "StructurePictureFrameThickMountLandscapeSmall",
    "StructurePictureFrameThickMountPortraitLarge",
    "StructurePictureFrameThickMountPortraitSmall",
    "StructurePictureFrameThickPortraitLarge",
    "StructurePictureFrameThickPortraitSmall",
    "StructurePictureFrameThinLandscapeLarge",
    "StructurePictureFrameThinLandscapeSmall",
    "StructurePictureFrameThinMountLandscapeLarge",
    "StructurePictureFrameThinMountLandscapeSmall",
    "StructurePictureFrameThinMountPortraitLarge",
    "StructurePictureFrameThinMountPortraitSmall",
    "StructurePictureFrameThinPortraitLarge",
    "StructurePictureFrameThinPortraitSmall",
    "StructurePipeAnalysizer",
    "StructurePipeCorner",
    "StructurePipeCowl",
    "StructurePipeCrossJunction",
    "StructurePipeCrossJunction3",
    "StructurePipeCrossJunction4",
    "StructurePipeCrossJunction5",
    "StructurePipeCrossJunction6",
    "StructurePipeHeater",
    "StructurePipeIgniter",
    "StructurePipeInsulatedLiquidCrossJunction",
    "StructurePipeLabel",
    "StructurePipeLiquidCorner",
    "StructurePipeLiquidCrossJunction",
    "StructurePipeLiquidCrossJunction3",
    "StructurePipeLiquidCrossJunction4",
    "StructurePipeLiquidCrossJunction5",
    "StructurePipeLiquidCrossJunction6",
    "StructurePipeLiquidStraight",
    "StructurePipeLiquidTJunction",
    "StructurePipeMeter",
    "StructurePipeOneWayValve",
    "StructurePipeOrgan",
    "StructurePipeRadiator",
    "StructurePipeRadiatorFlat",
    "StructurePipeRadiatorFlatLiquid",
    "StructurePipeStraight",
    "StructurePipeTJunction",
    "StructurePlanter",
    "StructurePlatformLadderOpen",
    "StructurePlinth",
    "StructurePortablesConnector",
    "StructurePowerConnector",
    "StructurePowerTransmitter",
    "StructurePowerTransmitterOmni",
    "StructurePowerTransmitterReceiver",
    "StructurePowerUmbilicalFemale",
    "StructurePowerUmbilicalFemaleSide",
    "StructurePowerUmbilicalMale",
    "StructurePoweredVent",
    "StructurePoweredVentLarge",
    "StructurePressurantValve",
    "StructurePressureFedGasEngine",
    "StructurePressureFedLiquidEngine",
    "StructurePressurePlateLarge",
    "StructurePressurePlateMedium",
    "StructurePressurePlateSmall",
    "StructurePressureRegulator",
    "StructureProximitySensor",
    "StructurePumpedLiquidEngine",
    "StructurePurgeValve",
    "StructureRailing",
    "StructureRecycler",
    "StructureRefrigeratedVendingMachine",
    "StructureReinforcedCompositeWindow",
    "StructureReinforcedCompositeWindowSteel",
    "StructureReinforcedWallPaddedWindow",
    "StructureReinforcedWallPaddedWindowThin",
    "StructureRocketAvionics",
    "StructureRocketCelestialTracker",
    "StructureRocketCircuitHousing",
    "StructureRocketEngineTiny",
    "StructureRocketManufactory",
    "StructureRocketMiner",
    "StructureRocketScanner",
    "StructureRocketTower",
    "StructureRocketTransformerSmall",
    "StructureRover",
    "StructureSDBHopper",
    "StructureSDBHopperAdvanced",
    "StructureSDBSilo",
    "StructureSatelliteDish",
    "StructureSecurityPrinter",
    "StructureShelf",
    "StructureShelfMedium",
    "StructureShortCornerLocker",
    "StructureShortLocker",
    "StructureShower",
    "StructureShowerPowered",
    "StructureSign1x1",
    "StructureSign2x1",
    "StructureSingleBed",
    "StructureSleeper",
    "StructureSleeperLeft",
    "StructureSleeperRight",
    "StructureSleeperVertical",
    "StructureSleeperVerticalDroid",
    "StructureSmallDirectHeatExchangeGastoGas",
    "StructureSmallDirectHeatExchangeLiquidtoGas",
    "StructureSmallDirectHeatExchangeLiquidtoLiquid",
    "StructureSmallSatelliteDish",
    "StructureSmallTableBacklessDouble",
    "StructureSmallTableBacklessSingle",
    "StructureSmallTableDinnerSingle",
    "StructureSmallTableRectangleDouble",
    "StructureSmallTableRectangleSingle",
    "StructureSmallTableThickDouble",
    "StructureSmallTableThickSingle",
    "StructureSolarPanel",
    "StructureSolarPanel45",
    "StructureSolarPanel45Reinforced",
    "StructureSolarPanelDual",
    "StructureSolarPanelDualReinforced",
    "StructureSolarPanelFlat",
    "StructureSolarPanelFlatReinforced",
    "StructureSolarPanelReinforced",
    "StructureSolidFuelGenerator",
    "StructureSorter",
    "StructureStacker",
    "StructureStackerReverse",
    "StructureStairs4x2",
    "StructureStairs4x2RailL",
    "StructureStairs4x2RailR",
    "StructureStairs4x2Rails",
    "StructureStairwellBackLeft",
    "StructureStairwellBackPassthrough",
    "StructureStairwellBackRight",
    "StructureStairwellFrontLeft",
    "StructureStairwellFrontPassthrough",
    "StructureStairwellFrontRight",
    "StructureStairwellNoDoors",
    "StructureStirlingEngine",
    "StructureStorageLocker",
    "StructureSuitStorage",
    "StructureTankBig",
    "StructureTankBigInsulated",
    "StructureTankConnector",
    "StructureTankConnectorLiquid",
    "StructureTankSmall",
    "StructureTankSmallAir",
    "StructureTankSmallFuel",
    "StructureTankSmallInsulated",
    "StructureToolManufactory",
    "StructureTorpedoRack",
    "StructureTraderWaypoint",
    "StructureTransformer",
    "StructureTransformerMedium",
    "StructureTransformerMediumReversed",
    "StructureTransformerSmall",
    "StructureTransformerSmallReversed",
    "StructureTurbineGenerator",
    "StructureTurboVolumePump",
    "StructureUnloader",
    "StructureUprightWindTurbine",
    "StructureValve",
    "StructureVendingMachine",
    "StructureVolumePump",
    "StructureWallArch",
    "StructureWallArchArrow",
    "StructureWallArchCornerRound",
    "StructureWallArchCornerSquare",
    "StructureWallArchCornerTriangle",
    "StructureWallArchPlating",
    "StructureWallArchTwoTone",
    "StructureWallCooler",
    "StructureWallFlat",
    "StructureWallFlatCornerRound",
    "StructureWallFlatCornerSquare",
    "StructureWallFlatCornerTriangle",
    "StructureWallFlatCornerTriangleFlat",
    "StructureWallGeometryCorner",
    "StructureWallGeometryStreight",
    "StructureWallGeometryT",
    "StructureWallGeometryTMirrored",
    "StructureWallHeater",
    "StructureWallIron",
    "StructureWallIron02",
    "StructureWallIron03",
    "StructureWallIron04",
    "StructureWallLargePanel",
    "StructureWallLargePanelArrow",
    "StructureWallLight",
    "StructureWallLightBattery",
    "StructureWallPaddedArch",
    "StructureWallPaddedArchCorner",
    "StructureWallPaddedArchLightFittingTop",
    "StructureWallPaddedArchLightsFittings",
    "StructureWallPaddedCorner",
    "StructureWallPaddedCornerThin",
    "StructureWallPaddedNoBorder",
    "StructureWallPaddedNoBorderCorner",
    "StructureWallPaddedThinNoBorder",
    "StructureWallPaddedThinNoBorderCorner",
    "StructureWallPaddedWindow",
    "StructureWallPaddedWindowThin",
    "StructureWallPadding",
    "StructureWallPaddingArchVent",
    "StructureWallPaddingLightFitting",
    "StructureWallPaddingThin",
    "StructureWallPlating",
    "StructureWallSmallPanelsAndHatch",
    "StructureWallSmallPanelsArrow",
    "StructureWallSmallPanelsMonoChrome",
    "StructureWallSmallPanelsOpen",
    "StructureWallSmallPanelsTwoTone",
    "StructureWallVent",
    "StructureWaterBottleFiller",
    "StructureWaterBottleFillerBottom",
    "StructureWaterBottleFillerPowered",
    "StructureWaterBottleFillerPoweredBottom",
    "StructureWaterDigitalValve",
    "StructureWaterPipeMeter",
    "StructureWaterPurifier",
    "StructureWaterWallCooler",
    "StructureWeatherStation",
    "StructureWindTurbine",
    "StructureWindowShutter"
  ],
  "devices": [
    "CompositeRollCover",
    "DeviceLfoVolume",
    "DeviceStepUnit",
    "H2Combustor",
    "Landingpad_DataConnectionPiece",
    "Landingpad_GasConnectorInwardPiece",
    "Landingpad_GasConnectorOutwardPiece",
    "Landingpad_LiquidConnectorInwardPiece",
    "Landingpad_LiquidConnectorOutwardPiece",
    "Landingpad_ThreshholdPiece",
    "LogicStepSequencer8",
    "PassiveSpeaker",
    "StopWatch",
    "StructureAccessBridge",
    "StructureActiveVent",
    "StructureAdvancedComposter",
    "StructureAdvancedFurnace",
    "StructureAdvancedPackagingMachine",
    "StructureAirConditioner",
    "StructureAirlock",
    "StructureAirlockGate",
    "StructureAngledBench",
    "StructureArcFurnace",
    "StructureAreaPowerControl",
    "StructureAreaPowerControlReversed",
    "StructureAutoMinerSmall",
    "StructureAutolathe",
    "StructureAutomatedOven",
    "StructureBackLiquidPressureRegulator",
    "StructureBackPressureRegulator",
    "StructureBasketHoop",
    "StructureBattery",
    "StructureBatteryCharger",
    "StructureBatteryChargerSmall",
    "StructureBatteryLarge",
    "StructureBatteryMedium",
    "StructureBatterySmall",
    "StructureBeacon",
    "StructureBench",
    "StructureBench1",
    "StructureBench2",
    "StructureBench3",
    "StructureBench4",
    "StructureBlastDoor",
    "StructureBlockBed",
    "StructureCableAnalysizer",
    "StructureCableFuse100k",
    "StructureCableFuse1k",
    "StructureCableFuse50k",
    "StructureCableFuse5k",
    "StructureCamera",
    "StructureCapsuleTankGas",
    "StructureCapsuleTankLiquid",
    "StructureCargoStorageMedium",
    "StructureCargoStorageSmall",
    "StructureCentrifuge",
    "StructureChair",
    "StructureChairBacklessDouble",
    "StructureChairBacklessSingle",
    "StructureChairBoothCornerLeft",
    "StructureChairBoothMiddle",
    "StructureChairRectangleDouble",
    "StructureChairRectangleSingle",
    "StructureChairThickDouble",
    "StructureChairThickSingle",
    "StructureChuteBin",
    "StructureChuteDigitalFlipFlopSplitterLeft",
    "StructureChuteDigitalFlipFlopSplitterRight",
    "StructureChuteDigitalValveLeft",
    "StructureChuteDigitalValveRight",
    "StructureChuteInlet",
    "StructureChuteOutlet",
    "StructureChuteUmbilicalFemale",
    "StructureChuteUmbilicalFemaleSide",
    "StructureChuteUmbilicalMale",
    "StructureCircuitHousing",
    "StructureCombustionCentrifuge",
    "StructureCompositeDoor",
    "StructureComputer",
    "StructureCondensationChamber",
    "StructureCondensationValve",
    "StructureConsole",
    "StructureConsoleDual",
    "StructureConsoleLED1x2",
    "StructureConsoleLED1x3",
    "StructureConsoleLED5",
    "StructureConsoleMonitor",
    "StructureControlChair",
    "StructureCornerLocker",
    "StructureCryoTube",
    "StructureCryoTubeHorizontal",
    "StructureCryoTubeVertical",
    "StructureDaylightSensor",
    "StructureDeepMiner",
    "StructureDigitalValve",
    "StructureDiode",
    "StructureDiodeSlide",
    "StructureDockPortSide",
    "StructureDrinkingFountain",
    "StructureElectrolyzer",
    "StructureElectronicsPrinter",
    "StructureElevatorLevelFront",
    "StructureElevatorLevelIndustrial",
    "StructureElevatorShaft",
    "StructureElevatorShaftIndustrial",
    "StructureEmergencyButton",
    "StructureEvaporationChamber",
    "StructureExpansionValve",
    "StructureFiltration",
    "StructureFlashingLight",
    "StructureFlatBench",
    "StructureFridgeBig",
    "StructureFridgeSmall",
    "StructureFurnace",
    "StructureGasGenerator",
    "StructureGasMixer",
    "StructureGasSensor",
    "StructureGasTankStorage",
    "StructureGasUmbilicalFemale",
    "StructureGasUmbilicalFemaleSide",
    "StructureGasUmbilicalMale",
    "StructureGlassDoor",
    "StructureGovernedGasEngine",
    "StructureGroundBasedTelescope",
    "StructureGrowLight",
    "StructureHarvie",
    "StructureHeatExchangeLiquidtoGas",
    "StructureHeatExchangerGastoGas",
    "StructureHeatExchangerLiquidtoLiquid",
    "StructureHorizontalAutoMiner",
    "StructureHydraulicPipeBender",
    "StructureHydroponicsStation",
    "StructureHydroponicsTrayData",
    "StructureIceCrusher",
    "StructureIgniter",
    "StructureInteriorDoorGlass",
    "StructureInteriorDoorPadded",
    "StructureInteriorDoorPaddedThin",
    "StructureInteriorDoorTriangle",
    "StructureKlaxon",
    "StructureLargeDirectHeatExchangeGastoGas",
    "StructureLargeDirectHeatExchangeGastoLiquid",
    "StructureLargeDirectHeatExchangeLiquidtoLiquid",
    "StructureLargeExtendableRadiator",
    "StructureLargeHangerDoor",
    "StructureLargeSatelliteDish",
    "StructureLightLong",
    "StructureLightLongAngled",
    "StructureLightLongWide",
    "StructureLightRound",
    "StructureLightRoundAngled",
    "StructureLightRoundSmall",
    "StructureLiquidDrain",
    "StructureLiquidPipeAnalyzer",
    "StructureLiquidPipeHeater",
    "StructureLiquidPipeOneWayValve",
    "StructureLiquidPipeRadiator",
    "StructureLiquidPressureRegulator",
    "StructureLiquidTankBig",
    "StructureLiquidTankBigInsulated",
    "StructureLiquidTankSmall",
    "StructureLiquidTankSmallInsulated",
    "StructureLiquidTankStorage",
    "StructureLiquidTurboVolumePump",
    "StructureLiquidUmbilicalFemale",
    "StructureLiquidUmbilicalFemaleSide",
    "StructureLiquidUmbilicalMale",
    "StructureLiquidValve",
    "StructureLiquidVolumePump",
    "StructureLockerSmall",
    "StructureLogicBatchReader",
    "StructureLogicBatchSlotReader",
    "StructureLogicBatchWriter",
    "StructureLogicButton",
    "StructureLogicCompare",
    "StructureLogicDial",
    "StructureLogicGate",
    "StructureLogicHashGen",
    "StructureLogicMath",
    "StructureLogicMathUnary",
    "StructureLogicMemory",
    "StructureLogicMinMax",
    "StructureLogicMirror",
    "StructureLogicReader",
    "StructureLogicReagentReader",
    "StructureLogicRocketDownlink",
    "StructureLogicRocketUplink",
    "StructureLogicSelect",
    "StructureLogicSlotReader",
    "StructureLogicSorter",
    "StructureLogicSwitch",
    "StructureLogicSwitch2",
    "StructureLogicTransmitter",
    "StructureLogicWriter",
    "StructureLogicWriterSwitch",
    "StructureManualHatch",
    "StructureMediumConvectionRadiator",
    "StructureMediumConvectionRadiatorLiquid",
    "StructureMediumHangerDoor",
    "StructureMediumRadiator",
    "StructureMediumRadiatorLiquid",
    "StructureMediumRocketGasFuelTank",
    "StructureMediumRocketLiquidFuelTank",
    "StructureMotionSensor",
    "StructureNitrolyzer",
    "StructureOccupancySensor",
    "StructureOverheadShortCornerLocker",
    "StructureOverheadShortLocker",
    "StructurePassiveLargeRadiatorGas",
    "StructurePassiveLargeRadiatorLiquid",
    "StructurePassiveLiquidDrain",
    "StructurePassthroughHeatExchangerGasToGas",
    "StructurePassthroughHeatExchangerGasToLiquid",
    "StructurePassthroughHeatExchangerLiquidToLiquid",
    "StructurePipeAnalysizer",
    "StructurePipeHeater",
    "StructurePipeIgniter",
    "StructurePipeLabel",
    "StructurePipeMeter",
    "StructurePipeOneWayValve",
    "StructurePipeRadiator",
    "StructurePipeRadiatorFlat",
    "StructurePipeRadiatorFlatLiquid",
    "StructurePortablesConnector",
    "StructurePowerConnector",
    "StructurePowerTransmitter",
    "StructurePowerTransmitterOmni",
    "StructurePowerTransmitterReceiver",
    "StructurePowerUmbilicalFemale",
    "StructurePowerUmbilicalFemaleSide",
    "StructurePowerUmbilicalMale",
    "StructurePoweredVent",
    "StructurePoweredVentLarge",
    "StructurePressurantValve",
    "StructurePressureFedGasEngine",
    "StructurePressureFedLiquidEngine",
    "StructurePressurePlateLarge",
    "StructurePressurePlateMedium",
    "StructurePressurePlateSmall",
    "StructurePressureRegulator",
    "StructureProximitySensor",
    "StructurePumpedLiquidEngine",
    "StructurePurgeValve",
    "StructureRecycler",
    "StructureRefrigeratedVendingMachine",
    "StructureRocketAvionics",
    "StructureRocketCelestialTracker",
    "StructureRocketCircuitHousing",
    "StructureRocketEngineTiny",
    "StructureRocketManufactory",
    "StructureRocketMiner",
    "StructureRocketScanner",
    "StructureRocketTransformerSmall",
    "StructureSDBHopper",
    "StructureSDBHopperAdvanced",
    "StructureSDBSilo",
    "StructureSatelliteDish",
    "StructureSecurityPrinter",
    "StructureShelfMedium",
    "StructureShortCornerLocker",
    "StructureShortLocker",
    "StructureShower",
    "StructureShowerPowered",
    "StructureSign1x1",
    "StructureSign2x1",
    "StructureSingleBed",
    "StructureSleeper",
    "StructureSleeperLeft",
    "StructureSleeperRight",
    "StructureSleeperVertical",
    "StructureSleeperVerticalDroid",
    "StructureSmallDirectHeatExchangeGastoGas",
    "StructureSmallDirectHeatExchangeLiquidtoGas",
    "StructureSmallDirectHeatExchangeLiquidtoLiquid",
    "StructureSmallSatelliteDish",
    "StructureSolarPanel",
    "StructureSolarPanel45",
    "StructureSolarPanel45Reinforced",
    "StructureSolarPanelDual",
    "StructureSolarPanelDualReinforced",
    "StructureSolarPanelFlat",
    "StructureSolarPanelFlatReinforced",
    "StructureSolarPanelReinforced",
    "StructureSolidFuelGenerator",
    "StructureSorter",
    "StructureStacker",
    "StructureStackerReverse",
    "StructureStirlingEngine",
    "StructureStorageLocker",
    "StructureSuitStorage",
    "StructureTankBig",
    "StructureTankBigInsulated",
    "StructureTankSmall",
    "StructureTankSmallAir",
    "StructureTankSmallFuel",
    "StructureTankSmallInsulated",
    "StructureToolManufactory",
    "StructureTraderWaypoint",
    "StructureTransformer",
    "StructureTransformerMedium",
    "StructureTransformerMediumReversed",
    "StructureTransformerSmall",
    "StructureTransformerSmallReversed",
    "StructureTurbineGenerator",
    "StructureTurboVolumePump",
    "StructureUnloader",
    "StructureUprightWindTurbine",
    "StructureValve",
    "StructureVendingMachine",
    "StructureVolumePump",
    "StructureWallCooler",
    "StructureWallHeater",
    "StructureWallLight",
    "StructureWallLightBattery",
    "StructureWaterBottleFiller",
    "StructureWaterBottleFillerBottom",
    "StructureWaterBottleFillerPowered",
    "StructureWaterBottleFillerPoweredBottom",
    "StructureWaterDigitalValve",
    "StructureWaterPipeMeter",
    "StructureWaterPurifier",
    "StructureWaterWallCooler",
    "StructureWeatherStation",
    "StructureWindTurbine",
    "StructureWindowShutter"
  ],
  "items": [
    "AccessCardBlack",
    "AccessCardBlue",
    "AccessCardBrown",
    "AccessCardGray",
    "AccessCardGreen",
    "AccessCardKhaki",
    "AccessCardOrange",
    "AccessCardPink",
    "AccessCardPurple",
    "AccessCardRed",
    "AccessCardWhite",
    "AccessCardYellow",
    "ApplianceChemistryStation",
    "ApplianceDeskLampLeft",
    "ApplianceDeskLampRight",
    "ApplianceMicrowave",
    "AppliancePackagingMachine",
    "AppliancePaintMixer",
    "AppliancePlantGeneticAnalyzer",
    "AppliancePlantGeneticSplicer",
    "AppliancePlantGeneticStabilizer",
    "ApplianceReagentProcessor",
    "ApplianceSeedTray",
    "ApplianceTabletDock",
    "AutolathePrinterMod",
    "Battery_Wireless_cell",
    "Battery_Wireless_cell_Big",
    "CardboardBox",
    "CartridgeAccessController",
    "CartridgeAtmosAnalyser",
    "CartridgeConfiguration",
    "CartridgeElectronicReader",
    "CartridgeGPS",
    "CartridgeGuide",
    "CartridgeMedicalAnalyser",
    "CartridgeNetworkAnalyser",
    "CartridgeOreScanner",
    "CartridgeOreScannerColor",
    "CartridgePlantAnalyser",
    "CartridgeTracker",
    "CircuitboardAdvAirlockControl",
    "CircuitboardAirControl",
    "CircuitboardAirlockControl",
    "CircuitboardCameraDisplay",
    "CircuitboardDoorControl",
    "CircuitboardGasDisplay",
    "CircuitboardGraphDisplay",
    "CircuitboardHashDisplay",
    "CircuitboardModeControl",
    "CircuitboardPowerControl",
    "CircuitboardShipDisplay",
    "CircuitboardSolarControl",
    "CrateMkII",
    "DecayedFood",
    "DynamicAirConditioner",
    "DynamicCrate",
    "DynamicGPR",
    "DynamicGasCanisterAir",
    "DynamicGasCanisterCarbonDioxide",
    "DynamicGasCanisterEmpty",
    "DynamicGasCanisterFuel",
    "DynamicGasCanisterNitrogen",
    "DynamicGasCanisterNitrousOxide",
    "DynamicGasCanisterOxygen",
    "DynamicGasCanisterPollutants",
    "DynamicGasCanisterRocketFuel",
    "DynamicGasCanisterVolatiles",
    "DynamicGasCanisterWater",
    "DynamicGasTankAdvanced",
    "DynamicGasTankAdvancedOxygen",
    "DynamicGenerator",
    "DynamicHydroponics",
    "DynamicLight",
    "DynamicLiquidCanisterEmpty",
    "DynamicMKIILiquidCanisterEmpty",
    "DynamicMKIILiquidCanisterWater",
    "DynamicScrubber",
    "DynamicSkeleton",
    "ElectronicPrinterMod",
    "ElevatorCarrage",
    "EntityChick",
    "EntityChickenBrown",
    "EntityChickenWhite",
    "EntityRoosterBlack",
    "EntityRoosterBrown",
    "Fertilizer",
    "FireArmSMG",
    "FlareGun",
    "Handgun",
    "HandgunMagazine",
    "HumanSkull",
    "ImGuiCircuitboardAirlockControl",
    "ItemActiveVent",
    "ItemAdhesiveInsulation",
    "ItemAdvancedTablet",
    "ItemAlienMushroom",
    "ItemAmmoBox",
    "ItemAngleGrinder",
    "ItemArcWelder",
    "ItemAreaPowerControl",
    "ItemAstroloyIngot",
    "ItemAstroloySheets",
    "ItemAuthoringTool",
    "ItemAuthoringToolRocketNetwork",
    "ItemBasketBall",
    "ItemBatteryCell",
    "ItemBatteryCellLarge",
    "ItemBatteryCellNuclear",
    "ItemBatteryCharger",
    "ItemBatteryChargerSmall",
    "ItemBeacon",
    "ItemBiomass",
    "ItemBreadLoaf",
    "ItemCableAnalyser",
    "ItemCableCoil",
    "ItemCableCoilHeavy",
    "ItemCableFuse",
    "ItemCannedCondensedMilk",
    "ItemCannedEdamame",
    "ItemCannedMushroom",
    "ItemCannedPowderedEggs",
    "ItemCannedRicePudding",
    "ItemCerealBar",
    "ItemCharcoal",
    "ItemChemLightBlue",
    "ItemChemLightGreen",
    "ItemChemLightRed",
    "ItemChemLightWhite",
    "ItemChemLightYellow",
    "ItemChocolateBar",
    "ItemChocolateCake",
    "ItemChocolateCerealBar",
    "ItemCoalOre",
    "ItemCobaltOre",
    "ItemCocoaPowder",
    "ItemCocoaTree",
    "ItemCoffeeMug",
    "ItemConstantanIngot",
    "ItemCookedCondensedMilk",
    "ItemCookedCorn",
    "ItemCookedMushroom",
    "ItemCookedPowderedEggs",
    "ItemCookedPumpkin",
    "ItemCookedRice",
    "ItemCookedSoybean",
    "ItemCookedTomato",
    "ItemCopperIngot",
    "ItemCopperOre",
    "ItemCorn",
    "ItemCornSoup",
    "ItemCreditCard",
    "ItemCropHay",
    "ItemCrowbar",
    "ItemDataDisk",
    "ItemDirtCanister",
    "ItemDirtyOre",
    "ItemDisposableBatteryCharger",
    "ItemDrill",
    "ItemDuctTape",
    "ItemDynamicAirCon",
    "ItemDynamicScrubber",
    "ItemEggCarton",
    "ItemElectronicParts",
    "ItemElectrumIngot",
    "ItemEmergencyAngleGrinder",
    "ItemEmergencyArcWelder",
    "ItemEmergencyCrowbar",
    "ItemEmergencyDrill",
    "ItemEmergencyEvaSuit",
    "ItemEmergencyPickaxe",
    "ItemEmergencyScrewdriver",
    "ItemEmergencySpaceHelmet",
    "ItemEmergencyToolBelt",
    "ItemEmergencyWireCutters",
    "ItemEmergencyWrench",
    "ItemEmptyCan",
    "ItemEvaSuit",
    "ItemExplosive",
    "ItemFern",
    "ItemFertilizedEgg",
    "ItemFilterFern",
    "ItemFlagSmall",
    "ItemFlashingLight",
    "ItemFlashlight",
    "ItemFlour",
    "ItemFlowerBlue",
    "ItemFlowerGreen",
    "ItemFlowerOrange",
    "ItemFlowerRed",
    "ItemFlowerYellow",
    "ItemFrenchFries",
    "ItemFries",
    "ItemGasCanisterCarbonDioxide",
    "ItemGasCanisterEmpty",
    "ItemGasCanisterFuel",
    "ItemGasCanisterNitrogen",
    "ItemGasCanisterNitrousOxide",
    "ItemGasCanisterOxygen",
    "ItemGasCanisterPollutants",
    "ItemGasCanisterSmart",
    "ItemGasCanisterVolatiles",
    "ItemGasCanisterWater",
    "ItemGasFilterCarbonDioxide",
    "ItemGasFilterCarbonDioxideInfinite",
    "ItemGasFilterCarbonDioxideL",
    "ItemGasFilterCarbonDioxideM",
    "ItemGasFilterNitrogen",
    "ItemGasFilterNitrogenInfinite",
    "ItemGasFilterNitrogenL",
    "ItemGasFilterNitrogenM",
    "ItemGasFilterNitrousOxide",
    "ItemGasFilterNitrousOxideInfinite",
    "ItemGasFilterNitrousOxideL",
    "ItemGasFilterNitrousOxideM",
    "ItemGasFilterOxygen",
    "ItemGasFilterOxygenInfinite",
    "ItemGasFilterOxygenL",
    "ItemGasFilterOxygenM",
    "ItemGasFilterPollutants",
    "ItemGasFilterPollutantsInfinite",
    "ItemGasFilterPollutantsL",
    "ItemGasFilterPollutantsM",
    "ItemGasFilterVolatiles",
    "ItemGasFilterVolatilesInfinite",
    "ItemGasFilterVolatilesL",
    "ItemGasFilterVolatilesM",
    "ItemGasFilterWater",
    "ItemGasFilterWaterInfinite",
    "ItemGasFilterWaterL",
    "ItemGasFilterWaterM",
    "ItemGasSensor",
    "ItemGasTankStorage",
    "ItemGlassSheets",
    "ItemGlasses",
    "ItemGoldIngot",
    "ItemGoldOre",
    "ItemGrenade",
    "ItemHEMDroidRepairKit",
    "ItemHardBackpack",
    "ItemHardJetpack",
    "ItemHardMiningBackPack",
    "ItemHardSuit",
    "ItemHardsuitHelmet",
    "ItemHastelloyIngot",
    "ItemHat",
    "ItemHighVolumeGasCanisterEmpty",
    "ItemHorticultureBelt",
    "ItemHydroponicTray",
    "ItemIce",
    "ItemIgniter",
    "ItemInconelIngot",
    "ItemInsulation",
    "ItemIntegratedCircuit10",
    "ItemInvarIngot",
    "ItemIronFrames",
    "ItemIronIngot",
    "ItemIronOre",
    "ItemIronSheets",
    "ItemJetpackBasic",
    "ItemKitAIMeE",
    "ItemKitAccessBridge",
    "ItemKitAdvancedComposter",
    "ItemKitAdvancedFurnace",
    "ItemKitAdvancedPackagingMachine",
    "ItemKitAirlock",
    "ItemKitAirlockGate",
    "ItemKitArcFurnace",
    "ItemKitAtmospherics",
    "ItemKitAutoMinerSmall",
    "ItemKitAutolathe",
    "ItemKitAutomatedOven",
    "ItemKitBasket",
    "ItemKitBattery",
    "ItemKitBatteryLarge",
    "ItemKitBeacon",
    "ItemKitBeds",
    "ItemKitBlastDoor",
    "ItemKitCentrifuge",
    "ItemKitChairs",
    "ItemKitChute",
    "ItemKitChuteUmbilical",
    "ItemKitCompositeCladding",
    "ItemKitCompositeFloorGrating",
    "ItemKitComputer",
    "ItemKitConsole",
    "ItemKitCrate",
    "ItemKitCrateMkII",
    "ItemKitCrateMount",
    "ItemKitCryoTube",
    "ItemKitDeepMiner",
    "ItemKitDockingPort",
    "ItemKitDoor",
    "ItemKitDrinkingFountain",
    "ItemKitDynamicCanister",
    "ItemKitDynamicGasTankAdvanced",
    "ItemKitDynamicGenerator",
    "ItemKitDynamicHydroponics",
    "ItemKitDynamicLiquidCanister",
    "ItemKitDynamicMKIILiquidCanister",
    "ItemKitElectricUmbilical",
    "ItemKitElectronicsPrinter",
    "ItemKitElevator",
    "ItemKitEngineLarge",
    "ItemKitEngineMedium",
    "ItemKitEngineSmall",
    "ItemKitEvaporationChamber",
    "ItemKitFlagODA",
    "ItemKitFridgeBig",
    "ItemKitFridgeSmall",
    "ItemKitFurnace",
    "ItemKitFurniture",
    "ItemKitFuselage",
    "ItemKitGasGenerator",
    "ItemKitGasUmbilical",
    "ItemKitGovernedGasRocketEngine",
    "ItemKitGroundTelescope",
    "ItemKitGrowLight",
    "ItemKitHarvie",
    "ItemKitHeatExchanger",
    "ItemKitHorizontalAutoMiner",
    "ItemKitHydraulicPipeBender",
    "ItemKitHydroponicAutomated",
    "ItemKitHydroponicStation",
    "ItemKitIceCrusher",
    "ItemKitInsulatedLiquidPipe",
    "ItemKitInsulatedPipe",
    "ItemKitInsulatedPipeUtility",
    "ItemKitInsulatedPipeUtilityLiquid",
    "ItemKitInteriorDoors",
    "ItemKitLadder",
    "ItemKitLandingPadAtmos",
    "ItemKitLandingPadBasic",
    "ItemKitLandingPadWaypoint",
    "ItemKitLargeDirectHeatExchanger",
    "ItemKitLargeExtendableRadiator",
    "ItemKitLargeSatelliteDish",
    "ItemKitLaunchMount",
    "ItemKitLaunchTower",
    "ItemKitLiquidRegulator",
    "ItemKitLiquidTank",
    "ItemKitLiquidTankInsulated",
    "ItemKitLiquidTurboVolumePump",
    "ItemKitLiquidUmbilical",
    "ItemKitLocker",
    "ItemKitLogicCircuit",
    "ItemKitLogicInputOutput",
    "ItemKitLogicMemory",
    "ItemKitLogicProcessor",
    "ItemKitLogicSwitch",
    "ItemKitLogicTransmitter",
    "ItemKitMotherShipCore",
    "ItemKitMusicMachines",
    "ItemKitPassiveLargeRadiatorGas",
    "ItemKitPassiveLargeRadiatorLiquid",
    "ItemKitPassthroughHeatExchanger",
    "ItemKitPictureFrame",
    "ItemKitPipe",
    "ItemKitPipeLiquid",
    "ItemKitPipeOrgan",
    "ItemKitPipeRadiator",
    "ItemKitPipeRadiatorLiquid",
    "ItemKitPipeUtility",
    "ItemKitPipeUtilityLiquid",
    "ItemKitPlanter",
    "ItemKitPortablesConnector",
    "ItemKitPowerTransmitter",
    "ItemKitPowerTransmitterOmni",
    "ItemKitPoweredVent",
    "ItemKitPressureFedGasEngine",
    "ItemKitPressureFedLiquidEngine",
    "ItemKitPressurePlate",
    "ItemKitPumpedLiquidEngine",
    "ItemKitRailing",
    "ItemKitRecycler",
    "ItemKitRegulator",
    "ItemKitReinforcedWindows",
    "ItemKitResearchMachine",
    "ItemKitRespawnPointWallMounted",
    "ItemKitRocketAvionics",
    "ItemKitRocketBattery",
    "ItemKitRocketCargoStorage",
    "ItemKitRocketCelestialTracker",
    "ItemKitRocketCircuitHousing",
    "ItemKitRocketDatalink",
    "ItemKitRocketGasFuelTank",
    "ItemKitRocketLiquidFuelTank",
    "ItemKitRocketManufactory",
    "ItemKitRocketMiner",
    "ItemKitRocketScanner",
    "ItemKitRocketTransformerSmall",
    "ItemKitRoverFrame",
    "ItemKitRoverMKI",
    "ItemKitSDBHopper",
    "ItemKitSatelliteDish",
    "ItemKitSecurityPrinter",
    "ItemKitSensor",
    "ItemKitShower",
    "ItemKitSign",
    "ItemKitSleeper",
    "ItemKitSmallDirectHeatExchanger",
    "ItemKitSmallSatelliteDish",
    "ItemKitSolarPanel",
    "ItemKitSolarPanelBasic",
    "ItemKitSolarPanelBasicReinforced",
    "ItemKitSolarPanelReinforced",
    "ItemKitSolidGenerator",
    "ItemKitSorter",
    "ItemKitSpeaker",
    "ItemKitStacker",
    "ItemKitStairs",
    "ItemKitStairwell",
    "ItemKitStandardChute",
    "ItemKitStirlingEngine",
    "ItemKitSuitStorage",
    "ItemKitTables",
    "ItemKitTank",
    "ItemKitTankInsulated",
    "ItemKitToolManufactory",
    "ItemKitTransformer",
    "ItemKitTransformerSmall",
    "ItemKitTurbineGenerator",
    "ItemKitTurboVolumePump",
    "ItemKitUprightWindTurbine",
    "ItemKitVendingMachine",
    "ItemKitVendingMachineRefrigerated",
    "ItemKitWall",
    "ItemKitWallArch",
    "ItemKitWallFlat",
    "ItemKitWallGeometry",
    "ItemKitWallIron",
    "ItemKitWallPadded",
    "ItemKitWaterBottleFiller",
    "ItemKitWaterPurifier",
    "ItemKitWeatherStation",
    "ItemKitWindTurbine",
    "ItemKitWindowShutter",
    "ItemLabeller",
    "ItemLaptop",
    "ItemLeadIngot",
    "ItemLeadOre",
    "ItemLightSword",
    "ItemLiquidCanisterEmpty",
    "ItemLiquidCanisterSmart",
    "ItemLiquidDrain",
    "ItemLiquidPipeAnalyzer",
    "ItemLiquidPipeHeater",
    "ItemLiquidPipeValve",
    "ItemLiquidPipeVolumePump",
    "ItemLiquidTankStorage",
    "ItemMKIIAngleGrinder",
    "ItemMKIIArcWelder",
    "ItemMKIICrowbar",
    "ItemMKIIDrill",
    "ItemMKIIDuctTape",
    "ItemMKIIMiningDrill",
    "ItemMKIIScrewdriver",
    "ItemMKIIWireCutters",
    "ItemMKIIWrench",
    "ItemMarineBodyArmor",
    "ItemMarineHelmet",
    "ItemMilk",
    "ItemMiningBackPack",
    "ItemMiningBelt",
    "ItemMiningBeltMKII",
    "ItemMiningCharge",
    "ItemMiningDrill",
    "ItemMiningDrillHeavy",
    "ItemMiningDrillPneumatic",
    "ItemMkIIToolbelt",
    "ItemMuffin",
    "ItemMushroom",
    "ItemNVG",
    "ItemNickelIngot",
    "ItemNickelOre",
    "ItemNitrice",
    "ItemOxite",
    "ItemPassiveVent",
    "ItemPassiveVentInsulated",
    "ItemPeaceLily",
    "ItemPickaxe",
    "ItemPillHeal",
    "ItemPillStun",
    "ItemPipeAnalyizer",
    "ItemPipeCowl",
    "ItemPipeDigitalValve",
    "ItemPipeGasMixer",
    "ItemPipeHeater",
    "ItemPipeIgniter",
    "ItemPipeLabel",
    "ItemPipeLiquidRadiator",
    "ItemPipeMeter",
    "ItemPipeRadiator",
    "ItemPipeValve",
    "ItemPipeVolumePump",
    "ItemPlainCake",
    "ItemPlantEndothermic_Creative",
    "ItemPlantEndothermic_Genepool1",
    "ItemPlantEndothermic_Genepool2",
    "ItemPlantSampler",
    "ItemPlantSwitchGrass",
    "ItemPlantThermogenic_Creative",
    "ItemPlantThermogenic_Genepool1",
    "ItemPlantThermogenic_Genepool2",
    "ItemPlasticSheets",
    "ItemPotato",
    "ItemPotatoBaked",
    "ItemPowerConnector",
    "ItemPumpkin",
    "ItemPumpkinPie",
    "ItemPumpkinSoup",
    "ItemPureIce",
    "ItemPureIceCarbonDioxide",
    "ItemPureIceHydrogen",
    "ItemPureIceLiquidCarbonDioxide",
    "ItemPureIceLiquidHydrogen",
    "ItemPureIceLiquidNitrogen",
    "ItemPureIceLiquidNitrous",
    "ItemPureIceLiquidOxygen",
    "ItemPureIceLiquidPollutant",
    "ItemPureIceLiquidVolatiles",
    "ItemPureIceNitrogen",
    "ItemPureIceNitrous",
    "ItemPureIceOxygen",
    "ItemPureIcePollutant",
    "ItemPureIcePollutedWater",
    "ItemPureIceSteam",
    "ItemPureIceVolatiles",
    "ItemRTG",
    "ItemRTGSurvival",
    "ItemReagentMix",
    "ItemRemoteDetonator",
    "ItemReusableFireExtinguisher",
    "ItemRice",
    "ItemRoadFlare",
    "ItemRocketMiningDrillHead",
    "ItemRocketMiningDrillHeadDurable",
    "ItemRocketMiningDrillHeadHighSpeedIce",
    "ItemRocketMiningDrillHeadHighSpeedMineral",
    "ItemRocketMiningDrillHeadIce",
    "ItemRocketMiningDrillHeadLongTerm",
    "ItemRocketMiningDrillHeadMineral",
    "ItemRocketScanningHead",
    "ItemScanner",
    "ItemScrewdriver",
    "ItemSecurityCamera",
    "ItemSensorLenses",
    "ItemSensorProcessingUnitCelestialScanner",
    "ItemSensorProcessingUnitMesonScanner",
    "ItemSensorProcessingUnitOreScanner",
    "ItemSiliconIngot",
    "ItemSiliconOre",
    "ItemSilverIngot",
    "ItemSilverOre",
    "ItemSolderIngot",
    "ItemSolidFuel",
    "ItemSoundCartridgeBass",
    "ItemSoundCartridgeDrums",
    "ItemSoundCartridgeLeads",
    "ItemSoundCartridgeSynth",
    "ItemSoyOil",
    "ItemSoybean",
    "ItemSpaceCleaner",
    "ItemSpaceHelmet",
    "ItemSpaceIce",
    "ItemSpaceOre",
    "ItemSpacepack",
    "ItemSprayCanBlack",
    "ItemSprayCanBlue",
    "ItemSprayCanBrown",
    "ItemSprayCanGreen",
    "ItemSprayCanGrey",
    "ItemSprayCanKhaki",
    "ItemSprayCanOrange",
    "ItemSprayCanPink",
    "ItemSprayCanPurple",
    "ItemSprayCanRed",
    "ItemSprayCanWhite",
    "ItemSprayCanYellow",
    "ItemSprayGun",
    "ItemSteelFrames",
    "ItemSteelIngot",
    "ItemSteelSheets",
    "ItemStelliteGlassSheets",
    "ItemStelliteIngot",
    "ItemSugar",
    "ItemSugarCane",
    "ItemSuitModCryogenicUpgrade",
    "ItemTablet",
    "ItemTerrainManipulator",
    "ItemTomato",
    "ItemTomatoSoup",
    "ItemToolBelt",
    "ItemTropicalPlant",
    "ItemUraniumOre",
    "ItemVolatiles",
    "ItemWallCooler",
    "ItemWallHeater",
    "ItemWallLight",
    "ItemWaspaloyIngot",
    "ItemWaterBottle",
    "ItemWaterPipeDigitalValve",
    "ItemWaterPipeMeter",
    "ItemWaterWallCooler",
    "ItemWearLamp",
    "ItemWeldingTorch",
    "ItemWheat",
    "ItemWireCutters",
    "ItemWirelessBatteryCellExtraLarge",
    "ItemWreckageAirConditioner1",
    "ItemWreckageAirConditioner2",
    "ItemWreckageHydroponicsTray1",
    "ItemWreckageLargeExtendableRadiator01",
    "ItemWreckageStructureRTG1",
    "ItemWreckageStructureWeatherStation001",
    "ItemWreckageStructureWeatherStation002",
    "ItemWreckageStructureWeatherStation003",
    "ItemWreckageStructureWeatherStation004",
    "ItemWreckageStructureWeatherStation005",
    "ItemWreckageStructureWeatherStation006",
    "ItemWreckageStructureWeatherStation007",
    "ItemWreckageStructureWeatherStation008",
    "ItemWreckageTurbineGenerator1",
    "ItemWreckageTurbineGenerator2",
    "ItemWreckageTurbineGenerator3",
    "ItemWreckageWallCooler1",
    "ItemWreckageWallCooler2",
    "ItemWrench",
    "KitSDBSilo",
    "KitStructureCombustionCentrifuge",
    "Lander",
    "Meteorite",
    "MonsterEgg",
    "MotherboardComms",
    "MotherboardLogic",
    "MotherboardMissionControl",
    "MotherboardProgrammableChip",
    "MotherboardRockets",
    "MotherboardSorter",
    "MothershipCore",
    "NpcChick",
    "NpcChicken",
    "PipeBenderMod",
    "PortableComposter",
    "PortableSolarPanel",
    "ReagentColorBlue",
    "ReagentColorGreen",
    "ReagentColorOrange",
    "ReagentColorRed",
    "ReagentColorYellow",
    "Robot",
    "RoverCargo",
    "Rover_MkI",
    "SMGMagazine",
    "SeedBag_Cocoa",
    "SeedBag_Corn",
    "SeedBag_Fern",
    "SeedBag_Mushroom",
    "SeedBag_Potato",
    "SeedBag_Pumpkin",
    "SeedBag_Rice",
    "SeedBag_Soybean",
    "SeedBag_SugarCane",
    "SeedBag_Switchgrass",
    "SeedBag_Tomato",
    "SeedBag_Wheet",
    "SpaceShuttle",
    "ToolPrinterMod",
    "ToyLuna",
    "UniformCommander",
    "UniformMarine",
    "UniformOrangeJumpSuit",
    "WeaponEnergy",
    "WeaponPistolEnergy",
    "WeaponRifleEnergy",
    "WeaponTorpedo"
  ],
  "logicableItems": [
    "Battery_Wireless_cell",
    "Battery_Wireless_cell_Big",
    "DynamicGPR",
    "DynamicLight",
    "ItemAdvancedTablet",
    "ItemAngleGrinder",
    "ItemArcWelder",
    "ItemBatteryCell",
    "ItemBatteryCellLarge",
    "ItemBatteryCellNuclear",
    "ItemBeacon",
    "ItemDrill",
    "ItemEmergencyAngleGrinder",
    "ItemEmergencyArcWelder",
    "ItemEmergencyDrill",
    "ItemEmergencySpaceHelmet",
    "ItemFlashlight",
    "ItemHardBackpack",
    "ItemHardJetpack",
    "ItemHardSuit",
    "ItemHardsuitHelmet",
    "ItemIntegratedCircuit10",
    "ItemJetpackBasic",
    "ItemLabeller",
    "ItemLaptop",
    "ItemMKIIAngleGrinder",
    "ItemMKIIArcWelder",
    "ItemMKIIDrill",
    "ItemMKIIMiningDrill",
    "ItemMiningBeltMKII",
    "ItemMiningDrill",
    "ItemMiningDrillHeavy",
    "ItemMkIIToolbelt",
    "ItemNVG",
    "ItemPlantSampler",
    "ItemRemoteDetonator",
    "ItemSensorLenses",
    "ItemSpaceHelmet",
    "ItemSpacepack",
    "ItemTablet",
    "ItemTerrainManipulator",
    "ItemWearLamp",
    "ItemWirelessBatteryCellExtraLarge",
    "PortableSolarPanel",
    "Robot",
    "RoverCargo",
    "Rover_MkI",
    "WeaponEnergy",
    "WeaponPistolEnergy",
    "WeaponRifleEnergy"
  ],
  "suits": [
    "ItemEmergencyEvaSuit",
    "ItemEvaSuit",
    "ItemHardSuit"
  ],
  "circuitHolders": [
    "H2Combustor",
    "ItemAdvancedTablet",
    "ItemHardSuit",
    "ItemLaptop",
    "Robot",
    "StructureAirConditioner",
    "StructureCircuitHousing",
    "StructureCombustionCentrifuge",
    "StructureElectrolyzer",
    "StructureFiltration",
    "StructureNitrolyzer",
    "StructureRocketCircuitHousing"
  ]
} as const
